<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="4502" onload="init(evt)" viewBox="0 0 1200 4502" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="4502" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="4485.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="4485.00"> </text><svg id="frames" x="10" width="1180" total_samples="2998"><g><title>`0x7FFAC137FBA0 (1 samples, 0.03%)</title><rect x="0.0000%" y="4437" width="0.0334%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="4447.50"></text></g><g><title>`0x7FFAC12F2201 (1 samples, 0.03%)</title><rect x="0.0334%" y="4405" width="0.0334%" height="15" fill="rgb(217,0,24)" fg:x="1" fg:w="1"/><text x="0.2834%" y="4415.50"></text></g><g><title>`0x7FFAC12F0649 (1 samples, 0.03%)</title><rect x="0.0334%" y="4389" width="0.0334%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="1"/><text x="0.2834%" y="4399.50"></text></g><g><title>`0x7FFAC12EFDDF (1 samples, 0.03%)</title><rect x="0.0334%" y="4373" width="0.0334%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="1"/><text x="0.2834%" y="4383.50"></text></g><g><title>`0x7FFAC14026D4 (1 samples, 0.03%)</title><rect x="0.0334%" y="4357" width="0.0334%" height="15" fill="rgb(208,68,35)" fg:x="1" fg:w="1"/><text x="0.2834%" y="4367.50"></text></g><g><title>`0x7FFABE6E3CF2 (1 samples, 0.03%)</title><rect x="0.0667%" y="4389" width="0.0334%" height="15" fill="rgb(232,128,0)" fg:x="2" fg:w="1"/><text x="0.3167%" y="4399.50"></text></g><g><title>boggle.exe`pre_c_initialization() (1 samples, 0.03%)</title><rect x="0.0667%" y="4373" width="0.0334%" height="15" fill="rgb(207,160,47)" fg:x="2" fg:w="1"/><text x="0.3167%" y="4383.50"></text></g><g><title>`0x7FFABE689CEC (1 samples, 0.03%)</title><rect x="0.0667%" y="4357" width="0.0334%" height="15" fill="rgb(228,23,34)" fg:x="2" fg:w="1"/><text x="0.3167%" y="4367.50"></text></g><g><title>`0x7FFABE68A257 (1 samples, 0.03%)</title><rect x="0.0667%" y="4341" width="0.0334%" height="15" fill="rgb(218,30,26)" fg:x="2" fg:w="1"/><text x="0.3167%" y="4351.50"></text></g><g><title>`0x7FFABE68B200 (1 samples, 0.03%)</title><rect x="0.0667%" y="4325" width="0.0334%" height="15" fill="rgb(220,122,19)" fg:x="2" fg:w="1"/><text x="0.3167%" y="4335.50"></text></g><g><title>`0x7FFABE68B0F6 (1 samples, 0.03%)</title><rect x="0.0667%" y="4309" width="0.0334%" height="15" fill="rgb(250,228,42)" fg:x="2" fg:w="1"/><text x="0.3167%" y="4319.50"></text></g><g><title>`0x7FFABE69710B (1 samples, 0.03%)</title><rect x="0.0667%" y="4293" width="0.0334%" height="15" fill="rgb(240,193,28)" fg:x="2" fg:w="1"/><text x="0.3167%" y="4303.50"></text></g><g><title>`0x7FFABE6E7BF9 (1 samples, 0.03%)</title><rect x="0.0667%" y="4277" width="0.0334%" height="15" fill="rgb(216,20,37)" fg:x="2" fg:w="1"/><text x="0.3167%" y="4287.50"></text></g><g><title>`0x7FFABE921D46 (1 samples, 0.03%)</title><rect x="0.0667%" y="4261" width="0.0334%" height="15" fill="rgb(206,188,39)" fg:x="2" fg:w="1"/><text x="0.3167%" y="4271.50"></text></g><g><title>`0x7FFAC12F66A0 (1 samples, 0.03%)</title><rect x="0.0667%" y="4245" width="0.0334%" height="15" fill="rgb(217,207,13)" fg:x="2" fg:w="1"/><text x="0.3167%" y="4255.50"></text></g><g><title>`0x7FFAC12EACD0 (1 samples, 0.03%)</title><rect x="0.0667%" y="4229" width="0.0334%" height="15" fill="rgb(231,73,38)" fg:x="2" fg:w="1"/><text x="0.3167%" y="4239.50"></text></g><g><title>`0x7FFAC12EAF83 (1 samples, 0.03%)</title><rect x="0.0667%" y="4213" width="0.0334%" height="15" fill="rgb(225,20,46)" fg:x="2" fg:w="1"/><text x="0.3167%" y="4223.50"></text></g><g><title>`0x7FFAC12C4BA6 (1 samples, 0.03%)</title><rect x="0.0667%" y="4197" width="0.0334%" height="15" fill="rgb(210,31,41)" fg:x="2" fg:w="1"/><text x="0.3167%" y="4207.50"></text></g><g><title>`0x7FFAC12C5154 (1 samples, 0.03%)</title><rect x="0.0667%" y="4181" width="0.0334%" height="15" fill="rgb(221,200,47)" fg:x="2" fg:w="1"/><text x="0.3167%" y="4191.50"></text></g><g><title>`0x7FFAC12A48DF (2 samples, 0.07%)</title><rect x="0.1001%" y="4245" width="0.0667%" height="15" fill="rgb(226,26,5)" fg:x="3" fg:w="2"/><text x="0.3501%" y="4255.50"></text></g><g><title>`0x7FFAC12A5160 (2 samples, 0.07%)</title><rect x="0.1001%" y="4229" width="0.0667%" height="15" fill="rgb(249,33,26)" fg:x="3" fg:w="2"/><text x="0.3501%" y="4239.50"></text></g><g><title>`0x7FFAC12A5493 (2 samples, 0.07%)</title><rect x="0.1001%" y="4213" width="0.0667%" height="15" fill="rgb(235,183,28)" fg:x="3" fg:w="2"/><text x="0.3501%" y="4223.50"></text></g><g><title>`0x7FFAC13FFEC4 (2 samples, 0.07%)</title><rect x="0.1001%" y="4197" width="0.0667%" height="15" fill="rgb(221,5,38)" fg:x="3" fg:w="2"/><text x="0.3501%" y="4207.50"></text></g><g><title>`0x7FFAC12A5947 (1 samples, 0.03%)</title><rect x="0.1668%" y="4229" width="0.0334%" height="15" fill="rgb(247,18,42)" fg:x="5" fg:w="1"/><text x="0.4168%" y="4239.50"></text></g><g><title>`0x7FFAC13FFD84 (1 samples, 0.03%)</title><rect x="0.1668%" y="4213" width="0.0334%" height="15" fill="rgb(241,131,45)" fg:x="5" fg:w="1"/><text x="0.4168%" y="4223.50"></text></g><g><title>`0x7FFAC12A884E (1 samples, 0.03%)</title><rect x="0.2001%" y="4213" width="0.0334%" height="15" fill="rgb(249,31,29)" fg:x="6" fg:w="1"/><text x="0.4501%" y="4223.50"></text></g><g><title>`0x7FFAC12A8D1A (1 samples, 0.03%)</title><rect x="0.2001%" y="4197" width="0.0334%" height="15" fill="rgb(225,111,53)" fg:x="6" fg:w="1"/><text x="0.4501%" y="4207.50"></text></g><g><title>`0x7FFAC13FFC24 (1 samples, 0.03%)</title><rect x="0.2001%" y="4181" width="0.0334%" height="15" fill="rgb(238,160,17)" fg:x="6" fg:w="1"/><text x="0.4501%" y="4191.50"></text></g><g><title>`0x7FFAC12A892C (1 samples, 0.03%)</title><rect x="0.2335%" y="4213" width="0.0334%" height="15" fill="rgb(214,148,48)" fg:x="7" fg:w="1"/><text x="0.4835%" y="4223.50"></text></g><g><title>`0x7FFAC12A94D7 (1 samples, 0.03%)</title><rect x="0.2335%" y="4197" width="0.0334%" height="15" fill="rgb(232,36,49)" fg:x="7" fg:w="1"/><text x="0.4835%" y="4207.50"></text></g><g><title>`0x7FFAC12A7C3D (1 samples, 0.03%)</title><rect x="0.2335%" y="4181" width="0.0334%" height="15" fill="rgb(209,103,24)" fg:x="7" fg:w="1"/><text x="0.4835%" y="4191.50"></text></g><g><title>`0x7FFAC13FFB84 (1 samples, 0.03%)</title><rect x="0.2335%" y="4165" width="0.0334%" height="15" fill="rgb(229,88,8)" fg:x="7" fg:w="1"/><text x="0.4835%" y="4175.50"></text></g><g><title>`0x7FFAC12EC5FE (1 samples, 0.03%)</title><rect x="0.2668%" y="4197" width="0.0334%" height="15" fill="rgb(213,181,19)" fg:x="8" fg:w="1"/><text x="0.5168%" y="4207.50"></text></g><g><title>`0x7FFAC12EE3BC (1 samples, 0.03%)</title><rect x="0.2668%" y="4181" width="0.0334%" height="15" fill="rgb(254,191,54)" fg:x="8" fg:w="1"/><text x="0.5168%" y="4191.50"></text></g><g><title>`0x7FFAC12A70E1 (1 samples, 0.03%)</title><rect x="0.2668%" y="4165" width="0.0334%" height="15" fill="rgb(241,83,37)" fg:x="8" fg:w="1"/><text x="0.5168%" y="4175.50"></text></g><g><title>`0x7FFAC12A884E (1 samples, 0.03%)</title><rect x="0.2668%" y="4149" width="0.0334%" height="15" fill="rgb(233,36,39)" fg:x="8" fg:w="1"/><text x="0.5168%" y="4159.50"></text></g><g><title>`0x7FFAC12A8D1A (1 samples, 0.03%)</title><rect x="0.2668%" y="4133" width="0.0334%" height="15" fill="rgb(226,3,54)" fg:x="8" fg:w="1"/><text x="0.5168%" y="4143.50"></text></g><g><title>`0x7FFAC13FFC24 (1 samples, 0.03%)</title><rect x="0.2668%" y="4117" width="0.0334%" height="15" fill="rgb(245,192,40)" fg:x="8" fg:w="1"/><text x="0.5168%" y="4127.50"></text></g><g><title>`0x7FFAC12A5A9C (4 samples, 0.13%)</title><rect x="0.2001%" y="4229" width="0.1334%" height="15" fill="rgb(238,167,29)" fg:x="6" fg:w="4"/><text x="0.4501%" y="4239.50"></text></g><g><title>`0x7FFAC12A8999 (2 samples, 0.07%)</title><rect x="0.2668%" y="4213" width="0.0667%" height="15" fill="rgb(232,182,51)" fg:x="8" fg:w="2"/><text x="0.5168%" y="4223.50"></text></g><g><title>`0x7FFAC12EC772 (1 samples, 0.03%)</title><rect x="0.3002%" y="4197" width="0.0334%" height="15" fill="rgb(231,60,39)" fg:x="9" fg:w="1"/><text x="0.5502%" y="4207.50"></text></g><g><title>`0x7FFAC12F49CC (1 samples, 0.03%)</title><rect x="0.3002%" y="4181" width="0.0334%" height="15" fill="rgb(208,69,12)" fg:x="9" fg:w="1"/><text x="0.5502%" y="4191.50"></text></g><g><title>`0x7FFAC12EB050 (8 samples, 0.27%)</title><rect x="0.1001%" y="4277" width="0.2668%" height="15" fill="rgb(235,93,37)" fg:x="3" fg:w="8"/><text x="0.3501%" y="4287.50"></text></g><g><title>`0x7FFAC12A4364 (8 samples, 0.27%)</title><rect x="0.1001%" y="4261" width="0.2668%" height="15" fill="rgb(213,116,39)" fg:x="3" fg:w="8"/><text x="0.3501%" y="4271.50"></text></g><g><title>`0x7FFAC12A494D (6 samples, 0.20%)</title><rect x="0.1668%" y="4245" width="0.2001%" height="15" fill="rgb(222,207,29)" fg:x="5" fg:w="6"/><text x="0.4168%" y="4255.50"></text></g><g><title>`0x7FFAC12A5AB9 (1 samples, 0.03%)</title><rect x="0.3336%" y="4229" width="0.0334%" height="15" fill="rgb(206,96,30)" fg:x="10" fg:w="1"/><text x="0.5836%" y="4239.50"></text></g><g><title>`0x7FFAC13FF904 (1 samples, 0.03%)</title><rect x="0.3336%" y="4213" width="0.0334%" height="15" fill="rgb(218,138,4)" fg:x="10" fg:w="1"/><text x="0.5836%" y="4223.50"></text></g><g><title>`0x7FFAC0EE7A77 (1 samples, 0.03%)</title><rect x="0.3669%" y="4181" width="0.0334%" height="15" fill="rgb(250,191,14)" fg:x="11" fg:w="1"/><text x="0.6169%" y="4191.50"></text></g><g><title>`0x7FFAC0EE7D2C (1 samples, 0.03%)</title><rect x="0.3669%" y="4165" width="0.0334%" height="15" fill="rgb(239,60,40)" fg:x="11" fg:w="1"/><text x="0.6169%" y="4175.50"></text></g><g><title>`0x7FFABE9D8F8E (1 samples, 0.03%)</title><rect x="0.3669%" y="4149" width="0.0334%" height="15" fill="rgb(206,27,48)" fg:x="11" fg:w="1"/><text x="0.6169%" y="4159.50"></text></g><g><title>`0x7FFAC12B61AE (1 samples, 0.03%)</title><rect x="0.3669%" y="4133" width="0.0334%" height="15" fill="rgb(225,35,8)" fg:x="11" fg:w="1"/><text x="0.6169%" y="4143.50"></text></g><g><title>`0x7FFAC0EE7ABF (1 samples, 0.03%)</title><rect x="0.4003%" y="4181" width="0.0334%" height="15" fill="rgb(250,213,24)" fg:x="12" fg:w="1"/><text x="0.6503%" y="4191.50"></text></g><g><title>`0x7FFAC0F04772 (1 samples, 0.03%)</title><rect x="0.4003%" y="4165" width="0.0334%" height="15" fill="rgb(247,123,22)" fg:x="12" fg:w="1"/><text x="0.6503%" y="4175.50"></text></g><g><title>`0x7FFAC0F048E0 (1 samples, 0.03%)</title><rect x="0.4003%" y="4149" width="0.0334%" height="15" fill="rgb(231,138,38)" fg:x="12" fg:w="1"/><text x="0.6503%" y="4159.50"></text></g><g><title>`0x7FFAC0EFD8AB (1 samples, 0.03%)</title><rect x="0.4003%" y="4133" width="0.0334%" height="15" fill="rgb(231,145,46)" fg:x="12" fg:w="1"/><text x="0.6503%" y="4143.50"></text></g><g><title>`0x7FFAC0EFD6C0 (1 samples, 0.03%)</title><rect x="0.4003%" y="4117" width="0.0334%" height="15" fill="rgb(251,118,11)" fg:x="12" fg:w="1"/><text x="0.6503%" y="4127.50"></text></g><g><title>`0x7FFAC12C7776 (1 samples, 0.03%)</title><rect x="0.4003%" y="4101" width="0.0334%" height="15" fill="rgb(217,147,25)" fg:x="12" fg:w="1"/><text x="0.6503%" y="4111.50"></text></g><g><title>`0x7FFAC12C7AFE (1 samples, 0.03%)</title><rect x="0.4003%" y="4085" width="0.0334%" height="15" fill="rgb(247,81,37)" fg:x="12" fg:w="1"/><text x="0.6503%" y="4095.50"></text></g><g><title>`0x7FFAC12AF6C7 (1 samples, 0.03%)</title><rect x="0.4003%" y="4069" width="0.0334%" height="15" fill="rgb(209,12,38)" fg:x="12" fg:w="1"/><text x="0.6503%" y="4079.50"></text></g><g><title>`0x7FFAC12B1B6F (1 samples, 0.03%)</title><rect x="0.4003%" y="4053" width="0.0334%" height="15" fill="rgb(227,1,9)" fg:x="12" fg:w="1"/><text x="0.6503%" y="4063.50"></text></g><g><title>`0x7FFAC12B351F (1 samples, 0.03%)</title><rect x="0.4003%" y="4037" width="0.0334%" height="15" fill="rgb(248,47,43)" fg:x="12" fg:w="1"/><text x="0.6503%" y="4047.50"></text></g><g><title>`0x7FFAC12B369E (1 samples, 0.03%)</title><rect x="0.4003%" y="4021" width="0.0334%" height="15" fill="rgb(221,10,30)" fg:x="12" fg:w="1"/><text x="0.6503%" y="4031.50"></text></g><g><title>`0x7FFAC12C7776 (1 samples, 0.03%)</title><rect x="0.4003%" y="4005" width="0.0334%" height="15" fill="rgb(210,229,1)" fg:x="12" fg:w="1"/><text x="0.6503%" y="4015.50"></text></g><g><title>`0x7FFAC12C7AFE (1 samples, 0.03%)</title><rect x="0.4003%" y="3989" width="0.0334%" height="15" fill="rgb(222,148,37)" fg:x="12" fg:w="1"/><text x="0.6503%" y="3999.50"></text></g><g><title>`0x7FFAC12B09B0 (1 samples, 0.03%)</title><rect x="0.4003%" y="3973" width="0.0334%" height="15" fill="rgb(234,67,33)" fg:x="12" fg:w="1"/><text x="0.6503%" y="3983.50"></text></g><g><title>`0x7FFAC12B1EDF (1 samples, 0.03%)</title><rect x="0.4003%" y="3957" width="0.0334%" height="15" fill="rgb(247,98,35)" fg:x="12" fg:w="1"/><text x="0.6503%" y="3967.50"></text></g><g><title>`0x7FFAC12B2854 (1 samples, 0.03%)</title><rect x="0.4003%" y="3941" width="0.0334%" height="15" fill="rgb(247,138,52)" fg:x="12" fg:w="1"/><text x="0.6503%" y="3951.50"></text></g><g><title>`0x7FFAC12B238A (1 samples, 0.03%)</title><rect x="0.4003%" y="3925" width="0.0334%" height="15" fill="rgb(213,79,30)" fg:x="12" fg:w="1"/><text x="0.6503%" y="3935.50"></text></g><g><title>`0x7FFABE7104F6 (11 samples, 0.37%)</title><rect x="0.1001%" y="4389" width="0.3669%" height="15" fill="rgb(246,177,23)" fg:x="3" fg:w="11"/><text x="0.3501%" y="4399.50"></text></g><g><title>`0x7FFABE6F586D (11 samples, 0.37%)</title><rect x="0.1001%" y="4373" width="0.3669%" height="15" fill="rgb(230,62,27)" fg:x="3" fg:w="11"/><text x="0.3501%" y="4383.50"></text></g><g><title>`0x7FFABE69710B (11 samples, 0.37%)</title><rect x="0.1001%" y="4357" width="0.3669%" height="15" fill="rgb(216,154,8)" fg:x="3" fg:w="11"/><text x="0.3501%" y="4367.50"></text></g><g><title>`0x7FFABE6E7BF9 (11 samples, 0.37%)</title><rect x="0.1001%" y="4341" width="0.3669%" height="15" fill="rgb(244,35,45)" fg:x="3" fg:w="11"/><text x="0.3501%" y="4351.50"></text></g><g><title>`0x7FFABE921D46 (11 samples, 0.37%)</title><rect x="0.1001%" y="4325" width="0.3669%" height="15" fill="rgb(251,115,12)" fg:x="3" fg:w="11"/><text x="0.3501%" y="4335.50"></text></g><g><title>`0x7FFAC12F66A0 (11 samples, 0.37%)</title><rect x="0.1001%" y="4309" width="0.3669%" height="15" fill="rgb(240,54,50)" fg:x="3" fg:w="11"/><text x="0.3501%" y="4319.50"></text></g><g><title>`0x7FFAC12EACD0 (11 samples, 0.37%)</title><rect x="0.1001%" y="4293" width="0.3669%" height="15" fill="rgb(233,84,52)" fg:x="3" fg:w="11"/><text x="0.3501%" y="4303.50"></text></g><g><title>`0x7FFAC12EB0C4 (3 samples, 0.10%)</title><rect x="0.3669%" y="4277" width="0.1001%" height="15" fill="rgb(207,117,47)" fg:x="11" fg:w="3"/><text x="0.6169%" y="4287.50"></text></g><g><title>`0x7FFAC134AD83 (3 samples, 0.10%)</title><rect x="0.3669%" y="4261" width="0.1001%" height="15" fill="rgb(249,43,39)" fg:x="11" fg:w="3"/><text x="0.6169%" y="4271.50"></text></g><g><title>`0x7FFAC134B0C6 (3 samples, 0.10%)</title><rect x="0.3669%" y="4245" width="0.1001%" height="15" fill="rgb(209,38,44)" fg:x="11" fg:w="3"/><text x="0.6169%" y="4255.50"></text></g><g><title>`0x7FFAC134B09A (3 samples, 0.10%)</title><rect x="0.3669%" y="4229" width="0.1001%" height="15" fill="rgb(236,212,23)" fg:x="11" fg:w="3"/><text x="0.6169%" y="4239.50"></text></g><g><title>`0x7FFAC12BCC0C (3 samples, 0.10%)</title><rect x="0.3669%" y="4213" width="0.1001%" height="15" fill="rgb(242,79,21)" fg:x="11" fg:w="3"/><text x="0.6169%" y="4223.50"></text></g><g><title>`0x7FFAC12BD860 (3 samples, 0.10%)</title><rect x="0.3669%" y="4197" width="0.1001%" height="15" fill="rgb(211,96,35)" fg:x="11" fg:w="3"/><text x="0.6169%" y="4207.50"></text></g><g><title>`0x7FFAC0EE7AC4 (1 samples, 0.03%)</title><rect x="0.4336%" y="4181" width="0.0334%" height="15" fill="rgb(253,215,40)" fg:x="13" fg:w="1"/><text x="0.6836%" y="4191.50"></text></g><g><title>`0x7FFAC0F2025C (1 samples, 0.03%)</title><rect x="0.4336%" y="4165" width="0.0334%" height="15" fill="rgb(211,81,21)" fg:x="13" fg:w="1"/><text x="0.6836%" y="4175.50"></text></g><g><title>`0x7FFAC1380A5D (1 samples, 0.03%)</title><rect x="0.4670%" y="4341" width="0.0334%" height="15" fill="rgb(208,190,38)" fg:x="14" fg:w="1"/><text x="0.7170%" y="4351.50"></text></g><g><title>`0x7FFAC1312C6F (1 samples, 0.03%)</title><rect x="0.4670%" y="4325" width="0.0334%" height="15" fill="rgb(235,213,38)" fg:x="14" fg:w="1"/><text x="0.7170%" y="4335.50"></text></g><g><title>`0x7FFAC0F1EAA6 (1 samples, 0.03%)</title><rect x="0.4670%" y="4309" width="0.0334%" height="15" fill="rgb(237,122,38)" fg:x="14" fg:w="1"/><text x="0.7170%" y="4319.50"></text></g><g><title>`0x7FFAC0F0CAB0 (1 samples, 0.03%)</title><rect x="0.4670%" y="4293" width="0.0334%" height="15" fill="rgb(244,218,35)" fg:x="14" fg:w="1"/><text x="0.7170%" y="4303.50"></text></g><g><title>`0x7FFABE710543 (2 samples, 0.07%)</title><rect x="0.4670%" y="4389" width="0.0667%" height="15" fill="rgb(240,68,47)" fg:x="14" fg:w="2"/><text x="0.7170%" y="4399.50"></text></g><g><title>`0x7FFAC00218AB (2 samples, 0.07%)</title><rect x="0.4670%" y="4373" width="0.0667%" height="15" fill="rgb(210,16,53)" fg:x="14" fg:w="2"/><text x="0.7170%" y="4383.50"></text></g><g><title>`0x7FFAC137FD84 (2 samples, 0.07%)</title><rect x="0.4670%" y="4357" width="0.0667%" height="15" fill="rgb(235,124,12)" fg:x="14" fg:w="2"/><text x="0.7170%" y="4367.50"></text></g><g><title>`0x7FFAC1380BC0 (1 samples, 0.03%)</title><rect x="0.5003%" y="4341" width="0.0334%" height="15" fill="rgb(224,169,11)" fg:x="15" fg:w="1"/><text x="0.7503%" y="4351.50"></text></g><g><title>`0x7FFAC12BD860 (1 samples, 0.03%)</title><rect x="0.5003%" y="4325" width="0.0334%" height="15" fill="rgb(250,166,2)" fg:x="15" fg:w="1"/><text x="0.7503%" y="4335.50"></text></g><g><title>`0x7FFABEA36E96 (1 samples, 0.03%)</title><rect x="0.5003%" y="4309" width="0.0334%" height="15" fill="rgb(242,216,29)" fg:x="15" fg:w="1"/><text x="0.7503%" y="4319.50"></text></g><g><title>`0x7FFABE9F1940 (1 samples, 0.03%)</title><rect x="0.5003%" y="4293" width="0.0334%" height="15" fill="rgb(230,116,27)" fg:x="15" fg:w="1"/><text x="0.7503%" y="4303.50"></text></g><g><title>`0x7FFABE9F1DBF (1 samples, 0.03%)</title><rect x="0.5003%" y="4277" width="0.0334%" height="15" fill="rgb(228,99,48)" fg:x="15" fg:w="1"/><text x="0.7503%" y="4287.50"></text></g><g><title>`0x7FFABE9F263C (1 samples, 0.03%)</title><rect x="0.5003%" y="4261" width="0.0334%" height="15" fill="rgb(253,11,6)" fg:x="15" fg:w="1"/><text x="0.7503%" y="4271.50"></text></g><g><title>`0x7FFABE98F055 (1 samples, 0.03%)</title><rect x="0.5003%" y="4245" width="0.0334%" height="15" fill="rgb(247,143,39)" fg:x="15" fg:w="1"/><text x="0.7503%" y="4255.50"></text></g><g><title>`0x7FFABE9904BE (1 samples, 0.03%)</title><rect x="0.5003%" y="4229" width="0.0334%" height="15" fill="rgb(236,97,10)" fg:x="15" fg:w="1"/><text x="0.7503%" y="4239.50"></text></g><g><title>`0x7FFABE9F16C2 (1 samples, 0.03%)</title><rect x="0.5003%" y="4213" width="0.0334%" height="15" fill="rgb(233,208,19)" fg:x="15" fg:w="1"/><text x="0.7503%" y="4223.50"></text></g><g><title>`0x7FFABE98EE8E (1 samples, 0.03%)</title><rect x="0.5003%" y="4197" width="0.0334%" height="15" fill="rgb(216,164,2)" fg:x="15" fg:w="1"/><text x="0.7503%" y="4207.50"></text></g><g><title>`0x7FFABE98FE80 (1 samples, 0.03%)</title><rect x="0.5003%" y="4181" width="0.0334%" height="15" fill="rgb(220,129,5)" fg:x="15" fg:w="1"/><text x="0.7503%" y="4191.50"></text></g><g><title>`0x7FFABE9454F2 (1 samples, 0.03%)</title><rect x="0.5003%" y="4165" width="0.0334%" height="15" fill="rgb(242,17,10)" fg:x="15" fg:w="1"/><text x="0.7503%" y="4175.50"></text></g><g><title>`0x7FFAC12C400C (1 samples, 0.03%)</title><rect x="0.5003%" y="4149" width="0.0334%" height="15" fill="rgb(242,107,0)" fg:x="15" fg:w="1"/><text x="0.7503%" y="4159.50"></text></g><g><title>`0x7FFAC12F53EC (1 samples, 0.03%)</title><rect x="0.5003%" y="4133" width="0.0334%" height="15" fill="rgb(251,28,31)" fg:x="15" fg:w="1"/><text x="0.7503%" y="4143.50"></text></g><g><title>boggle.exe`std::rt::lang_start_internal::closure$1 (1 samples, 0.03%)</title><rect x="0.5337%" y="4293" width="0.0334%" height="15" fill="rgb(233,223,10)" fg:x="16" fg:w="1"/><text x="0.7837%" y="4303.50"></text></g><g><title>boggle.exe`std::rt::init (1 samples, 0.03%)</title><rect x="0.5337%" y="4277" width="0.0334%" height="15" fill="rgb(215,21,27)" fg:x="16" fg:w="1"/><text x="0.7837%" y="4287.50"></text></g><g><title>boggle.exe`std::sys::pal::windows::init (1 samples, 0.03%)</title><rect x="0.5337%" y="4261" width="0.0334%" height="15" fill="rgb(232,23,21)" fg:x="16" fg:w="1"/><text x="0.7837%" y="4271.50"></text></g><g><title>boggle.exe`std::sys::pal::windows::thread::Thread::set_name_wide (1 samples, 0.03%)</title><rect x="0.5337%" y="4245" width="0.0334%" height="15" fill="rgb(244,5,23)" fg:x="16" fg:w="1"/><text x="0.7837%" y="4255.50"></text></g><g><title>`0x7FFABEA09EC0 (1 samples, 0.03%)</title><rect x="0.5337%" y="4229" width="0.0334%" height="15" fill="rgb(226,81,46)" fg:x="16" fg:w="1"/><text x="0.7837%" y="4239.50"></text></g><g><title>`0x7FFAC12D2325 (1 samples, 0.03%)</title><rect x="0.6004%" y="3541" width="0.0334%" height="15" fill="rgb(247,70,30)" fg:x="18" fg:w="1"/><text x="0.8504%" y="3551.50"></text></g><g><title>`0x7FFAC12D2406 (1 samples, 0.03%)</title><rect x="0.6338%" y="3541" width="0.0334%" height="15" fill="rgb(212,68,19)" fg:x="19" fg:w="1"/><text x="0.8838%" y="3551.50"></text></g><g><title>`0x7FFAC12D2451 (1 samples, 0.03%)</title><rect x="0.6671%" y="3541" width="0.0334%" height="15" fill="rgb(240,187,13)" fg:x="20" fg:w="1"/><text x="0.9171%" y="3551.50"></text></g><g><title>`0x7FFAC12D22F8 (1 samples, 0.03%)</title><rect x="0.7005%" y="3477" width="0.0334%" height="15" fill="rgb(223,113,26)" fg:x="21" fg:w="1"/><text x="0.9505%" y="3487.50"></text></g><g><title>`0x7FFAC12D23A7 (1 samples, 0.03%)</title><rect x="0.7338%" y="3477" width="0.0334%" height="15" fill="rgb(206,192,2)" fg:x="22" fg:w="1"/><text x="0.9838%" y="3487.50"></text></g><g><title>`0x7FFAC12D243D (2 samples, 0.07%)</title><rect x="0.7672%" y="3477" width="0.0667%" height="15" fill="rgb(241,108,4)" fg:x="23" fg:w="2"/><text x="1.0172%" y="3487.50"></text></g><g><title>`0x7FFAC12D2240 (2 samples, 0.07%)</title><rect x="0.8672%" y="3413" width="0.0667%" height="15" fill="rgb(247,173,49)" fg:x="26" fg:w="2"/><text x="1.1172%" y="3423.50"></text></g><g><title>`0x7FFAC12D2267 (1 samples, 0.03%)</title><rect x="0.9340%" y="3413" width="0.0334%" height="15" fill="rgb(224,114,35)" fg:x="28" fg:w="1"/><text x="1.1840%" y="3423.50"></text></g><g><title>`0x7FFAC12D23A7 (1 samples, 0.03%)</title><rect x="0.9673%" y="3413" width="0.0334%" height="15" fill="rgb(245,159,27)" fg:x="29" fg:w="1"/><text x="1.2173%" y="3423.50"></text></g><g><title>`0x7FFAC12D23DD (1 samples, 0.03%)</title><rect x="1.0007%" y="3413" width="0.0334%" height="15" fill="rgb(245,172,44)" fg:x="30" fg:w="1"/><text x="1.2507%" y="3423.50"></text></g><g><title>`0x7FFAC12D23E7 (1 samples, 0.03%)</title><rect x="1.0340%" y="3413" width="0.0334%" height="15" fill="rgb(236,23,11)" fg:x="31" fg:w="1"/><text x="1.2840%" y="3423.50"></text></g><g><title>`0x7FFAC12D2267 (2 samples, 0.07%)</title><rect x="1.1674%" y="3349" width="0.0667%" height="15" fill="rgb(205,117,38)" fg:x="35" fg:w="2"/><text x="1.4174%" y="3359.50"></text></g><g><title>`0x7FFAC12D2329 (1 samples, 0.03%)</title><rect x="1.2342%" y="3349" width="0.0334%" height="15" fill="rgb(237,72,25)" fg:x="37" fg:w="1"/><text x="1.4842%" y="3359.50"></text></g><g><title>`0x7FFAC12D233B (1 samples, 0.03%)</title><rect x="1.2675%" y="3349" width="0.0334%" height="15" fill="rgb(244,70,9)" fg:x="38" fg:w="1"/><text x="1.5175%" y="3359.50"></text></g><g><title>`0x7FFAC12D238C (2 samples, 0.07%)</title><rect x="1.3009%" y="3349" width="0.0667%" height="15" fill="rgb(217,125,39)" fg:x="39" fg:w="2"/><text x="1.5509%" y="3359.50"></text></g><g><title>`0x7FFAC12D23A7 (1 samples, 0.03%)</title><rect x="1.3676%" y="3349" width="0.0334%" height="15" fill="rgb(235,36,10)" fg:x="41" fg:w="1"/><text x="1.6176%" y="3359.50"></text></g><g><title>`0x7FFAC12D2767 (1 samples, 0.03%)</title><rect x="1.4009%" y="3349" width="0.0334%" height="15" fill="rgb(251,123,47)" fg:x="42" fg:w="1"/><text x="1.6509%" y="3359.50"></text></g><g><title>`0x7FFAC14034F0 (1 samples, 0.03%)</title><rect x="1.4009%" y="3333" width="0.0334%" height="15" fill="rgb(221,13,13)" fg:x="42" fg:w="1"/><text x="1.6509%" y="3343.50"></text></g><g><title>`0x7FFAC12D2365 (1 samples, 0.03%)</title><rect x="1.4676%" y="3285" width="0.0334%" height="15" fill="rgb(238,131,9)" fg:x="44" fg:w="1"/><text x="1.7176%" y="3295.50"></text></g><g><title>`0x7FFAC12D23A7 (6 samples, 0.20%)</title><rect x="1.5010%" y="3285" width="0.2001%" height="15" fill="rgb(211,50,8)" fg:x="45" fg:w="6"/><text x="1.7510%" y="3295.50"></text></g><g><title>`0x7FFAC12D23DD (1 samples, 0.03%)</title><rect x="1.7011%" y="3285" width="0.0334%" height="15" fill="rgb(245,182,24)" fg:x="51" fg:w="1"/><text x="1.9511%" y="3295.50"></text></g><g><title>`0x7FFAC12D2240 (1 samples, 0.03%)</title><rect x="1.7678%" y="3221" width="0.0334%" height="15" fill="rgb(242,14,37)" fg:x="53" fg:w="1"/><text x="2.0178%" y="3231.50"></text></g><g><title>`0x7FFAC12D2267 (1 samples, 0.03%)</title><rect x="1.8012%" y="3221" width="0.0334%" height="15" fill="rgb(246,228,12)" fg:x="54" fg:w="1"/><text x="2.0512%" y="3231.50"></text></g><g><title>`0x7FFAC12D2316 (1 samples, 0.03%)</title><rect x="1.8346%" y="3221" width="0.0334%" height="15" fill="rgb(213,55,15)" fg:x="55" fg:w="1"/><text x="2.0846%" y="3231.50"></text></g><g><title>`0x7FFAC12D2396 (1 samples, 0.03%)</title><rect x="1.8679%" y="3221" width="0.0334%" height="15" fill="rgb(209,9,3)" fg:x="56" fg:w="1"/><text x="2.1179%" y="3231.50"></text></g><g><title>`0x7FFAC12D23A7 (1 samples, 0.03%)</title><rect x="1.9013%" y="3221" width="0.0334%" height="15" fill="rgb(230,59,30)" fg:x="57" fg:w="1"/><text x="2.1513%" y="3231.50"></text></g><g><title>`0x7FFAC12D23DD (1 samples, 0.03%)</title><rect x="1.9346%" y="3221" width="0.0334%" height="15" fill="rgb(209,121,21)" fg:x="58" fg:w="1"/><text x="2.1846%" y="3231.50"></text></g><g><title>`0x7FFAC12D2427 (1 samples, 0.03%)</title><rect x="1.9680%" y="3221" width="0.0334%" height="15" fill="rgb(220,109,13)" fg:x="59" fg:w="1"/><text x="2.2180%" y="3231.50"></text></g><g><title>`0x7FFAC12D2296 (1 samples, 0.03%)</title><rect x="2.0013%" y="3157" width="0.0334%" height="15" fill="rgb(232,18,1)" fg:x="60" fg:w="1"/><text x="2.2513%" y="3167.50"></text></g><g><title>`0x7FFAC12D232F (1 samples, 0.03%)</title><rect x="2.0347%" y="3157" width="0.0334%" height="15" fill="rgb(215,41,42)" fg:x="61" fg:w="1"/><text x="2.2847%" y="3167.50"></text></g><g><title>`0x7FFAC12D23A7 (2 samples, 0.07%)</title><rect x="2.0680%" y="3157" width="0.0667%" height="15" fill="rgb(224,123,36)" fg:x="62" fg:w="2"/><text x="2.3180%" y="3167.50"></text></g><g><title>`0x7FFAC12D23E7 (1 samples, 0.03%)</title><rect x="2.1348%" y="3157" width="0.0334%" height="15" fill="rgb(240,125,3)" fg:x="64" fg:w="1"/><text x="2.3848%" y="3167.50"></text></g><g><title>`0x7FFAC12D2329 (1 samples, 0.03%)</title><rect x="2.2348%" y="3093" width="0.0334%" height="15" fill="rgb(205,98,50)" fg:x="67" fg:w="1"/><text x="2.4848%" y="3103.50"></text></g><g><title>`0x7FFAC12D23A7 (3 samples, 0.10%)</title><rect x="2.2682%" y="3093" width="0.1001%" height="15" fill="rgb(205,185,37)" fg:x="68" fg:w="3"/><text x="2.5182%" y="3103.50"></text></g><g><title>`0x7FFAC12D2451 (1 samples, 0.03%)</title><rect x="2.3682%" y="3093" width="0.0334%" height="15" fill="rgb(238,207,15)" fg:x="71" fg:w="1"/><text x="2.6182%" y="3103.50"></text></g><g><title>`0x7FFAC12D26AB (1 samples, 0.03%)</title><rect x="2.4016%" y="3029" width="0.0334%" height="15" fill="rgb(213,199,42)" fg:x="72" fg:w="1"/><text x="2.6516%" y="3039.50"></text></g><g><title>`0x7FFAC12D2267 (1 samples, 0.03%)</title><rect x="2.4350%" y="2901" width="0.0334%" height="15" fill="rgb(235,201,11)" fg:x="73" fg:w="1"/><text x="2.6850%" y="2911.50"></text></g><g><title>boggle.exe`alloc::string::String::push (1 samples, 0.03%)</title><rect x="2.5017%" y="2581" width="0.0334%" height="15" fill="rgb(207,46,11)" fg:x="75" fg:w="1"/><text x="2.7517%" y="2591.50"></text></g><g><title>boggle.exe`core::char::methods::impl$0::len_utf8 (1 samples, 0.03%)</title><rect x="2.5017%" y="2565" width="0.0334%" height="15" fill="rgb(241,35,35)" fg:x="75" fg:w="1"/><text x="2.7517%" y="2575.50"></text></g><g><title>boggle.exe`core::char::methods::len_utf8 (1 samples, 0.03%)</title><rect x="2.5017%" y="2549" width="0.0334%" height="15" fill="rgb(243,32,47)" fg:x="75" fg:w="1"/><text x="2.7517%" y="2559.50"></text></g><g><title>boggle.exe`alloc::string::String::pop (2 samples, 0.07%)</title><rect x="2.5017%" y="2709" width="0.0667%" height="15" fill="rgb(247,202,23)" fg:x="75" fg:w="2"/><text x="2.7517%" y="2719.50"></text></g><g><title>boggle.exe`alloc::string::impl$28::deref (2 samples, 0.07%)</title><rect x="2.5017%" y="2693" width="0.0667%" height="15" fill="rgb(219,102,11)" fg:x="75" fg:w="2"/><text x="2.7517%" y="2703.50"></text></g><g><title>boggle.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (2 samples, 0.07%)</title><rect x="2.5017%" y="2677" width="0.0667%" height="15" fill="rgb(243,110,44)" fg:x="75" fg:w="2"/><text x="2.7517%" y="2687.50"></text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::collect_words(boggle::utils::dict_trie::DictTrieNode*, ref$&lt;str$&gt;, alloc::vec::Vec (2 samples, 0.07%)</title><rect x="2.5017%" y="2661" width="0.0667%" height="15" fill="rgb(222,74,54)" fg:x="75" fg:w="2"/><text x="2.7517%" y="2671.50"></text></g><g><title>boggle.exe`alloc::string::String::pop (2 samples, 0.07%)</title><rect x="2.5017%" y="2645" width="0.0667%" height="15" fill="rgb(216,99,12)" fg:x="75" fg:w="2"/><text x="2.7517%" y="2655.50"></text></g><g><title>boggle.exe`alloc::string::impl$28::deref (2 samples, 0.07%)</title><rect x="2.5017%" y="2629" width="0.0667%" height="15" fill="rgb(226,22,26)" fg:x="75" fg:w="2"/><text x="2.7517%" y="2639.50"></text></g><g><title>boggle.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (2 samples, 0.07%)</title><rect x="2.5017%" y="2613" width="0.0667%" height="15" fill="rgb(217,163,10)" fg:x="75" fg:w="2"/><text x="2.7517%" y="2623.50"></text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::collect_words(boggle::utils::dict_trie::DictTrieNode*, ref$&lt;str$&gt;, alloc::vec::Vec (2 samples, 0.07%)</title><rect x="2.5017%" y="2597" width="0.0667%" height="15" fill="rgb(213,25,53)" fg:x="75" fg:w="2"/><text x="2.7517%" y="2607.50"></text></g><g><title>boggle.exe`alloc::string::impl$28::deref (1 samples, 0.03%)</title><rect x="2.5350%" y="2581" width="0.0334%" height="15" fill="rgb(252,105,26)" fg:x="76" fg:w="1"/><text x="2.7850%" y="2591.50"></text></g><g><title>boggle.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (1 samples, 0.03%)</title><rect x="2.5350%" y="2565" width="0.0334%" height="15" fill="rgb(220,39,43)" fg:x="76" fg:w="1"/><text x="2.7850%" y="2575.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_ptr (1 samples, 0.03%)</title><rect x="2.5350%" y="2549" width="0.0334%" height="15" fill="rgb(229,68,48)" fg:x="76" fg:w="1"/><text x="2.7850%" y="2559.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::ptr (1 samples, 0.03%)</title><rect x="2.5350%" y="2533" width="0.0334%" height="15" fill="rgb(252,8,32)" fg:x="76" fg:w="1"/><text x="2.7850%" y="2543.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (1 samples, 0.03%)</title><rect x="2.5350%" y="2517" width="0.0334%" height="15" fill="rgb(223,20,43)" fg:x="76" fg:w="1"/><text x="2.7850%" y="2527.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (1 samples, 0.03%)</title><rect x="2.5350%" y="2501" width="0.0334%" height="15" fill="rgb(229,81,49)" fg:x="76" fg:w="1"/><text x="2.7850%" y="2511.50"></text></g><g><title>boggle.exe`alloc::string::String::pop (3 samples, 0.10%)</title><rect x="2.5017%" y="2773" width="0.1001%" height="15" fill="rgb(236,28,36)" fg:x="75" fg:w="3"/><text x="2.7517%" y="2783.50"></text></g><g><title>boggle.exe`alloc::string::impl$28::deref (3 samples, 0.10%)</title><rect x="2.5017%" y="2757" width="0.1001%" height="15" fill="rgb(249,185,26)" fg:x="75" fg:w="3"/><text x="2.7517%" y="2767.50"></text></g><g><title>boggle.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (3 samples, 0.10%)</title><rect x="2.5017%" y="2741" width="0.1001%" height="15" fill="rgb(249,174,33)" fg:x="75" fg:w="3"/><text x="2.7517%" y="2751.50"></text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::collect_words(boggle::utils::dict_trie::DictTrieNode*, ref$&lt;str$&gt;, alloc::vec::Vec (3 samples, 0.10%)</title><rect x="2.5017%" y="2725" width="0.1001%" height="15" fill="rgb(233,201,37)" fg:x="75" fg:w="3"/><text x="2.7517%" y="2735.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;::push (1 samples, 0.03%)</title><rect x="2.5684%" y="2709" width="0.0334%" height="15" fill="rgb(221,78,26)" fg:x="77" fg:w="1"/><text x="2.8184%" y="2719.50"></text></g><g><title>boggle.exe`alloc::string::impl$6::clone (1 samples, 0.03%)</title><rect x="2.5684%" y="2693" width="0.0334%" height="15" fill="rgb(250,127,30)" fg:x="77" fg:w="1"/><text x="2.8184%" y="2703.50"></text></g><g><title>boggle.exe`alloc::vec::impl$11::clone (1 samples, 0.03%)</title><rect x="2.5684%" y="2677" width="0.0334%" height="15" fill="rgb(230,49,44)" fg:x="77" fg:w="1"/><text x="2.8184%" y="2687.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec_in (1 samples, 0.03%)</title><rect x="2.5684%" y="2661" width="0.0334%" height="15" fill="rgb(229,67,23)" fg:x="77" fg:w="1"/><text x="2.8184%" y="2671.50"></text></g><g><title>boggle.exe`alloc::slice::hack::to_vec (1 samples, 0.03%)</title><rect x="2.5684%" y="2645" width="0.0334%" height="15" fill="rgb(249,83,47)" fg:x="77" fg:w="1"/><text x="2.8184%" y="2655.50"></text></g><g><title>boggle.exe`alloc::slice::hack::impl$1::to_vec (1 samples, 0.03%)</title><rect x="2.5684%" y="2629" width="0.0334%" height="15" fill="rgb(215,43,3)" fg:x="77" fg:w="1"/><text x="2.8184%" y="2639.50"></text></g><g><title>boggle.exe`alloc::vec::Vec::with_capacity_in (1 samples, 0.03%)</title><rect x="2.5684%" y="2613" width="0.0334%" height="15" fill="rgb(238,154,13)" fg:x="77" fg:w="1"/><text x="2.8184%" y="2623.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec::with_capacity_in (1 samples, 0.03%)</title><rect x="2.5684%" y="2597" width="0.0334%" height="15" fill="rgb(219,56,2)" fg:x="77" fg:w="1"/><text x="2.8184%" y="2607.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner::with_capacity_in (1 samples, 0.03%)</title><rect x="2.5684%" y="2581" width="0.0334%" height="15" fill="rgb(233,0,4)" fg:x="77" fg:w="1"/><text x="2.8184%" y="2591.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner::try_allocate_in (1 samples, 0.03%)</title><rect x="2.5684%" y="2565" width="0.0334%" height="15" fill="rgb(235,30,7)" fg:x="77" fg:w="1"/><text x="2.8184%" y="2575.50"></text></g><g><title>`0x7FFAC12C7776 (1 samples, 0.03%)</title><rect x="2.5684%" y="2549" width="0.0334%" height="15" fill="rgb(250,79,13)" fg:x="77" fg:w="1"/><text x="2.8184%" y="2559.50"></text></g><g><title>`0x7FFAC12C78B4 (1 samples, 0.03%)</title><rect x="2.5684%" y="2533" width="0.0334%" height="15" fill="rgb(211,146,34)" fg:x="77" fg:w="1"/><text x="2.8184%" y="2543.50"></text></g><g><title>`0x7FFAC12C818E (1 samples, 0.03%)</title><rect x="2.5684%" y="2517" width="0.0334%" height="15" fill="rgb(228,22,38)" fg:x="77" fg:w="1"/><text x="2.8184%" y="2527.50"></text></g><g><title>`0x7FFAC12C7776 (1 samples, 0.03%)</title><rect x="2.6017%" y="2581" width="0.0334%" height="15" fill="rgb(235,168,5)" fg:x="78" fg:w="1"/><text x="2.8517%" y="2591.50"></text></g><g><title>`0x7FFAC12C78B4 (1 samples, 0.03%)</title><rect x="2.6017%" y="2565" width="0.0334%" height="15" fill="rgb(221,155,16)" fg:x="78" fg:w="1"/><text x="2.8517%" y="2575.50"></text></g><g><title>`0x7FFAC12C7E80 (1 samples, 0.03%)</title><rect x="2.6017%" y="2549" width="0.0334%" height="15" fill="rgb(215,215,53)" fg:x="78" fg:w="1"/><text x="2.8517%" y="2559.50"></text></g><g><title>boggle.exe`alloc::string::impl$102::to_string(ref$ (2 samples, 0.07%)</title><rect x="2.6017%" y="2773" width="0.0667%" height="15" fill="rgb(223,4,10)" fg:x="78" fg:w="2"/><text x="2.8517%" y="2783.50"></text></g><g><title>boggle.exe`alloc::string::impl$44::from(ref$ (2 samples, 0.07%)</title><rect x="2.6017%" y="2757" width="0.0667%" height="15" fill="rgb(234,103,6)" fg:x="78" fg:w="2"/><text x="2.8517%" y="2767.50"></text></g><g><title>boggle.exe`alloc::str::impl$4::to_owned(ref$ (2 samples, 0.07%)</title><rect x="2.6017%" y="2741" width="0.0667%" height="15" fill="rgb(227,97,0)" fg:x="78" fg:w="2"/><text x="2.8517%" y="2751.50"></text></g><g><title>boggle.exe`alloc::slice::impl$9::to_owned(ref$&lt;slice2$ (2 samples, 0.07%)</title><rect x="2.6017%" y="2725" width="0.0667%" height="15" fill="rgb(234,150,53)" fg:x="78" fg:w="2"/><text x="2.8517%" y="2735.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec(ref$&lt;slice2$ (2 samples, 0.07%)</title><rect x="2.6017%" y="2709" width="0.0667%" height="15" fill="rgb(228,201,54)" fg:x="78" fg:w="2"/><text x="2.8517%" y="2719.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec_in(ref$&lt;slice2$ (2 samples, 0.07%)</title><rect x="2.6017%" y="2693" width="0.0667%" height="15" fill="rgb(222,22,37)" fg:x="78" fg:w="2"/><text x="2.8517%" y="2703.50"></text></g><g><title>boggle.exe`alloc::slice::hack::to_vec(ref$&lt;slice2$ (2 samples, 0.07%)</title><rect x="2.6017%" y="2677" width="0.0667%" height="15" fill="rgb(237,53,32)" fg:x="78" fg:w="2"/><text x="2.8517%" y="2687.50"></text></g><g><title>boggle.exe`alloc::slice::hack::impl$1::to_vec(ref$&lt;slice2$ (2 samples, 0.07%)</title><rect x="2.6017%" y="2661" width="0.0667%" height="15" fill="rgb(233,25,53)" fg:x="78" fg:w="2"/><text x="2.8517%" y="2671.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (2 samples, 0.07%)</title><rect x="2.6017%" y="2645" width="0.0667%" height="15" fill="rgb(210,40,34)" fg:x="78" fg:w="2"/><text x="2.8517%" y="2655.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (2 samples, 0.07%)</title><rect x="2.6017%" y="2629" width="0.0667%" height="15" fill="rgb(241,220,44)" fg:x="78" fg:w="2"/><text x="2.8517%" y="2639.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (2 samples, 0.07%)</title><rect x="2.6017%" y="2613" width="0.0667%" height="15" fill="rgb(235,28,35)" fg:x="78" fg:w="2"/><text x="2.8517%" y="2623.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (2 samples, 0.07%)</title><rect x="2.6017%" y="2597" width="0.0667%" height="15" fill="rgb(210,56,17)" fg:x="78" fg:w="2"/><text x="2.8517%" y="2607.50"></text></g><g><title>`0x7FFAC12C7779 (1 samples, 0.03%)</title><rect x="2.6351%" y="2581" width="0.0334%" height="15" fill="rgb(224,130,29)" fg:x="79" fg:w="1"/><text x="2.8851%" y="2591.50"></text></g><g><title>boggle.exe`alloc::string::String::pop (6 samples, 0.20%)</title><rect x="2.5017%" y="2837" width="0.2001%" height="15" fill="rgb(235,212,8)" fg:x="75" fg:w="6"/><text x="2.7517%" y="2847.50"></text></g><g><title>boggle.exe`alloc::string::impl$28::deref (6 samples, 0.20%)</title><rect x="2.5017%" y="2821" width="0.2001%" height="15" fill="rgb(223,33,50)" fg:x="75" fg:w="6"/><text x="2.7517%" y="2831.50"></text></g><g><title>boggle.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (6 samples, 0.20%)</title><rect x="2.5017%" y="2805" width="0.2001%" height="15" fill="rgb(219,149,13)" fg:x="75" fg:w="6"/><text x="2.7517%" y="2815.50"></text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::collect_words(boggle::utils::dict_trie::DictTrieNode*, ref$&lt;str$&gt;, alloc::vec::Vec (6 samples, 0.20%)</title><rect x="2.5017%" y="2789" width="0.2001%" height="15" fill="rgb(250,156,29)" fg:x="75" fg:w="6"/><text x="2.7517%" y="2799.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;::push (1 samples, 0.03%)</title><rect x="2.6684%" y="2773" width="0.0334%" height="15" fill="rgb(216,193,19)" fg:x="80" fg:w="1"/><text x="2.9184%" y="2783.50"></text></g><g><title>boggle.exe`alloc::string::String::push (1 samples, 0.03%)</title><rect x="2.7018%" y="2837" width="0.0334%" height="15" fill="rgb(216,135,14)" fg:x="81" fg:w="1"/><text x="2.9518%" y="2847.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::push (1 samples, 0.03%)</title><rect x="2.7018%" y="2821" width="0.0334%" height="15" fill="rgb(241,47,5)" fg:x="81" fg:w="1"/><text x="2.9518%" y="2831.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_mut_ptr (1 samples, 0.03%)</title><rect x="2.7018%" y="2805" width="0.0334%" height="15" fill="rgb(233,42,35)" fg:x="81" fg:w="1"/><text x="2.9518%" y="2815.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::ptr (1 samples, 0.03%)</title><rect x="2.7018%" y="2789" width="0.0334%" height="15" fill="rgb(231,13,6)" fg:x="81" fg:w="1"/><text x="2.9518%" y="2799.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (1 samples, 0.03%)</title><rect x="2.7018%" y="2773" width="0.0334%" height="15" fill="rgb(207,181,40)" fg:x="81" fg:w="1"/><text x="2.9518%" y="2783.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (1 samples, 0.03%)</title><rect x="2.7018%" y="2757" width="0.0334%" height="15" fill="rgb(254,173,49)" fg:x="81" fg:w="1"/><text x="2.9518%" y="2767.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::grow_one&lt;u8,alloc::alloc::Global&gt; (1 samples, 0.03%)</title><rect x="2.7018%" y="2741" width="0.0334%" height="15" fill="rgb(221,1,38)" fg:x="81" fg:w="1"/><text x="2.9518%" y="2751.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_one (1 samples, 0.03%)</title><rect x="2.7018%" y="2725" width="0.0334%" height="15" fill="rgb(206,124,46)" fg:x="81" fg:w="1"/><text x="2.9518%" y="2735.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (1 samples, 0.03%)</title><rect x="2.7018%" y="2709" width="0.0334%" height="15" fill="rgb(249,21,11)" fg:x="81" fg:w="1"/><text x="2.9518%" y="2719.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (1 samples, 0.03%)</title><rect x="2.7018%" y="2693" width="0.0334%" height="15" fill="rgb(222,201,40)" fg:x="81" fg:w="1"/><text x="2.9518%" y="2703.50"></text></g><g><title>boggle.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="2.7018%" y="2677" width="0.0334%" height="15" fill="rgb(235,61,29)" fg:x="81" fg:w="1"/><text x="2.9518%" y="2687.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="2.7018%" y="2661" width="0.0334%" height="15" fill="rgb(219,207,3)" fg:x="81" fg:w="1"/><text x="2.9518%" y="2671.50"></text></g><g><title>boggle.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="2.7018%" y="2645" width="0.0334%" height="15" fill="rgb(222,56,46)" fg:x="81" fg:w="1"/><text x="2.9518%" y="2655.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="2.7018%" y="2629" width="0.0334%" height="15" fill="rgb(239,76,54)" fg:x="81" fg:w="1"/><text x="2.9518%" y="2639.50"></text></g><g><title>`0x7FFAC12D5376 (1 samples, 0.03%)</title><rect x="2.7018%" y="2613" width="0.0334%" height="15" fill="rgb(231,124,27)" fg:x="81" fg:w="1"/><text x="2.9518%" y="2623.50"></text></g><g><title>`0x7FFAC12D54B5 (1 samples, 0.03%)</title><rect x="2.7018%" y="2597" width="0.0334%" height="15" fill="rgb(249,195,6)" fg:x="81" fg:w="1"/><text x="2.9518%" y="2607.50"></text></g><g><title>`0x7FFAC12D5DAA (1 samples, 0.03%)</title><rect x="2.7018%" y="2581" width="0.0334%" height="15" fill="rgb(237,174,47)" fg:x="81" fg:w="1"/><text x="2.9518%" y="2591.50"></text></g><g><title>`0x7FFAC12C7776 (1 samples, 0.03%)</title><rect x="2.7018%" y="2565" width="0.0334%" height="15" fill="rgb(206,201,31)" fg:x="81" fg:w="1"/><text x="2.9518%" y="2575.50"></text></g><g><title>`0x7FFAC12C78B4 (1 samples, 0.03%)</title><rect x="2.7018%" y="2549" width="0.0334%" height="15" fill="rgb(231,57,52)" fg:x="81" fg:w="1"/><text x="2.9518%" y="2559.50"></text></g><g><title>`0x7FFAC12C8047 (1 samples, 0.03%)</title><rect x="2.7018%" y="2533" width="0.0334%" height="15" fill="rgb(248,177,22)" fg:x="81" fg:w="1"/><text x="2.9518%" y="2543.50"></text></g><g><title>boggle.exe`alloc::string::String::pop (9 samples, 0.30%)</title><rect x="2.4683%" y="2901" width="0.3002%" height="15" fill="rgb(215,211,37)" fg:x="74" fg:w="9"/><text x="2.7183%" y="2911.50"></text></g><g><title>boggle.exe`alloc::string::impl$28::deref (9 samples, 0.30%)</title><rect x="2.4683%" y="2885" width="0.3002%" height="15" fill="rgb(241,128,51)" fg:x="74" fg:w="9"/><text x="2.7183%" y="2895.50"></text></g><g><title>boggle.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (9 samples, 0.30%)</title><rect x="2.4683%" y="2869" width="0.3002%" height="15" fill="rgb(227,165,31)" fg:x="74" fg:w="9"/><text x="2.7183%" y="2879.50"></text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::collect_words(boggle::utils::dict_trie::DictTrieNode*, ref$&lt;str$&gt;, alloc::vec::Vec (9 samples, 0.30%)</title><rect x="2.4683%" y="2853" width="0.3002%" height="15" fill="rgb(228,167,24)" fg:x="74" fg:w="9"/><text x="2.7183%" y="2863.50"></text></g><g><title>boggle.exe`std::collections::hash::map::impl$36::into_iter(std::collections::hash::map::HashMap (1 samples, 0.03%)</title><rect x="2.7352%" y="2837" width="0.0334%" height="15" fill="rgb(228,143,12)" fg:x="82" fg:w="1"/><text x="2.9852%" y="2847.50"></text></g><g><title>boggle.exe`std::collections::hash::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;::iter (1 samples, 0.03%)</title><rect x="2.7352%" y="2821" width="0.0334%" height="15" fill="rgb(249,149,8)" fg:x="82" fg:w="1"/><text x="2.9852%" y="2831.50"></text></g><g><title>boggle.exe`hashbrown::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt;::iter (1 samples, 0.03%)</title><rect x="2.7352%" y="2805" width="0.0334%" height="15" fill="rgb(243,35,44)" fg:x="82" fg:w="1"/><text x="2.9852%" y="2815.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTable&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;::iter (1 samples, 0.03%)</title><rect x="2.7352%" y="2789" width="0.0334%" height="15" fill="rgb(246,89,9)" fg:x="82" fg:w="1"/><text x="2.9852%" y="2799.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::iter (1 samples, 0.03%)</title><rect x="2.7352%" y="2773" width="0.0334%" height="15" fill="rgb(233,213,13)" fg:x="82" fg:w="1"/><text x="2.9852%" y="2783.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawIterRange&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::new(unsigned char*, hashbrown::raw::Bucket&lt;tuple$ (1 samples, 0.03%)</title><rect x="2.7352%" y="2757" width="0.0334%" height="15" fill="rgb(233,141,41)" fg:x="82" fg:w="1"/><text x="2.9852%" y="2767.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::load_aligned (1 samples, 0.03%)</title><rect x="2.7352%" y="2741" width="0.0334%" height="15" fill="rgb(239,167,4)" fg:x="82" fg:w="1"/><text x="2.9852%" y="2751.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::match_empty_or_deleted (1 samples, 0.03%)</title><rect x="2.7352%" y="2725" width="0.0334%" height="15" fill="rgb(209,217,16)" fg:x="82" fg:w="1"/><text x="2.9852%" y="2735.50"></text></g><g><title>boggle.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.03%)</title><rect x="2.7352%" y="2709" width="0.0334%" height="15" fill="rgb(219,88,35)" fg:x="82" fg:w="1"/><text x="2.9852%" y="2719.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;::push (1 samples, 0.03%)</title><rect x="2.7685%" y="2901" width="0.0334%" height="15" fill="rgb(220,193,23)" fg:x="83" fg:w="1"/><text x="3.0185%" y="2911.50"></text></g><g><title>boggle.exe`alloc::string::impl$6::clone (1 samples, 0.03%)</title><rect x="2.7685%" y="2885" width="0.0334%" height="15" fill="rgb(230,90,52)" fg:x="83" fg:w="1"/><text x="3.0185%" y="2895.50"></text></g><g><title>boggle.exe`alloc::vec::impl$11::clone (1 samples, 0.03%)</title><rect x="2.7685%" y="2869" width="0.0334%" height="15" fill="rgb(252,106,19)" fg:x="83" fg:w="1"/><text x="3.0185%" y="2879.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec_in (1 samples, 0.03%)</title><rect x="2.7685%" y="2853" width="0.0334%" height="15" fill="rgb(206,74,20)" fg:x="83" fg:w="1"/><text x="3.0185%" y="2863.50"></text></g><g><title>boggle.exe`alloc::slice::hack::to_vec (1 samples, 0.03%)</title><rect x="2.7685%" y="2837" width="0.0334%" height="15" fill="rgb(230,138,44)" fg:x="83" fg:w="1"/><text x="3.0185%" y="2847.50"></text></g><g><title>boggle.exe`alloc::slice::hack::impl$1::to_vec (1 samples, 0.03%)</title><rect x="2.7685%" y="2821" width="0.0334%" height="15" fill="rgb(235,182,43)" fg:x="83" fg:w="1"/><text x="3.0185%" y="2831.50"></text></g><g><title>boggle.exe`alloc::vec::Vec::with_capacity_in (1 samples, 0.03%)</title><rect x="2.7685%" y="2805" width="0.0334%" height="15" fill="rgb(242,16,51)" fg:x="83" fg:w="1"/><text x="3.0185%" y="2815.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec::with_capacity_in (1 samples, 0.03%)</title><rect x="2.7685%" y="2789" width="0.0334%" height="15" fill="rgb(248,9,4)" fg:x="83" fg:w="1"/><text x="3.0185%" y="2799.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner::with_capacity_in (1 samples, 0.03%)</title><rect x="2.7685%" y="2773" width="0.0334%" height="15" fill="rgb(210,31,22)" fg:x="83" fg:w="1"/><text x="3.0185%" y="2783.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner::try_allocate_in (1 samples, 0.03%)</title><rect x="2.7685%" y="2757" width="0.0334%" height="15" fill="rgb(239,54,39)" fg:x="83" fg:w="1"/><text x="3.0185%" y="2767.50"></text></g><g><title>`0x7FFAC12C7776 (1 samples, 0.03%)</title><rect x="2.7685%" y="2741" width="0.0334%" height="15" fill="rgb(230,99,41)" fg:x="83" fg:w="1"/><text x="3.0185%" y="2751.50"></text></g><g><title>`0x7FFAC12C78B4 (1 samples, 0.03%)</title><rect x="2.7685%" y="2725" width="0.0334%" height="15" fill="rgb(253,106,12)" fg:x="83" fg:w="1"/><text x="3.0185%" y="2735.50"></text></g><g><title>`0x7FFAC12C8047 (1 samples, 0.03%)</title><rect x="2.7685%" y="2709" width="0.0334%" height="15" fill="rgb(213,46,41)" fg:x="83" fg:w="1"/><text x="3.0185%" y="2719.50"></text></g><g><title>boggle.exe`alloc::string::String::pop (13 samples, 0.43%)</title><rect x="2.4350%" y="2965" width="0.4336%" height="15" fill="rgb(215,133,35)" fg:x="73" fg:w="13"/><text x="2.6850%" y="2975.50"></text></g><g><title>boggle.exe`alloc::string::impl$28::deref (13 samples, 0.43%)</title><rect x="2.4350%" y="2949" width="0.4336%" height="15" fill="rgb(213,28,5)" fg:x="73" fg:w="13"/><text x="2.6850%" y="2959.50"></text></g><g><title>boggle.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (13 samples, 0.43%)</title><rect x="2.4350%" y="2933" width="0.4336%" height="15" fill="rgb(215,77,49)" fg:x="73" fg:w="13"/><text x="2.6850%" y="2943.50"></text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::collect_words(boggle::utils::dict_trie::DictTrieNode*, ref$&lt;str$&gt;, alloc::vec::Vec (13 samples, 0.43%)</title><rect x="2.4350%" y="2917" width="0.4336%" height="15" fill="rgb(248,100,22)" fg:x="73" fg:w="13"/><text x="2.6850%" y="2927.50"></text></g><g><title>boggle.exe`std::collections::hash::map::impl$36::into_iter(std::collections::hash::map::HashMap (2 samples, 0.07%)</title><rect x="2.8019%" y="2901" width="0.0667%" height="15" fill="rgb(208,67,9)" fg:x="84" fg:w="2"/><text x="3.0519%" y="2911.50"></text></g><g><title>boggle.exe`std::collections::hash::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;::iter (2 samples, 0.07%)</title><rect x="2.8019%" y="2885" width="0.0667%" height="15" fill="rgb(219,133,21)" fg:x="84" fg:w="2"/><text x="3.0519%" y="2895.50"></text></g><g><title>boggle.exe`hashbrown::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt;::iter (2 samples, 0.07%)</title><rect x="2.8019%" y="2869" width="0.0667%" height="15" fill="rgb(246,46,29)" fg:x="84" fg:w="2"/><text x="3.0519%" y="2879.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTable&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;::iter (2 samples, 0.07%)</title><rect x="2.8019%" y="2853" width="0.0667%" height="15" fill="rgb(246,185,52)" fg:x="84" fg:w="2"/><text x="3.0519%" y="2863.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::iter (2 samples, 0.07%)</title><rect x="2.8019%" y="2837" width="0.0667%" height="15" fill="rgb(252,136,11)" fg:x="84" fg:w="2"/><text x="3.0519%" y="2847.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawIterRange&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::new(unsigned char*, hashbrown::raw::Bucket&lt;tuple$ (2 samples, 0.07%)</title><rect x="2.8019%" y="2821" width="0.0667%" height="15" fill="rgb(219,138,53)" fg:x="84" fg:w="2"/><text x="3.0519%" y="2831.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::load_aligned (2 samples, 0.07%)</title><rect x="2.8019%" y="2805" width="0.0667%" height="15" fill="rgb(211,51,23)" fg:x="84" fg:w="2"/><text x="3.0519%" y="2815.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::match_empty_or_deleted (2 samples, 0.07%)</title><rect x="2.8019%" y="2789" width="0.0667%" height="15" fill="rgb(247,221,28)" fg:x="84" fg:w="2"/><text x="3.0519%" y="2799.50"></text></g><g><title>boggle.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (2 samples, 0.07%)</title><rect x="2.8019%" y="2773" width="0.0667%" height="15" fill="rgb(251,222,45)" fg:x="84" fg:w="2"/><text x="3.0519%" y="2783.50"></text></g><g><title>`0x7FFAC12D5DAA (1 samples, 0.03%)</title><rect x="2.8686%" y="2709" width="0.0334%" height="15" fill="rgb(217,162,53)" fg:x="86" fg:w="1"/><text x="3.1186%" y="2719.50"></text></g><g><title>`0x7FFAC12C7776 (1 samples, 0.03%)</title><rect x="2.8686%" y="2693" width="0.0334%" height="15" fill="rgb(229,93,14)" fg:x="86" fg:w="1"/><text x="3.1186%" y="2703.50"></text></g><g><title>`0x7FFAC12C78B4 (1 samples, 0.03%)</title><rect x="2.8686%" y="2677" width="0.0334%" height="15" fill="rgb(209,67,49)" fg:x="86" fg:w="1"/><text x="3.1186%" y="2687.50"></text></g><g><title>`0x7FFAC12C818E (1 samples, 0.03%)</title><rect x="2.8686%" y="2661" width="0.0334%" height="15" fill="rgb(213,87,29)" fg:x="86" fg:w="1"/><text x="3.1186%" y="2671.50"></text></g><g><title>`0x7FFAC12D54B5 (2 samples, 0.07%)</title><rect x="2.8686%" y="2725" width="0.0667%" height="15" fill="rgb(205,151,52)" fg:x="86" fg:w="2"/><text x="3.1186%" y="2735.50"></text></g><g><title>`0x7FFAC12D5E0B (1 samples, 0.03%)</title><rect x="2.9019%" y="2709" width="0.0334%" height="15" fill="rgb(253,215,39)" fg:x="87" fg:w="1"/><text x="3.1519%" y="2719.50"></text></g><g><title>`0x7FFAC12D2451 (1 samples, 0.03%)</title><rect x="2.9019%" y="2693" width="0.0334%" height="15" fill="rgb(221,220,41)" fg:x="87" fg:w="1"/><text x="3.1519%" y="2703.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::push (3 samples, 0.10%)</title><rect x="2.8686%" y="2949" width="0.1001%" height="15" fill="rgb(218,133,21)" fg:x="86" fg:w="3"/><text x="3.1186%" y="2959.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_mut_ptr (3 samples, 0.10%)</title><rect x="2.8686%" y="2933" width="0.1001%" height="15" fill="rgb(221,193,43)" fg:x="86" fg:w="3"/><text x="3.1186%" y="2943.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::ptr (3 samples, 0.10%)</title><rect x="2.8686%" y="2917" width="0.1001%" height="15" fill="rgb(240,128,52)" fg:x="86" fg:w="3"/><text x="3.1186%" y="2927.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (3 samples, 0.10%)</title><rect x="2.8686%" y="2901" width="0.1001%" height="15" fill="rgb(253,114,12)" fg:x="86" fg:w="3"/><text x="3.1186%" y="2911.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (3 samples, 0.10%)</title><rect x="2.8686%" y="2885" width="0.1001%" height="15" fill="rgb(215,223,47)" fg:x="86" fg:w="3"/><text x="3.1186%" y="2895.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::grow_one&lt;u8,alloc::alloc::Global&gt; (3 samples, 0.10%)</title><rect x="2.8686%" y="2869" width="0.1001%" height="15" fill="rgb(248,225,23)" fg:x="86" fg:w="3"/><text x="3.1186%" y="2879.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_one (3 samples, 0.10%)</title><rect x="2.8686%" y="2853" width="0.1001%" height="15" fill="rgb(250,108,0)" fg:x="86" fg:w="3"/><text x="3.1186%" y="2863.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (3 samples, 0.10%)</title><rect x="2.8686%" y="2837" width="0.1001%" height="15" fill="rgb(228,208,7)" fg:x="86" fg:w="3"/><text x="3.1186%" y="2847.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (3 samples, 0.10%)</title><rect x="2.8686%" y="2821" width="0.1001%" height="15" fill="rgb(244,45,10)" fg:x="86" fg:w="3"/><text x="3.1186%" y="2831.50"></text></g><g><title>boggle.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (3 samples, 0.10%)</title><rect x="2.8686%" y="2805" width="0.1001%" height="15" fill="rgb(207,125,25)" fg:x="86" fg:w="3"/><text x="3.1186%" y="2815.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (3 samples, 0.10%)</title><rect x="2.8686%" y="2789" width="0.1001%" height="15" fill="rgb(210,195,18)" fg:x="86" fg:w="3"/><text x="3.1186%" y="2799.50"></text></g><g><title>boggle.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (3 samples, 0.10%)</title><rect x="2.8686%" y="2773" width="0.1001%" height="15" fill="rgb(249,80,12)" fg:x="86" fg:w="3"/><text x="3.1186%" y="2783.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (3 samples, 0.10%)</title><rect x="2.8686%" y="2757" width="0.1001%" height="15" fill="rgb(221,65,9)" fg:x="86" fg:w="3"/><text x="3.1186%" y="2767.50"></text></g><g><title>`0x7FFAC12D5376 (3 samples, 0.10%)</title><rect x="2.8686%" y="2741" width="0.1001%" height="15" fill="rgb(235,49,36)" fg:x="86" fg:w="3"/><text x="3.1186%" y="2751.50"></text></g><g><title>`0x7FFAC12D54CF (1 samples, 0.03%)</title><rect x="2.9353%" y="2725" width="0.0334%" height="15" fill="rgb(225,32,20)" fg:x="88" fg:w="1"/><text x="3.1853%" y="2735.50"></text></g><g><title>boggle.exe`alloc::string::String::push (5 samples, 0.17%)</title><rect x="2.8686%" y="2965" width="0.1668%" height="15" fill="rgb(215,141,46)" fg:x="86" fg:w="5"/><text x="3.1186%" y="2975.50"></text></g><g><title>boggle.exe`core::char::methods::impl$0::len_utf8 (2 samples, 0.07%)</title><rect x="2.9686%" y="2949" width="0.0667%" height="15" fill="rgb(250,160,47)" fg:x="89" fg:w="2"/><text x="3.2186%" y="2959.50"></text></g><g><title>boggle.exe`core::char::methods::len_utf8 (2 samples, 0.07%)</title><rect x="2.9686%" y="2933" width="0.0667%" height="15" fill="rgb(216,222,40)" fg:x="89" fg:w="2"/><text x="3.2186%" y="2943.50"></text></g><g><title>`0x7FFAC12C7FF0 (1 samples, 0.03%)</title><rect x="3.0687%" y="2773" width="0.0334%" height="15" fill="rgb(234,217,39)" fg:x="92" fg:w="1"/><text x="3.3187%" y="2783.50"></text></g><g><title>`0x7FFAC12C8047 (2 samples, 0.07%)</title><rect x="3.1021%" y="2773" width="0.0667%" height="15" fill="rgb(207,178,40)" fg:x="93" fg:w="2"/><text x="3.3521%" y="2783.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;::push (5 samples, 0.17%)</title><rect x="3.0354%" y="2965" width="0.1668%" height="15" fill="rgb(221,136,13)" fg:x="91" fg:w="5"/><text x="3.2854%" y="2975.50"></text></g><g><title>boggle.exe`alloc::string::impl$6::clone (5 samples, 0.17%)</title><rect x="3.0354%" y="2949" width="0.1668%" height="15" fill="rgb(249,199,10)" fg:x="91" fg:w="5"/><text x="3.2854%" y="2959.50"></text></g><g><title>boggle.exe`alloc::vec::impl$11::clone (4 samples, 0.13%)</title><rect x="3.0687%" y="2933" width="0.1334%" height="15" fill="rgb(249,222,13)" fg:x="92" fg:w="4"/><text x="3.3187%" y="2943.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec_in (4 samples, 0.13%)</title><rect x="3.0687%" y="2917" width="0.1334%" height="15" fill="rgb(244,185,38)" fg:x="92" fg:w="4"/><text x="3.3187%" y="2927.50"></text></g><g><title>boggle.exe`alloc::slice::hack::to_vec (4 samples, 0.13%)</title><rect x="3.0687%" y="2901" width="0.1334%" height="15" fill="rgb(236,202,9)" fg:x="92" fg:w="4"/><text x="3.3187%" y="2911.50"></text></g><g><title>boggle.exe`alloc::slice::hack::impl$1::to_vec (4 samples, 0.13%)</title><rect x="3.0687%" y="2885" width="0.1334%" height="15" fill="rgb(250,229,37)" fg:x="92" fg:w="4"/><text x="3.3187%" y="2895.50"></text></g><g><title>boggle.exe`alloc::vec::Vec::with_capacity_in (4 samples, 0.13%)</title><rect x="3.0687%" y="2869" width="0.1334%" height="15" fill="rgb(206,174,23)" fg:x="92" fg:w="4"/><text x="3.3187%" y="2879.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec::with_capacity_in (4 samples, 0.13%)</title><rect x="3.0687%" y="2853" width="0.1334%" height="15" fill="rgb(211,33,43)" fg:x="92" fg:w="4"/><text x="3.3187%" y="2863.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner::with_capacity_in (4 samples, 0.13%)</title><rect x="3.0687%" y="2837" width="0.1334%" height="15" fill="rgb(245,58,50)" fg:x="92" fg:w="4"/><text x="3.3187%" y="2847.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner::try_allocate_in (4 samples, 0.13%)</title><rect x="3.0687%" y="2821" width="0.1334%" height="15" fill="rgb(244,68,36)" fg:x="92" fg:w="4"/><text x="3.3187%" y="2831.50"></text></g><g><title>`0x7FFAC12C7776 (4 samples, 0.13%)</title><rect x="3.0687%" y="2805" width="0.1334%" height="15" fill="rgb(232,229,15)" fg:x="92" fg:w="4"/><text x="3.3187%" y="2815.50"></text></g><g><title>`0x7FFAC12C78B4 (4 samples, 0.13%)</title><rect x="3.0687%" y="2789" width="0.1334%" height="15" fill="rgb(254,30,23)" fg:x="92" fg:w="4"/><text x="3.3187%" y="2799.50"></text></g><g><title>`0x7FFAC12C8A44 (1 samples, 0.03%)</title><rect x="3.1688%" y="2773" width="0.0334%" height="15" fill="rgb(235,160,14)" fg:x="95" fg:w="1"/><text x="3.4188%" y="2783.50"></text></g><g><title>`0x7FFAC137133D (1 samples, 0.03%)</title><rect x="3.1688%" y="2757" width="0.0334%" height="15" fill="rgb(212,155,44)" fg:x="95" fg:w="1"/><text x="3.4188%" y="2767.50"></text></g><g><title>boggle.exe`std::collections::hash::map::impl$36::into_iter(std::collections::hash::map::HashMap (1 samples, 0.03%)</title><rect x="3.2021%" y="2965" width="0.0334%" height="15" fill="rgb(226,2,50)" fg:x="96" fg:w="1"/><text x="3.4521%" y="2975.50"></text></g><g><title>boggle.exe`std::collections::hash::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;::iter (1 samples, 0.03%)</title><rect x="3.2021%" y="2949" width="0.0334%" height="15" fill="rgb(234,177,6)" fg:x="96" fg:w="1"/><text x="3.4521%" y="2959.50"></text></g><g><title>boggle.exe`hashbrown::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt;::iter (1 samples, 0.03%)</title><rect x="3.2021%" y="2933" width="0.0334%" height="15" fill="rgb(217,24,9)" fg:x="96" fg:w="1"/><text x="3.4521%" y="2943.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTable&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;::iter (1 samples, 0.03%)</title><rect x="3.2021%" y="2917" width="0.0334%" height="15" fill="rgb(220,13,46)" fg:x="96" fg:w="1"/><text x="3.4521%" y="2927.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::iter (1 samples, 0.03%)</title><rect x="3.2021%" y="2901" width="0.0334%" height="15" fill="rgb(239,221,27)" fg:x="96" fg:w="1"/><text x="3.4521%" y="2911.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawIterRange&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::new(unsigned char*, hashbrown::raw::Bucket&lt;tuple$ (1 samples, 0.03%)</title><rect x="3.2021%" y="2885" width="0.0334%" height="15" fill="rgb(222,198,25)" fg:x="96" fg:w="1"/><text x="3.4521%" y="2895.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::load_aligned (1 samples, 0.03%)</title><rect x="3.2021%" y="2869" width="0.0334%" height="15" fill="rgb(211,99,13)" fg:x="96" fg:w="1"/><text x="3.4521%" y="2879.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::match_empty_or_deleted (1 samples, 0.03%)</title><rect x="3.2021%" y="2853" width="0.0334%" height="15" fill="rgb(232,111,31)" fg:x="96" fg:w="1"/><text x="3.4521%" y="2863.50"></text></g><g><title>boggle.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.03%)</title><rect x="3.2021%" y="2837" width="0.0334%" height="15" fill="rgb(245,82,37)" fg:x="96" fg:w="1"/><text x="3.4521%" y="2847.50"></text></g><g><title>boggle.exe`alloc::string::String::pop (26 samples, 0.87%)</title><rect x="2.4350%" y="3029" width="0.8672%" height="15" fill="rgb(227,149,46)" fg:x="73" fg:w="26"/><text x="2.6850%" y="3039.50"></text></g><g><title>boggle.exe`alloc::string::impl$28::deref (26 samples, 0.87%)</title><rect x="2.4350%" y="3013" width="0.8672%" height="15" fill="rgb(218,36,50)" fg:x="73" fg:w="26"/><text x="2.6850%" y="3023.50"></text></g><g><title>boggle.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (26 samples, 0.87%)</title><rect x="2.4350%" y="2997" width="0.8672%" height="15" fill="rgb(226,80,48)" fg:x="73" fg:w="26"/><text x="2.6850%" y="3007.50"></text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::collect_words(boggle::utils::dict_trie::DictTrieNode*, ref$&lt;str$&gt;, alloc::vec::Vec (26 samples, 0.87%)</title><rect x="2.4350%" y="2981" width="0.8672%" height="15" fill="rgb(238,224,15)" fg:x="73" fg:w="26"/><text x="2.6850%" y="2991.50"></text></g><g><title>boggle.exe`std::collections::hash::map::impl$39::next(std::collections::hash::map::Iter (2 samples, 0.07%)</title><rect x="3.2355%" y="2965" width="0.0667%" height="15" fill="rgb(241,136,10)" fg:x="97" fg:w="2"/><text x="3.4855%" y="2975.50"></text></g><g><title>boggle.exe`hashbrown::map::impl$60::next(hashbrown::map::Iter (2 samples, 0.07%)</title><rect x="3.2355%" y="2949" width="0.0667%" height="15" fill="rgb(208,32,45)" fg:x="97" fg:w="2"/><text x="3.4855%" y="2959.50"></text></g><g><title>boggle.exe`hashbrown::raw::impl$28::next(hashbrown::raw::RawIter&lt;tuple$ (2 samples, 0.07%)</title><rect x="3.2355%" y="2933" width="0.0667%" height="15" fill="rgb(207,135,9)" fg:x="97" fg:w="2"/><text x="3.4855%" y="2943.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawIterRange&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::next_impl (2 samples, 0.07%)</title><rect x="3.2355%" y="2917" width="0.0667%" height="15" fill="rgb(206,86,44)" fg:x="97" fg:w="2"/><text x="3.4855%" y="2927.50"></text></g><g><title>boggle.exe`hashbrown::raw::bitmask::impl$3::next (2 samples, 0.07%)</title><rect x="3.2355%" y="2901" width="0.0667%" height="15" fill="rgb(245,177,15)" fg:x="97" fg:w="2"/><text x="3.4855%" y="2911.50"></text></g><g><title>boggle.exe`hashbrown::raw::bitmask::BitMask::remove_lowest_bit (1 samples, 0.03%)</title><rect x="3.2688%" y="2885" width="0.0334%" height="15" fill="rgb(206,64,50)" fg:x="98" fg:w="1"/><text x="3.5188%" y="2895.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::push (1 samples, 0.03%)</title><rect x="3.3022%" y="3013" width="0.0334%" height="15" fill="rgb(234,36,40)" fg:x="99" fg:w="1"/><text x="3.5522%" y="3023.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_mut_ptr (1 samples, 0.03%)</title><rect x="3.3022%" y="2997" width="0.0334%" height="15" fill="rgb(213,64,8)" fg:x="99" fg:w="1"/><text x="3.5522%" y="3007.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::ptr (1 samples, 0.03%)</title><rect x="3.3022%" y="2981" width="0.0334%" height="15" fill="rgb(210,75,36)" fg:x="99" fg:w="1"/><text x="3.5522%" y="2991.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (1 samples, 0.03%)</title><rect x="3.3022%" y="2965" width="0.0334%" height="15" fill="rgb(229,88,21)" fg:x="99" fg:w="1"/><text x="3.5522%" y="2975.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (1 samples, 0.03%)</title><rect x="3.3022%" y="2949" width="0.0334%" height="15" fill="rgb(252,204,47)" fg:x="99" fg:w="1"/><text x="3.5522%" y="2959.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::grow_one&lt;u8,alloc::alloc::Global&gt; (1 samples, 0.03%)</title><rect x="3.3022%" y="2933" width="0.0334%" height="15" fill="rgb(208,77,27)" fg:x="99" fg:w="1"/><text x="3.5522%" y="2943.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_one (1 samples, 0.03%)</title><rect x="3.3022%" y="2917" width="0.0334%" height="15" fill="rgb(221,76,26)" fg:x="99" fg:w="1"/><text x="3.5522%" y="2927.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (1 samples, 0.03%)</title><rect x="3.3022%" y="2901" width="0.0334%" height="15" fill="rgb(225,139,18)" fg:x="99" fg:w="1"/><text x="3.5522%" y="2911.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (1 samples, 0.03%)</title><rect x="3.3022%" y="2885" width="0.0334%" height="15" fill="rgb(230,137,11)" fg:x="99" fg:w="1"/><text x="3.5522%" y="2895.50"></text></g><g><title>boggle.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="3.3022%" y="2869" width="0.0334%" height="15" fill="rgb(212,28,1)" fg:x="99" fg:w="1"/><text x="3.5522%" y="2879.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="3.3022%" y="2853" width="0.0334%" height="15" fill="rgb(248,164,17)" fg:x="99" fg:w="1"/><text x="3.5522%" y="2863.50"></text></g><g><title>boggle.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="3.3022%" y="2837" width="0.0334%" height="15" fill="rgb(222,171,42)" fg:x="99" fg:w="1"/><text x="3.5522%" y="2847.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="3.3022%" y="2821" width="0.0334%" height="15" fill="rgb(243,84,45)" fg:x="99" fg:w="1"/><text x="3.5522%" y="2831.50"></text></g><g><title>`0x7FFAC12D5376 (1 samples, 0.03%)</title><rect x="3.3022%" y="2805" width="0.0334%" height="15" fill="rgb(252,49,23)" fg:x="99" fg:w="1"/><text x="3.5522%" y="2815.50"></text></g><g><title>`0x7FFAC12D54B5 (1 samples, 0.03%)</title><rect x="3.3022%" y="2789" width="0.0334%" height="15" fill="rgb(215,19,7)" fg:x="99" fg:w="1"/><text x="3.5522%" y="2799.50"></text></g><g><title>`0x7FFAC12D5DAA (1 samples, 0.03%)</title><rect x="3.3022%" y="2773" width="0.0334%" height="15" fill="rgb(238,81,41)" fg:x="99" fg:w="1"/><text x="3.5522%" y="2783.50"></text></g><g><title>`0x7FFAC12C7776 (1 samples, 0.03%)</title><rect x="3.3022%" y="2757" width="0.0334%" height="15" fill="rgb(210,199,37)" fg:x="99" fg:w="1"/><text x="3.5522%" y="2767.50"></text></g><g><title>`0x7FFAC12C78B4 (1 samples, 0.03%)</title><rect x="3.3022%" y="2741" width="0.0334%" height="15" fill="rgb(244,192,49)" fg:x="99" fg:w="1"/><text x="3.5522%" y="2751.50"></text></g><g><title>`0x7FFAC12C8060 (1 samples, 0.03%)</title><rect x="3.3022%" y="2725" width="0.0334%" height="15" fill="rgb(226,211,11)" fg:x="99" fg:w="1"/><text x="3.5522%" y="2735.50"></text></g><g><title>boggle.exe`alloc::string::String::push (6 samples, 0.20%)</title><rect x="3.3022%" y="3029" width="0.2001%" height="15" fill="rgb(236,162,54)" fg:x="99" fg:w="6"/><text x="3.5522%" y="3039.50"></text></g><g><title>boggle.exe`core::char::methods::impl$0::len_utf8 (5 samples, 0.17%)</title><rect x="3.3356%" y="3013" width="0.1668%" height="15" fill="rgb(220,229,9)" fg:x="100" fg:w="5"/><text x="3.5856%" y="3023.50"></text></g><g><title>boggle.exe`core::char::methods::len_utf8 (5 samples, 0.17%)</title><rect x="3.3356%" y="2997" width="0.1668%" height="15" fill="rgb(250,87,22)" fg:x="100" fg:w="5"/><text x="3.5856%" y="3007.50"></text></g><g><title>`0x7FFAC12C801A (1 samples, 0.03%)</title><rect x="3.5023%" y="2805" width="0.0334%" height="15" fill="rgb(239,43,17)" fg:x="105" fg:w="1"/><text x="3.7523%" y="2815.50"></text></g><g><title>`0x7FFAC12C7776 (2 samples, 0.07%)</title><rect x="3.5023%" y="2837" width="0.0667%" height="15" fill="rgb(231,177,25)" fg:x="105" fg:w="2"/><text x="3.7523%" y="2847.50"></text></g><g><title>`0x7FFAC12C78B4 (2 samples, 0.07%)</title><rect x="3.5023%" y="2821" width="0.0667%" height="15" fill="rgb(219,179,1)" fg:x="105" fg:w="2"/><text x="3.7523%" y="2831.50"></text></g><g><title>`0x7FFAC12C8351 (1 samples, 0.03%)</title><rect x="3.5357%" y="2805" width="0.0334%" height="15" fill="rgb(238,219,53)" fg:x="106" fg:w="1"/><text x="3.7857%" y="2815.50"></text></g><g><title>boggle.exe`alloc::string::impl$102::to_string(ref$ (3 samples, 0.10%)</title><rect x="3.5023%" y="3029" width="0.1001%" height="15" fill="rgb(232,167,36)" fg:x="105" fg:w="3"/><text x="3.7523%" y="3039.50"></text></g><g><title>boggle.exe`alloc::string::impl$44::from(ref$ (3 samples, 0.10%)</title><rect x="3.5023%" y="3013" width="0.1001%" height="15" fill="rgb(244,19,51)" fg:x="105" fg:w="3"/><text x="3.7523%" y="3023.50"></text></g><g><title>boggle.exe`alloc::str::impl$4::to_owned(ref$ (3 samples, 0.10%)</title><rect x="3.5023%" y="2997" width="0.1001%" height="15" fill="rgb(224,6,22)" fg:x="105" fg:w="3"/><text x="3.7523%" y="3007.50"></text></g><g><title>boggle.exe`alloc::slice::impl$9::to_owned(ref$&lt;slice2$ (3 samples, 0.10%)</title><rect x="3.5023%" y="2981" width="0.1001%" height="15" fill="rgb(224,145,5)" fg:x="105" fg:w="3"/><text x="3.7523%" y="2991.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec(ref$&lt;slice2$ (3 samples, 0.10%)</title><rect x="3.5023%" y="2965" width="0.1001%" height="15" fill="rgb(234,130,49)" fg:x="105" fg:w="3"/><text x="3.7523%" y="2975.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec_in(ref$&lt;slice2$ (3 samples, 0.10%)</title><rect x="3.5023%" y="2949" width="0.1001%" height="15" fill="rgb(254,6,2)" fg:x="105" fg:w="3"/><text x="3.7523%" y="2959.50"></text></g><g><title>boggle.exe`alloc::slice::hack::to_vec(ref$&lt;slice2$ (3 samples, 0.10%)</title><rect x="3.5023%" y="2933" width="0.1001%" height="15" fill="rgb(208,96,46)" fg:x="105" fg:w="3"/><text x="3.7523%" y="2943.50"></text></g><g><title>boggle.exe`alloc::slice::hack::impl$1::to_vec(ref$&lt;slice2$ (3 samples, 0.10%)</title><rect x="3.5023%" y="2917" width="0.1001%" height="15" fill="rgb(239,3,39)" fg:x="105" fg:w="3"/><text x="3.7523%" y="2927.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (3 samples, 0.10%)</title><rect x="3.5023%" y="2901" width="0.1001%" height="15" fill="rgb(233,210,1)" fg:x="105" fg:w="3"/><text x="3.7523%" y="2911.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (3 samples, 0.10%)</title><rect x="3.5023%" y="2885" width="0.1001%" height="15" fill="rgb(244,137,37)" fg:x="105" fg:w="3"/><text x="3.7523%" y="2895.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (3 samples, 0.10%)</title><rect x="3.5023%" y="2869" width="0.1001%" height="15" fill="rgb(240,136,2)" fg:x="105" fg:w="3"/><text x="3.7523%" y="2879.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (3 samples, 0.10%)</title><rect x="3.5023%" y="2853" width="0.1001%" height="15" fill="rgb(239,18,37)" fg:x="105" fg:w="3"/><text x="3.7523%" y="2863.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::allocate (1 samples, 0.03%)</title><rect x="3.5690%" y="2837" width="0.0334%" height="15" fill="rgb(218,185,22)" fg:x="107" fg:w="1"/><text x="3.8190%" y="2847.50"></text></g><g><title>boggle.exe`alloc::alloc::Global::alloc_impl (1 samples, 0.03%)</title><rect x="3.5690%" y="2821" width="0.0334%" height="15" fill="rgb(225,218,4)" fg:x="107" fg:w="1"/><text x="3.8190%" y="2831.50"></text></g><g><title>boggle.exe`alloc::alloc::alloc (1 samples, 0.03%)</title><rect x="3.5690%" y="2805" width="0.0334%" height="15" fill="rgb(230,182,32)" fg:x="107" fg:w="1"/><text x="3.8190%" y="2815.50"></text></g><g><title>boggle.exe`core::ptr::read_volatile (1 samples, 0.03%)</title><rect x="3.5690%" y="2789" width="0.0334%" height="15" fill="rgb(242,56,43)" fg:x="107" fg:w="1"/><text x="3.8190%" y="2799.50"></text></g><g><title>boggle.exe`alloc::string::impl$6::clone (1 samples, 0.03%)</title><rect x="3.6024%" y="3013" width="0.0334%" height="15" fill="rgb(233,99,24)" fg:x="108" fg:w="1"/><text x="3.8524%" y="3023.50"></text></g><g><title>boggle.exe`alloc::vec::impl$11::clone (1 samples, 0.03%)</title><rect x="3.6024%" y="2997" width="0.0334%" height="15" fill="rgb(234,209,42)" fg:x="108" fg:w="1"/><text x="3.8524%" y="3007.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec_in (1 samples, 0.03%)</title><rect x="3.6024%" y="2981" width="0.0334%" height="15" fill="rgb(227,7,12)" fg:x="108" fg:w="1"/><text x="3.8524%" y="2991.50"></text></g><g><title>boggle.exe`alloc::slice::hack::to_vec (1 samples, 0.03%)</title><rect x="3.6024%" y="2965" width="0.0334%" height="15" fill="rgb(245,203,43)" fg:x="108" fg:w="1"/><text x="3.8524%" y="2975.50"></text></g><g><title>boggle.exe`alloc::slice::hack::impl$1::to_vec (1 samples, 0.03%)</title><rect x="3.6024%" y="2949" width="0.0334%" height="15" fill="rgb(238,205,33)" fg:x="108" fg:w="1"/><text x="3.8524%" y="2959.50"></text></g><g><title>boggle.exe`alloc::vec::Vec::with_capacity_in (1 samples, 0.03%)</title><rect x="3.6024%" y="2933" width="0.0334%" height="15" fill="rgb(231,56,7)" fg:x="108" fg:w="1"/><text x="3.8524%" y="2943.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec::with_capacity_in (1 samples, 0.03%)</title><rect x="3.6024%" y="2917" width="0.0334%" height="15" fill="rgb(244,186,29)" fg:x="108" fg:w="1"/><text x="3.8524%" y="2927.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner::with_capacity_in (1 samples, 0.03%)</title><rect x="3.6024%" y="2901" width="0.0334%" height="15" fill="rgb(234,111,31)" fg:x="108" fg:w="1"/><text x="3.8524%" y="2911.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner::try_allocate_in (1 samples, 0.03%)</title><rect x="3.6024%" y="2885" width="0.0334%" height="15" fill="rgb(241,149,10)" fg:x="108" fg:w="1"/><text x="3.8524%" y="2895.50"></text></g><g><title>`0x7FFAC12C7776 (1 samples, 0.03%)</title><rect x="3.6024%" y="2869" width="0.0334%" height="15" fill="rgb(249,206,44)" fg:x="108" fg:w="1"/><text x="3.8524%" y="2879.50"></text></g><g><title>`0x7FFAC12C78B4 (1 samples, 0.03%)</title><rect x="3.6024%" y="2853" width="0.0334%" height="15" fill="rgb(251,153,30)" fg:x="108" fg:w="1"/><text x="3.8524%" y="2863.50"></text></g><g><title>`0x7FFAC12C8561 (1 samples, 0.03%)</title><rect x="3.6024%" y="2837" width="0.0334%" height="15" fill="rgb(239,152,38)" fg:x="108" fg:w="1"/><text x="3.8524%" y="2847.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;::push (2 samples, 0.07%)</title><rect x="3.6024%" y="3029" width="0.0667%" height="15" fill="rgb(249,139,47)" fg:x="108" fg:w="2"/><text x="3.8524%" y="3039.50"></text></g><g><title>boggle.exe`core::ptr::write (1 samples, 0.03%)</title><rect x="3.6358%" y="3013" width="0.0334%" height="15" fill="rgb(244,64,35)" fg:x="109" fg:w="1"/><text x="3.8858%" y="3023.50"></text></g><g><title>boggle.exe`alloc::string::String::pop (42 samples, 1.40%)</title><rect x="2.4016%" y="3093" width="1.4009%" height="15" fill="rgb(216,46,15)" fg:x="72" fg:w="42"/><text x="2.6516%" y="3103.50"></text></g><g><title>boggle.exe`alloc::string::impl$28::deref (42 samples, 1.40%)</title><rect x="2.4016%" y="3077" width="1.4009%" height="15" fill="rgb(250,74,19)" fg:x="72" fg:w="42"/><text x="2.6516%" y="3087.50"></text></g><g><title>boggle.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (42 samples, 1.40%)</title><rect x="2.4016%" y="3061" width="1.4009%" height="15" fill="rgb(249,42,33)" fg:x="72" fg:w="42"/><text x="2.6516%" y="3071.50"></text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::collect_words(boggle::utils::dict_trie::DictTrieNode*, ref$&lt;str$&gt;, alloc::vec::Vec (42 samples, 1.40%)</title><rect x="2.4016%" y="3045" width="1.4009%" height="15" fill="rgb(242,149,17)" fg:x="72" fg:w="42"/><text x="2.6516%" y="3055.50"></text></g><g><title>boggle.exe`std::collections::hash::map::impl$36::into_iter(std::collections::hash::map::HashMap (4 samples, 0.13%)</title><rect x="3.6691%" y="3029" width="0.1334%" height="15" fill="rgb(244,29,21)" fg:x="110" fg:w="4"/><text x="3.9191%" y="3039.50"></text></g><g><title>boggle.exe`std::collections::hash::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;::iter (4 samples, 0.13%)</title><rect x="3.6691%" y="3013" width="0.1334%" height="15" fill="rgb(220,130,37)" fg:x="110" fg:w="4"/><text x="3.9191%" y="3023.50"></text></g><g><title>boggle.exe`hashbrown::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt;::iter (4 samples, 0.13%)</title><rect x="3.6691%" y="2997" width="0.1334%" height="15" fill="rgb(211,67,2)" fg:x="110" fg:w="4"/><text x="3.9191%" y="3007.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTable&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;::iter (4 samples, 0.13%)</title><rect x="3.6691%" y="2981" width="0.1334%" height="15" fill="rgb(235,68,52)" fg:x="110" fg:w="4"/><text x="3.9191%" y="2991.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::iter (4 samples, 0.13%)</title><rect x="3.6691%" y="2965" width="0.1334%" height="15" fill="rgb(246,142,3)" fg:x="110" fg:w="4"/><text x="3.9191%" y="2975.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawIterRange&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::new(unsigned char*, hashbrown::raw::Bucket&lt;tuple$ (4 samples, 0.13%)</title><rect x="3.6691%" y="2949" width="0.1334%" height="15" fill="rgb(241,25,7)" fg:x="110" fg:w="4"/><text x="3.9191%" y="2959.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::load_aligned (4 samples, 0.13%)</title><rect x="3.6691%" y="2933" width="0.1334%" height="15" fill="rgb(242,119,39)" fg:x="110" fg:w="4"/><text x="3.9191%" y="2943.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::match_empty_or_deleted (4 samples, 0.13%)</title><rect x="3.6691%" y="2917" width="0.1334%" height="15" fill="rgb(241,98,45)" fg:x="110" fg:w="4"/><text x="3.9191%" y="2927.50"></text></g><g><title>boggle.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (4 samples, 0.13%)</title><rect x="3.6691%" y="2901" width="0.1334%" height="15" fill="rgb(254,28,30)" fg:x="110" fg:w="4"/><text x="3.9191%" y="2911.50"></text></g><g><title>`0x7FFAC12D5C80 (1 samples, 0.03%)</title><rect x="3.8025%" y="2837" width="0.0334%" height="15" fill="rgb(241,142,54)" fg:x="114" fg:w="1"/><text x="4.0525%" y="2847.50"></text></g><g><title>`0x7FFAC12C7EDC (2 samples, 0.07%)</title><rect x="3.8359%" y="2789" width="0.0667%" height="15" fill="rgb(222,85,15)" fg:x="115" fg:w="2"/><text x="4.0859%" y="2799.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::push (4 samples, 0.13%)</title><rect x="3.8025%" y="3077" width="0.1334%" height="15" fill="rgb(210,85,47)" fg:x="114" fg:w="4"/><text x="4.0525%" y="3087.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_mut_ptr (4 samples, 0.13%)</title><rect x="3.8025%" y="3061" width="0.1334%" height="15" fill="rgb(224,206,25)" fg:x="114" fg:w="4"/><text x="4.0525%" y="3071.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::ptr (4 samples, 0.13%)</title><rect x="3.8025%" y="3045" width="0.1334%" height="15" fill="rgb(243,201,19)" fg:x="114" fg:w="4"/><text x="4.0525%" y="3055.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (4 samples, 0.13%)</title><rect x="3.8025%" y="3029" width="0.1334%" height="15" fill="rgb(236,59,4)" fg:x="114" fg:w="4"/><text x="4.0525%" y="3039.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (4 samples, 0.13%)</title><rect x="3.8025%" y="3013" width="0.1334%" height="15" fill="rgb(254,179,45)" fg:x="114" fg:w="4"/><text x="4.0525%" y="3023.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::grow_one&lt;u8,alloc::alloc::Global&gt; (4 samples, 0.13%)</title><rect x="3.8025%" y="2997" width="0.1334%" height="15" fill="rgb(226,14,10)" fg:x="114" fg:w="4"/><text x="4.0525%" y="3007.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_one (4 samples, 0.13%)</title><rect x="3.8025%" y="2981" width="0.1334%" height="15" fill="rgb(244,27,41)" fg:x="114" fg:w="4"/><text x="4.0525%" y="2991.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (4 samples, 0.13%)</title><rect x="3.8025%" y="2965" width="0.1334%" height="15" fill="rgb(235,35,32)" fg:x="114" fg:w="4"/><text x="4.0525%" y="2975.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (4 samples, 0.13%)</title><rect x="3.8025%" y="2949" width="0.1334%" height="15" fill="rgb(218,68,31)" fg:x="114" fg:w="4"/><text x="4.0525%" y="2959.50"></text></g><g><title>boggle.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (4 samples, 0.13%)</title><rect x="3.8025%" y="2933" width="0.1334%" height="15" fill="rgb(207,120,37)" fg:x="114" fg:w="4"/><text x="4.0525%" y="2943.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (4 samples, 0.13%)</title><rect x="3.8025%" y="2917" width="0.1334%" height="15" fill="rgb(227,98,0)" fg:x="114" fg:w="4"/><text x="4.0525%" y="2927.50"></text></g><g><title>boggle.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (4 samples, 0.13%)</title><rect x="3.8025%" y="2901" width="0.1334%" height="15" fill="rgb(207,7,3)" fg:x="114" fg:w="4"/><text x="4.0525%" y="2911.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (4 samples, 0.13%)</title><rect x="3.8025%" y="2885" width="0.1334%" height="15" fill="rgb(206,98,19)" fg:x="114" fg:w="4"/><text x="4.0525%" y="2895.50"></text></g><g><title>`0x7FFAC12D5376 (4 samples, 0.13%)</title><rect x="3.8025%" y="2869" width="0.1334%" height="15" fill="rgb(217,5,26)" fg:x="114" fg:w="4"/><text x="4.0525%" y="2879.50"></text></g><g><title>`0x7FFAC12D54B5 (4 samples, 0.13%)</title><rect x="3.8025%" y="2853" width="0.1334%" height="15" fill="rgb(235,190,38)" fg:x="114" fg:w="4"/><text x="4.0525%" y="2863.50"></text></g><g><title>`0x7FFAC12D5DAA (3 samples, 0.10%)</title><rect x="3.8359%" y="2837" width="0.1001%" height="15" fill="rgb(247,86,24)" fg:x="115" fg:w="3"/><text x="4.0859%" y="2847.50"></text></g><g><title>`0x7FFAC12C7776 (3 samples, 0.10%)</title><rect x="3.8359%" y="2821" width="0.1001%" height="15" fill="rgb(205,101,16)" fg:x="115" fg:w="3"/><text x="4.0859%" y="2831.50"></text></g><g><title>`0x7FFAC12C78B4 (3 samples, 0.10%)</title><rect x="3.8359%" y="2805" width="0.1001%" height="15" fill="rgb(246,168,33)" fg:x="115" fg:w="3"/><text x="4.0859%" y="2815.50"></text></g><g><title>`0x7FFAC12C8047 (1 samples, 0.03%)</title><rect x="3.9026%" y="2789" width="0.0334%" height="15" fill="rgb(231,114,1)" fg:x="117" fg:w="1"/><text x="4.1526%" y="2799.50"></text></g><g><title>boggle.exe`alloc::string::String::push (6 samples, 0.20%)</title><rect x="3.8025%" y="3093" width="0.2001%" height="15" fill="rgb(207,184,53)" fg:x="114" fg:w="6"/><text x="4.0525%" y="3103.50"></text></g><g><title>boggle.exe`core::char::methods::impl$0::len_utf8 (2 samples, 0.07%)</title><rect x="3.9360%" y="3077" width="0.0667%" height="15" fill="rgb(224,95,51)" fg:x="118" fg:w="2"/><text x="4.1860%" y="3087.50"></text></g><g><title>boggle.exe`core::char::methods::len_utf8 (2 samples, 0.07%)</title><rect x="3.9360%" y="3061" width="0.0667%" height="15" fill="rgb(212,188,45)" fg:x="118" fg:w="2"/><text x="4.1860%" y="3071.50"></text></g><g><title>`0x7FFAC12C6C9B (1 samples, 0.03%)</title><rect x="4.0027%" y="2901" width="0.0334%" height="15" fill="rgb(223,154,38)" fg:x="120" fg:w="1"/><text x="4.2527%" y="2911.50"></text></g><g><title>`0x7FFAC12C7EDC (1 samples, 0.03%)</title><rect x="4.0360%" y="2869" width="0.0334%" height="15" fill="rgb(251,22,52)" fg:x="121" fg:w="1"/><text x="4.2860%" y="2879.50"></text></g><g><title>`0x7FFAC12C7F57 (1 samples, 0.03%)</title><rect x="4.0694%" y="2869" width="0.0334%" height="15" fill="rgb(229,209,22)" fg:x="122" fg:w="1"/><text x="4.3194%" y="2879.50"></text></g><g><title>`0x7FFAC12C8047 (2 samples, 0.07%)</title><rect x="4.1027%" y="2869" width="0.0667%" height="15" fill="rgb(234,138,34)" fg:x="123" fg:w="2"/><text x="4.3527%" y="2879.50"></text></g><g><title>`0x7FFAC12C7776 (5 samples, 0.17%)</title><rect x="4.0360%" y="2901" width="0.1668%" height="15" fill="rgb(212,95,11)" fg:x="121" fg:w="5"/><text x="4.2860%" y="2911.50"></text></g><g><title>`0x7FFAC12C78B4 (5 samples, 0.17%)</title><rect x="4.0360%" y="2885" width="0.1668%" height="15" fill="rgb(240,179,47)" fg:x="121" fg:w="5"/><text x="4.2860%" y="2895.50"></text></g><g><title>`0x7FFAC12C80F8 (1 samples, 0.03%)</title><rect x="4.1694%" y="2869" width="0.0334%" height="15" fill="rgb(240,163,11)" fg:x="125" fg:w="1"/><text x="4.4194%" y="2879.50"></text></g><g><title>`0x7FFAC12C7795 (1 samples, 0.03%)</title><rect x="4.2028%" y="2901" width="0.0334%" height="15" fill="rgb(236,37,12)" fg:x="126" fg:w="1"/><text x="4.4528%" y="2911.50"></text></g><g><title>boggle.exe`alloc::string::impl$102::to_string(ref$ (8 samples, 0.27%)</title><rect x="4.0027%" y="3093" width="0.2668%" height="15" fill="rgb(232,164,16)" fg:x="120" fg:w="8"/><text x="4.2527%" y="3103.50"></text></g><g><title>boggle.exe`alloc::string::impl$44::from(ref$ (8 samples, 0.27%)</title><rect x="4.0027%" y="3077" width="0.2668%" height="15" fill="rgb(244,205,15)" fg:x="120" fg:w="8"/><text x="4.2527%" y="3087.50"></text></g><g><title>boggle.exe`alloc::str::impl$4::to_owned(ref$ (8 samples, 0.27%)</title><rect x="4.0027%" y="3061" width="0.2668%" height="15" fill="rgb(223,117,47)" fg:x="120" fg:w="8"/><text x="4.2527%" y="3071.50"></text></g><g><title>boggle.exe`alloc::slice::impl$9::to_owned(ref$&lt;slice2$ (8 samples, 0.27%)</title><rect x="4.0027%" y="3045" width="0.2668%" height="15" fill="rgb(244,107,35)" fg:x="120" fg:w="8"/><text x="4.2527%" y="3055.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec(ref$&lt;slice2$ (8 samples, 0.27%)</title><rect x="4.0027%" y="3029" width="0.2668%" height="15" fill="rgb(205,140,8)" fg:x="120" fg:w="8"/><text x="4.2527%" y="3039.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec_in(ref$&lt;slice2$ (8 samples, 0.27%)</title><rect x="4.0027%" y="3013" width="0.2668%" height="15" fill="rgb(228,84,46)" fg:x="120" fg:w="8"/><text x="4.2527%" y="3023.50"></text></g><g><title>boggle.exe`alloc::slice::hack::to_vec(ref$&lt;slice2$ (8 samples, 0.27%)</title><rect x="4.0027%" y="2997" width="0.2668%" height="15" fill="rgb(254,188,9)" fg:x="120" fg:w="8"/><text x="4.2527%" y="3007.50"></text></g><g><title>boggle.exe`alloc::slice::hack::impl$1::to_vec(ref$&lt;slice2$ (8 samples, 0.27%)</title><rect x="4.0027%" y="2981" width="0.2668%" height="15" fill="rgb(206,112,54)" fg:x="120" fg:w="8"/><text x="4.2527%" y="2991.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (8 samples, 0.27%)</title><rect x="4.0027%" y="2965" width="0.2668%" height="15" fill="rgb(216,84,49)" fg:x="120" fg:w="8"/><text x="4.2527%" y="2975.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (8 samples, 0.27%)</title><rect x="4.0027%" y="2949" width="0.2668%" height="15" fill="rgb(214,194,35)" fg:x="120" fg:w="8"/><text x="4.2527%" y="2959.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (8 samples, 0.27%)</title><rect x="4.0027%" y="2933" width="0.2668%" height="15" fill="rgb(249,28,3)" fg:x="120" fg:w="8"/><text x="4.2527%" y="2943.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (8 samples, 0.27%)</title><rect x="4.0027%" y="2917" width="0.2668%" height="15" fill="rgb(222,56,52)" fg:x="120" fg:w="8"/><text x="4.2527%" y="2927.50"></text></g><g><title>boggle.exe`std::alloc::__default_lib_allocator::__rdl_alloc (1 samples, 0.03%)</title><rect x="4.2362%" y="2901" width="0.0334%" height="15" fill="rgb(245,217,50)" fg:x="127" fg:w="1"/><text x="4.4862%" y="2911.50"></text></g><g><title>boggle.exe`std::sys::alloc::windows::impl$0::alloc (1 samples, 0.03%)</title><rect x="4.2362%" y="2885" width="0.0334%" height="15" fill="rgb(213,201,24)" fg:x="127" fg:w="1"/><text x="4.4862%" y="2895.50"></text></g><g><title>boggle.exe`std::sys::alloc::windows::allocate (1 samples, 0.03%)</title><rect x="4.2362%" y="2869" width="0.0334%" height="15" fill="rgb(248,116,28)" fg:x="127" fg:w="1"/><text x="4.4862%" y="2879.50"></text></g><g><title>`0x7FFAC12C8047 (2 samples, 0.07%)</title><rect x="4.2695%" y="2901" width="0.0667%" height="15" fill="rgb(219,72,43)" fg:x="128" fg:w="2"/><text x="4.5195%" y="2911.50"></text></g><g><title>`0x7FFAC12C8142 (1 samples, 0.03%)</title><rect x="4.3362%" y="2901" width="0.0334%" height="15" fill="rgb(209,138,14)" fg:x="130" fg:w="1"/><text x="4.5862%" y="2911.50"></text></g><g><title>`0x7FFAC12C8165 (1 samples, 0.03%)</title><rect x="4.3696%" y="2901" width="0.0334%" height="15" fill="rgb(222,18,33)" fg:x="131" fg:w="1"/><text x="4.6196%" y="2911.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;::push (5 samples, 0.17%)</title><rect x="4.2695%" y="3093" width="0.1668%" height="15" fill="rgb(213,199,7)" fg:x="128" fg:w="5"/><text x="4.5195%" y="3103.50"></text></g><g><title>boggle.exe`alloc::string::impl$6::clone (5 samples, 0.17%)</title><rect x="4.2695%" y="3077" width="0.1668%" height="15" fill="rgb(250,110,10)" fg:x="128" fg:w="5"/><text x="4.5195%" y="3087.50"></text></g><g><title>boggle.exe`alloc::vec::impl$11::clone (5 samples, 0.17%)</title><rect x="4.2695%" y="3061" width="0.1668%" height="15" fill="rgb(248,123,6)" fg:x="128" fg:w="5"/><text x="4.5195%" y="3071.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec_in (5 samples, 0.17%)</title><rect x="4.2695%" y="3045" width="0.1668%" height="15" fill="rgb(206,91,31)" fg:x="128" fg:w="5"/><text x="4.5195%" y="3055.50"></text></g><g><title>boggle.exe`alloc::slice::hack::to_vec (5 samples, 0.17%)</title><rect x="4.2695%" y="3029" width="0.1668%" height="15" fill="rgb(211,154,13)" fg:x="128" fg:w="5"/><text x="4.5195%" y="3039.50"></text></g><g><title>boggle.exe`alloc::slice::hack::impl$1::to_vec (5 samples, 0.17%)</title><rect x="4.2695%" y="3013" width="0.1668%" height="15" fill="rgb(225,148,7)" fg:x="128" fg:w="5"/><text x="4.5195%" y="3023.50"></text></g><g><title>boggle.exe`alloc::vec::Vec::with_capacity_in (5 samples, 0.17%)</title><rect x="4.2695%" y="2997" width="0.1668%" height="15" fill="rgb(220,160,43)" fg:x="128" fg:w="5"/><text x="4.5195%" y="3007.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec::with_capacity_in (5 samples, 0.17%)</title><rect x="4.2695%" y="2981" width="0.1668%" height="15" fill="rgb(213,52,39)" fg:x="128" fg:w="5"/><text x="4.5195%" y="2991.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner::with_capacity_in (5 samples, 0.17%)</title><rect x="4.2695%" y="2965" width="0.1668%" height="15" fill="rgb(243,137,7)" fg:x="128" fg:w="5"/><text x="4.5195%" y="2975.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner::try_allocate_in (5 samples, 0.17%)</title><rect x="4.2695%" y="2949" width="0.1668%" height="15" fill="rgb(230,79,13)" fg:x="128" fg:w="5"/><text x="4.5195%" y="2959.50"></text></g><g><title>`0x7FFAC12C7776 (5 samples, 0.17%)</title><rect x="4.2695%" y="2933" width="0.1668%" height="15" fill="rgb(247,105,23)" fg:x="128" fg:w="5"/><text x="4.5195%" y="2943.50"></text></g><g><title>`0x7FFAC12C78B4 (5 samples, 0.17%)</title><rect x="4.2695%" y="2917" width="0.1668%" height="15" fill="rgb(223,179,41)" fg:x="128" fg:w="5"/><text x="4.5195%" y="2927.50"></text></g><g><title>`0x7FFAC12C8667 (1 samples, 0.03%)</title><rect x="4.4029%" y="2901" width="0.0334%" height="15" fill="rgb(218,9,34)" fg:x="132" fg:w="1"/><text x="4.6529%" y="2911.50"></text></g><g><title>boggle.exe`alloc::string::String::pop (75 samples, 2.50%)</title><rect x="2.1681%" y="3157" width="2.5017%" height="15" fill="rgb(222,106,8)" fg:x="65" fg:w="75"/><text x="2.4181%" y="3167.50">bo..</text></g><g><title>boggle.exe`alloc::string::impl$28::deref (75 samples, 2.50%)</title><rect x="2.1681%" y="3141" width="2.5017%" height="15" fill="rgb(211,220,0)" fg:x="65" fg:w="75"/><text x="2.4181%" y="3151.50">bo..</text></g><g><title>boggle.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (75 samples, 2.50%)</title><rect x="2.1681%" y="3125" width="2.5017%" height="15" fill="rgb(229,52,16)" fg:x="65" fg:w="75"/><text x="2.4181%" y="3135.50">bo..</text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::collect_words(boggle::utils::dict_trie::DictTrieNode*, ref$&lt;str$&gt;, alloc::vec::Vec (75 samples, 2.50%)</title><rect x="2.1681%" y="3109" width="2.5017%" height="15" fill="rgb(212,155,18)" fg:x="65" fg:w="75"/><text x="2.4181%" y="3119.50">bo..</text></g><g><title>boggle.exe`std::collections::hash::map::impl$36::into_iter(std::collections::hash::map::HashMap (7 samples, 0.23%)</title><rect x="4.4363%" y="3093" width="0.2335%" height="15" fill="rgb(242,21,14)" fg:x="133" fg:w="7"/><text x="4.6863%" y="3103.50"></text></g><g><title>boggle.exe`std::collections::hash::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;::iter (7 samples, 0.23%)</title><rect x="4.4363%" y="3077" width="0.2335%" height="15" fill="rgb(222,19,48)" fg:x="133" fg:w="7"/><text x="4.6863%" y="3087.50"></text></g><g><title>boggle.exe`hashbrown::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt;::iter (7 samples, 0.23%)</title><rect x="4.4363%" y="3061" width="0.2335%" height="15" fill="rgb(232,45,27)" fg:x="133" fg:w="7"/><text x="4.6863%" y="3071.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTable&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;::iter (7 samples, 0.23%)</title><rect x="4.4363%" y="3045" width="0.2335%" height="15" fill="rgb(249,103,42)" fg:x="133" fg:w="7"/><text x="4.6863%" y="3055.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::iter (7 samples, 0.23%)</title><rect x="4.4363%" y="3029" width="0.2335%" height="15" fill="rgb(246,81,33)" fg:x="133" fg:w="7"/><text x="4.6863%" y="3039.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawIterRange&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::new(unsigned char*, hashbrown::raw::Bucket&lt;tuple$ (7 samples, 0.23%)</title><rect x="4.4363%" y="3013" width="0.2335%" height="15" fill="rgb(252,33,42)" fg:x="133" fg:w="7"/><text x="4.6863%" y="3023.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::load_aligned (7 samples, 0.23%)</title><rect x="4.4363%" y="2997" width="0.2335%" height="15" fill="rgb(209,212,41)" fg:x="133" fg:w="7"/><text x="4.6863%" y="3007.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::match_empty_or_deleted (7 samples, 0.23%)</title><rect x="4.4363%" y="2981" width="0.2335%" height="15" fill="rgb(207,154,6)" fg:x="133" fg:w="7"/><text x="4.6863%" y="2991.50"></text></g><g><title>boggle.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (7 samples, 0.23%)</title><rect x="4.4363%" y="2965" width="0.2335%" height="15" fill="rgb(223,64,47)" fg:x="133" fg:w="7"/><text x="4.6863%" y="2975.50"></text></g><g><title>`0x7FFAC12D5C95 (1 samples, 0.03%)</title><rect x="4.6698%" y="2901" width="0.0334%" height="15" fill="rgb(211,161,38)" fg:x="140" fg:w="1"/><text x="4.9198%" y="2911.50"></text></g><g><title>`0x7FFAC12C782F (1 samples, 0.03%)</title><rect x="4.7365%" y="2869" width="0.0334%" height="15" fill="rgb(219,138,40)" fg:x="142" fg:w="1"/><text x="4.9865%" y="2879.50"></text></g><g><title>`0x7FFAC12C7E95 (1 samples, 0.03%)</title><rect x="4.7698%" y="2853" width="0.0334%" height="15" fill="rgb(241,228,46)" fg:x="143" fg:w="1"/><text x="5.0198%" y="2863.50"></text></g><g><title>`0x7FFAC12C8047 (2 samples, 0.07%)</title><rect x="4.8032%" y="2853" width="0.0667%" height="15" fill="rgb(223,209,38)" fg:x="144" fg:w="2"/><text x="5.0532%" y="2863.50"></text></g><g><title>`0x7FFAC12C8060 (1 samples, 0.03%)</title><rect x="4.8699%" y="2853" width="0.0334%" height="15" fill="rgb(236,164,45)" fg:x="146" fg:w="1"/><text x="5.1199%" y="2863.50"></text></g><g><title>`0x7FFAC12C85BD (1 samples, 0.03%)</title><rect x="4.9033%" y="2853" width="0.0334%" height="15" fill="rgb(231,15,5)" fg:x="147" fg:w="1"/><text x="5.1533%" y="2863.50"></text></g><g><title>`0x7FFAC12C85ED (1 samples, 0.03%)</title><rect x="4.9366%" y="2853" width="0.0334%" height="15" fill="rgb(252,35,15)" fg:x="148" fg:w="1"/><text x="5.1866%" y="2863.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::push (10 samples, 0.33%)</title><rect x="4.6698%" y="3141" width="0.3336%" height="15" fill="rgb(248,181,18)" fg:x="140" fg:w="10"/><text x="4.9198%" y="3151.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_mut_ptr (10 samples, 0.33%)</title><rect x="4.6698%" y="3125" width="0.3336%" height="15" fill="rgb(233,39,42)" fg:x="140" fg:w="10"/><text x="4.9198%" y="3135.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::ptr (10 samples, 0.33%)</title><rect x="4.6698%" y="3109" width="0.3336%" height="15" fill="rgb(238,110,33)" fg:x="140" fg:w="10"/><text x="4.9198%" y="3119.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (10 samples, 0.33%)</title><rect x="4.6698%" y="3093" width="0.3336%" height="15" fill="rgb(233,195,10)" fg:x="140" fg:w="10"/><text x="4.9198%" y="3103.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (10 samples, 0.33%)</title><rect x="4.6698%" y="3077" width="0.3336%" height="15" fill="rgb(254,105,3)" fg:x="140" fg:w="10"/><text x="4.9198%" y="3087.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::grow_one&lt;u8,alloc::alloc::Global&gt; (10 samples, 0.33%)</title><rect x="4.6698%" y="3061" width="0.3336%" height="15" fill="rgb(221,225,9)" fg:x="140" fg:w="10"/><text x="4.9198%" y="3071.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_one (10 samples, 0.33%)</title><rect x="4.6698%" y="3045" width="0.3336%" height="15" fill="rgb(224,227,45)" fg:x="140" fg:w="10"/><text x="4.9198%" y="3055.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (10 samples, 0.33%)</title><rect x="4.6698%" y="3029" width="0.3336%" height="15" fill="rgb(229,198,43)" fg:x="140" fg:w="10"/><text x="4.9198%" y="3039.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (10 samples, 0.33%)</title><rect x="4.6698%" y="3013" width="0.3336%" height="15" fill="rgb(206,209,35)" fg:x="140" fg:w="10"/><text x="4.9198%" y="3023.50"></text></g><g><title>boggle.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (10 samples, 0.33%)</title><rect x="4.6698%" y="2997" width="0.3336%" height="15" fill="rgb(245,195,53)" fg:x="140" fg:w="10"/><text x="4.9198%" y="3007.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (10 samples, 0.33%)</title><rect x="4.6698%" y="2981" width="0.3336%" height="15" fill="rgb(240,92,26)" fg:x="140" fg:w="10"/><text x="4.9198%" y="2991.50"></text></g><g><title>boggle.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (10 samples, 0.33%)</title><rect x="4.6698%" y="2965" width="0.3336%" height="15" fill="rgb(207,40,23)" fg:x="140" fg:w="10"/><text x="4.9198%" y="2975.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (10 samples, 0.33%)</title><rect x="4.6698%" y="2949" width="0.3336%" height="15" fill="rgb(223,111,35)" fg:x="140" fg:w="10"/><text x="4.9198%" y="2959.50"></text></g><g><title>`0x7FFAC12D5376 (10 samples, 0.33%)</title><rect x="4.6698%" y="2933" width="0.3336%" height="15" fill="rgb(229,147,28)" fg:x="140" fg:w="10"/><text x="4.9198%" y="2943.50"></text></g><g><title>`0x7FFAC12D54B5 (10 samples, 0.33%)</title><rect x="4.6698%" y="2917" width="0.3336%" height="15" fill="rgb(211,29,28)" fg:x="140" fg:w="10"/><text x="4.9198%" y="2927.50"></text></g><g><title>`0x7FFAC12D5DAA (9 samples, 0.30%)</title><rect x="4.7031%" y="2901" width="0.3002%" height="15" fill="rgb(228,72,33)" fg:x="141" fg:w="9"/><text x="4.9531%" y="2911.50"></text></g><g><title>`0x7FFAC12C7776 (9 samples, 0.30%)</title><rect x="4.7031%" y="2885" width="0.3002%" height="15" fill="rgb(205,214,31)" fg:x="141" fg:w="9"/><text x="4.9531%" y="2895.50"></text></g><g><title>`0x7FFAC12C78B4 (7 samples, 0.23%)</title><rect x="4.7698%" y="2869" width="0.2335%" height="15" fill="rgb(224,111,15)" fg:x="143" fg:w="7"/><text x="5.0198%" y="2879.50"></text></g><g><title>`0x7FFAC12C8CE9 (1 samples, 0.03%)</title><rect x="4.9700%" y="2853" width="0.0334%" height="15" fill="rgb(253,21,26)" fg:x="149" fg:w="1"/><text x="5.2200%" y="2863.50"></text></g><g><title>`0x7FFAC12C7776 (1 samples, 0.03%)</title><rect x="4.9700%" y="2837" width="0.0334%" height="15" fill="rgb(245,139,43)" fg:x="149" fg:w="1"/><text x="5.2200%" y="2847.50"></text></g><g><title>`0x7FFAC12C7AFE (1 samples, 0.03%)</title><rect x="4.9700%" y="2821" width="0.0334%" height="15" fill="rgb(252,170,7)" fg:x="149" fg:w="1"/><text x="5.2200%" y="2831.50"></text></g><g><title>`0x7FFAC12AF9D1 (1 samples, 0.03%)</title><rect x="4.9700%" y="2805" width="0.0334%" height="15" fill="rgb(231,118,14)" fg:x="149" fg:w="1"/><text x="5.2200%" y="2815.50"></text></g><g><title>boggle.exe`alloc::string::String::push (17 samples, 0.57%)</title><rect x="4.6698%" y="3157" width="0.5670%" height="15" fill="rgb(238,83,0)" fg:x="140" fg:w="17"/><text x="4.9198%" y="3167.50"></text></g><g><title>boggle.exe`core::char::methods::impl$0::len_utf8 (7 samples, 0.23%)</title><rect x="5.0033%" y="3141" width="0.2335%" height="15" fill="rgb(221,39,39)" fg:x="150" fg:w="7"/><text x="5.2533%" y="3151.50"></text></g><g><title>boggle.exe`core::char::methods::len_utf8 (7 samples, 0.23%)</title><rect x="5.0033%" y="3125" width="0.2335%" height="15" fill="rgb(222,119,46)" fg:x="150" fg:w="7"/><text x="5.2533%" y="3135.50"></text></g><g><title>`0x7FFAC12C78AB (1 samples, 0.03%)</title><rect x="5.2368%" y="2949" width="0.0334%" height="15" fill="rgb(222,165,49)" fg:x="157" fg:w="1"/><text x="5.4868%" y="2959.50"></text></g><g><title>`0x7FFAC12C7F93 (1 samples, 0.03%)</title><rect x="5.2702%" y="2933" width="0.0334%" height="15" fill="rgb(219,113,52)" fg:x="158" fg:w="1"/><text x="5.5202%" y="2943.50"></text></g><g><title>`0x7FFAC12C8047 (2 samples, 0.07%)</title><rect x="5.3035%" y="2933" width="0.0667%" height="15" fill="rgb(214,7,15)" fg:x="159" fg:w="2"/><text x="5.5535%" y="2943.50"></text></g><g><title>boggle.exe`alloc::string::impl$102::to_string(ref$ (5 samples, 0.17%)</title><rect x="5.2368%" y="3157" width="0.1668%" height="15" fill="rgb(235,32,4)" fg:x="157" fg:w="5"/><text x="5.4868%" y="3167.50"></text></g><g><title>boggle.exe`alloc::string::impl$44::from(ref$ (5 samples, 0.17%)</title><rect x="5.2368%" y="3141" width="0.1668%" height="15" fill="rgb(238,90,54)" fg:x="157" fg:w="5"/><text x="5.4868%" y="3151.50"></text></g><g><title>boggle.exe`alloc::str::impl$4::to_owned(ref$ (5 samples, 0.17%)</title><rect x="5.2368%" y="3125" width="0.1668%" height="15" fill="rgb(213,208,19)" fg:x="157" fg:w="5"/><text x="5.4868%" y="3135.50"></text></g><g><title>boggle.exe`alloc::slice::impl$9::to_owned(ref$&lt;slice2$ (5 samples, 0.17%)</title><rect x="5.2368%" y="3109" width="0.1668%" height="15" fill="rgb(233,156,4)" fg:x="157" fg:w="5"/><text x="5.4868%" y="3119.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec(ref$&lt;slice2$ (5 samples, 0.17%)</title><rect x="5.2368%" y="3093" width="0.1668%" height="15" fill="rgb(207,194,5)" fg:x="157" fg:w="5"/><text x="5.4868%" y="3103.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec_in(ref$&lt;slice2$ (5 samples, 0.17%)</title><rect x="5.2368%" y="3077" width="0.1668%" height="15" fill="rgb(206,111,30)" fg:x="157" fg:w="5"/><text x="5.4868%" y="3087.50"></text></g><g><title>boggle.exe`alloc::slice::hack::to_vec(ref$&lt;slice2$ (5 samples, 0.17%)</title><rect x="5.2368%" y="3061" width="0.1668%" height="15" fill="rgb(243,70,54)" fg:x="157" fg:w="5"/><text x="5.4868%" y="3071.50"></text></g><g><title>boggle.exe`alloc::slice::hack::impl$1::to_vec(ref$&lt;slice2$ (5 samples, 0.17%)</title><rect x="5.2368%" y="3045" width="0.1668%" height="15" fill="rgb(242,28,8)" fg:x="157" fg:w="5"/><text x="5.4868%" y="3055.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (5 samples, 0.17%)</title><rect x="5.2368%" y="3029" width="0.1668%" height="15" fill="rgb(219,106,18)" fg:x="157" fg:w="5"/><text x="5.4868%" y="3039.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (5 samples, 0.17%)</title><rect x="5.2368%" y="3013" width="0.1668%" height="15" fill="rgb(244,222,10)" fg:x="157" fg:w="5"/><text x="5.4868%" y="3023.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (5 samples, 0.17%)</title><rect x="5.2368%" y="2997" width="0.1668%" height="15" fill="rgb(236,179,52)" fg:x="157" fg:w="5"/><text x="5.4868%" y="3007.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (5 samples, 0.17%)</title><rect x="5.2368%" y="2981" width="0.1668%" height="15" fill="rgb(213,23,39)" fg:x="157" fg:w="5"/><text x="5.4868%" y="2991.50"></text></g><g><title>`0x7FFAC12C7776 (5 samples, 0.17%)</title><rect x="5.2368%" y="2965" width="0.1668%" height="15" fill="rgb(238,48,10)" fg:x="157" fg:w="5"/><text x="5.4868%" y="2975.50"></text></g><g><title>`0x7FFAC12C78B4 (4 samples, 0.13%)</title><rect x="5.2702%" y="2949" width="0.1334%" height="15" fill="rgb(251,196,23)" fg:x="158" fg:w="4"/><text x="5.5202%" y="2959.50"></text></g><g><title>`0x7FFAC12C814B (1 samples, 0.03%)</title><rect x="5.3702%" y="2933" width="0.0334%" height="15" fill="rgb(250,152,24)" fg:x="161" fg:w="1"/><text x="5.6202%" y="2943.50"></text></g><g><title>`0x7FFAC12C77D0 (1 samples, 0.03%)</title><rect x="5.4036%" y="2981" width="0.0334%" height="15" fill="rgb(209,150,17)" fg:x="162" fg:w="1"/><text x="5.6536%" y="2991.50"></text></g><g><title>`0x7FFAC12C8047 (3 samples, 0.10%)</title><rect x="5.4370%" y="2965" width="0.1001%" height="15" fill="rgb(234,202,34)" fg:x="163" fg:w="3"/><text x="5.6870%" y="2975.50"></text></g><g><title>`0x7FFAC12C8134 (1 samples, 0.03%)</title><rect x="5.5370%" y="2965" width="0.0334%" height="15" fill="rgb(253,148,53)" fg:x="166" fg:w="1"/><text x="5.7870%" y="2975.50"></text></g><g><title>`0x7FFAC12C7776 (6 samples, 0.20%)</title><rect x="5.4036%" y="2997" width="0.2001%" height="15" fill="rgb(218,129,16)" fg:x="162" fg:w="6"/><text x="5.6536%" y="3007.50"></text></g><g><title>`0x7FFAC12C78B4 (5 samples, 0.17%)</title><rect x="5.4370%" y="2981" width="0.1668%" height="15" fill="rgb(216,85,19)" fg:x="163" fg:w="5"/><text x="5.6870%" y="2991.50"></text></g><g><title>`0x7FFAC12C8649 (1 samples, 0.03%)</title><rect x="5.5704%" y="2965" width="0.0334%" height="15" fill="rgb(235,228,7)" fg:x="167" fg:w="1"/><text x="5.8204%" y="2975.50"></text></g><g><title>boggle.exe`alloc::string::impl$6::clone (7 samples, 0.23%)</title><rect x="5.4036%" y="3141" width="0.2335%" height="15" fill="rgb(245,175,0)" fg:x="162" fg:w="7"/><text x="5.6536%" y="3151.50"></text></g><g><title>boggle.exe`alloc::vec::impl$11::clone (7 samples, 0.23%)</title><rect x="5.4036%" y="3125" width="0.2335%" height="15" fill="rgb(208,168,36)" fg:x="162" fg:w="7"/><text x="5.6536%" y="3135.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec_in (7 samples, 0.23%)</title><rect x="5.4036%" y="3109" width="0.2335%" height="15" fill="rgb(246,171,24)" fg:x="162" fg:w="7"/><text x="5.6536%" y="3119.50"></text></g><g><title>boggle.exe`alloc::slice::hack::to_vec (7 samples, 0.23%)</title><rect x="5.4036%" y="3093" width="0.2335%" height="15" fill="rgb(215,142,24)" fg:x="162" fg:w="7"/><text x="5.6536%" y="3103.50"></text></g><g><title>boggle.exe`alloc::slice::hack::impl$1::to_vec (7 samples, 0.23%)</title><rect x="5.4036%" y="3077" width="0.2335%" height="15" fill="rgb(250,187,7)" fg:x="162" fg:w="7"/><text x="5.6536%" y="3087.50"></text></g><g><title>boggle.exe`alloc::vec::Vec::with_capacity_in (7 samples, 0.23%)</title><rect x="5.4036%" y="3061" width="0.2335%" height="15" fill="rgb(228,66,33)" fg:x="162" fg:w="7"/><text x="5.6536%" y="3071.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec::with_capacity_in (7 samples, 0.23%)</title><rect x="5.4036%" y="3045" width="0.2335%" height="15" fill="rgb(234,215,21)" fg:x="162" fg:w="7"/><text x="5.6536%" y="3055.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner::with_capacity_in (7 samples, 0.23%)</title><rect x="5.4036%" y="3029" width="0.2335%" height="15" fill="rgb(222,191,20)" fg:x="162" fg:w="7"/><text x="5.6536%" y="3039.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner::try_allocate_in (7 samples, 0.23%)</title><rect x="5.4036%" y="3013" width="0.2335%" height="15" fill="rgb(245,79,54)" fg:x="162" fg:w="7"/><text x="5.6536%" y="3023.50"></text></g><g><title>boggle.exe`std::alloc::__default_lib_allocator::__rdl_alloc (1 samples, 0.03%)</title><rect x="5.6037%" y="2997" width="0.0334%" height="15" fill="rgb(240,10,37)" fg:x="168" fg:w="1"/><text x="5.8537%" y="3007.50"></text></g><g><title>boggle.exe`std::sys::alloc::windows::impl$0::alloc (1 samples, 0.03%)</title><rect x="5.6037%" y="2981" width="0.0334%" height="15" fill="rgb(214,192,32)" fg:x="168" fg:w="1"/><text x="5.8537%" y="2991.50"></text></g><g><title>boggle.exe`std::sys::alloc::windows::allocate (1 samples, 0.03%)</title><rect x="5.6037%" y="2965" width="0.0334%" height="15" fill="rgb(209,36,54)" fg:x="168" fg:w="1"/><text x="5.8537%" y="2975.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;::as_mut_ptr (1 samples, 0.03%)</title><rect x="5.6371%" y="3141" width="0.0334%" height="15" fill="rgb(220,10,11)" fg:x="169" fg:w="1"/><text x="5.8871%" y="3151.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;alloc::string::String,alloc::alloc::Global&gt;::ptr (1 samples, 0.03%)</title><rect x="5.6371%" y="3125" width="0.0334%" height="15" fill="rgb(221,106,17)" fg:x="169" fg:w="1"/><text x="5.8871%" y="3135.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (1 samples, 0.03%)</title><rect x="5.6371%" y="3109" width="0.0334%" height="15" fill="rgb(251,142,44)" fg:x="169" fg:w="1"/><text x="5.8871%" y="3119.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (1 samples, 0.03%)</title><rect x="5.6371%" y="3093" width="0.0334%" height="15" fill="rgb(238,13,15)" fg:x="169" fg:w="1"/><text x="5.8871%" y="3103.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;std::ffi::os_str::OsString,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;::grow_one&lt;alloc::vec::Vec&lt;std::ffi::os_str::OsString,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; (1 samples, 0.03%)</title><rect x="5.6371%" y="3077" width="0.0334%" height="15" fill="rgb(208,107,27)" fg:x="169" fg:w="1"/><text x="5.8871%" y="3087.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_one (1 samples, 0.03%)</title><rect x="5.6371%" y="3061" width="0.0334%" height="15" fill="rgb(205,136,37)" fg:x="169" fg:w="1"/><text x="5.8871%" y="3071.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (1 samples, 0.03%)</title><rect x="5.6371%" y="3045" width="0.0334%" height="15" fill="rgb(250,205,27)" fg:x="169" fg:w="1"/><text x="5.8871%" y="3055.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (1 samples, 0.03%)</title><rect x="5.6371%" y="3029" width="0.0334%" height="15" fill="rgb(210,80,43)" fg:x="169" fg:w="1"/><text x="5.8871%" y="3039.50"></text></g><g><title>boggle.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="5.6371%" y="3013" width="0.0334%" height="15" fill="rgb(247,160,36)" fg:x="169" fg:w="1"/><text x="5.8871%" y="3023.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="5.6371%" y="2997" width="0.0334%" height="15" fill="rgb(234,13,49)" fg:x="169" fg:w="1"/><text x="5.8871%" y="3007.50"></text></g><g><title>boggle.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="5.6371%" y="2981" width="0.0334%" height="15" fill="rgb(234,122,0)" fg:x="169" fg:w="1"/><text x="5.8871%" y="2991.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="5.6371%" y="2965" width="0.0334%" height="15" fill="rgb(207,146,38)" fg:x="169" fg:w="1"/><text x="5.8871%" y="2975.50"></text></g><g><title>`0x7FFAC12D5376 (1 samples, 0.03%)</title><rect x="5.6371%" y="2949" width="0.0334%" height="15" fill="rgb(207,177,25)" fg:x="169" fg:w="1"/><text x="5.8871%" y="2959.50"></text></g><g><title>`0x7FFAC12D54B5 (1 samples, 0.03%)</title><rect x="5.6371%" y="2933" width="0.0334%" height="15" fill="rgb(211,178,42)" fg:x="169" fg:w="1"/><text x="5.8871%" y="2943.50"></text></g><g><title>`0x7FFAC12D6459 (1 samples, 0.03%)</title><rect x="5.6371%" y="2917" width="0.0334%" height="15" fill="rgb(230,69,54)" fg:x="169" fg:w="1"/><text x="5.8871%" y="2927.50"></text></g><g><title>`0x7FFAC1404F93 (1 samples, 0.03%)</title><rect x="5.6371%" y="2901" width="0.0334%" height="15" fill="rgb(214,135,41)" fg:x="169" fg:w="1"/><text x="5.8871%" y="2911.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;::push (9 samples, 0.30%)</title><rect x="5.4036%" y="3157" width="0.3002%" height="15" fill="rgb(237,67,25)" fg:x="162" fg:w="9"/><text x="5.6536%" y="3167.50"></text></g><g><title>boggle.exe`core::ptr::write (1 samples, 0.03%)</title><rect x="5.6704%" y="3141" width="0.0334%" height="15" fill="rgb(222,189,50)" fg:x="170" fg:w="1"/><text x="5.9204%" y="3151.50"></text></g><g><title>boggle.exe`alloc::string::String::pop (124 samples, 4.14%)</title><rect x="2.0013%" y="3221" width="4.1361%" height="15" fill="rgb(245,148,34)" fg:x="60" fg:w="124"/><text x="2.2513%" y="3231.50">boggl..</text></g><g><title>boggle.exe`alloc::string::impl$28::deref (124 samples, 4.14%)</title><rect x="2.0013%" y="3205" width="4.1361%" height="15" fill="rgb(222,29,6)" fg:x="60" fg:w="124"/><text x="2.2513%" y="3215.50">boggl..</text></g><g><title>boggle.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (124 samples, 4.14%)</title><rect x="2.0013%" y="3189" width="4.1361%" height="15" fill="rgb(221,189,43)" fg:x="60" fg:w="124"/><text x="2.2513%" y="3199.50">boggl..</text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::collect_words(boggle::utils::dict_trie::DictTrieNode*, ref$&lt;str$&gt;, alloc::vec::Vec (124 samples, 4.14%)</title><rect x="2.0013%" y="3173" width="4.1361%" height="15" fill="rgb(207,36,27)" fg:x="60" fg:w="124"/><text x="2.2513%" y="3183.50">boggl..</text></g><g><title>boggle.exe`std::collections::hash::map::impl$36::into_iter(std::collections::hash::map::HashMap (13 samples, 0.43%)</title><rect x="5.7038%" y="3157" width="0.4336%" height="15" fill="rgb(217,90,24)" fg:x="171" fg:w="13"/><text x="5.9538%" y="3167.50"></text></g><g><title>boggle.exe`std::collections::hash::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;::iter (13 samples, 0.43%)</title><rect x="5.7038%" y="3141" width="0.4336%" height="15" fill="rgb(224,66,35)" fg:x="171" fg:w="13"/><text x="5.9538%" y="3151.50"></text></g><g><title>boggle.exe`hashbrown::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt;::iter (13 samples, 0.43%)</title><rect x="5.7038%" y="3125" width="0.4336%" height="15" fill="rgb(221,13,50)" fg:x="171" fg:w="13"/><text x="5.9538%" y="3135.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTable&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;::iter (13 samples, 0.43%)</title><rect x="5.7038%" y="3109" width="0.4336%" height="15" fill="rgb(236,68,49)" fg:x="171" fg:w="13"/><text x="5.9538%" y="3119.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::iter (13 samples, 0.43%)</title><rect x="5.7038%" y="3093" width="0.4336%" height="15" fill="rgb(229,146,28)" fg:x="171" fg:w="13"/><text x="5.9538%" y="3103.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawIterRange&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::new(unsigned char*, hashbrown::raw::Bucket&lt;tuple$ (12 samples, 0.40%)</title><rect x="5.7372%" y="3077" width="0.4003%" height="15" fill="rgb(225,31,38)" fg:x="172" fg:w="12"/><text x="5.9872%" y="3087.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::load_aligned (12 samples, 0.40%)</title><rect x="5.7372%" y="3061" width="0.4003%" height="15" fill="rgb(250,208,3)" fg:x="172" fg:w="12"/><text x="5.9872%" y="3071.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::match_empty_or_deleted (12 samples, 0.40%)</title><rect x="5.7372%" y="3045" width="0.4003%" height="15" fill="rgb(246,54,23)" fg:x="172" fg:w="12"/><text x="5.9872%" y="3055.50"></text></g><g><title>boggle.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (12 samples, 0.40%)</title><rect x="5.7372%" y="3029" width="0.4003%" height="15" fill="rgb(243,76,11)" fg:x="172" fg:w="12"/><text x="5.9872%" y="3039.50"></text></g><g><title>`0x7FFAC12C780A (1 samples, 0.03%)</title><rect x="6.1374%" y="2933" width="0.0334%" height="15" fill="rgb(245,21,50)" fg:x="184" fg:w="1"/><text x="6.3874%" y="2943.50"></text></g><g><title>`0x7FFAC12C7EDC (1 samples, 0.03%)</title><rect x="6.1708%" y="2917" width="0.0334%" height="15" fill="rgb(228,9,43)" fg:x="185" fg:w="1"/><text x="6.4208%" y="2927.50"></text></g><g><title>`0x7FFAC12C8047 (1 samples, 0.03%)</title><rect x="6.2041%" y="2917" width="0.0334%" height="15" fill="rgb(208,100,47)" fg:x="186" fg:w="1"/><text x="6.4541%" y="2927.50"></text></g><g><title>`0x7FFAC12C8058 (1 samples, 0.03%)</title><rect x="6.2375%" y="2917" width="0.0334%" height="15" fill="rgb(232,26,8)" fg:x="187" fg:w="1"/><text x="6.4875%" y="2927.50"></text></g><g><title>`0x7FFAC12C809C (1 samples, 0.03%)</title><rect x="6.2708%" y="2917" width="0.0334%" height="15" fill="rgb(216,166,38)" fg:x="188" fg:w="1"/><text x="6.5208%" y="2927.50"></text></g><g><title>`0x7FFAC12D5DAA (6 samples, 0.20%)</title><rect x="6.1374%" y="2965" width="0.2001%" height="15" fill="rgb(251,202,51)" fg:x="184" fg:w="6"/><text x="6.3874%" y="2975.50"></text></g><g><title>`0x7FFAC12C7776 (6 samples, 0.20%)</title><rect x="6.1374%" y="2949" width="0.2001%" height="15" fill="rgb(254,216,34)" fg:x="184" fg:w="6"/><text x="6.3874%" y="2959.50"></text></g><g><title>`0x7FFAC12C78B4 (5 samples, 0.17%)</title><rect x="6.1708%" y="2933" width="0.1668%" height="15" fill="rgb(251,32,27)" fg:x="185" fg:w="5"/><text x="6.4208%" y="2943.50"></text></g><g><title>`0x7FFAC12C85F0 (1 samples, 0.03%)</title><rect x="6.3042%" y="2917" width="0.0334%" height="15" fill="rgb(208,127,28)" fg:x="189" fg:w="1"/><text x="6.5542%" y="2927.50"></text></g><g><title>`0x7FFAC12D22DB (1 samples, 0.03%)</title><rect x="6.3376%" y="2949" width="0.0334%" height="15" fill="rgb(224,137,22)" fg:x="190" fg:w="1"/><text x="6.5876%" y="2959.50"></text></g><g><title>`0x7FFAC12D2325 (1 samples, 0.03%)</title><rect x="6.3709%" y="2949" width="0.0334%" height="15" fill="rgb(254,70,32)" fg:x="191" fg:w="1"/><text x="6.6209%" y="2959.50"></text></g><g><title>`0x7FFAC12D23A7 (1 samples, 0.03%)</title><rect x="6.4043%" y="2949" width="0.0334%" height="15" fill="rgb(229,75,37)" fg:x="192" fg:w="1"/><text x="6.6543%" y="2959.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::push (10 samples, 0.33%)</title><rect x="6.1374%" y="3205" width="0.3336%" height="15" fill="rgb(252,64,23)" fg:x="184" fg:w="10"/><text x="6.3874%" y="3215.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_mut_ptr (10 samples, 0.33%)</title><rect x="6.1374%" y="3189" width="0.3336%" height="15" fill="rgb(232,162,48)" fg:x="184" fg:w="10"/><text x="6.3874%" y="3199.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::ptr (10 samples, 0.33%)</title><rect x="6.1374%" y="3173" width="0.3336%" height="15" fill="rgb(246,160,12)" fg:x="184" fg:w="10"/><text x="6.3874%" y="3183.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (10 samples, 0.33%)</title><rect x="6.1374%" y="3157" width="0.3336%" height="15" fill="rgb(247,166,0)" fg:x="184" fg:w="10"/><text x="6.3874%" y="3167.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (10 samples, 0.33%)</title><rect x="6.1374%" y="3141" width="0.3336%" height="15" fill="rgb(249,219,21)" fg:x="184" fg:w="10"/><text x="6.3874%" y="3151.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::grow_one&lt;u8,alloc::alloc::Global&gt; (10 samples, 0.33%)</title><rect x="6.1374%" y="3125" width="0.3336%" height="15" fill="rgb(205,209,3)" fg:x="184" fg:w="10"/><text x="6.3874%" y="3135.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_one (10 samples, 0.33%)</title><rect x="6.1374%" y="3109" width="0.3336%" height="15" fill="rgb(243,44,1)" fg:x="184" fg:w="10"/><text x="6.3874%" y="3119.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (10 samples, 0.33%)</title><rect x="6.1374%" y="3093" width="0.3336%" height="15" fill="rgb(206,159,16)" fg:x="184" fg:w="10"/><text x="6.3874%" y="3103.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (10 samples, 0.33%)</title><rect x="6.1374%" y="3077" width="0.3336%" height="15" fill="rgb(244,77,30)" fg:x="184" fg:w="10"/><text x="6.3874%" y="3087.50"></text></g><g><title>boggle.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (10 samples, 0.33%)</title><rect x="6.1374%" y="3061" width="0.3336%" height="15" fill="rgb(218,69,12)" fg:x="184" fg:w="10"/><text x="6.3874%" y="3071.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (10 samples, 0.33%)</title><rect x="6.1374%" y="3045" width="0.3336%" height="15" fill="rgb(212,87,7)" fg:x="184" fg:w="10"/><text x="6.3874%" y="3055.50"></text></g><g><title>boggle.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (10 samples, 0.33%)</title><rect x="6.1374%" y="3029" width="0.3336%" height="15" fill="rgb(245,114,25)" fg:x="184" fg:w="10"/><text x="6.3874%" y="3039.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (10 samples, 0.33%)</title><rect x="6.1374%" y="3013" width="0.3336%" height="15" fill="rgb(210,61,42)" fg:x="184" fg:w="10"/><text x="6.3874%" y="3023.50"></text></g><g><title>`0x7FFAC12D5376 (10 samples, 0.33%)</title><rect x="6.1374%" y="2997" width="0.3336%" height="15" fill="rgb(211,52,33)" fg:x="184" fg:w="10"/><text x="6.3874%" y="3007.50"></text></g><g><title>`0x7FFAC12D54B5 (10 samples, 0.33%)</title><rect x="6.1374%" y="2981" width="0.3336%" height="15" fill="rgb(234,58,33)" fg:x="184" fg:w="10"/><text x="6.3874%" y="2991.50"></text></g><g><title>`0x7FFAC12D5E0B (4 samples, 0.13%)</title><rect x="6.3376%" y="2965" width="0.1334%" height="15" fill="rgb(220,115,36)" fg:x="190" fg:w="4"/><text x="6.5876%" y="2975.50"></text></g><g><title>`0x7FFAC12D2451 (1 samples, 0.03%)</title><rect x="6.4376%" y="2949" width="0.0334%" height="15" fill="rgb(243,153,54)" fg:x="193" fg:w="1"/><text x="6.6876%" y="2959.50"></text></g><g><title>boggle.exe`alloc::string::String::push (19 samples, 0.63%)</title><rect x="6.1374%" y="3221" width="0.6338%" height="15" fill="rgb(251,47,18)" fg:x="184" fg:w="19"/><text x="6.3874%" y="3231.50"></text></g><g><title>boggle.exe`core::char::methods::impl$0::len_utf8 (9 samples, 0.30%)</title><rect x="6.4710%" y="3205" width="0.3002%" height="15" fill="rgb(242,102,42)" fg:x="194" fg:w="9"/><text x="6.7210%" y="3215.50"></text></g><g><title>boggle.exe`core::char::methods::len_utf8 (9 samples, 0.30%)</title><rect x="6.4710%" y="3189" width="0.3002%" height="15" fill="rgb(234,31,38)" fg:x="194" fg:w="9"/><text x="6.7210%" y="3199.50"></text></g><g><title>`0x7FFAC12C782F (1 samples, 0.03%)</title><rect x="6.7712%" y="3013" width="0.0334%" height="15" fill="rgb(221,117,51)" fg:x="203" fg:w="1"/><text x="7.0212%" y="3023.50"></text></g><g><title>`0x7FFAC12C8047 (1 samples, 0.03%)</title><rect x="6.8045%" y="2997" width="0.0334%" height="15" fill="rgb(212,20,18)" fg:x="204" fg:w="1"/><text x="7.0545%" y="3007.50"></text></g><g><title>`0x7FFAC12C8060 (1 samples, 0.03%)</title><rect x="6.8379%" y="2997" width="0.0334%" height="15" fill="rgb(245,133,36)" fg:x="205" fg:w="1"/><text x="7.0879%" y="3007.50"></text></g><g><title>`0x7FFAC12C8134 (1 samples, 0.03%)</title><rect x="6.8712%" y="2997" width="0.0334%" height="15" fill="rgb(212,6,19)" fg:x="206" fg:w="1"/><text x="7.1212%" y="3007.50"></text></g><g><title>`0x7FFAC12C7776 (5 samples, 0.17%)</title><rect x="6.7712%" y="3029" width="0.1668%" height="15" fill="rgb(218,1,36)" fg:x="203" fg:w="5"/><text x="7.0212%" y="3039.50"></text></g><g><title>`0x7FFAC12C78B4 (4 samples, 0.13%)</title><rect x="6.8045%" y="3013" width="0.1334%" height="15" fill="rgb(246,84,54)" fg:x="204" fg:w="4"/><text x="7.0545%" y="3023.50"></text></g><g><title>`0x7FFAC12C817A (1 samples, 0.03%)</title><rect x="6.9046%" y="2997" width="0.0334%" height="15" fill="rgb(242,110,6)" fg:x="207" fg:w="1"/><text x="7.1546%" y="3007.50"></text></g><g><title>boggle.exe`__rust_alloc (1 samples, 0.03%)</title><rect x="6.9380%" y="3029" width="0.0334%" height="15" fill="rgb(214,47,5)" fg:x="208" fg:w="1"/><text x="7.1880%" y="3039.50"></text></g><g><title>boggle.exe`alloc::string::impl$102::to_string(ref$ (7 samples, 0.23%)</title><rect x="6.7712%" y="3221" width="0.2335%" height="15" fill="rgb(218,159,25)" fg:x="203" fg:w="7"/><text x="7.0212%" y="3231.50"></text></g><g><title>boggle.exe`alloc::string::impl$44::from(ref$ (7 samples, 0.23%)</title><rect x="6.7712%" y="3205" width="0.2335%" height="15" fill="rgb(215,211,28)" fg:x="203" fg:w="7"/><text x="7.0212%" y="3215.50"></text></g><g><title>boggle.exe`alloc::str::impl$4::to_owned(ref$ (7 samples, 0.23%)</title><rect x="6.7712%" y="3189" width="0.2335%" height="15" fill="rgb(238,59,32)" fg:x="203" fg:w="7"/><text x="7.0212%" y="3199.50"></text></g><g><title>boggle.exe`alloc::slice::impl$9::to_owned(ref$&lt;slice2$ (7 samples, 0.23%)</title><rect x="6.7712%" y="3173" width="0.2335%" height="15" fill="rgb(226,82,3)" fg:x="203" fg:w="7"/><text x="7.0212%" y="3183.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec(ref$&lt;slice2$ (7 samples, 0.23%)</title><rect x="6.7712%" y="3157" width="0.2335%" height="15" fill="rgb(240,164,32)" fg:x="203" fg:w="7"/><text x="7.0212%" y="3167.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec_in(ref$&lt;slice2$ (7 samples, 0.23%)</title><rect x="6.7712%" y="3141" width="0.2335%" height="15" fill="rgb(232,46,7)" fg:x="203" fg:w="7"/><text x="7.0212%" y="3151.50"></text></g><g><title>boggle.exe`alloc::slice::hack::to_vec(ref$&lt;slice2$ (7 samples, 0.23%)</title><rect x="6.7712%" y="3125" width="0.2335%" height="15" fill="rgb(229,129,53)" fg:x="203" fg:w="7"/><text x="7.0212%" y="3135.50"></text></g><g><title>boggle.exe`alloc::slice::hack::impl$1::to_vec(ref$&lt;slice2$ (7 samples, 0.23%)</title><rect x="6.7712%" y="3109" width="0.2335%" height="15" fill="rgb(234,188,29)" fg:x="203" fg:w="7"/><text x="7.0212%" y="3119.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (7 samples, 0.23%)</title><rect x="6.7712%" y="3093" width="0.2335%" height="15" fill="rgb(246,141,4)" fg:x="203" fg:w="7"/><text x="7.0212%" y="3103.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (7 samples, 0.23%)</title><rect x="6.7712%" y="3077" width="0.2335%" height="15" fill="rgb(229,23,39)" fg:x="203" fg:w="7"/><text x="7.0212%" y="3087.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (7 samples, 0.23%)</title><rect x="6.7712%" y="3061" width="0.2335%" height="15" fill="rgb(206,12,3)" fg:x="203" fg:w="7"/><text x="7.0212%" y="3071.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (7 samples, 0.23%)</title><rect x="6.7712%" y="3045" width="0.2335%" height="15" fill="rgb(252,226,20)" fg:x="203" fg:w="7"/><text x="7.0212%" y="3055.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::allocate (1 samples, 0.03%)</title><rect x="6.9713%" y="3029" width="0.0334%" height="15" fill="rgb(216,123,35)" fg:x="209" fg:w="1"/><text x="7.2213%" y="3039.50"></text></g><g><title>boggle.exe`alloc::alloc::Global::alloc_impl (1 samples, 0.03%)</title><rect x="6.9713%" y="3013" width="0.0334%" height="15" fill="rgb(212,68,40)" fg:x="209" fg:w="1"/><text x="7.2213%" y="3023.50"></text></g><g><title>boggle.exe`alloc::alloc::alloc (1 samples, 0.03%)</title><rect x="6.9713%" y="2997" width="0.0334%" height="15" fill="rgb(254,125,32)" fg:x="209" fg:w="1"/><text x="7.2213%" y="3007.50"></text></g><g><title>boggle.exe`core::ptr::read_volatile (1 samples, 0.03%)</title><rect x="6.9713%" y="2981" width="0.0334%" height="15" fill="rgb(253,97,22)" fg:x="209" fg:w="1"/><text x="7.2213%" y="2991.50"></text></g><g><title>boggle.exe`alloc::string::impl$28::deref (1 samples, 0.03%)</title><rect x="7.0047%" y="3221" width="0.0334%" height="15" fill="rgb(241,101,14)" fg:x="210" fg:w="1"/><text x="7.2547%" y="3231.50"></text></g><g><title>boggle.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (1 samples, 0.03%)</title><rect x="7.0047%" y="3205" width="0.0334%" height="15" fill="rgb(238,103,29)" fg:x="210" fg:w="1"/><text x="7.2547%" y="3215.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_ptr (1 samples, 0.03%)</title><rect x="7.0047%" y="3189" width="0.0334%" height="15" fill="rgb(233,195,47)" fg:x="210" fg:w="1"/><text x="7.2547%" y="3199.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::ptr (1 samples, 0.03%)</title><rect x="7.0047%" y="3173" width="0.0334%" height="15" fill="rgb(246,218,30)" fg:x="210" fg:w="1"/><text x="7.2547%" y="3183.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (1 samples, 0.03%)</title><rect x="7.0047%" y="3157" width="0.0334%" height="15" fill="rgb(219,145,47)" fg:x="210" fg:w="1"/><text x="7.2547%" y="3167.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (1 samples, 0.03%)</title><rect x="7.0047%" y="3141" width="0.0334%" height="15" fill="rgb(243,12,26)" fg:x="210" fg:w="1"/><text x="7.2547%" y="3151.50"></text></g><g><title>`0x7FFAB8910268 (1 samples, 0.03%)</title><rect x="7.0380%" y="3189" width="0.0334%" height="15" fill="rgb(214,87,16)" fg:x="211" fg:w="1"/><text x="7.2880%" y="3199.50"></text></g><g><title>`0x7FFAC12C6C9B (1 samples, 0.03%)</title><rect x="7.0714%" y="3061" width="0.0334%" height="15" fill="rgb(208,99,42)" fg:x="212" fg:w="1"/><text x="7.3214%" y="3071.50"></text></g><g><title>`0x7FFAC12C7FF0 (1 samples, 0.03%)</title><rect x="7.1047%" y="3029" width="0.0334%" height="15" fill="rgb(253,99,2)" fg:x="213" fg:w="1"/><text x="7.3547%" y="3039.50"></text></g><g><title>`0x7FFAC12C8047 (1 samples, 0.03%)</title><rect x="7.1381%" y="3029" width="0.0334%" height="15" fill="rgb(220,168,23)" fg:x="214" fg:w="1"/><text x="7.3881%" y="3039.50"></text></g><g><title>`0x7FFAC12C815A (1 samples, 0.03%)</title><rect x="7.1714%" y="3029" width="0.0334%" height="15" fill="rgb(242,38,24)" fg:x="215" fg:w="1"/><text x="7.4214%" y="3039.50"></text></g><g><title>`0x7FFAC12C818A (1 samples, 0.03%)</title><rect x="7.2048%" y="3029" width="0.0334%" height="15" fill="rgb(225,182,9)" fg:x="216" fg:w="1"/><text x="7.4548%" y="3039.50"></text></g><g><title>`0x7FFAC12C853C (1 samples, 0.03%)</title><rect x="7.2382%" y="3029" width="0.0334%" height="15" fill="rgb(243,178,37)" fg:x="217" fg:w="1"/><text x="7.4882%" y="3039.50"></text></g><g><title>`0x7FFAC12C7776 (6 samples, 0.20%)</title><rect x="7.1047%" y="3061" width="0.2001%" height="15" fill="rgb(232,139,19)" fg:x="213" fg:w="6"/><text x="7.3547%" y="3071.50"></text></g><g><title>`0x7FFAC12C78B4 (6 samples, 0.20%)</title><rect x="7.1047%" y="3045" width="0.2001%" height="15" fill="rgb(225,201,24)" fg:x="213" fg:w="6"/><text x="7.3547%" y="3055.50"></text></g><g><title>`0x7FFAC12C8667 (1 samples, 0.03%)</title><rect x="7.2715%" y="3029" width="0.0334%" height="15" fill="rgb(221,47,46)" fg:x="218" fg:w="1"/><text x="7.5215%" y="3039.50"></text></g><g><title>boggle.exe`alloc::string::impl$6::clone (9 samples, 0.30%)</title><rect x="7.0380%" y="3205" width="0.3002%" height="15" fill="rgb(249,23,13)" fg:x="211" fg:w="9"/><text x="7.2880%" y="3215.50"></text></g><g><title>boggle.exe`alloc::vec::impl$11::clone (8 samples, 0.27%)</title><rect x="7.0714%" y="3189" width="0.2668%" height="15" fill="rgb(219,9,5)" fg:x="212" fg:w="8"/><text x="7.3214%" y="3199.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec_in (8 samples, 0.27%)</title><rect x="7.0714%" y="3173" width="0.2668%" height="15" fill="rgb(254,171,16)" fg:x="212" fg:w="8"/><text x="7.3214%" y="3183.50"></text></g><g><title>boggle.exe`alloc::slice::hack::to_vec (8 samples, 0.27%)</title><rect x="7.0714%" y="3157" width="0.2668%" height="15" fill="rgb(230,171,20)" fg:x="212" fg:w="8"/><text x="7.3214%" y="3167.50"></text></g><g><title>boggle.exe`alloc::slice::hack::impl$1::to_vec (8 samples, 0.27%)</title><rect x="7.0714%" y="3141" width="0.2668%" height="15" fill="rgb(210,71,41)" fg:x="212" fg:w="8"/><text x="7.3214%" y="3151.50"></text></g><g><title>boggle.exe`alloc::vec::Vec::with_capacity_in (8 samples, 0.27%)</title><rect x="7.0714%" y="3125" width="0.2668%" height="15" fill="rgb(206,173,20)" fg:x="212" fg:w="8"/><text x="7.3214%" y="3135.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec::with_capacity_in (8 samples, 0.27%)</title><rect x="7.0714%" y="3109" width="0.2668%" height="15" fill="rgb(233,88,34)" fg:x="212" fg:w="8"/><text x="7.3214%" y="3119.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner::with_capacity_in (8 samples, 0.27%)</title><rect x="7.0714%" y="3093" width="0.2668%" height="15" fill="rgb(223,209,46)" fg:x="212" fg:w="8"/><text x="7.3214%" y="3103.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner::try_allocate_in (8 samples, 0.27%)</title><rect x="7.0714%" y="3077" width="0.2668%" height="15" fill="rgb(250,43,18)" fg:x="212" fg:w="8"/><text x="7.3214%" y="3087.50"></text></g><g><title>boggle.exe`std::alloc::__default_lib_allocator::__rdl_alloc (1 samples, 0.03%)</title><rect x="7.3049%" y="3061" width="0.0334%" height="15" fill="rgb(208,13,10)" fg:x="219" fg:w="1"/><text x="7.5549%" y="3071.50"></text></g><g><title>boggle.exe`std::sys::alloc::windows::impl$0::alloc (1 samples, 0.03%)</title><rect x="7.3049%" y="3045" width="0.0334%" height="15" fill="rgb(212,200,36)" fg:x="219" fg:w="1"/><text x="7.5549%" y="3055.50"></text></g><g><title>boggle.exe`std::sys::alloc::windows::allocate (1 samples, 0.03%)</title><rect x="7.3049%" y="3029" width="0.0334%" height="15" fill="rgb(225,90,30)" fg:x="219" fg:w="1"/><text x="7.5549%" y="3039.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;::push (11 samples, 0.37%)</title><rect x="7.0380%" y="3221" width="0.3669%" height="15" fill="rgb(236,182,39)" fg:x="211" fg:w="11"/><text x="7.2880%" y="3231.50"></text></g><g><title>boggle.exe`core::ptr::write (2 samples, 0.07%)</title><rect x="7.3382%" y="3205" width="0.0667%" height="15" fill="rgb(212,144,35)" fg:x="220" fg:w="2"/><text x="7.5882%" y="3215.50"></text></g><g><title>boggle.exe`alloc::string::String::pop (189 samples, 6.30%)</title><rect x="1.7345%" y="3285" width="6.3042%" height="15" fill="rgb(228,63,44)" fg:x="52" fg:w="189"/><text x="1.9845%" y="3295.50">boggle.e..</text></g><g><title>boggle.exe`alloc::string::impl$28::deref (189 samples, 6.30%)</title><rect x="1.7345%" y="3269" width="6.3042%" height="15" fill="rgb(228,109,6)" fg:x="52" fg:w="189"/><text x="1.9845%" y="3279.50">boggle.e..</text></g><g><title>boggle.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (189 samples, 6.30%)</title><rect x="1.7345%" y="3253" width="6.3042%" height="15" fill="rgb(238,117,24)" fg:x="52" fg:w="189"/><text x="1.9845%" y="3263.50">boggle.e..</text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::collect_words(boggle::utils::dict_trie::DictTrieNode*, ref$&lt;str$&gt;, alloc::vec::Vec (189 samples, 6.30%)</title><rect x="1.7345%" y="3237" width="6.3042%" height="15" fill="rgb(242,26,26)" fg:x="52" fg:w="189"/><text x="1.9845%" y="3247.50">boggle.e..</text></g><g><title>boggle.exe`std::collections::hash::map::impl$36::into_iter(std::collections::hash::map::HashMap (19 samples, 0.63%)</title><rect x="7.4049%" y="3221" width="0.6338%" height="15" fill="rgb(221,92,48)" fg:x="222" fg:w="19"/><text x="7.6549%" y="3231.50"></text></g><g><title>boggle.exe`std::collections::hash::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;::iter (19 samples, 0.63%)</title><rect x="7.4049%" y="3205" width="0.6338%" height="15" fill="rgb(209,209,32)" fg:x="222" fg:w="19"/><text x="7.6549%" y="3215.50"></text></g><g><title>boggle.exe`hashbrown::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt;::iter (19 samples, 0.63%)</title><rect x="7.4049%" y="3189" width="0.6338%" height="15" fill="rgb(221,70,22)" fg:x="222" fg:w="19"/><text x="7.6549%" y="3199.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTable&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;::iter (19 samples, 0.63%)</title><rect x="7.4049%" y="3173" width="0.6338%" height="15" fill="rgb(248,145,5)" fg:x="222" fg:w="19"/><text x="7.6549%" y="3183.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::iter (19 samples, 0.63%)</title><rect x="7.4049%" y="3157" width="0.6338%" height="15" fill="rgb(226,116,26)" fg:x="222" fg:w="19"/><text x="7.6549%" y="3167.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawIterRange&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::new(unsigned char*, hashbrown::raw::Bucket&lt;tuple$ (19 samples, 0.63%)</title><rect x="7.4049%" y="3141" width="0.6338%" height="15" fill="rgb(244,5,17)" fg:x="222" fg:w="19"/><text x="7.6549%" y="3151.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::load_aligned (19 samples, 0.63%)</title><rect x="7.4049%" y="3125" width="0.6338%" height="15" fill="rgb(252,159,33)" fg:x="222" fg:w="19"/><text x="7.6549%" y="3135.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::match_empty_or_deleted (19 samples, 0.63%)</title><rect x="7.4049%" y="3109" width="0.6338%" height="15" fill="rgb(206,71,0)" fg:x="222" fg:w="19"/><text x="7.6549%" y="3119.50"></text></g><g><title>boggle.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (19 samples, 0.63%)</title><rect x="7.4049%" y="3093" width="0.6338%" height="15" fill="rgb(233,118,54)" fg:x="222" fg:w="19"/><text x="7.6549%" y="3103.50"></text></g><g><title>`0x7FFAC12D5335 (1 samples, 0.03%)</title><rect x="8.0720%" y="3061" width="0.0334%" height="15" fill="rgb(234,83,48)" fg:x="242" fg:w="1"/><text x="8.3220%" y="3071.50"></text></g><g><title>`0x7FFAC12D5C95 (1 samples, 0.03%)</title><rect x="8.1054%" y="3029" width="0.0334%" height="15" fill="rgb(228,3,54)" fg:x="243" fg:w="1"/><text x="8.3554%" y="3039.50"></text></g><g><title>`0x7FFAC12D5DA0 (1 samples, 0.03%)</title><rect x="8.1388%" y="3029" width="0.0334%" height="15" fill="rgb(226,155,13)" fg:x="244" fg:w="1"/><text x="8.3888%" y="3039.50"></text></g><g><title>`0x7FFAC12C8047 (4 samples, 0.13%)</title><rect x="8.1721%" y="2981" width="0.1334%" height="15" fill="rgb(241,28,37)" fg:x="245" fg:w="4"/><text x="8.4221%" y="2991.50"></text></g><g><title>`0x7FFAC12D5DAA (5 samples, 0.17%)</title><rect x="8.1721%" y="3029" width="0.1668%" height="15" fill="rgb(233,93,10)" fg:x="245" fg:w="5"/><text x="8.4221%" y="3039.50"></text></g><g><title>`0x7FFAC12C7776 (5 samples, 0.17%)</title><rect x="8.1721%" y="3013" width="0.1668%" height="15" fill="rgb(225,113,19)" fg:x="245" fg:w="5"/><text x="8.4221%" y="3023.50"></text></g><g><title>`0x7FFAC12C78B4 (5 samples, 0.17%)</title><rect x="8.1721%" y="2997" width="0.1668%" height="15" fill="rgb(241,2,18)" fg:x="245" fg:w="5"/><text x="8.4221%" y="3007.50"></text></g><g><title>`0x7FFAC12C865E (1 samples, 0.03%)</title><rect x="8.3055%" y="2981" width="0.0334%" height="15" fill="rgb(228,207,21)" fg:x="249" fg:w="1"/><text x="8.5555%" y="2991.50"></text></g><g><title>`0x7FFAC12D5376 (8 samples, 0.27%)</title><rect x="8.1054%" y="3061" width="0.2668%" height="15" fill="rgb(213,211,35)" fg:x="243" fg:w="8"/><text x="8.3554%" y="3071.50"></text></g><g><title>`0x7FFAC12D54B5 (8 samples, 0.27%)</title><rect x="8.1054%" y="3045" width="0.2668%" height="15" fill="rgb(209,83,10)" fg:x="243" fg:w="8"/><text x="8.3554%" y="3055.50"></text></g><g><title>`0x7FFAC12D5E0B (1 samples, 0.03%)</title><rect x="8.3389%" y="3029" width="0.0334%" height="15" fill="rgb(209,164,1)" fg:x="250" fg:w="1"/><text x="8.5889%" y="3039.50"></text></g><g><title>`0x7FFAC12D23C2 (1 samples, 0.03%)</title><rect x="8.3389%" y="3013" width="0.0334%" height="15" fill="rgb(213,184,43)" fg:x="250" fg:w="1"/><text x="8.5889%" y="3023.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::push (11 samples, 0.37%)</title><rect x="8.0387%" y="3269" width="0.3669%" height="15" fill="rgb(231,61,34)" fg:x="241" fg:w="11"/><text x="8.2887%" y="3279.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_mut_ptr (10 samples, 0.33%)</title><rect x="8.0720%" y="3253" width="0.3336%" height="15" fill="rgb(235,75,3)" fg:x="242" fg:w="10"/><text x="8.3220%" y="3263.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::ptr (10 samples, 0.33%)</title><rect x="8.0720%" y="3237" width="0.3336%" height="15" fill="rgb(220,106,47)" fg:x="242" fg:w="10"/><text x="8.3220%" y="3247.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (10 samples, 0.33%)</title><rect x="8.0720%" y="3221" width="0.3336%" height="15" fill="rgb(210,196,33)" fg:x="242" fg:w="10"/><text x="8.3220%" y="3231.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (10 samples, 0.33%)</title><rect x="8.0720%" y="3205" width="0.3336%" height="15" fill="rgb(229,154,42)" fg:x="242" fg:w="10"/><text x="8.3220%" y="3215.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::grow_one&lt;u8,alloc::alloc::Global&gt; (10 samples, 0.33%)</title><rect x="8.0720%" y="3189" width="0.3336%" height="15" fill="rgb(228,114,26)" fg:x="242" fg:w="10"/><text x="8.3220%" y="3199.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_one (10 samples, 0.33%)</title><rect x="8.0720%" y="3173" width="0.3336%" height="15" fill="rgb(208,144,1)" fg:x="242" fg:w="10"/><text x="8.3220%" y="3183.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (10 samples, 0.33%)</title><rect x="8.0720%" y="3157" width="0.3336%" height="15" fill="rgb(239,112,37)" fg:x="242" fg:w="10"/><text x="8.3220%" y="3167.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (10 samples, 0.33%)</title><rect x="8.0720%" y="3141" width="0.3336%" height="15" fill="rgb(210,96,50)" fg:x="242" fg:w="10"/><text x="8.3220%" y="3151.50"></text></g><g><title>boggle.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (10 samples, 0.33%)</title><rect x="8.0720%" y="3125" width="0.3336%" height="15" fill="rgb(222,178,2)" fg:x="242" fg:w="10"/><text x="8.3220%" y="3135.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (10 samples, 0.33%)</title><rect x="8.0720%" y="3109" width="0.3336%" height="15" fill="rgb(226,74,18)" fg:x="242" fg:w="10"/><text x="8.3220%" y="3119.50"></text></g><g><title>boggle.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (10 samples, 0.33%)</title><rect x="8.0720%" y="3093" width="0.3336%" height="15" fill="rgb(225,67,54)" fg:x="242" fg:w="10"/><text x="8.3220%" y="3103.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (10 samples, 0.33%)</title><rect x="8.0720%" y="3077" width="0.3336%" height="15" fill="rgb(251,92,32)" fg:x="242" fg:w="10"/><text x="8.3220%" y="3087.50"></text></g><g><title>boggle.exe`__rust_realloc (1 samples, 0.03%)</title><rect x="8.3722%" y="3061" width="0.0334%" height="15" fill="rgb(228,149,22)" fg:x="251" fg:w="1"/><text x="8.6222%" y="3071.50"></text></g><g><title>boggle.exe`alloc::string::String::push (20 samples, 0.67%)</title><rect x="8.0387%" y="3285" width="0.6671%" height="15" fill="rgb(243,54,13)" fg:x="241" fg:w="20"/><text x="8.2887%" y="3295.50"></text></g><g><title>boggle.exe`core::char::methods::impl$0::len_utf8 (9 samples, 0.30%)</title><rect x="8.4056%" y="3269" width="0.3002%" height="15" fill="rgb(243,180,28)" fg:x="252" fg:w="9"/><text x="8.6556%" y="3279.50"></text></g><g><title>boggle.exe`core::char::methods::len_utf8 (9 samples, 0.30%)</title><rect x="8.4056%" y="3253" width="0.3002%" height="15" fill="rgb(208,167,24)" fg:x="252" fg:w="9"/><text x="8.6556%" y="3263.50"></text></g><g><title>`0x7FFAC12C785E (1 samples, 0.03%)</title><rect x="8.7392%" y="3077" width="0.0334%" height="15" fill="rgb(245,73,45)" fg:x="262" fg:w="1"/><text x="8.9892%" y="3087.50"></text></g><g><title>`0x7FFAC12C7F93 (1 samples, 0.03%)</title><rect x="8.7725%" y="3061" width="0.0334%" height="15" fill="rgb(237,203,48)" fg:x="263" fg:w="1"/><text x="9.0225%" y="3071.50"></text></g><g><title>`0x7FFAC12C7FF0 (1 samples, 0.03%)</title><rect x="8.8059%" y="3061" width="0.0334%" height="15" fill="rgb(211,197,16)" fg:x="264" fg:w="1"/><text x="9.0559%" y="3071.50"></text></g><g><title>`0x7FFAC12C8047 (4 samples, 0.13%)</title><rect x="8.8392%" y="3061" width="0.1334%" height="15" fill="rgb(243,99,51)" fg:x="265" fg:w="4"/><text x="9.0892%" y="3071.50"></text></g><g><title>`0x7FFAC12C78B4 (7 samples, 0.23%)</title><rect x="8.7725%" y="3077" width="0.2335%" height="15" fill="rgb(215,123,29)" fg:x="263" fg:w="7"/><text x="9.0225%" y="3087.50"></text></g><g><title>`0x7FFAC12C8611 (1 samples, 0.03%)</title><rect x="8.9726%" y="3061" width="0.0334%" height="15" fill="rgb(239,186,37)" fg:x="269" fg:w="1"/><text x="9.2226%" y="3071.50"></text></g><g><title>boggle.exe`alloc::string::impl$102::to_string(ref$ (10 samples, 0.33%)</title><rect x="8.7058%" y="3285" width="0.3336%" height="15" fill="rgb(252,136,39)" fg:x="261" fg:w="10"/><text x="8.9558%" y="3295.50"></text></g><g><title>boggle.exe`alloc::string::impl$44::from(ref$ (10 samples, 0.33%)</title><rect x="8.7058%" y="3269" width="0.3336%" height="15" fill="rgb(223,213,32)" fg:x="261" fg:w="10"/><text x="8.9558%" y="3279.50"></text></g><g><title>boggle.exe`alloc::str::impl$4::to_owned(ref$ (10 samples, 0.33%)</title><rect x="8.7058%" y="3253" width="0.3336%" height="15" fill="rgb(233,115,5)" fg:x="261" fg:w="10"/><text x="8.9558%" y="3263.50"></text></g><g><title>boggle.exe`alloc::slice::impl$9::to_owned(ref$&lt;slice2$ (10 samples, 0.33%)</title><rect x="8.7058%" y="3237" width="0.3336%" height="15" fill="rgb(207,226,44)" fg:x="261" fg:w="10"/><text x="8.9558%" y="3247.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec(ref$&lt;slice2$ (9 samples, 0.30%)</title><rect x="8.7392%" y="3221" width="0.3002%" height="15" fill="rgb(208,126,0)" fg:x="262" fg:w="9"/><text x="8.9892%" y="3231.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec_in(ref$&lt;slice2$ (9 samples, 0.30%)</title><rect x="8.7392%" y="3205" width="0.3002%" height="15" fill="rgb(244,66,21)" fg:x="262" fg:w="9"/><text x="8.9892%" y="3215.50"></text></g><g><title>boggle.exe`alloc::slice::hack::to_vec(ref$&lt;slice2$ (9 samples, 0.30%)</title><rect x="8.7392%" y="3189" width="0.3002%" height="15" fill="rgb(222,97,12)" fg:x="262" fg:w="9"/><text x="8.9892%" y="3199.50"></text></g><g><title>boggle.exe`alloc::slice::hack::impl$1::to_vec(ref$&lt;slice2$ (9 samples, 0.30%)</title><rect x="8.7392%" y="3173" width="0.3002%" height="15" fill="rgb(219,213,19)" fg:x="262" fg:w="9"/><text x="8.9892%" y="3183.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (9 samples, 0.30%)</title><rect x="8.7392%" y="3157" width="0.3002%" height="15" fill="rgb(252,169,30)" fg:x="262" fg:w="9"/><text x="8.9892%" y="3167.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (9 samples, 0.30%)</title><rect x="8.7392%" y="3141" width="0.3002%" height="15" fill="rgb(206,32,51)" fg:x="262" fg:w="9"/><text x="8.9892%" y="3151.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (9 samples, 0.30%)</title><rect x="8.7392%" y="3125" width="0.3002%" height="15" fill="rgb(250,172,42)" fg:x="262" fg:w="9"/><text x="8.9892%" y="3135.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (9 samples, 0.30%)</title><rect x="8.7392%" y="3109" width="0.3002%" height="15" fill="rgb(209,34,43)" fg:x="262" fg:w="9"/><text x="8.9892%" y="3119.50"></text></g><g><title>`0x7FFAC12C7776 (9 samples, 0.30%)</title><rect x="8.7392%" y="3093" width="0.3002%" height="15" fill="rgb(223,11,35)" fg:x="262" fg:w="9"/><text x="8.9892%" y="3103.50"></text></g><g><title>`0x7FFAC12C7998 (1 samples, 0.03%)</title><rect x="9.0060%" y="3077" width="0.0334%" height="15" fill="rgb(251,219,26)" fg:x="270" fg:w="1"/><text x="9.2560%" y="3087.50"></text></g><g><title>`0x7FFAC12C77E7 (1 samples, 0.03%)</title><rect x="9.0394%" y="3109" width="0.0334%" height="15" fill="rgb(231,119,3)" fg:x="271" fg:w="1"/><text x="9.2894%" y="3119.50"></text></g><g><title>`0x7FFAC12C7EE2 (1 samples, 0.03%)</title><rect x="9.0727%" y="3093" width="0.0334%" height="15" fill="rgb(216,97,11)" fg:x="272" fg:w="1"/><text x="9.3227%" y="3103.50"></text></g><g><title>`0x7FFAC12C8047 (1 samples, 0.03%)</title><rect x="9.1061%" y="3093" width="0.0334%" height="15" fill="rgb(223,59,9)" fg:x="273" fg:w="1"/><text x="9.3561%" y="3103.50"></text></g><g><title>`0x7FFAC12C78B4 (3 samples, 0.10%)</title><rect x="9.0727%" y="3109" width="0.1001%" height="15" fill="rgb(233,93,31)" fg:x="272" fg:w="3"/><text x="9.3227%" y="3119.50"></text></g><g><title>`0x7FFAC12C80F4 (1 samples, 0.03%)</title><rect x="9.1394%" y="3093" width="0.0334%" height="15" fill="rgb(239,81,33)" fg:x="274" fg:w="1"/><text x="9.3894%" y="3103.50"></text></g><g><title>`0x7FFAC12C7776 (5 samples, 0.17%)</title><rect x="9.0394%" y="3125" width="0.1668%" height="15" fill="rgb(213,120,34)" fg:x="271" fg:w="5"/><text x="9.2894%" y="3135.50"></text></g><g><title>`0x7FFAC12C79A4 (1 samples, 0.03%)</title><rect x="9.1728%" y="3109" width="0.0334%" height="15" fill="rgb(243,49,53)" fg:x="275" fg:w="1"/><text x="9.4228%" y="3119.50"></text></g><g><title>boggle.exe`alloc::string::impl$6::clone (6 samples, 0.20%)</title><rect x="9.0394%" y="3269" width="0.2001%" height="15" fill="rgb(247,216,33)" fg:x="271" fg:w="6"/><text x="9.2894%" y="3279.50"></text></g><g><title>boggle.exe`alloc::vec::impl$11::clone (6 samples, 0.20%)</title><rect x="9.0394%" y="3253" width="0.2001%" height="15" fill="rgb(226,26,14)" fg:x="271" fg:w="6"/><text x="9.2894%" y="3263.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec_in (6 samples, 0.20%)</title><rect x="9.0394%" y="3237" width="0.2001%" height="15" fill="rgb(215,49,53)" fg:x="271" fg:w="6"/><text x="9.2894%" y="3247.50"></text></g><g><title>boggle.exe`alloc::slice::hack::to_vec (6 samples, 0.20%)</title><rect x="9.0394%" y="3221" width="0.2001%" height="15" fill="rgb(245,162,40)" fg:x="271" fg:w="6"/><text x="9.2894%" y="3231.50"></text></g><g><title>boggle.exe`alloc::slice::hack::impl$1::to_vec (6 samples, 0.20%)</title><rect x="9.0394%" y="3205" width="0.2001%" height="15" fill="rgb(229,68,17)" fg:x="271" fg:w="6"/><text x="9.2894%" y="3215.50"></text></g><g><title>boggle.exe`alloc::vec::Vec::with_capacity_in (6 samples, 0.20%)</title><rect x="9.0394%" y="3189" width="0.2001%" height="15" fill="rgb(213,182,10)" fg:x="271" fg:w="6"/><text x="9.2894%" y="3199.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec::with_capacity_in (6 samples, 0.20%)</title><rect x="9.0394%" y="3173" width="0.2001%" height="15" fill="rgb(245,125,30)" fg:x="271" fg:w="6"/><text x="9.2894%" y="3183.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner::with_capacity_in (6 samples, 0.20%)</title><rect x="9.0394%" y="3157" width="0.2001%" height="15" fill="rgb(232,202,2)" fg:x="271" fg:w="6"/><text x="9.2894%" y="3167.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner::try_allocate_in (6 samples, 0.20%)</title><rect x="9.0394%" y="3141" width="0.2001%" height="15" fill="rgb(237,140,51)" fg:x="271" fg:w="6"/><text x="9.2894%" y="3151.50"></text></g><g><title>`0x7FFAC12C7791 (1 samples, 0.03%)</title><rect x="9.2061%" y="3125" width="0.0334%" height="15" fill="rgb(236,157,25)" fg:x="276" fg:w="1"/><text x="9.4561%" y="3135.50"></text></g><g><title>`0x7FFAC12D633D (1 samples, 0.03%)</title><rect x="9.2395%" y="3045" width="0.0334%" height="15" fill="rgb(219,209,0)" fg:x="277" fg:w="1"/><text x="9.4895%" y="3055.50"></text></g><g><title>`0x7FFAC12C7776 (1 samples, 0.03%)</title><rect x="9.2395%" y="3029" width="0.0334%" height="15" fill="rgb(240,116,54)" fg:x="277" fg:w="1"/><text x="9.4895%" y="3039.50"></text></g><g><title>`0x7FFAC12C7AFE (1 samples, 0.03%)</title><rect x="9.2395%" y="3013" width="0.0334%" height="15" fill="rgb(216,10,36)" fg:x="277" fg:w="1"/><text x="9.4895%" y="3023.50"></text></g><g><title>`0x7FFAC12B0266 (1 samples, 0.03%)</title><rect x="9.2395%" y="2997" width="0.0334%" height="15" fill="rgb(222,72,44)" fg:x="277" fg:w="1"/><text x="9.4895%" y="3007.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;::push (8 samples, 0.27%)</title><rect x="9.0394%" y="3285" width="0.2668%" height="15" fill="rgb(232,159,9)" fg:x="271" fg:w="8"/><text x="9.2894%" y="3295.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;::as_mut_ptr (2 samples, 0.07%)</title><rect x="9.2395%" y="3269" width="0.0667%" height="15" fill="rgb(210,39,32)" fg:x="277" fg:w="2"/><text x="9.4895%" y="3279.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;alloc::string::String,alloc::alloc::Global&gt;::ptr (2 samples, 0.07%)</title><rect x="9.2395%" y="3253" width="0.0667%" height="15" fill="rgb(216,194,45)" fg:x="277" fg:w="2"/><text x="9.4895%" y="3263.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (2 samples, 0.07%)</title><rect x="9.2395%" y="3237" width="0.0667%" height="15" fill="rgb(218,18,35)" fg:x="277" fg:w="2"/><text x="9.4895%" y="3247.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (2 samples, 0.07%)</title><rect x="9.2395%" y="3221" width="0.0667%" height="15" fill="rgb(207,83,51)" fg:x="277" fg:w="2"/><text x="9.4895%" y="3231.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;std::ffi::os_str::OsString,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;::grow_one&lt;alloc::vec::Vec&lt;std::ffi::os_str::OsString,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; (2 samples, 0.07%)</title><rect x="9.2395%" y="3205" width="0.0667%" height="15" fill="rgb(225,63,43)" fg:x="277" fg:w="2"/><text x="9.4895%" y="3215.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_one (2 samples, 0.07%)</title><rect x="9.2395%" y="3189" width="0.0667%" height="15" fill="rgb(207,57,36)" fg:x="277" fg:w="2"/><text x="9.4895%" y="3199.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (2 samples, 0.07%)</title><rect x="9.2395%" y="3173" width="0.0667%" height="15" fill="rgb(216,99,33)" fg:x="277" fg:w="2"/><text x="9.4895%" y="3183.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (2 samples, 0.07%)</title><rect x="9.2395%" y="3157" width="0.0667%" height="15" fill="rgb(225,42,16)" fg:x="277" fg:w="2"/><text x="9.4895%" y="3167.50"></text></g><g><title>boggle.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (2 samples, 0.07%)</title><rect x="9.2395%" y="3141" width="0.0667%" height="15" fill="rgb(220,201,45)" fg:x="277" fg:w="2"/><text x="9.4895%" y="3151.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (2 samples, 0.07%)</title><rect x="9.2395%" y="3125" width="0.0667%" height="15" fill="rgb(225,33,4)" fg:x="277" fg:w="2"/><text x="9.4895%" y="3135.50"></text></g><g><title>boggle.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (2 samples, 0.07%)</title><rect x="9.2395%" y="3109" width="0.0667%" height="15" fill="rgb(224,33,50)" fg:x="277" fg:w="2"/><text x="9.4895%" y="3119.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (2 samples, 0.07%)</title><rect x="9.2395%" y="3093" width="0.0667%" height="15" fill="rgb(246,198,51)" fg:x="277" fg:w="2"/><text x="9.4895%" y="3103.50"></text></g><g><title>`0x7FFAC12D5376 (2 samples, 0.07%)</title><rect x="9.2395%" y="3077" width="0.0667%" height="15" fill="rgb(205,22,4)" fg:x="277" fg:w="2"/><text x="9.4895%" y="3087.50"></text></g><g><title>`0x7FFAC12D54B5 (2 samples, 0.07%)</title><rect x="9.2395%" y="3061" width="0.0667%" height="15" fill="rgb(206,3,8)" fg:x="277" fg:w="2"/><text x="9.4895%" y="3071.50"></text></g><g><title>`0x7FFAC12D6459 (1 samples, 0.03%)</title><rect x="9.2728%" y="3045" width="0.0334%" height="15" fill="rgb(251,23,15)" fg:x="278" fg:w="1"/><text x="9.5228%" y="3055.50"></text></g><g><title>`0x7FFAC140506F (1 samples, 0.03%)</title><rect x="9.2728%" y="3029" width="0.0334%" height="15" fill="rgb(252,88,28)" fg:x="278" fg:w="1"/><text x="9.5228%" y="3039.50"></text></g><g><title>boggle.exe`alloc::string::String::pop (256 samples, 8.54%)</title><rect x="1.4343%" y="3349" width="8.5390%" height="15" fill="rgb(212,127,14)" fg:x="43" fg:w="256"/><text x="1.6843%" y="3359.50">boggle.exe`a..</text></g><g><title>boggle.exe`alloc::string::impl$28::deref (256 samples, 8.54%)</title><rect x="1.4343%" y="3333" width="8.5390%" height="15" fill="rgb(247,145,37)" fg:x="43" fg:w="256"/><text x="1.6843%" y="3343.50">boggle.exe`a..</text></g><g><title>boggle.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (256 samples, 8.54%)</title><rect x="1.4343%" y="3317" width="8.5390%" height="15" fill="rgb(209,117,53)" fg:x="43" fg:w="256"/><text x="1.6843%" y="3327.50">boggle.exe`a..</text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::collect_words(boggle::utils::dict_trie::DictTrieNode*, ref$&lt;str$&gt;, alloc::vec::Vec (256 samples, 8.54%)</title><rect x="1.4343%" y="3301" width="8.5390%" height="15" fill="rgb(212,90,42)" fg:x="43" fg:w="256"/><text x="1.6843%" y="3311.50">boggle.exe`b..</text></g><g><title>boggle.exe`std::collections::hash::map::impl$36::into_iter(std::collections::hash::map::HashMap (20 samples, 0.67%)</title><rect x="9.3062%" y="3285" width="0.6671%" height="15" fill="rgb(218,164,37)" fg:x="279" fg:w="20"/><text x="9.5562%" y="3295.50"></text></g><g><title>boggle.exe`std::collections::hash::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;::iter (20 samples, 0.67%)</title><rect x="9.3062%" y="3269" width="0.6671%" height="15" fill="rgb(246,65,34)" fg:x="279" fg:w="20"/><text x="9.5562%" y="3279.50"></text></g><g><title>boggle.exe`hashbrown::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt;::iter (20 samples, 0.67%)</title><rect x="9.3062%" y="3253" width="0.6671%" height="15" fill="rgb(231,100,33)" fg:x="279" fg:w="20"/><text x="9.5562%" y="3263.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTable&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;::iter (20 samples, 0.67%)</title><rect x="9.3062%" y="3237" width="0.6671%" height="15" fill="rgb(228,126,14)" fg:x="279" fg:w="20"/><text x="9.5562%" y="3247.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::iter (20 samples, 0.67%)</title><rect x="9.3062%" y="3221" width="0.6671%" height="15" fill="rgb(215,173,21)" fg:x="279" fg:w="20"/><text x="9.5562%" y="3231.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawIterRange&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::new(unsigned char*, hashbrown::raw::Bucket&lt;tuple$ (20 samples, 0.67%)</title><rect x="9.3062%" y="3205" width="0.6671%" height="15" fill="rgb(210,6,40)" fg:x="279" fg:w="20"/><text x="9.5562%" y="3215.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::load_aligned (20 samples, 0.67%)</title><rect x="9.3062%" y="3189" width="0.6671%" height="15" fill="rgb(212,48,18)" fg:x="279" fg:w="20"/><text x="9.5562%" y="3199.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::match_empty_or_deleted (20 samples, 0.67%)</title><rect x="9.3062%" y="3173" width="0.6671%" height="15" fill="rgb(230,214,11)" fg:x="279" fg:w="20"/><text x="9.5562%" y="3183.50"></text></g><g><title>boggle.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (19 samples, 0.63%)</title><rect x="9.3396%" y="3157" width="0.6338%" height="15" fill="rgb(254,105,39)" fg:x="280" fg:w="19"/><text x="9.5896%" y="3167.50"></text></g><g><title>`0x7FFAC12C77D0 (1 samples, 0.03%)</title><rect x="9.9733%" y="3061" width="0.0334%" height="15" fill="rgb(245,158,5)" fg:x="299" fg:w="1"/><text x="10.2233%" y="3071.50"></text></g><g><title>`0x7FFAC12C7E80 (1 samples, 0.03%)</title><rect x="10.0067%" y="3045" width="0.0334%" height="15" fill="rgb(249,208,11)" fg:x="300" fg:w="1"/><text x="10.2567%" y="3055.50"></text></g><g><title>`0x7FFAC12C8047 (2 samples, 0.07%)</title><rect x="10.0400%" y="3045" width="0.0667%" height="15" fill="rgb(210,39,28)" fg:x="301" fg:w="2"/><text x="10.2900%" y="3055.50"></text></g><g><title>`0x7FFAC12C8060 (1 samples, 0.03%)</title><rect x="10.1067%" y="3045" width="0.0334%" height="15" fill="rgb(211,56,53)" fg:x="303" fg:w="1"/><text x="10.3567%" y="3055.50"></text></g><g><title>`0x7FFAC12D5DAA (6 samples, 0.20%)</title><rect x="9.9733%" y="3093" width="0.2001%" height="15" fill="rgb(226,201,30)" fg:x="299" fg:w="6"/><text x="10.2233%" y="3103.50"></text></g><g><title>`0x7FFAC12C7776 (6 samples, 0.20%)</title><rect x="9.9733%" y="3077" width="0.2001%" height="15" fill="rgb(239,101,34)" fg:x="299" fg:w="6"/><text x="10.2233%" y="3087.50"></text></g><g><title>`0x7FFAC12C78B4 (5 samples, 0.17%)</title><rect x="10.0067%" y="3061" width="0.1668%" height="15" fill="rgb(226,209,5)" fg:x="300" fg:w="5"/><text x="10.2567%" y="3071.50"></text></g><g><title>`0x7FFAC12C8619 (1 samples, 0.03%)</title><rect x="10.1401%" y="3045" width="0.0334%" height="15" fill="rgb(250,105,47)" fg:x="304" fg:w="1"/><text x="10.3901%" y="3055.50"></text></g><g><title>`0x7FFAC12D230F (1 samples, 0.03%)</title><rect x="10.1734%" y="3077" width="0.0334%" height="15" fill="rgb(230,72,3)" fg:x="305" fg:w="1"/><text x="10.4234%" y="3087.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::push (8 samples, 0.27%)</title><rect x="9.9733%" y="3333" width="0.2668%" height="15" fill="rgb(232,218,39)" fg:x="299" fg:w="8"/><text x="10.2233%" y="3343.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_mut_ptr (8 samples, 0.27%)</title><rect x="9.9733%" y="3317" width="0.2668%" height="15" fill="rgb(248,166,6)" fg:x="299" fg:w="8"/><text x="10.2233%" y="3327.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::ptr (8 samples, 0.27%)</title><rect x="9.9733%" y="3301" width="0.2668%" height="15" fill="rgb(247,89,20)" fg:x="299" fg:w="8"/><text x="10.2233%" y="3311.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (8 samples, 0.27%)</title><rect x="9.9733%" y="3285" width="0.2668%" height="15" fill="rgb(248,130,54)" fg:x="299" fg:w="8"/><text x="10.2233%" y="3295.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (8 samples, 0.27%)</title><rect x="9.9733%" y="3269" width="0.2668%" height="15" fill="rgb(234,196,4)" fg:x="299" fg:w="8"/><text x="10.2233%" y="3279.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::grow_one&lt;u8,alloc::alloc::Global&gt; (8 samples, 0.27%)</title><rect x="9.9733%" y="3253" width="0.2668%" height="15" fill="rgb(250,143,31)" fg:x="299" fg:w="8"/><text x="10.2233%" y="3263.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_one (8 samples, 0.27%)</title><rect x="9.9733%" y="3237" width="0.2668%" height="15" fill="rgb(211,110,34)" fg:x="299" fg:w="8"/><text x="10.2233%" y="3247.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (8 samples, 0.27%)</title><rect x="9.9733%" y="3221" width="0.2668%" height="15" fill="rgb(215,124,48)" fg:x="299" fg:w="8"/><text x="10.2233%" y="3231.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (8 samples, 0.27%)</title><rect x="9.9733%" y="3205" width="0.2668%" height="15" fill="rgb(216,46,13)" fg:x="299" fg:w="8"/><text x="10.2233%" y="3215.50"></text></g><g><title>boggle.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (8 samples, 0.27%)</title><rect x="9.9733%" y="3189" width="0.2668%" height="15" fill="rgb(205,184,25)" fg:x="299" fg:w="8"/><text x="10.2233%" y="3199.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (8 samples, 0.27%)</title><rect x="9.9733%" y="3173" width="0.2668%" height="15" fill="rgb(228,1,10)" fg:x="299" fg:w="8"/><text x="10.2233%" y="3183.50"></text></g><g><title>boggle.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (8 samples, 0.27%)</title><rect x="9.9733%" y="3157" width="0.2668%" height="15" fill="rgb(213,116,27)" fg:x="299" fg:w="8"/><text x="10.2233%" y="3167.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (8 samples, 0.27%)</title><rect x="9.9733%" y="3141" width="0.2668%" height="15" fill="rgb(241,95,50)" fg:x="299" fg:w="8"/><text x="10.2233%" y="3151.50"></text></g><g><title>`0x7FFAC12D5376 (8 samples, 0.27%)</title><rect x="9.9733%" y="3125" width="0.2668%" height="15" fill="rgb(238,48,32)" fg:x="299" fg:w="8"/><text x="10.2233%" y="3135.50"></text></g><g><title>`0x7FFAC12D54B5 (8 samples, 0.27%)</title><rect x="9.9733%" y="3109" width="0.2668%" height="15" fill="rgb(235,113,49)" fg:x="299" fg:w="8"/><text x="10.2233%" y="3119.50"></text></g><g><title>`0x7FFAC12D5E0B (2 samples, 0.07%)</title><rect x="10.1734%" y="3093" width="0.0667%" height="15" fill="rgb(205,127,43)" fg:x="305" fg:w="2"/><text x="10.4234%" y="3103.50"></text></g><g><title>`0x7FFAC12D2313 (1 samples, 0.03%)</title><rect x="10.2068%" y="3077" width="0.0334%" height="15" fill="rgb(250,162,2)" fg:x="306" fg:w="1"/><text x="10.4568%" y="3087.50"></text></g><g><title>boggle.exe`alloc::string::String::push (27 samples, 0.90%)</title><rect x="9.9733%" y="3349" width="0.9006%" height="15" fill="rgb(220,13,41)" fg:x="299" fg:w="27"/><text x="10.2233%" y="3359.50"></text></g><g><title>boggle.exe`core::char::methods::impl$0::len_utf8 (19 samples, 0.63%)</title><rect x="10.2402%" y="3333" width="0.6338%" height="15" fill="rgb(249,221,25)" fg:x="307" fg:w="19"/><text x="10.4902%" y="3343.50"></text></g><g><title>boggle.exe`core::char::methods::len_utf8 (19 samples, 0.63%)</title><rect x="10.2402%" y="3317" width="0.6338%" height="15" fill="rgb(215,208,19)" fg:x="307" fg:w="19"/><text x="10.4902%" y="3327.50"></text></g><g><title>`0x7FFAC12C6C9D (1 samples, 0.03%)</title><rect x="10.8739%" y="3157" width="0.0334%" height="15" fill="rgb(236,175,2)" fg:x="326" fg:w="1"/><text x="11.1239%" y="3167.50"></text></g><g><title>`0x7FFAC12C7F6D (1 samples, 0.03%)</title><rect x="10.9073%" y="3125" width="0.0334%" height="15" fill="rgb(241,52,2)" fg:x="327" fg:w="1"/><text x="11.1573%" y="3135.50"></text></g><g><title>`0x7FFAC12C8047 (1 samples, 0.03%)</title><rect x="10.9406%" y="3125" width="0.0334%" height="15" fill="rgb(248,140,14)" fg:x="328" fg:w="1"/><text x="11.1906%" y="3135.50"></text></g><g><title>`0x7FFAC12C814E (1 samples, 0.03%)</title><rect x="10.9740%" y="3125" width="0.0334%" height="15" fill="rgb(253,22,42)" fg:x="329" fg:w="1"/><text x="11.2240%" y="3135.50"></text></g><g><title>`0x7FFAC12C818E (1 samples, 0.03%)</title><rect x="11.0073%" y="3125" width="0.0334%" height="15" fill="rgb(234,61,47)" fg:x="330" fg:w="1"/><text x="11.2573%" y="3135.50"></text></g><g><title>boggle.exe`alloc::string::impl$102::to_string(ref$ (6 samples, 0.20%)</title><rect x="10.8739%" y="3349" width="0.2001%" height="15" fill="rgb(208,226,15)" fg:x="326" fg:w="6"/><text x="11.1239%" y="3359.50"></text></g><g><title>boggle.exe`alloc::string::impl$44::from(ref$ (6 samples, 0.20%)</title><rect x="10.8739%" y="3333" width="0.2001%" height="15" fill="rgb(217,221,4)" fg:x="326" fg:w="6"/><text x="11.1239%" y="3343.50"></text></g><g><title>boggle.exe`alloc::str::impl$4::to_owned(ref$ (6 samples, 0.20%)</title><rect x="10.8739%" y="3317" width="0.2001%" height="15" fill="rgb(212,174,34)" fg:x="326" fg:w="6"/><text x="11.1239%" y="3327.50"></text></g><g><title>boggle.exe`alloc::slice::impl$9::to_owned(ref$&lt;slice2$ (6 samples, 0.20%)</title><rect x="10.8739%" y="3301" width="0.2001%" height="15" fill="rgb(253,83,4)" fg:x="326" fg:w="6"/><text x="11.1239%" y="3311.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec(ref$&lt;slice2$ (6 samples, 0.20%)</title><rect x="10.8739%" y="3285" width="0.2001%" height="15" fill="rgb(250,195,49)" fg:x="326" fg:w="6"/><text x="11.1239%" y="3295.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec_in(ref$&lt;slice2$ (6 samples, 0.20%)</title><rect x="10.8739%" y="3269" width="0.2001%" height="15" fill="rgb(241,192,25)" fg:x="326" fg:w="6"/><text x="11.1239%" y="3279.50"></text></g><g><title>boggle.exe`alloc::slice::hack::to_vec(ref$&lt;slice2$ (6 samples, 0.20%)</title><rect x="10.8739%" y="3253" width="0.2001%" height="15" fill="rgb(208,124,10)" fg:x="326" fg:w="6"/><text x="11.1239%" y="3263.50"></text></g><g><title>boggle.exe`alloc::slice::hack::impl$1::to_vec(ref$&lt;slice2$ (6 samples, 0.20%)</title><rect x="10.8739%" y="3237" width="0.2001%" height="15" fill="rgb(222,33,0)" fg:x="326" fg:w="6"/><text x="11.1239%" y="3247.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (6 samples, 0.20%)</title><rect x="10.8739%" y="3221" width="0.2001%" height="15" fill="rgb(234,209,28)" fg:x="326" fg:w="6"/><text x="11.1239%" y="3231.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (6 samples, 0.20%)</title><rect x="10.8739%" y="3205" width="0.2001%" height="15" fill="rgb(224,11,23)" fg:x="326" fg:w="6"/><text x="11.1239%" y="3215.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (6 samples, 0.20%)</title><rect x="10.8739%" y="3189" width="0.2001%" height="15" fill="rgb(232,99,1)" fg:x="326" fg:w="6"/><text x="11.1239%" y="3199.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (6 samples, 0.20%)</title><rect x="10.8739%" y="3173" width="0.2001%" height="15" fill="rgb(237,95,45)" fg:x="326" fg:w="6"/><text x="11.1239%" y="3183.50"></text></g><g><title>`0x7FFAC12C7776 (5 samples, 0.17%)</title><rect x="10.9073%" y="3157" width="0.1668%" height="15" fill="rgb(208,109,11)" fg:x="327" fg:w="5"/><text x="11.1573%" y="3167.50"></text></g><g><title>`0x7FFAC12C78B4 (5 samples, 0.17%)</title><rect x="10.9073%" y="3141" width="0.1668%" height="15" fill="rgb(216,190,48)" fg:x="327" fg:w="5"/><text x="11.1573%" y="3151.50"></text></g><g><title>`0x7FFAC12C85B6 (1 samples, 0.03%)</title><rect x="11.0407%" y="3125" width="0.0334%" height="15" fill="rgb(251,171,36)" fg:x="331" fg:w="1"/><text x="11.2907%" y="3135.50"></text></g><g><title>`0x7FFAC12C7E80 (1 samples, 0.03%)</title><rect x="11.1074%" y="3157" width="0.0334%" height="15" fill="rgb(230,62,22)" fg:x="333" fg:w="1"/><text x="11.3574%" y="3167.50"></text></g><g><title>`0x7FFAC12C8047 (1 samples, 0.03%)</title><rect x="11.1408%" y="3157" width="0.0334%" height="15" fill="rgb(225,114,35)" fg:x="334" fg:w="1"/><text x="11.3908%" y="3167.50"></text></g><g><title>`0x7FFAC12C8109 (1 samples, 0.03%)</title><rect x="11.1741%" y="3157" width="0.0334%" height="15" fill="rgb(215,118,42)" fg:x="335" fg:w="1"/><text x="11.4241%" y="3167.50"></text></g><g><title>`0x7FFAC12C8178 (1 samples, 0.03%)</title><rect x="11.2075%" y="3157" width="0.0334%" height="15" fill="rgb(243,119,21)" fg:x="336" fg:w="1"/><text x="11.4575%" y="3167.50"></text></g><g><title>`0x7FFAC12C81E1 (1 samples, 0.03%)</title><rect x="11.2408%" y="3157" width="0.0334%" height="15" fill="rgb(252,177,53)" fg:x="337" fg:w="1"/><text x="11.4908%" y="3167.50"></text></g><g><title>`0x7FFAC12C7776 (6 samples, 0.20%)</title><rect x="11.1074%" y="3189" width="0.2001%" height="15" fill="rgb(237,209,29)" fg:x="333" fg:w="6"/><text x="11.3574%" y="3199.50"></text></g><g><title>`0x7FFAC12C78B4 (6 samples, 0.20%)</title><rect x="11.1074%" y="3173" width="0.2001%" height="15" fill="rgb(212,65,23)" fg:x="333" fg:w="6"/><text x="11.3574%" y="3183.50"></text></g><g><title>`0x7FFAC12C85E0 (1 samples, 0.03%)</title><rect x="11.2742%" y="3157" width="0.0334%" height="15" fill="rgb(230,222,46)" fg:x="338" fg:w="1"/><text x="11.5242%" y="3167.50"></text></g><g><title>boggle.exe`alloc::string::impl$6::clone (8 samples, 0.27%)</title><rect x="11.0740%" y="3333" width="0.2668%" height="15" fill="rgb(215,135,32)" fg:x="332" fg:w="8"/><text x="11.3240%" y="3343.50"></text></g><g><title>boggle.exe`alloc::vec::impl$11::clone (7 samples, 0.23%)</title><rect x="11.1074%" y="3317" width="0.2335%" height="15" fill="rgb(246,101,22)" fg:x="333" fg:w="7"/><text x="11.3574%" y="3327.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec_in (7 samples, 0.23%)</title><rect x="11.1074%" y="3301" width="0.2335%" height="15" fill="rgb(206,107,13)" fg:x="333" fg:w="7"/><text x="11.3574%" y="3311.50"></text></g><g><title>boggle.exe`alloc::slice::hack::to_vec (7 samples, 0.23%)</title><rect x="11.1074%" y="3285" width="0.2335%" height="15" fill="rgb(250,100,44)" fg:x="333" fg:w="7"/><text x="11.3574%" y="3295.50"></text></g><g><title>boggle.exe`alloc::slice::hack::impl$1::to_vec (7 samples, 0.23%)</title><rect x="11.1074%" y="3269" width="0.2335%" height="15" fill="rgb(231,147,38)" fg:x="333" fg:w="7"/><text x="11.3574%" y="3279.50"></text></g><g><title>boggle.exe`alloc::vec::Vec::with_capacity_in (7 samples, 0.23%)</title><rect x="11.1074%" y="3253" width="0.2335%" height="15" fill="rgb(229,8,40)" fg:x="333" fg:w="7"/><text x="11.3574%" y="3263.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec::with_capacity_in (7 samples, 0.23%)</title><rect x="11.1074%" y="3237" width="0.2335%" height="15" fill="rgb(221,135,30)" fg:x="333" fg:w="7"/><text x="11.3574%" y="3247.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner::with_capacity_in (7 samples, 0.23%)</title><rect x="11.1074%" y="3221" width="0.2335%" height="15" fill="rgb(249,193,18)" fg:x="333" fg:w="7"/><text x="11.3574%" y="3231.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner::try_allocate_in (7 samples, 0.23%)</title><rect x="11.1074%" y="3205" width="0.2335%" height="15" fill="rgb(209,133,39)" fg:x="333" fg:w="7"/><text x="11.3574%" y="3215.50"></text></g><g><title>boggle.exe`std::alloc::__default_lib_allocator::__rdl_alloc (1 samples, 0.03%)</title><rect x="11.3075%" y="3189" width="0.0334%" height="15" fill="rgb(232,100,14)" fg:x="339" fg:w="1"/><text x="11.5575%" y="3199.50"></text></g><g><title>boggle.exe`std::sys::alloc::windows::impl$0::alloc (1 samples, 0.03%)</title><rect x="11.3075%" y="3173" width="0.0334%" height="15" fill="rgb(224,185,1)" fg:x="339" fg:w="1"/><text x="11.5575%" y="3183.50"></text></g><g><title>boggle.exe`std::sys::alloc::windows::allocate (1 samples, 0.03%)</title><rect x="11.3075%" y="3157" width="0.0334%" height="15" fill="rgb(223,139,8)" fg:x="339" fg:w="1"/><text x="11.5575%" y="3167.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;::push (11 samples, 0.37%)</title><rect x="11.0740%" y="3349" width="0.3669%" height="15" fill="rgb(232,213,38)" fg:x="332" fg:w="11"/><text x="11.3240%" y="3359.50"></text></g><g><title>boggle.exe`core::ptr::write (3 samples, 0.10%)</title><rect x="11.3409%" y="3333" width="0.1001%" height="15" fill="rgb(207,94,22)" fg:x="340" fg:w="3"/><text x="11.5909%" y="3343.50"></text></g><g><title>boggle.exe`std::collections::hash::map::impl$36::into_iter(std::collections::hash::map::HashMap (32 samples, 1.07%)</title><rect x="11.4410%" y="3349" width="1.0674%" height="15" fill="rgb(219,183,54)" fg:x="343" fg:w="32"/><text x="11.6910%" y="3359.50"></text></g><g><title>boggle.exe`std::collections::hash::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;::iter (32 samples, 1.07%)</title><rect x="11.4410%" y="3333" width="1.0674%" height="15" fill="rgb(216,185,54)" fg:x="343" fg:w="32"/><text x="11.6910%" y="3343.50"></text></g><g><title>boggle.exe`hashbrown::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt;::iter (32 samples, 1.07%)</title><rect x="11.4410%" y="3317" width="1.0674%" height="15" fill="rgb(254,217,39)" fg:x="343" fg:w="32"/><text x="11.6910%" y="3327.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTable&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;::iter (32 samples, 1.07%)</title><rect x="11.4410%" y="3301" width="1.0674%" height="15" fill="rgb(240,178,23)" fg:x="343" fg:w="32"/><text x="11.6910%" y="3311.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::iter (32 samples, 1.07%)</title><rect x="11.4410%" y="3285" width="1.0674%" height="15" fill="rgb(218,11,47)" fg:x="343" fg:w="32"/><text x="11.6910%" y="3295.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawIterRange&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::new(unsigned char*, hashbrown::raw::Bucket&lt;tuple$ (31 samples, 1.03%)</title><rect x="11.4743%" y="3269" width="1.0340%" height="15" fill="rgb(218,51,51)" fg:x="344" fg:w="31"/><text x="11.7243%" y="3279.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::load_aligned (31 samples, 1.03%)</title><rect x="11.4743%" y="3253" width="1.0340%" height="15" fill="rgb(238,126,27)" fg:x="344" fg:w="31"/><text x="11.7243%" y="3263.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::match_empty_or_deleted (31 samples, 1.03%)</title><rect x="11.4743%" y="3237" width="1.0340%" height="15" fill="rgb(249,202,22)" fg:x="344" fg:w="31"/><text x="11.7243%" y="3247.50"></text></g><g><title>boggle.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (31 samples, 1.03%)</title><rect x="11.4743%" y="3221" width="1.0340%" height="15" fill="rgb(254,195,49)" fg:x="344" fg:w="31"/><text x="11.7243%" y="3231.50"></text></g><g><title>boggle.exe`alloc::string::String::pop (344 samples, 11.47%)</title><rect x="1.0674%" y="3413" width="11.4743%" height="15" fill="rgb(208,123,14)" fg:x="32" fg:w="344"/><text x="1.3174%" y="3423.50">boggle.exe`alloc:..</text></g><g><title>boggle.exe`alloc::string::impl$28::deref (344 samples, 11.47%)</title><rect x="1.0674%" y="3397" width="11.4743%" height="15" fill="rgb(224,200,8)" fg:x="32" fg:w="344"/><text x="1.3174%" y="3407.50">boggle.exe`alloc:..</text></g><g><title>boggle.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (344 samples, 11.47%)</title><rect x="1.0674%" y="3381" width="11.4743%" height="15" fill="rgb(217,61,36)" fg:x="32" fg:w="344"/><text x="1.3174%" y="3391.50">boggle.exe`alloc:..</text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::collect_words(boggle::utils::dict_trie::DictTrieNode*, ref$&lt;str$&gt;, alloc::vec::Vec (344 samples, 11.47%)</title><rect x="1.0674%" y="3365" width="11.4743%" height="15" fill="rgb(206,35,45)" fg:x="32" fg:w="344"/><text x="1.3174%" y="3375.50">boggle.exe`boggle..</text></g><g><title>boggle.exe`std::collections::hash::map::impl$39::next(std::collections::hash::map::Iter (1 samples, 0.03%)</title><rect x="12.5083%" y="3349" width="0.0334%" height="15" fill="rgb(217,65,33)" fg:x="375" fg:w="1"/><text x="12.7583%" y="3359.50"></text></g><g><title>boggle.exe`hashbrown::map::impl$60::next(hashbrown::map::Iter (1 samples, 0.03%)</title><rect x="12.5083%" y="3333" width="0.0334%" height="15" fill="rgb(222,158,48)" fg:x="375" fg:w="1"/><text x="12.7583%" y="3343.50"></text></g><g><title>boggle.exe`hashbrown::raw::impl$28::next(hashbrown::raw::RawIter&lt;tuple$ (1 samples, 0.03%)</title><rect x="12.5083%" y="3317" width="0.0334%" height="15" fill="rgb(254,2,54)" fg:x="375" fg:w="1"/><text x="12.7583%" y="3327.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawIterRange&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::next_impl (1 samples, 0.03%)</title><rect x="12.5083%" y="3301" width="0.0334%" height="15" fill="rgb(250,143,38)" fg:x="375" fg:w="1"/><text x="12.7583%" y="3311.50"></text></g><g><title>boggle.exe`hashbrown::raw::bitmask::impl$3::next (1 samples, 0.03%)</title><rect x="12.5083%" y="3285" width="0.0334%" height="15" fill="rgb(248,25,0)" fg:x="375" fg:w="1"/><text x="12.7583%" y="3295.50"></text></g><g><title>boggle.exe`hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.03%)</title><rect x="12.5083%" y="3269" width="0.0334%" height="15" fill="rgb(206,152,27)" fg:x="375" fg:w="1"/><text x="12.7583%" y="3279.50"></text></g><g><title>boggle.exe`hashbrown::raw::bitmask::BitMask::nonzero_trailing_zeros(core::num::nonzero::NonZero (1 samples, 0.03%)</title><rect x="12.5083%" y="3253" width="0.0334%" height="15" fill="rgb(240,77,30)" fg:x="375" fg:w="1"/><text x="12.7583%" y="3263.50"></text></g><g><title>boggle.exe`core::num::nonzero::NonZero&lt;u16&gt;::trailing_zeros(core::num::nonzero::NonZero (1 samples, 0.03%)</title><rect x="12.5083%" y="3237" width="0.0334%" height="15" fill="rgb(231,5,3)" fg:x="375" fg:w="1"/><text x="12.7583%" y="3247.50"></text></g><g><title>`0x7FFAC12D53E1 (1 samples, 0.03%)</title><rect x="12.6084%" y="3173" width="0.0334%" height="15" fill="rgb(207,226,32)" fg:x="378" fg:w="1"/><text x="12.8584%" y="3183.50"></text></g><g><title>`0x7FFAC12D5C80 (1 samples, 0.03%)</title><rect x="12.6418%" y="3157" width="0.0334%" height="15" fill="rgb(222,207,47)" fg:x="379" fg:w="1"/><text x="12.8918%" y="3167.50"></text></g><g><title>`0x7FFAC12C7F8E (1 samples, 0.03%)</title><rect x="12.6751%" y="3109" width="0.0334%" height="15" fill="rgb(229,115,45)" fg:x="380" fg:w="1"/><text x="12.9251%" y="3119.50"></text></g><g><title>`0x7FFAC12C7776 (6 samples, 0.20%)</title><rect x="12.6751%" y="3141" width="0.2001%" height="15" fill="rgb(224,191,6)" fg:x="380" fg:w="6"/><text x="12.9251%" y="3151.50"></text></g><g><title>`0x7FFAC12C78B4 (6 samples, 0.20%)</title><rect x="12.6751%" y="3125" width="0.2001%" height="15" fill="rgb(230,227,24)" fg:x="380" fg:w="6"/><text x="12.9251%" y="3135.50"></text></g><g><title>`0x7FFAC12C8047 (5 samples, 0.17%)</title><rect x="12.7085%" y="3109" width="0.1668%" height="15" fill="rgb(228,80,19)" fg:x="381" fg:w="5"/><text x="12.9585%" y="3119.50"></text></g><g><title>`0x7FFAC12D5DAA (7 samples, 0.23%)</title><rect x="12.6751%" y="3157" width="0.2335%" height="15" fill="rgb(247,229,0)" fg:x="380" fg:w="7"/><text x="12.9251%" y="3167.50"></text></g><g><title>`0x7FFAC12C7779 (1 samples, 0.03%)</title><rect x="12.8753%" y="3141" width="0.0334%" height="15" fill="rgb(237,194,15)" fg:x="386" fg:w="1"/><text x="13.1253%" y="3151.50"></text></g><g><title>`0x7FFAC12D22AD (1 samples, 0.03%)</title><rect x="12.9086%" y="3141" width="0.0334%" height="15" fill="rgb(219,203,20)" fg:x="387" fg:w="1"/><text x="13.1586%" y="3151.50"></text></g><g><title>`0x7FFAC12D2325 (1 samples, 0.03%)</title><rect x="12.9420%" y="3141" width="0.0334%" height="15" fill="rgb(234,128,8)" fg:x="388" fg:w="1"/><text x="13.1920%" y="3151.50"></text></g><g><title>`0x7FFAC12D23C2 (1 samples, 0.03%)</title><rect x="12.9753%" y="3141" width="0.0334%" height="15" fill="rgb(248,202,8)" fg:x="389" fg:w="1"/><text x="13.2253%" y="3151.50"></text></g><g><title>`0x7FFAC12D54B5 (12 samples, 0.40%)</title><rect x="12.6418%" y="3173" width="0.4003%" height="15" fill="rgb(206,104,37)" fg:x="379" fg:w="12"/><text x="12.8918%" y="3183.50"></text></g><g><title>`0x7FFAC12D5E0B (4 samples, 0.13%)</title><rect x="12.9086%" y="3157" width="0.1334%" height="15" fill="rgb(223,8,27)" fg:x="387" fg:w="4"/><text x="13.1586%" y="3167.50"></text></g><g><title>`0x7FFAC12D243D (1 samples, 0.03%)</title><rect x="13.0087%" y="3141" width="0.0334%" height="15" fill="rgb(216,217,28)" fg:x="390" fg:w="1"/><text x="13.2587%" y="3151.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (14 samples, 0.47%)</title><rect x="12.6084%" y="3237" width="0.4670%" height="15" fill="rgb(249,199,1)" fg:x="378" fg:w="14"/><text x="12.8584%" y="3247.50"></text></g><g><title>boggle.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (14 samples, 0.47%)</title><rect x="12.6084%" y="3221" width="0.4670%" height="15" fill="rgb(240,85,17)" fg:x="378" fg:w="14"/><text x="12.8584%" y="3231.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (14 samples, 0.47%)</title><rect x="12.6084%" y="3205" width="0.4670%" height="15" fill="rgb(206,108,45)" fg:x="378" fg:w="14"/><text x="12.8584%" y="3215.50"></text></g><g><title>`0x7FFAC12D5376 (14 samples, 0.47%)</title><rect x="12.6084%" y="3189" width="0.4670%" height="15" fill="rgb(245,210,41)" fg:x="378" fg:w="14"/><text x="12.8584%" y="3199.50"></text></g><g><title>`0x7FFAC12D54CF (1 samples, 0.03%)</title><rect x="13.0420%" y="3173" width="0.0334%" height="15" fill="rgb(206,13,37)" fg:x="391" fg:w="1"/><text x="13.2920%" y="3183.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::push (17 samples, 0.57%)</title><rect x="12.5417%" y="3397" width="0.5670%" height="15" fill="rgb(250,61,18)" fg:x="376" fg:w="17"/><text x="12.7917%" y="3407.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_mut_ptr (17 samples, 0.57%)</title><rect x="12.5417%" y="3381" width="0.5670%" height="15" fill="rgb(235,172,48)" fg:x="376" fg:w="17"/><text x="12.7917%" y="3391.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::ptr (17 samples, 0.57%)</title><rect x="12.5417%" y="3365" width="0.5670%" height="15" fill="rgb(249,201,17)" fg:x="376" fg:w="17"/><text x="12.7917%" y="3375.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (17 samples, 0.57%)</title><rect x="12.5417%" y="3349" width="0.5670%" height="15" fill="rgb(219,208,6)" fg:x="376" fg:w="17"/><text x="12.7917%" y="3359.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (17 samples, 0.57%)</title><rect x="12.5417%" y="3333" width="0.5670%" height="15" fill="rgb(248,31,23)" fg:x="376" fg:w="17"/><text x="12.7917%" y="3343.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::grow_one&lt;u8,alloc::alloc::Global&gt; (17 samples, 0.57%)</title><rect x="12.5417%" y="3317" width="0.5670%" height="15" fill="rgb(245,15,42)" fg:x="376" fg:w="17"/><text x="12.7917%" y="3327.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_one (16 samples, 0.53%)</title><rect x="12.5751%" y="3301" width="0.5337%" height="15" fill="rgb(222,217,39)" fg:x="377" fg:w="16"/><text x="12.8251%" y="3311.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (16 samples, 0.53%)</title><rect x="12.5751%" y="3285" width="0.5337%" height="15" fill="rgb(210,219,27)" fg:x="377" fg:w="16"/><text x="12.8251%" y="3295.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (15 samples, 0.50%)</title><rect x="12.6084%" y="3269" width="0.5003%" height="15" fill="rgb(252,166,36)" fg:x="378" fg:w="15"/><text x="12.8584%" y="3279.50"></text></g><g><title>boggle.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (15 samples, 0.50%)</title><rect x="12.6084%" y="3253" width="0.5003%" height="15" fill="rgb(245,132,34)" fg:x="378" fg:w="15"/><text x="12.8584%" y="3263.50"></text></g><g><title>boggle.exe`enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$&lt;u8&gt; &gt;,core::alloc::AllocError&gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$&lt;u8&gt; &gt;,core::alloc::AllocError&gt; &gt;, alloc::raw_vec::finish_grow::closure_env$0 (1 samples, 0.03%)</title><rect x="13.0754%" y="3237" width="0.0334%" height="15" fill="rgb(236,54,3)" fg:x="392" fg:w="1"/><text x="13.3254%" y="3247.50"></text></g><g><title>boggle.exe`alloc::string::String::push (38 samples, 1.27%)</title><rect x="12.5417%" y="3413" width="1.2675%" height="15" fill="rgb(241,173,43)" fg:x="376" fg:w="38"/><text x="12.7917%" y="3423.50"></text></g><g><title>boggle.exe`core::char::methods::impl$0::len_utf8 (21 samples, 0.70%)</title><rect x="13.1087%" y="3397" width="0.7005%" height="15" fill="rgb(215,190,9)" fg:x="393" fg:w="21"/><text x="13.3587%" y="3407.50"></text></g><g><title>boggle.exe`core::char::methods::len_utf8 (21 samples, 0.70%)</title><rect x="13.1087%" y="3381" width="0.7005%" height="15" fill="rgb(242,101,16)" fg:x="393" fg:w="21"/><text x="13.3587%" y="3391.50"></text></g><g><title>`0x7FFAC12C77E7 (1 samples, 0.03%)</title><rect x="13.8092%" y="3205" width="0.0334%" height="15" fill="rgb(223,190,21)" fg:x="414" fg:w="1"/><text x="14.0592%" y="3215.50"></text></g><g><title>`0x7FFAC12C780A (1 samples, 0.03%)</title><rect x="13.8426%" y="3205" width="0.0334%" height="15" fill="rgb(215,228,25)" fg:x="415" fg:w="1"/><text x="14.0926%" y="3215.50"></text></g><g><title>`0x7FFAC12C8047 (3 samples, 0.10%)</title><rect x="13.8759%" y="3189" width="0.1001%" height="15" fill="rgb(225,36,22)" fg:x="416" fg:w="3"/><text x="14.1259%" y="3199.50"></text></g><g><title>`0x7FFAC12C8060 (1 samples, 0.03%)</title><rect x="13.9760%" y="3189" width="0.0334%" height="15" fill="rgb(251,106,46)" fg:x="419" fg:w="1"/><text x="14.2260%" y="3199.50"></text></g><g><title>`0x7FFAC12C7776 (7 samples, 0.23%)</title><rect x="13.8092%" y="3221" width="0.2335%" height="15" fill="rgb(208,90,1)" fg:x="414" fg:w="7"/><text x="14.0592%" y="3231.50"></text></g><g><title>`0x7FFAC12C78B4 (5 samples, 0.17%)</title><rect x="13.8759%" y="3205" width="0.1668%" height="15" fill="rgb(243,10,4)" fg:x="416" fg:w="5"/><text x="14.1259%" y="3215.50"></text></g><g><title>`0x7FFAC12C8142 (1 samples, 0.03%)</title><rect x="14.0093%" y="3189" width="0.0334%" height="15" fill="rgb(212,137,27)" fg:x="420" fg:w="1"/><text x="14.2593%" y="3199.50"></text></g><g><title>`0x7FFAC12C7791 (1 samples, 0.03%)</title><rect x="14.0427%" y="3221" width="0.0334%" height="15" fill="rgb(231,220,49)" fg:x="421" fg:w="1"/><text x="14.2927%" y="3231.50"></text></g><g><title>boggle.exe`alloc::string::impl$102::to_string(ref$ (10 samples, 0.33%)</title><rect x="13.8092%" y="3413" width="0.3336%" height="15" fill="rgb(237,96,20)" fg:x="414" fg:w="10"/><text x="14.0592%" y="3423.50"></text></g><g><title>boggle.exe`alloc::string::impl$44::from(ref$ (10 samples, 0.33%)</title><rect x="13.8092%" y="3397" width="0.3336%" height="15" fill="rgb(239,229,30)" fg:x="414" fg:w="10"/><text x="14.0592%" y="3407.50"></text></g><g><title>boggle.exe`alloc::str::impl$4::to_owned(ref$ (10 samples, 0.33%)</title><rect x="13.8092%" y="3381" width="0.3336%" height="15" fill="rgb(219,65,33)" fg:x="414" fg:w="10"/><text x="14.0592%" y="3391.50"></text></g><g><title>boggle.exe`alloc::slice::impl$9::to_owned(ref$&lt;slice2$ (10 samples, 0.33%)</title><rect x="13.8092%" y="3365" width="0.3336%" height="15" fill="rgb(243,134,7)" fg:x="414" fg:w="10"/><text x="14.0592%" y="3375.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec(ref$&lt;slice2$ (10 samples, 0.33%)</title><rect x="13.8092%" y="3349" width="0.3336%" height="15" fill="rgb(216,177,54)" fg:x="414" fg:w="10"/><text x="14.0592%" y="3359.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec_in(ref$&lt;slice2$ (10 samples, 0.33%)</title><rect x="13.8092%" y="3333" width="0.3336%" height="15" fill="rgb(211,160,20)" fg:x="414" fg:w="10"/><text x="14.0592%" y="3343.50"></text></g><g><title>boggle.exe`alloc::slice::hack::to_vec(ref$&lt;slice2$ (10 samples, 0.33%)</title><rect x="13.8092%" y="3317" width="0.3336%" height="15" fill="rgb(239,85,39)" fg:x="414" fg:w="10"/><text x="14.0592%" y="3327.50"></text></g><g><title>boggle.exe`alloc::slice::hack::impl$1::to_vec(ref$&lt;slice2$ (10 samples, 0.33%)</title><rect x="13.8092%" y="3301" width="0.3336%" height="15" fill="rgb(232,125,22)" fg:x="414" fg:w="10"/><text x="14.0592%" y="3311.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (10 samples, 0.33%)</title><rect x="13.8092%" y="3285" width="0.3336%" height="15" fill="rgb(244,57,34)" fg:x="414" fg:w="10"/><text x="14.0592%" y="3295.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (10 samples, 0.33%)</title><rect x="13.8092%" y="3269" width="0.3336%" height="15" fill="rgb(214,203,32)" fg:x="414" fg:w="10"/><text x="14.0592%" y="3279.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (10 samples, 0.33%)</title><rect x="13.8092%" y="3253" width="0.3336%" height="15" fill="rgb(207,58,43)" fg:x="414" fg:w="10"/><text x="14.0592%" y="3263.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (10 samples, 0.33%)</title><rect x="13.8092%" y="3237" width="0.3336%" height="15" fill="rgb(215,193,15)" fg:x="414" fg:w="10"/><text x="14.0592%" y="3247.50"></text></g><g><title>boggle.exe`std::alloc::__default_lib_allocator::__rdl_alloc (2 samples, 0.07%)</title><rect x="14.0761%" y="3221" width="0.0667%" height="15" fill="rgb(232,15,44)" fg:x="422" fg:w="2"/><text x="14.3261%" y="3231.50"></text></g><g><title>boggle.exe`std::sys::alloc::windows::impl$0::alloc (2 samples, 0.07%)</title><rect x="14.0761%" y="3205" width="0.0667%" height="15" fill="rgb(212,3,48)" fg:x="422" fg:w="2"/><text x="14.3261%" y="3215.50"></text></g><g><title>boggle.exe`std::sys::alloc::windows::allocate (2 samples, 0.07%)</title><rect x="14.0761%" y="3189" width="0.0667%" height="15" fill="rgb(218,128,7)" fg:x="422" fg:w="2"/><text x="14.3261%" y="3199.50"></text></g><g><title>`0x7FFAC12C8047 (2 samples, 0.07%)</title><rect x="14.1761%" y="3221" width="0.0667%" height="15" fill="rgb(226,216,39)" fg:x="425" fg:w="2"/><text x="14.4261%" y="3231.50"></text></g><g><title>`0x7FFAC12C813F (1 samples, 0.03%)</title><rect x="14.2428%" y="3221" width="0.0334%" height="15" fill="rgb(243,47,51)" fg:x="427" fg:w="1"/><text x="14.4928%" y="3231.50"></text></g><g><title>boggle.exe`alloc::string::impl$6::clone (5 samples, 0.17%)</title><rect x="14.1428%" y="3397" width="0.1668%" height="15" fill="rgb(241,183,40)" fg:x="424" fg:w="5"/><text x="14.3928%" y="3407.50"></text></g><g><title>boggle.exe`alloc::vec::impl$11::clone (5 samples, 0.17%)</title><rect x="14.1428%" y="3381" width="0.1668%" height="15" fill="rgb(231,217,32)" fg:x="424" fg:w="5"/><text x="14.3928%" y="3391.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec_in (5 samples, 0.17%)</title><rect x="14.1428%" y="3365" width="0.1668%" height="15" fill="rgb(229,61,38)" fg:x="424" fg:w="5"/><text x="14.3928%" y="3375.50"></text></g><g><title>boggle.exe`alloc::slice::hack::to_vec (5 samples, 0.17%)</title><rect x="14.1428%" y="3349" width="0.1668%" height="15" fill="rgb(225,210,5)" fg:x="424" fg:w="5"/><text x="14.3928%" y="3359.50"></text></g><g><title>boggle.exe`alloc::slice::hack::impl$1::to_vec (5 samples, 0.17%)</title><rect x="14.1428%" y="3333" width="0.1668%" height="15" fill="rgb(231,79,45)" fg:x="424" fg:w="5"/><text x="14.3928%" y="3343.50"></text></g><g><title>boggle.exe`alloc::vec::Vec::with_capacity_in (5 samples, 0.17%)</title><rect x="14.1428%" y="3317" width="0.1668%" height="15" fill="rgb(224,100,7)" fg:x="424" fg:w="5"/><text x="14.3928%" y="3327.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec::with_capacity_in (5 samples, 0.17%)</title><rect x="14.1428%" y="3301" width="0.1668%" height="15" fill="rgb(241,198,18)" fg:x="424" fg:w="5"/><text x="14.3928%" y="3311.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner::with_capacity_in (5 samples, 0.17%)</title><rect x="14.1428%" y="3285" width="0.1668%" height="15" fill="rgb(252,97,53)" fg:x="424" fg:w="5"/><text x="14.3928%" y="3295.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner::try_allocate_in (5 samples, 0.17%)</title><rect x="14.1428%" y="3269" width="0.1668%" height="15" fill="rgb(220,88,7)" fg:x="424" fg:w="5"/><text x="14.3928%" y="3279.50"></text></g><g><title>`0x7FFAC12C7776 (5 samples, 0.17%)</title><rect x="14.1428%" y="3253" width="0.1668%" height="15" fill="rgb(213,176,14)" fg:x="424" fg:w="5"/><text x="14.3928%" y="3263.50"></text></g><g><title>`0x7FFAC12C78B4 (4 samples, 0.13%)</title><rect x="14.1761%" y="3237" width="0.1334%" height="15" fill="rgb(246,73,7)" fg:x="425" fg:w="4"/><text x="14.4261%" y="3247.50"></text></g><g><title>`0x7FFAC12C818E (1 samples, 0.03%)</title><rect x="14.2762%" y="3221" width="0.0334%" height="15" fill="rgb(245,64,36)" fg:x="428" fg:w="1"/><text x="14.5262%" y="3231.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;::push (6 samples, 0.20%)</title><rect x="14.1428%" y="3413" width="0.2001%" height="15" fill="rgb(245,80,10)" fg:x="424" fg:w="6"/><text x="14.3928%" y="3423.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;::as_mut_ptr (1 samples, 0.03%)</title><rect x="14.3095%" y="3397" width="0.0334%" height="15" fill="rgb(232,107,50)" fg:x="429" fg:w="1"/><text x="14.5595%" y="3407.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;alloc::string::String,alloc::alloc::Global&gt;::ptr (1 samples, 0.03%)</title><rect x="14.3095%" y="3381" width="0.0334%" height="15" fill="rgb(253,3,0)" fg:x="429" fg:w="1"/><text x="14.5595%" y="3391.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (1 samples, 0.03%)</title><rect x="14.3095%" y="3365" width="0.0334%" height="15" fill="rgb(212,99,53)" fg:x="429" fg:w="1"/><text x="14.5595%" y="3375.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (1 samples, 0.03%)</title><rect x="14.3095%" y="3349" width="0.0334%" height="15" fill="rgb(249,111,54)" fg:x="429" fg:w="1"/><text x="14.5595%" y="3359.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;std::ffi::os_str::OsString,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;::grow_one&lt;alloc::vec::Vec&lt;std::ffi::os_str::OsString,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; (1 samples, 0.03%)</title><rect x="14.3095%" y="3333" width="0.0334%" height="15" fill="rgb(249,55,30)" fg:x="429" fg:w="1"/><text x="14.5595%" y="3343.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_one (1 samples, 0.03%)</title><rect x="14.3095%" y="3317" width="0.0334%" height="15" fill="rgb(237,47,42)" fg:x="429" fg:w="1"/><text x="14.5595%" y="3327.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (1 samples, 0.03%)</title><rect x="14.3095%" y="3301" width="0.0334%" height="15" fill="rgb(211,20,18)" fg:x="429" fg:w="1"/><text x="14.5595%" y="3311.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (1 samples, 0.03%)</title><rect x="14.3095%" y="3285" width="0.0334%" height="15" fill="rgb(231,203,46)" fg:x="429" fg:w="1"/><text x="14.5595%" y="3295.50"></text></g><g><title>boggle.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="14.3095%" y="3269" width="0.0334%" height="15" fill="rgb(237,142,3)" fg:x="429" fg:w="1"/><text x="14.5595%" y="3279.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="14.3095%" y="3253" width="0.0334%" height="15" fill="rgb(241,107,1)" fg:x="429" fg:w="1"/><text x="14.5595%" y="3263.50"></text></g><g><title>boggle.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="14.3095%" y="3237" width="0.0334%" height="15" fill="rgb(229,83,13)" fg:x="429" fg:w="1"/><text x="14.5595%" y="3247.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="14.3095%" y="3221" width="0.0334%" height="15" fill="rgb(241,91,40)" fg:x="429" fg:w="1"/><text x="14.5595%" y="3231.50"></text></g><g><title>`0x7FFAC12D5376 (1 samples, 0.03%)</title><rect x="14.3095%" y="3205" width="0.0334%" height="15" fill="rgb(225,3,45)" fg:x="429" fg:w="1"/><text x="14.5595%" y="3215.50"></text></g><g><title>`0x7FFAC12D54B5 (1 samples, 0.03%)</title><rect x="14.3095%" y="3189" width="0.0334%" height="15" fill="rgb(244,223,14)" fg:x="429" fg:w="1"/><text x="14.5595%" y="3199.50"></text></g><g><title>`0x7FFAC12D633D (1 samples, 0.03%)</title><rect x="14.3095%" y="3173" width="0.0334%" height="15" fill="rgb(224,124,37)" fg:x="429" fg:w="1"/><text x="14.5595%" y="3183.50"></text></g><g><title>`0x7FFAC12C7776 (1 samples, 0.03%)</title><rect x="14.3095%" y="3157" width="0.0334%" height="15" fill="rgb(251,171,30)" fg:x="429" fg:w="1"/><text x="14.5595%" y="3167.50"></text></g><g><title>`0x7FFAC12C7AFE (1 samples, 0.03%)</title><rect x="14.3095%" y="3141" width="0.0334%" height="15" fill="rgb(236,46,54)" fg:x="429" fg:w="1"/><text x="14.5595%" y="3151.50"></text></g><g><title>`0x7FFAC12AFC84 (1 samples, 0.03%)</title><rect x="14.3095%" y="3125" width="0.0334%" height="15" fill="rgb(245,213,5)" fg:x="429" fg:w="1"/><text x="14.5595%" y="3135.50"></text></g><g><title>boggle.exe`alloc::string::String::pop (440 samples, 14.68%)</title><rect x="0.8339%" y="3477" width="14.6765%" height="15" fill="rgb(230,144,27)" fg:x="25" fg:w="440"/><text x="1.0839%" y="3487.50">boggle.exe`alloc::stri..</text></g><g><title>boggle.exe`alloc::string::impl$28::deref (440 samples, 14.68%)</title><rect x="0.8339%" y="3461" width="14.6765%" height="15" fill="rgb(220,86,6)" fg:x="25" fg:w="440"/><text x="1.0839%" y="3471.50">boggle.exe`alloc::stri..</text></g><g><title>boggle.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (440 samples, 14.68%)</title><rect x="0.8339%" y="3445" width="14.6765%" height="15" fill="rgb(240,20,13)" fg:x="25" fg:w="440"/><text x="1.0839%" y="3455.50">boggle.exe`alloc::vec:..</text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::collect_words(boggle::utils::dict_trie::DictTrieNode*, ref$&lt;str$&gt;, alloc::vec::Vec (440 samples, 14.68%)</title><rect x="0.8339%" y="3429" width="14.6765%" height="15" fill="rgb(217,89,34)" fg:x="25" fg:w="440"/><text x="1.0839%" y="3439.50">boggle.exe`boggle::uti..</text></g><g><title>boggle.exe`std::collections::hash::map::impl$36::into_iter(std::collections::hash::map::HashMap (35 samples, 1.17%)</title><rect x="14.3429%" y="3413" width="1.1674%" height="15" fill="rgb(229,13,5)" fg:x="430" fg:w="35"/><text x="14.5929%" y="3423.50"></text></g><g><title>boggle.exe`std::collections::hash::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;::iter (35 samples, 1.17%)</title><rect x="14.3429%" y="3397" width="1.1674%" height="15" fill="rgb(244,67,35)" fg:x="430" fg:w="35"/><text x="14.5929%" y="3407.50"></text></g><g><title>boggle.exe`hashbrown::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt;::iter (35 samples, 1.17%)</title><rect x="14.3429%" y="3381" width="1.1674%" height="15" fill="rgb(221,40,2)" fg:x="430" fg:w="35"/><text x="14.5929%" y="3391.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTable&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;::iter (35 samples, 1.17%)</title><rect x="14.3429%" y="3365" width="1.1674%" height="15" fill="rgb(237,157,21)" fg:x="430" fg:w="35"/><text x="14.5929%" y="3375.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::iter (35 samples, 1.17%)</title><rect x="14.3429%" y="3349" width="1.1674%" height="15" fill="rgb(222,94,11)" fg:x="430" fg:w="35"/><text x="14.5929%" y="3359.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawIterRange&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::new(unsigned char*, hashbrown::raw::Bucket&lt;tuple$ (35 samples, 1.17%)</title><rect x="14.3429%" y="3333" width="1.1674%" height="15" fill="rgb(249,113,6)" fg:x="430" fg:w="35"/><text x="14.5929%" y="3343.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::load_aligned (35 samples, 1.17%)</title><rect x="14.3429%" y="3317" width="1.1674%" height="15" fill="rgb(238,137,36)" fg:x="430" fg:w="35"/><text x="14.5929%" y="3327.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::match_empty_or_deleted (35 samples, 1.17%)</title><rect x="14.3429%" y="3301" width="1.1674%" height="15" fill="rgb(210,102,26)" fg:x="430" fg:w="35"/><text x="14.5929%" y="3311.50"></text></g><g><title>boggle.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (35 samples, 1.17%)</title><rect x="14.3429%" y="3285" width="1.1674%" height="15" fill="rgb(218,30,30)" fg:x="430" fg:w="35"/><text x="14.5929%" y="3295.50"></text></g><g><title>`0x7FFAC12D541C (1 samples, 0.03%)</title><rect x="15.5103%" y="3237" width="0.0334%" height="15" fill="rgb(214,67,26)" fg:x="465" fg:w="1"/><text x="15.7603%" y="3247.50"></text></g><g><title>`0x7FFAC12D5448 (1 samples, 0.03%)</title><rect x="15.5437%" y="3237" width="0.0334%" height="15" fill="rgb(251,9,53)" fg:x="466" fg:w="1"/><text x="15.7937%" y="3247.50"></text></g><g><title>`0x7FFAC12D5CDB (1 samples, 0.03%)</title><rect x="15.5771%" y="3221" width="0.0334%" height="15" fill="rgb(228,204,25)" fg:x="467" fg:w="1"/><text x="15.8271%" y="3231.50"></text></g><g><title>`0x7FFAC12C787B (1 samples, 0.03%)</title><rect x="15.6104%" y="3189" width="0.0334%" height="15" fill="rgb(207,153,8)" fg:x="468" fg:w="1"/><text x="15.8604%" y="3199.50"></text></g><g><title>`0x7FFAC12C803A (1 samples, 0.03%)</title><rect x="15.6438%" y="3173" width="0.0334%" height="15" fill="rgb(242,9,16)" fg:x="469" fg:w="1"/><text x="15.8938%" y="3183.50"></text></g><g><title>`0x7FFAC12C8047 (5 samples, 0.17%)</title><rect x="15.6771%" y="3173" width="0.1668%" height="15" fill="rgb(217,211,10)" fg:x="470" fg:w="5"/><text x="15.9271%" y="3183.50"></text></g><g><title>`0x7FFAC12D5DAA (8 samples, 0.27%)</title><rect x="15.6104%" y="3221" width="0.2668%" height="15" fill="rgb(219,228,52)" fg:x="468" fg:w="8"/><text x="15.8604%" y="3231.50"></text></g><g><title>`0x7FFAC12C7776 (8 samples, 0.27%)</title><rect x="15.6104%" y="3205" width="0.2668%" height="15" fill="rgb(231,92,29)" fg:x="468" fg:w="8"/><text x="15.8604%" y="3215.50"></text></g><g><title>`0x7FFAC12C78B4 (7 samples, 0.23%)</title><rect x="15.6438%" y="3189" width="0.2335%" height="15" fill="rgb(232,8,23)" fg:x="469" fg:w="7"/><text x="15.8938%" y="3199.50"></text></g><g><title>`0x7FFAC12C814B (1 samples, 0.03%)</title><rect x="15.8439%" y="3173" width="0.0334%" height="15" fill="rgb(216,211,34)" fg:x="475" fg:w="1"/><text x="16.0939%" y="3183.50"></text></g><g><title>`0x7FFAC1404ED1 (1 samples, 0.03%)</title><rect x="15.8773%" y="3205" width="0.0334%" height="15" fill="rgb(236,151,0)" fg:x="476" fg:w="1"/><text x="16.1273%" y="3215.50"></text></g><g><title>`0x7FFAC12D5DF9 (2 samples, 0.07%)</title><rect x="15.8773%" y="3221" width="0.0667%" height="15" fill="rgb(209,168,3)" fg:x="476" fg:w="2"/><text x="16.1273%" y="3231.50"></text></g><g><title>`0x7FFAC1404EEE (1 samples, 0.03%)</title><rect x="15.9106%" y="3205" width="0.0334%" height="15" fill="rgb(208,129,28)" fg:x="477" fg:w="1"/><text x="16.1606%" y="3215.50"></text></g><g><title>`0x7FFAC12D2220 (2 samples, 0.07%)</title><rect x="15.9440%" y="3205" width="0.0667%" height="15" fill="rgb(229,78,22)" fg:x="478" fg:w="2"/><text x="16.1940%" y="3215.50"></text></g><g><title>`0x7FFAC12D2235 (1 samples, 0.03%)</title><rect x="16.0107%" y="3205" width="0.0334%" height="15" fill="rgb(228,187,13)" fg:x="480" fg:w="1"/><text x="16.2607%" y="3215.50"></text></g><g><title>`0x7FFAC12D23A7 (1 samples, 0.03%)</title><rect x="16.0440%" y="3205" width="0.0334%" height="15" fill="rgb(240,119,24)" fg:x="481" fg:w="1"/><text x="16.2940%" y="3215.50"></text></g><g><title>`0x7FFAC12D54B5 (16 samples, 0.53%)</title><rect x="15.5771%" y="3237" width="0.5337%" height="15" fill="rgb(209,194,42)" fg:x="467" fg:w="16"/><text x="15.8271%" y="3247.50"></text></g><g><title>`0x7FFAC12D5E0B (5 samples, 0.17%)</title><rect x="15.9440%" y="3221" width="0.1668%" height="15" fill="rgb(247,200,46)" fg:x="478" fg:w="5"/><text x="16.1940%" y="3231.50"></text></g><g><title>`0x7FFAC12D23DD (1 samples, 0.03%)</title><rect x="16.0774%" y="3205" width="0.0334%" height="15" fill="rgb(218,76,16)" fg:x="482" fg:w="1"/><text x="16.3274%" y="3215.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::push (19 samples, 0.63%)</title><rect x="15.5103%" y="3461" width="0.6338%" height="15" fill="rgb(225,21,48)" fg:x="465" fg:w="19"/><text x="15.7603%" y="3471.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_mut_ptr (19 samples, 0.63%)</title><rect x="15.5103%" y="3445" width="0.6338%" height="15" fill="rgb(239,223,50)" fg:x="465" fg:w="19"/><text x="15.7603%" y="3455.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::ptr (19 samples, 0.63%)</title><rect x="15.5103%" y="3429" width="0.6338%" height="15" fill="rgb(244,45,21)" fg:x="465" fg:w="19"/><text x="15.7603%" y="3439.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (19 samples, 0.63%)</title><rect x="15.5103%" y="3413" width="0.6338%" height="15" fill="rgb(232,33,43)" fg:x="465" fg:w="19"/><text x="15.7603%" y="3423.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (19 samples, 0.63%)</title><rect x="15.5103%" y="3397" width="0.6338%" height="15" fill="rgb(209,8,3)" fg:x="465" fg:w="19"/><text x="15.7603%" y="3407.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::grow_one&lt;u8,alloc::alloc::Global&gt; (19 samples, 0.63%)</title><rect x="15.5103%" y="3381" width="0.6338%" height="15" fill="rgb(214,25,53)" fg:x="465" fg:w="19"/><text x="15.7603%" y="3391.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_one (19 samples, 0.63%)</title><rect x="15.5103%" y="3365" width="0.6338%" height="15" fill="rgb(254,186,54)" fg:x="465" fg:w="19"/><text x="15.7603%" y="3375.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (19 samples, 0.63%)</title><rect x="15.5103%" y="3349" width="0.6338%" height="15" fill="rgb(208,174,49)" fg:x="465" fg:w="19"/><text x="15.7603%" y="3359.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (19 samples, 0.63%)</title><rect x="15.5103%" y="3333" width="0.6338%" height="15" fill="rgb(233,191,51)" fg:x="465" fg:w="19"/><text x="15.7603%" y="3343.50"></text></g><g><title>boggle.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (19 samples, 0.63%)</title><rect x="15.5103%" y="3317" width="0.6338%" height="15" fill="rgb(222,134,10)" fg:x="465" fg:w="19"/><text x="15.7603%" y="3327.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (19 samples, 0.63%)</title><rect x="15.5103%" y="3301" width="0.6338%" height="15" fill="rgb(230,226,20)" fg:x="465" fg:w="19"/><text x="15.7603%" y="3311.50"></text></g><g><title>boggle.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (19 samples, 0.63%)</title><rect x="15.5103%" y="3285" width="0.6338%" height="15" fill="rgb(251,111,25)" fg:x="465" fg:w="19"/><text x="15.7603%" y="3295.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (19 samples, 0.63%)</title><rect x="15.5103%" y="3269" width="0.6338%" height="15" fill="rgb(224,40,46)" fg:x="465" fg:w="19"/><text x="15.7603%" y="3279.50"></text></g><g><title>`0x7FFAC12D5376 (19 samples, 0.63%)</title><rect x="15.5103%" y="3253" width="0.6338%" height="15" fill="rgb(236,108,47)" fg:x="465" fg:w="19"/><text x="15.7603%" y="3263.50"></text></g><g><title>`0x7FFAC12D54FB (1 samples, 0.03%)</title><rect x="16.1107%" y="3237" width="0.0334%" height="15" fill="rgb(234,93,0)" fg:x="483" fg:w="1"/><text x="16.3607%" y="3247.50"></text></g><g><title>boggle.exe`alloc::string::String::push (33 samples, 1.10%)</title><rect x="15.5103%" y="3477" width="1.1007%" height="15" fill="rgb(224,213,32)" fg:x="465" fg:w="33"/><text x="15.7603%" y="3487.50"></text></g><g><title>boggle.exe`core::char::methods::impl$0::len_utf8 (14 samples, 0.47%)</title><rect x="16.1441%" y="3461" width="0.4670%" height="15" fill="rgb(251,11,48)" fg:x="484" fg:w="14"/><text x="16.3941%" y="3471.50"></text></g><g><title>boggle.exe`core::char::methods::len_utf8 (14 samples, 0.47%)</title><rect x="16.1441%" y="3445" width="0.4670%" height="15" fill="rgb(236,173,5)" fg:x="484" fg:w="14"/><text x="16.3941%" y="3455.50"></text></g><g><title>`0x7FFAB8910254 (1 samples, 0.03%)</title><rect x="16.6444%" y="3413" width="0.0334%" height="15" fill="rgb(230,95,12)" fg:x="499" fg:w="1"/><text x="16.8944%" y="3423.50"></text></g><g><title>`0x7FFAC12C77D0 (1 samples, 0.03%)</title><rect x="16.6778%" y="3269" width="0.0334%" height="15" fill="rgb(232,209,1)" fg:x="500" fg:w="1"/><text x="16.9278%" y="3279.50"></text></g><g><title>`0x7FFAC12C7FE4 (1 samples, 0.03%)</title><rect x="16.7111%" y="3253" width="0.0334%" height="15" fill="rgb(232,6,1)" fg:x="501" fg:w="1"/><text x="16.9611%" y="3263.50"></text></g><g><title>`0x7FFAC12C7FF0 (1 samples, 0.03%)</title><rect x="16.7445%" y="3253" width="0.0334%" height="15" fill="rgb(210,224,50)" fg:x="502" fg:w="1"/><text x="16.9945%" y="3263.50"></text></g><g><title>`0x7FFAC12C801A (1 samples, 0.03%)</title><rect x="16.7779%" y="3253" width="0.0334%" height="15" fill="rgb(228,127,35)" fg:x="503" fg:w="1"/><text x="17.0279%" y="3263.50"></text></g><g><title>`0x7FFAC12C8047 (2 samples, 0.07%)</title><rect x="16.8112%" y="3253" width="0.0667%" height="15" fill="rgb(245,102,45)" fg:x="504" fg:w="2"/><text x="17.0612%" y="3263.50"></text></g><g><title>`0x7FFAC12C7776 (7 samples, 0.23%)</title><rect x="16.6778%" y="3285" width="0.2335%" height="15" fill="rgb(214,1,49)" fg:x="500" fg:w="7"/><text x="16.9278%" y="3295.50"></text></g><g><title>`0x7FFAC12C78B4 (6 samples, 0.20%)</title><rect x="16.7111%" y="3269" width="0.2001%" height="15" fill="rgb(226,163,40)" fg:x="501" fg:w="6"/><text x="16.9611%" y="3279.50"></text></g><g><title>`0x7FFAC12C80FC (1 samples, 0.03%)</title><rect x="16.8779%" y="3253" width="0.0334%" height="15" fill="rgb(239,212,28)" fg:x="506" fg:w="1"/><text x="17.1279%" y="3263.50"></text></g><g><title>boggle.exe`alloc::string::impl$102::to_string(ref$ (10 samples, 0.33%)</title><rect x="16.6111%" y="3477" width="0.3336%" height="15" fill="rgb(220,20,13)" fg:x="498" fg:w="10"/><text x="16.8611%" y="3487.50"></text></g><g><title>boggle.exe`alloc::string::impl$44::from(ref$ (10 samples, 0.33%)</title><rect x="16.6111%" y="3461" width="0.3336%" height="15" fill="rgb(210,164,35)" fg:x="498" fg:w="10"/><text x="16.8611%" y="3471.50"></text></g><g><title>boggle.exe`alloc::str::impl$4::to_owned(ref$ (10 samples, 0.33%)</title><rect x="16.6111%" y="3445" width="0.3336%" height="15" fill="rgb(248,109,41)" fg:x="498" fg:w="10"/><text x="16.8611%" y="3455.50"></text></g><g><title>boggle.exe`alloc::slice::impl$9::to_owned(ref$&lt;slice2$ (10 samples, 0.33%)</title><rect x="16.6111%" y="3429" width="0.3336%" height="15" fill="rgb(238,23,50)" fg:x="498" fg:w="10"/><text x="16.8611%" y="3439.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec(ref$&lt;slice2$ (8 samples, 0.27%)</title><rect x="16.6778%" y="3413" width="0.2668%" height="15" fill="rgb(211,48,49)" fg:x="500" fg:w="8"/><text x="16.9278%" y="3423.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec_in(ref$&lt;slice2$ (8 samples, 0.27%)</title><rect x="16.6778%" y="3397" width="0.2668%" height="15" fill="rgb(223,36,21)" fg:x="500" fg:w="8"/><text x="16.9278%" y="3407.50"></text></g><g><title>boggle.exe`alloc::slice::hack::to_vec(ref$&lt;slice2$ (8 samples, 0.27%)</title><rect x="16.6778%" y="3381" width="0.2668%" height="15" fill="rgb(207,123,46)" fg:x="500" fg:w="8"/><text x="16.9278%" y="3391.50"></text></g><g><title>boggle.exe`alloc::slice::hack::impl$1::to_vec(ref$&lt;slice2$ (8 samples, 0.27%)</title><rect x="16.6778%" y="3365" width="0.2668%" height="15" fill="rgb(240,218,32)" fg:x="500" fg:w="8"/><text x="16.9278%" y="3375.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (8 samples, 0.27%)</title><rect x="16.6778%" y="3349" width="0.2668%" height="15" fill="rgb(252,5,43)" fg:x="500" fg:w="8"/><text x="16.9278%" y="3359.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (8 samples, 0.27%)</title><rect x="16.6778%" y="3333" width="0.2668%" height="15" fill="rgb(252,84,19)" fg:x="500" fg:w="8"/><text x="16.9278%" y="3343.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (8 samples, 0.27%)</title><rect x="16.6778%" y="3317" width="0.2668%" height="15" fill="rgb(243,152,39)" fg:x="500" fg:w="8"/><text x="16.9278%" y="3327.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (8 samples, 0.27%)</title><rect x="16.6778%" y="3301" width="0.2668%" height="15" fill="rgb(234,160,15)" fg:x="500" fg:w="8"/><text x="16.9278%" y="3311.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::allocate (1 samples, 0.03%)</title><rect x="16.9113%" y="3285" width="0.0334%" height="15" fill="rgb(237,34,20)" fg:x="507" fg:w="1"/><text x="17.1613%" y="3295.50"></text></g><g><title>boggle.exe`alloc::alloc::Global::alloc_impl (1 samples, 0.03%)</title><rect x="16.9113%" y="3269" width="0.0334%" height="15" fill="rgb(229,97,13)" fg:x="507" fg:w="1"/><text x="17.1613%" y="3279.50"></text></g><g><title>boggle.exe`alloc::alloc::alloc (1 samples, 0.03%)</title><rect x="16.9113%" y="3253" width="0.0334%" height="15" fill="rgb(234,71,50)" fg:x="507" fg:w="1"/><text x="17.1613%" y="3263.50"></text></g><g><title>boggle.exe`core::ptr::read_volatile (1 samples, 0.03%)</title><rect x="16.9113%" y="3237" width="0.0334%" height="15" fill="rgb(253,155,4)" fg:x="507" fg:w="1"/><text x="17.1613%" y="3247.50"></text></g><g><title>`0x7FFAC12C780A (1 samples, 0.03%)</title><rect x="16.9446%" y="3301" width="0.0334%" height="15" fill="rgb(222,185,37)" fg:x="508" fg:w="1"/><text x="17.1946%" y="3311.50"></text></g><g><title>`0x7FFAC12C8047 (1 samples, 0.03%)</title><rect x="16.9780%" y="3285" width="0.0334%" height="15" fill="rgb(251,177,13)" fg:x="509" fg:w="1"/><text x="17.2280%" y="3295.50"></text></g><g><title>`0x7FFAC12C818A (1 samples, 0.03%)</title><rect x="17.0113%" y="3285" width="0.0334%" height="15" fill="rgb(250,179,40)" fg:x="510" fg:w="1"/><text x="17.2613%" y="3295.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;::push (4 samples, 0.13%)</title><rect x="16.9446%" y="3477" width="0.1334%" height="15" fill="rgb(242,44,2)" fg:x="508" fg:w="4"/><text x="17.1946%" y="3487.50"></text></g><g><title>boggle.exe`alloc::string::impl$6::clone (4 samples, 0.13%)</title><rect x="16.9446%" y="3461" width="0.1334%" height="15" fill="rgb(216,177,13)" fg:x="508" fg:w="4"/><text x="17.1946%" y="3471.50"></text></g><g><title>boggle.exe`alloc::vec::impl$11::clone (4 samples, 0.13%)</title><rect x="16.9446%" y="3445" width="0.1334%" height="15" fill="rgb(216,106,43)" fg:x="508" fg:w="4"/><text x="17.1946%" y="3455.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec_in (4 samples, 0.13%)</title><rect x="16.9446%" y="3429" width="0.1334%" height="15" fill="rgb(216,183,2)" fg:x="508" fg:w="4"/><text x="17.1946%" y="3439.50"></text></g><g><title>boggle.exe`alloc::slice::hack::to_vec (4 samples, 0.13%)</title><rect x="16.9446%" y="3413" width="0.1334%" height="15" fill="rgb(249,75,3)" fg:x="508" fg:w="4"/><text x="17.1946%" y="3423.50"></text></g><g><title>boggle.exe`alloc::slice::hack::impl$1::to_vec (4 samples, 0.13%)</title><rect x="16.9446%" y="3397" width="0.1334%" height="15" fill="rgb(219,67,39)" fg:x="508" fg:w="4"/><text x="17.1946%" y="3407.50"></text></g><g><title>boggle.exe`alloc::vec::Vec::with_capacity_in (4 samples, 0.13%)</title><rect x="16.9446%" y="3381" width="0.1334%" height="15" fill="rgb(253,228,2)" fg:x="508" fg:w="4"/><text x="17.1946%" y="3391.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec::with_capacity_in (4 samples, 0.13%)</title><rect x="16.9446%" y="3365" width="0.1334%" height="15" fill="rgb(235,138,27)" fg:x="508" fg:w="4"/><text x="17.1946%" y="3375.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner::with_capacity_in (4 samples, 0.13%)</title><rect x="16.9446%" y="3349" width="0.1334%" height="15" fill="rgb(236,97,51)" fg:x="508" fg:w="4"/><text x="17.1946%" y="3359.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner::try_allocate_in (4 samples, 0.13%)</title><rect x="16.9446%" y="3333" width="0.1334%" height="15" fill="rgb(240,80,30)" fg:x="508" fg:w="4"/><text x="17.1946%" y="3343.50"></text></g><g><title>`0x7FFAC12C7776 (4 samples, 0.13%)</title><rect x="16.9446%" y="3317" width="0.1334%" height="15" fill="rgb(230,178,19)" fg:x="508" fg:w="4"/><text x="17.1946%" y="3327.50"></text></g><g><title>`0x7FFAC12C78B4 (3 samples, 0.10%)</title><rect x="16.9780%" y="3301" width="0.1001%" height="15" fill="rgb(210,190,27)" fg:x="509" fg:w="3"/><text x="17.2280%" y="3311.50"></text></g><g><title>`0x7FFAC12C8A44 (1 samples, 0.03%)</title><rect x="17.0447%" y="3285" width="0.0334%" height="15" fill="rgb(222,107,31)" fg:x="511" fg:w="1"/><text x="17.2947%" y="3295.50"></text></g><g><title>`0x7FFAC137151D (1 samples, 0.03%)</title><rect x="17.0447%" y="3269" width="0.0334%" height="15" fill="rgb(216,127,34)" fg:x="511" fg:w="1"/><text x="17.2947%" y="3279.50"></text></g><g><title>boggle.exe`core::ptr::const_ptr::impl$0::add (1 samples, 0.03%)</title><rect x="17.0781%" y="3381" width="0.0334%" height="15" fill="rgb(234,116,52)" fg:x="512" fg:w="1"/><text x="17.3281%" y="3391.50"></text></g><g><title>boggle.exe`alloc::string::String::pop (516 samples, 17.21%)</title><rect x="0.7005%" y="3541" width="17.2115%" height="15" fill="rgb(222,124,15)" fg:x="21" fg:w="516"/><text x="0.9505%" y="3551.50">boggle.exe`alloc::string::S..</text></g><g><title>boggle.exe`alloc::string::impl$28::deref (516 samples, 17.21%)</title><rect x="0.7005%" y="3525" width="17.2115%" height="15" fill="rgb(231,179,28)" fg:x="21" fg:w="516"/><text x="0.9505%" y="3535.50">boggle.exe`alloc::string::i..</text></g><g><title>boggle.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (516 samples, 17.21%)</title><rect x="0.7005%" y="3509" width="17.2115%" height="15" fill="rgb(226,93,45)" fg:x="21" fg:w="516"/><text x="0.9505%" y="3519.50">boggle.exe`alloc::vec::impl..</text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::collect_words(boggle::utils::dict_trie::DictTrieNode*, ref$&lt;str$&gt;, alloc::vec::Vec (516 samples, 17.21%)</title><rect x="0.7005%" y="3493" width="17.2115%" height="15" fill="rgb(215,8,51)" fg:x="21" fg:w="516"/><text x="0.9505%" y="3503.50">boggle.exe`boggle::utils::d..</text></g><g><title>boggle.exe`std::collections::hash::map::impl$36::into_iter(std::collections::hash::map::HashMap (25 samples, 0.83%)</title><rect x="17.0781%" y="3477" width="0.8339%" height="15" fill="rgb(223,106,5)" fg:x="512" fg:w="25"/><text x="17.3281%" y="3487.50"></text></g><g><title>boggle.exe`std::collections::hash::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;::iter (25 samples, 0.83%)</title><rect x="17.0781%" y="3461" width="0.8339%" height="15" fill="rgb(250,191,5)" fg:x="512" fg:w="25"/><text x="17.3281%" y="3471.50"></text></g><g><title>boggle.exe`hashbrown::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt;::iter (25 samples, 0.83%)</title><rect x="17.0781%" y="3445" width="0.8339%" height="15" fill="rgb(242,132,44)" fg:x="512" fg:w="25"/><text x="17.3281%" y="3455.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTable&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;::iter (25 samples, 0.83%)</title><rect x="17.0781%" y="3429" width="0.8339%" height="15" fill="rgb(251,152,29)" fg:x="512" fg:w="25"/><text x="17.3281%" y="3439.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::iter (25 samples, 0.83%)</title><rect x="17.0781%" y="3413" width="0.8339%" height="15" fill="rgb(218,179,5)" fg:x="512" fg:w="25"/><text x="17.3281%" y="3423.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawIterRange&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::new(unsigned char*, hashbrown::raw::Bucket&lt;tuple$ (25 samples, 0.83%)</title><rect x="17.0781%" y="3397" width="0.8339%" height="15" fill="rgb(227,67,19)" fg:x="512" fg:w="25"/><text x="17.3281%" y="3407.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::load_aligned (24 samples, 0.80%)</title><rect x="17.1114%" y="3381" width="0.8005%" height="15" fill="rgb(233,119,31)" fg:x="513" fg:w="24"/><text x="17.3614%" y="3391.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::match_empty_or_deleted (24 samples, 0.80%)</title><rect x="17.1114%" y="3365" width="0.8005%" height="15" fill="rgb(241,120,22)" fg:x="513" fg:w="24"/><text x="17.3614%" y="3375.50"></text></g><g><title>boggle.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (24 samples, 0.80%)</title><rect x="17.1114%" y="3349" width="0.8005%" height="15" fill="rgb(224,102,30)" fg:x="513" fg:w="24"/><text x="17.3614%" y="3359.50"></text></g><g><title>`0x7FFAC12D5448 (1 samples, 0.03%)</title><rect x="17.9119%" y="3301" width="0.0334%" height="15" fill="rgb(210,164,37)" fg:x="537" fg:w="1"/><text x="18.1619%" y="3311.50"></text></g><g><title>`0x7FFAC12D5DA0 (1 samples, 0.03%)</title><rect x="17.9453%" y="3285" width="0.0334%" height="15" fill="rgb(226,191,16)" fg:x="538" fg:w="1"/><text x="18.1953%" y="3295.50"></text></g><g><title>`0x7FFAC12C7762 (1 samples, 0.03%)</title><rect x="17.9787%" y="3269" width="0.0334%" height="15" fill="rgb(214,40,45)" fg:x="539" fg:w="1"/><text x="18.2287%" y="3279.50"></text></g><g><title>`0x7FFAC12C7F93 (1 samples, 0.03%)</title><rect x="18.0120%" y="3237" width="0.0334%" height="15" fill="rgb(244,29,26)" fg:x="540" fg:w="1"/><text x="18.2620%" y="3247.50"></text></g><g><title>`0x7FFAC12C7FF3 (1 samples, 0.03%)</title><rect x="18.0454%" y="3237" width="0.0334%" height="15" fill="rgb(216,16,5)" fg:x="541" fg:w="1"/><text x="18.2954%" y="3247.50"></text></g><g><title>`0x7FFAC12C8047 (2 samples, 0.07%)</title><rect x="18.0787%" y="3237" width="0.0667%" height="15" fill="rgb(249,76,35)" fg:x="542" fg:w="2"/><text x="18.3287%" y="3247.50"></text></g><g><title>`0x7FFAC12C80FC (1 samples, 0.03%)</title><rect x="18.1454%" y="3237" width="0.0334%" height="15" fill="rgb(207,11,44)" fg:x="544" fg:w="1"/><text x="18.3954%" y="3247.50"></text></g><g><title>`0x7FFAC12C78B4 (6 samples, 0.20%)</title><rect x="18.0120%" y="3253" width="0.2001%" height="15" fill="rgb(228,190,49)" fg:x="540" fg:w="6"/><text x="18.2620%" y="3263.50"></text></g><g><title>`0x7FFAC12C8165 (1 samples, 0.03%)</title><rect x="18.1788%" y="3237" width="0.0334%" height="15" fill="rgb(214,173,12)" fg:x="545" fg:w="1"/><text x="18.4288%" y="3247.50"></text></g><g><title>`0x7FFAC12D5DAA (8 samples, 0.27%)</title><rect x="17.9787%" y="3285" width="0.2668%" height="15" fill="rgb(218,26,35)" fg:x="539" fg:w="8"/><text x="18.2287%" y="3295.50"></text></g><g><title>`0x7FFAC12C7776 (7 samples, 0.23%)</title><rect x="18.0120%" y="3269" width="0.2335%" height="15" fill="rgb(220,200,19)" fg:x="540" fg:w="7"/><text x="18.2620%" y="3279.50"></text></g><g><title>`0x7FFAC12C796B (1 samples, 0.03%)</title><rect x="18.2121%" y="3253" width="0.0334%" height="15" fill="rgb(239,95,49)" fg:x="546" fg:w="1"/><text x="18.4621%" y="3263.50"></text></g><g><title>`0x7FFAC12D5DF9 (1 samples, 0.03%)</title><rect x="18.2455%" y="3285" width="0.0334%" height="15" fill="rgb(235,85,53)" fg:x="547" fg:w="1"/><text x="18.4955%" y="3295.50"></text></g><g><title>`0x7FFAC1404E80 (1 samples, 0.03%)</title><rect x="18.2455%" y="3269" width="0.0334%" height="15" fill="rgb(233,133,31)" fg:x="547" fg:w="1"/><text x="18.4955%" y="3279.50"></text></g><g><title>`0x7FFAC12D2379 (1 samples, 0.03%)</title><rect x="18.2789%" y="3269" width="0.0334%" height="15" fill="rgb(218,25,20)" fg:x="548" fg:w="1"/><text x="18.5289%" y="3279.50"></text></g><g><title>`0x7FFAC12D238C (1 samples, 0.03%)</title><rect x="18.3122%" y="3269" width="0.0334%" height="15" fill="rgb(252,210,38)" fg:x="549" fg:w="1"/><text x="18.5622%" y="3279.50"></text></g><g><title>`0x7FFAC12D23A7 (1 samples, 0.03%)</title><rect x="18.3456%" y="3269" width="0.0334%" height="15" fill="rgb(242,134,21)" fg:x="550" fg:w="1"/><text x="18.5956%" y="3279.50"></text></g><g><title>`0x7FFAC12D5376 (15 samples, 0.50%)</title><rect x="17.9119%" y="3317" width="0.5003%" height="15" fill="rgb(213,28,48)" fg:x="537" fg:w="15"/><text x="18.1619%" y="3327.50"></text></g><g><title>`0x7FFAC12D54B5 (14 samples, 0.47%)</title><rect x="17.9453%" y="3301" width="0.4670%" height="15" fill="rgb(250,196,2)" fg:x="538" fg:w="14"/><text x="18.1953%" y="3311.50"></text></g><g><title>`0x7FFAC12D5E0B (4 samples, 0.13%)</title><rect x="18.2789%" y="3285" width="0.1334%" height="15" fill="rgb(227,5,17)" fg:x="548" fg:w="4"/><text x="18.5289%" y="3295.50"></text></g><g><title>`0x7FFAC12D243D (1 samples, 0.03%)</title><rect x="18.3789%" y="3269" width="0.0334%" height="15" fill="rgb(221,226,24)" fg:x="551" fg:w="1"/><text x="18.6289%" y="3279.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::push (16 samples, 0.53%)</title><rect x="17.9119%" y="3525" width="0.5337%" height="15" fill="rgb(211,5,48)" fg:x="537" fg:w="16"/><text x="18.1619%" y="3535.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_mut_ptr (16 samples, 0.53%)</title><rect x="17.9119%" y="3509" width="0.5337%" height="15" fill="rgb(219,150,6)" fg:x="537" fg:w="16"/><text x="18.1619%" y="3519.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::ptr (16 samples, 0.53%)</title><rect x="17.9119%" y="3493" width="0.5337%" height="15" fill="rgb(251,46,16)" fg:x="537" fg:w="16"/><text x="18.1619%" y="3503.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (16 samples, 0.53%)</title><rect x="17.9119%" y="3477" width="0.5337%" height="15" fill="rgb(220,204,40)" fg:x="537" fg:w="16"/><text x="18.1619%" y="3487.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (16 samples, 0.53%)</title><rect x="17.9119%" y="3461" width="0.5337%" height="15" fill="rgb(211,85,2)" fg:x="537" fg:w="16"/><text x="18.1619%" y="3471.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::grow_one&lt;u8,alloc::alloc::Global&gt; (16 samples, 0.53%)</title><rect x="17.9119%" y="3445" width="0.5337%" height="15" fill="rgb(229,17,7)" fg:x="537" fg:w="16"/><text x="18.1619%" y="3455.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_one (16 samples, 0.53%)</title><rect x="17.9119%" y="3429" width="0.5337%" height="15" fill="rgb(239,72,28)" fg:x="537" fg:w="16"/><text x="18.1619%" y="3439.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (16 samples, 0.53%)</title><rect x="17.9119%" y="3413" width="0.5337%" height="15" fill="rgb(230,47,54)" fg:x="537" fg:w="16"/><text x="18.1619%" y="3423.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (16 samples, 0.53%)</title><rect x="17.9119%" y="3397" width="0.5337%" height="15" fill="rgb(214,50,8)" fg:x="537" fg:w="16"/><text x="18.1619%" y="3407.50"></text></g><g><title>boggle.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (16 samples, 0.53%)</title><rect x="17.9119%" y="3381" width="0.5337%" height="15" fill="rgb(216,198,43)" fg:x="537" fg:w="16"/><text x="18.1619%" y="3391.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (16 samples, 0.53%)</title><rect x="17.9119%" y="3365" width="0.5337%" height="15" fill="rgb(234,20,35)" fg:x="537" fg:w="16"/><text x="18.1619%" y="3375.50"></text></g><g><title>boggle.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (16 samples, 0.53%)</title><rect x="17.9119%" y="3349" width="0.5337%" height="15" fill="rgb(254,45,19)" fg:x="537" fg:w="16"/><text x="18.1619%" y="3359.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (16 samples, 0.53%)</title><rect x="17.9119%" y="3333" width="0.5337%" height="15" fill="rgb(219,14,44)" fg:x="537" fg:w="16"/><text x="18.1619%" y="3343.50"></text></g><g><title>boggle.exe`__rust_realloc (1 samples, 0.03%)</title><rect x="18.4123%" y="3317" width="0.0334%" height="15" fill="rgb(217,220,26)" fg:x="552" fg:w="1"/><text x="18.6623%" y="3327.50"></text></g><g><title>boggle.exe`alloc::string::String::push (26 samples, 0.87%)</title><rect x="17.9119%" y="3541" width="0.8672%" height="15" fill="rgb(213,158,28)" fg:x="537" fg:w="26"/><text x="18.1619%" y="3551.50"></text></g><g><title>boggle.exe`core::char::methods::impl$0::len_utf8 (10 samples, 0.33%)</title><rect x="18.4456%" y="3525" width="0.3336%" height="15" fill="rgb(252,51,52)" fg:x="553" fg:w="10"/><text x="18.6956%" y="3535.50"></text></g><g><title>boggle.exe`core::char::methods::len_utf8 (10 samples, 0.33%)</title><rect x="18.4456%" y="3509" width="0.3336%" height="15" fill="rgb(246,89,16)" fg:x="553" fg:w="10"/><text x="18.6956%" y="3519.50"></text></g><g><title>`0x7FFAC12C776F (1 samples, 0.03%)</title><rect x="18.7792%" y="3349" width="0.0334%" height="15" fill="rgb(216,158,49)" fg:x="563" fg:w="1"/><text x="19.0292%" y="3359.50"></text></g><g><title>`0x7FFAC12C77D0 (1 samples, 0.03%)</title><rect x="18.8125%" y="3333" width="0.0334%" height="15" fill="rgb(236,107,19)" fg:x="564" fg:w="1"/><text x="19.0625%" y="3343.50"></text></g><g><title>`0x7FFAC12C8033 (1 samples, 0.03%)</title><rect x="18.8459%" y="3317" width="0.0334%" height="15" fill="rgb(228,185,30)" fg:x="565" fg:w="1"/><text x="19.0959%" y="3327.50"></text></g><g><title>`0x7FFAC12C8047 (3 samples, 0.10%)</title><rect x="18.8793%" y="3317" width="0.1001%" height="15" fill="rgb(246,134,8)" fg:x="566" fg:w="3"/><text x="19.1293%" y="3327.50"></text></g><g><title>boggle.exe`alloc::string::impl$102::to_string(ref$ (7 samples, 0.23%)</title><rect x="18.7792%" y="3541" width="0.2335%" height="15" fill="rgb(214,143,50)" fg:x="563" fg:w="7"/><text x="19.0292%" y="3551.50"></text></g><g><title>boggle.exe`alloc::string::impl$44::from(ref$ (7 samples, 0.23%)</title><rect x="18.7792%" y="3525" width="0.2335%" height="15" fill="rgb(228,75,8)" fg:x="563" fg:w="7"/><text x="19.0292%" y="3535.50"></text></g><g><title>boggle.exe`alloc::str::impl$4::to_owned(ref$ (7 samples, 0.23%)</title><rect x="18.7792%" y="3509" width="0.2335%" height="15" fill="rgb(207,175,4)" fg:x="563" fg:w="7"/><text x="19.0292%" y="3519.50"></text></g><g><title>boggle.exe`alloc::slice::impl$9::to_owned(ref$&lt;slice2$ (7 samples, 0.23%)</title><rect x="18.7792%" y="3493" width="0.2335%" height="15" fill="rgb(205,108,24)" fg:x="563" fg:w="7"/><text x="19.0292%" y="3503.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec(ref$&lt;slice2$ (7 samples, 0.23%)</title><rect x="18.7792%" y="3477" width="0.2335%" height="15" fill="rgb(244,120,49)" fg:x="563" fg:w="7"/><text x="19.0292%" y="3487.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec_in(ref$&lt;slice2$ (7 samples, 0.23%)</title><rect x="18.7792%" y="3461" width="0.2335%" height="15" fill="rgb(223,47,38)" fg:x="563" fg:w="7"/><text x="19.0292%" y="3471.50"></text></g><g><title>boggle.exe`alloc::slice::hack::to_vec(ref$&lt;slice2$ (7 samples, 0.23%)</title><rect x="18.7792%" y="3445" width="0.2335%" height="15" fill="rgb(229,179,11)" fg:x="563" fg:w="7"/><text x="19.0292%" y="3455.50"></text></g><g><title>boggle.exe`alloc::slice::hack::impl$1::to_vec(ref$&lt;slice2$ (7 samples, 0.23%)</title><rect x="18.7792%" y="3429" width="0.2335%" height="15" fill="rgb(231,122,1)" fg:x="563" fg:w="7"/><text x="19.0292%" y="3439.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (7 samples, 0.23%)</title><rect x="18.7792%" y="3413" width="0.2335%" height="15" fill="rgb(245,119,9)" fg:x="563" fg:w="7"/><text x="19.0292%" y="3423.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (7 samples, 0.23%)</title><rect x="18.7792%" y="3397" width="0.2335%" height="15" fill="rgb(241,163,25)" fg:x="563" fg:w="7"/><text x="19.0292%" y="3407.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (7 samples, 0.23%)</title><rect x="18.7792%" y="3381" width="0.2335%" height="15" fill="rgb(217,214,3)" fg:x="563" fg:w="7"/><text x="19.0292%" y="3391.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (7 samples, 0.23%)</title><rect x="18.7792%" y="3365" width="0.2335%" height="15" fill="rgb(240,86,28)" fg:x="563" fg:w="7"/><text x="19.0292%" y="3375.50"></text></g><g><title>`0x7FFAC12C7776 (6 samples, 0.20%)</title><rect x="18.8125%" y="3349" width="0.2001%" height="15" fill="rgb(215,47,9)" fg:x="564" fg:w="6"/><text x="19.0625%" y="3359.50"></text></g><g><title>`0x7FFAC12C78B4 (5 samples, 0.17%)</title><rect x="18.8459%" y="3333" width="0.1668%" height="15" fill="rgb(252,25,45)" fg:x="565" fg:w="5"/><text x="19.0959%" y="3343.50"></text></g><g><title>`0x7FFAC12C8119 (1 samples, 0.03%)</title><rect x="18.9793%" y="3317" width="0.0334%" height="15" fill="rgb(251,164,9)" fg:x="569" fg:w="1"/><text x="19.2293%" y="3327.50"></text></g><g><title>`0x7FFAC12C7EE2 (1 samples, 0.03%)</title><rect x="19.0127%" y="3349" width="0.0334%" height="15" fill="rgb(233,194,0)" fg:x="570" fg:w="1"/><text x="19.2627%" y="3359.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;::push (3 samples, 0.10%)</title><rect x="19.0127%" y="3541" width="0.1001%" height="15" fill="rgb(249,111,24)" fg:x="570" fg:w="3"/><text x="19.2627%" y="3551.50"></text></g><g><title>boggle.exe`alloc::string::impl$6::clone (3 samples, 0.10%)</title><rect x="19.0127%" y="3525" width="0.1001%" height="15" fill="rgb(250,223,3)" fg:x="570" fg:w="3"/><text x="19.2627%" y="3535.50"></text></g><g><title>boggle.exe`alloc::vec::impl$11::clone (3 samples, 0.10%)</title><rect x="19.0127%" y="3509" width="0.1001%" height="15" fill="rgb(236,178,37)" fg:x="570" fg:w="3"/><text x="19.2627%" y="3519.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec_in (3 samples, 0.10%)</title><rect x="19.0127%" y="3493" width="0.1001%" height="15" fill="rgb(241,158,50)" fg:x="570" fg:w="3"/><text x="19.2627%" y="3503.50"></text></g><g><title>boggle.exe`alloc::slice::hack::to_vec (3 samples, 0.10%)</title><rect x="19.0127%" y="3477" width="0.1001%" height="15" fill="rgb(213,121,41)" fg:x="570" fg:w="3"/><text x="19.2627%" y="3487.50"></text></g><g><title>boggle.exe`alloc::slice::hack::impl$1::to_vec (3 samples, 0.10%)</title><rect x="19.0127%" y="3461" width="0.1001%" height="15" fill="rgb(240,92,3)" fg:x="570" fg:w="3"/><text x="19.2627%" y="3471.50"></text></g><g><title>boggle.exe`alloc::vec::Vec::with_capacity_in (3 samples, 0.10%)</title><rect x="19.0127%" y="3445" width="0.1001%" height="15" fill="rgb(205,123,3)" fg:x="570" fg:w="3"/><text x="19.2627%" y="3455.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec::with_capacity_in (3 samples, 0.10%)</title><rect x="19.0127%" y="3429" width="0.1001%" height="15" fill="rgb(205,97,47)" fg:x="570" fg:w="3"/><text x="19.2627%" y="3439.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner::with_capacity_in (3 samples, 0.10%)</title><rect x="19.0127%" y="3413" width="0.1001%" height="15" fill="rgb(247,152,14)" fg:x="570" fg:w="3"/><text x="19.2627%" y="3423.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner::try_allocate_in (3 samples, 0.10%)</title><rect x="19.0127%" y="3397" width="0.1001%" height="15" fill="rgb(248,195,53)" fg:x="570" fg:w="3"/><text x="19.2627%" y="3407.50"></text></g><g><title>`0x7FFAC12C7776 (3 samples, 0.10%)</title><rect x="19.0127%" y="3381" width="0.1001%" height="15" fill="rgb(226,201,16)" fg:x="570" fg:w="3"/><text x="19.2627%" y="3391.50"></text></g><g><title>`0x7FFAC12C78B4 (3 samples, 0.10%)</title><rect x="19.0127%" y="3365" width="0.1001%" height="15" fill="rgb(205,98,0)" fg:x="570" fg:w="3"/><text x="19.2627%" y="3375.50"></text></g><g><title>`0x7FFAC12C8047 (2 samples, 0.07%)</title><rect x="19.0460%" y="3349" width="0.0667%" height="15" fill="rgb(214,191,48)" fg:x="571" fg:w="2"/><text x="19.2960%" y="3359.50"></text></g><g><title>boggle.exe`alloc::string::String::pop (573 samples, 19.11%)</title><rect x="0.5670%" y="3605" width="19.1127%" height="15" fill="rgb(237,112,39)" fg:x="17" fg:w="573"/><text x="0.8170%" y="3615.50">boggle.exe`alloc::string::Stri..</text></g><g><title>boggle.exe`alloc::string::impl$28::deref (573 samples, 19.11%)</title><rect x="0.5670%" y="3589" width="19.1127%" height="15" fill="rgb(247,203,27)" fg:x="17" fg:w="573"/><text x="0.8170%" y="3599.50">boggle.exe`alloc::string::impl..</text></g><g><title>boggle.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (573 samples, 19.11%)</title><rect x="0.5670%" y="3573" width="19.1127%" height="15" fill="rgb(235,124,28)" fg:x="17" fg:w="573"/><text x="0.8170%" y="3583.50">boggle.exe`alloc::vec::impl$8:..</text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::collect_words(boggle::utils::dict_trie::DictTrieNode*, ref$&lt;str$&gt;, alloc::vec::Vec (573 samples, 19.11%)</title><rect x="0.5670%" y="3557" width="19.1127%" height="15" fill="rgb(208,207,46)" fg:x="17" fg:w="573"/><text x="0.8170%" y="3567.50">boggle.exe`boggle::utils::dict..</text></g><g><title>boggle.exe`std::collections::hash::map::impl$36::into_iter(std::collections::hash::map::HashMap (17 samples, 0.57%)</title><rect x="19.1127%" y="3541" width="0.5670%" height="15" fill="rgb(234,176,4)" fg:x="573" fg:w="17"/><text x="19.3627%" y="3551.50"></text></g><g><title>boggle.exe`std::collections::hash::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;::iter (17 samples, 0.57%)</title><rect x="19.1127%" y="3525" width="0.5670%" height="15" fill="rgb(230,133,28)" fg:x="573" fg:w="17"/><text x="19.3627%" y="3535.50"></text></g><g><title>boggle.exe`hashbrown::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt;::iter (17 samples, 0.57%)</title><rect x="19.1127%" y="3509" width="0.5670%" height="15" fill="rgb(211,137,40)" fg:x="573" fg:w="17"/><text x="19.3627%" y="3519.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTable&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;::iter (17 samples, 0.57%)</title><rect x="19.1127%" y="3493" width="0.5670%" height="15" fill="rgb(254,35,13)" fg:x="573" fg:w="17"/><text x="19.3627%" y="3503.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::iter (17 samples, 0.57%)</title><rect x="19.1127%" y="3477" width="0.5670%" height="15" fill="rgb(225,49,51)" fg:x="573" fg:w="17"/><text x="19.3627%" y="3487.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawIterRange&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::new(unsigned char*, hashbrown::raw::Bucket&lt;tuple$ (17 samples, 0.57%)</title><rect x="19.1127%" y="3461" width="0.5670%" height="15" fill="rgb(251,10,15)" fg:x="573" fg:w="17"/><text x="19.3627%" y="3471.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::load_aligned (17 samples, 0.57%)</title><rect x="19.1127%" y="3445" width="0.5670%" height="15" fill="rgb(228,207,15)" fg:x="573" fg:w="17"/><text x="19.3627%" y="3455.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::match_empty_or_deleted (17 samples, 0.57%)</title><rect x="19.1127%" y="3429" width="0.5670%" height="15" fill="rgb(241,99,19)" fg:x="573" fg:w="17"/><text x="19.3627%" y="3439.50"></text></g><g><title>boggle.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (17 samples, 0.57%)</title><rect x="19.1127%" y="3413" width="0.5670%" height="15" fill="rgb(207,104,49)" fg:x="573" fg:w="17"/><text x="19.3627%" y="3423.50"></text></g><g><title>`0x7FFAC12C782F (1 samples, 0.03%)</title><rect x="19.6798%" y="3317" width="0.0334%" height="15" fill="rgb(234,99,18)" fg:x="590" fg:w="1"/><text x="19.9298%" y="3327.50"></text></g><g><title>`0x7FFAC12C8047 (1 samples, 0.03%)</title><rect x="19.7131%" y="3301" width="0.0334%" height="15" fill="rgb(213,191,49)" fg:x="591" fg:w="1"/><text x="19.9631%" y="3311.50"></text></g><g><title>`0x7FFAC12C78B4 (2 samples, 0.07%)</title><rect x="19.7131%" y="3317" width="0.0667%" height="15" fill="rgb(210,226,19)" fg:x="591" fg:w="2"/><text x="19.9631%" y="3327.50"></text></g><g><title>`0x7FFAC12C80CE (1 samples, 0.03%)</title><rect x="19.7465%" y="3301" width="0.0334%" height="15" fill="rgb(229,97,18)" fg:x="592" fg:w="1"/><text x="19.9965%" y="3311.50"></text></g><g><title>`0x7FFAC12D5DAA (4 samples, 0.13%)</title><rect x="19.6798%" y="3349" width="0.1334%" height="15" fill="rgb(211,167,15)" fg:x="590" fg:w="4"/><text x="19.9298%" y="3359.50"></text></g><g><title>`0x7FFAC12C7776 (4 samples, 0.13%)</title><rect x="19.6798%" y="3333" width="0.1334%" height="15" fill="rgb(210,169,34)" fg:x="590" fg:w="4"/><text x="19.9298%" y="3343.50"></text></g><g><title>`0x7FFAC12C797B (1 samples, 0.03%)</title><rect x="19.7799%" y="3317" width="0.0334%" height="15" fill="rgb(241,121,31)" fg:x="593" fg:w="1"/><text x="20.0299%" y="3327.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::push (5 samples, 0.17%)</title><rect x="19.6798%" y="3589" width="0.1668%" height="15" fill="rgb(232,40,11)" fg:x="590" fg:w="5"/><text x="19.9298%" y="3599.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_mut_ptr (5 samples, 0.17%)</title><rect x="19.6798%" y="3573" width="0.1668%" height="15" fill="rgb(205,86,26)" fg:x="590" fg:w="5"/><text x="19.9298%" y="3583.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::ptr (5 samples, 0.17%)</title><rect x="19.6798%" y="3557" width="0.1668%" height="15" fill="rgb(231,126,28)" fg:x="590" fg:w="5"/><text x="19.9298%" y="3567.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (5 samples, 0.17%)</title><rect x="19.6798%" y="3541" width="0.1668%" height="15" fill="rgb(219,221,18)" fg:x="590" fg:w="5"/><text x="19.9298%" y="3551.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (5 samples, 0.17%)</title><rect x="19.6798%" y="3525" width="0.1668%" height="15" fill="rgb(211,40,0)" fg:x="590" fg:w="5"/><text x="19.9298%" y="3535.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::grow_one&lt;u8,alloc::alloc::Global&gt; (5 samples, 0.17%)</title><rect x="19.6798%" y="3509" width="0.1668%" height="15" fill="rgb(239,85,43)" fg:x="590" fg:w="5"/><text x="19.9298%" y="3519.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_one (5 samples, 0.17%)</title><rect x="19.6798%" y="3493" width="0.1668%" height="15" fill="rgb(231,55,21)" fg:x="590" fg:w="5"/><text x="19.9298%" y="3503.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (5 samples, 0.17%)</title><rect x="19.6798%" y="3477" width="0.1668%" height="15" fill="rgb(225,184,43)" fg:x="590" fg:w="5"/><text x="19.9298%" y="3487.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (5 samples, 0.17%)</title><rect x="19.6798%" y="3461" width="0.1668%" height="15" fill="rgb(251,158,41)" fg:x="590" fg:w="5"/><text x="19.9298%" y="3471.50"></text></g><g><title>boggle.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (5 samples, 0.17%)</title><rect x="19.6798%" y="3445" width="0.1668%" height="15" fill="rgb(234,159,37)" fg:x="590" fg:w="5"/><text x="19.9298%" y="3455.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (5 samples, 0.17%)</title><rect x="19.6798%" y="3429" width="0.1668%" height="15" fill="rgb(216,204,22)" fg:x="590" fg:w="5"/><text x="19.9298%" y="3439.50"></text></g><g><title>boggle.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (5 samples, 0.17%)</title><rect x="19.6798%" y="3413" width="0.1668%" height="15" fill="rgb(214,17,3)" fg:x="590" fg:w="5"/><text x="19.9298%" y="3423.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (5 samples, 0.17%)</title><rect x="19.6798%" y="3397" width="0.1668%" height="15" fill="rgb(212,111,17)" fg:x="590" fg:w="5"/><text x="19.9298%" y="3407.50"></text></g><g><title>`0x7FFAC12D5376 (5 samples, 0.17%)</title><rect x="19.6798%" y="3381" width="0.1668%" height="15" fill="rgb(221,157,24)" fg:x="590" fg:w="5"/><text x="19.9298%" y="3391.50"></text></g><g><title>`0x7FFAC12D54B5 (5 samples, 0.17%)</title><rect x="19.6798%" y="3365" width="0.1668%" height="15" fill="rgb(252,16,13)" fg:x="590" fg:w="5"/><text x="19.9298%" y="3375.50"></text></g><g><title>`0x7FFAC12D5E32 (1 samples, 0.03%)</title><rect x="19.8132%" y="3349" width="0.0334%" height="15" fill="rgb(221,62,2)" fg:x="594" fg:w="1"/><text x="20.0632%" y="3359.50"></text></g><g><title>boggle.exe`alloc::string::String::push (12 samples, 0.40%)</title><rect x="19.6798%" y="3605" width="0.4003%" height="15" fill="rgb(247,87,22)" fg:x="590" fg:w="12"/><text x="19.9298%" y="3615.50"></text></g><g><title>boggle.exe`core::char::methods::impl$0::len_utf8 (7 samples, 0.23%)</title><rect x="19.8466%" y="3589" width="0.2335%" height="15" fill="rgb(215,73,9)" fg:x="595" fg:w="7"/><text x="20.0966%" y="3599.50"></text></g><g><title>boggle.exe`core::char::methods::len_utf8 (7 samples, 0.23%)</title><rect x="19.8466%" y="3573" width="0.2335%" height="15" fill="rgb(207,175,33)" fg:x="595" fg:w="7"/><text x="20.0966%" y="3583.50"></text></g><g><title>`0x7FFAB891035C (1 samples, 0.03%)</title><rect x="20.0801%" y="3541" width="0.0334%" height="15" fill="rgb(243,129,54)" fg:x="602" fg:w="1"/><text x="20.3301%" y="3551.50"></text></g><g><title>`0x7FFAC12C7EE2 (1 samples, 0.03%)</title><rect x="20.1134%" y="3381" width="0.0334%" height="15" fill="rgb(227,119,45)" fg:x="603" fg:w="1"/><text x="20.3634%" y="3391.50"></text></g><g><title>boggle.exe`alloc::string::impl$102::to_string(ref$ (3 samples, 0.10%)</title><rect x="20.0801%" y="3605" width="0.1001%" height="15" fill="rgb(205,109,36)" fg:x="602" fg:w="3"/><text x="20.3301%" y="3615.50"></text></g><g><title>boggle.exe`alloc::string::impl$44::from(ref$ (3 samples, 0.10%)</title><rect x="20.0801%" y="3589" width="0.1001%" height="15" fill="rgb(205,6,39)" fg:x="602" fg:w="3"/><text x="20.3301%" y="3599.50"></text></g><g><title>boggle.exe`alloc::str::impl$4::to_owned(ref$ (3 samples, 0.10%)</title><rect x="20.0801%" y="3573" width="0.1001%" height="15" fill="rgb(221,32,16)" fg:x="602" fg:w="3"/><text x="20.3301%" y="3583.50"></text></g><g><title>boggle.exe`alloc::slice::impl$9::to_owned(ref$&lt;slice2$ (3 samples, 0.10%)</title><rect x="20.0801%" y="3557" width="0.1001%" height="15" fill="rgb(228,144,50)" fg:x="602" fg:w="3"/><text x="20.3301%" y="3567.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec(ref$&lt;slice2$ (2 samples, 0.07%)</title><rect x="20.1134%" y="3541" width="0.0667%" height="15" fill="rgb(229,201,53)" fg:x="603" fg:w="2"/><text x="20.3634%" y="3551.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec_in(ref$&lt;slice2$ (2 samples, 0.07%)</title><rect x="20.1134%" y="3525" width="0.0667%" height="15" fill="rgb(249,153,27)" fg:x="603" fg:w="2"/><text x="20.3634%" y="3535.50"></text></g><g><title>boggle.exe`alloc::slice::hack::to_vec(ref$&lt;slice2$ (2 samples, 0.07%)</title><rect x="20.1134%" y="3509" width="0.0667%" height="15" fill="rgb(227,106,25)" fg:x="603" fg:w="2"/><text x="20.3634%" y="3519.50"></text></g><g><title>boggle.exe`alloc::slice::hack::impl$1::to_vec(ref$&lt;slice2$ (2 samples, 0.07%)</title><rect x="20.1134%" y="3493" width="0.0667%" height="15" fill="rgb(230,65,29)" fg:x="603" fg:w="2"/><text x="20.3634%" y="3503.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (2 samples, 0.07%)</title><rect x="20.1134%" y="3477" width="0.0667%" height="15" fill="rgb(221,57,46)" fg:x="603" fg:w="2"/><text x="20.3634%" y="3487.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (2 samples, 0.07%)</title><rect x="20.1134%" y="3461" width="0.0667%" height="15" fill="rgb(229,161,17)" fg:x="603" fg:w="2"/><text x="20.3634%" y="3471.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (2 samples, 0.07%)</title><rect x="20.1134%" y="3445" width="0.0667%" height="15" fill="rgb(222,213,11)" fg:x="603" fg:w="2"/><text x="20.3634%" y="3455.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (2 samples, 0.07%)</title><rect x="20.1134%" y="3429" width="0.0667%" height="15" fill="rgb(235,35,13)" fg:x="603" fg:w="2"/><text x="20.3634%" y="3439.50"></text></g><g><title>`0x7FFAC12C7776 (2 samples, 0.07%)</title><rect x="20.1134%" y="3413" width="0.0667%" height="15" fill="rgb(233,158,34)" fg:x="603" fg:w="2"/><text x="20.3634%" y="3423.50"></text></g><g><title>`0x7FFAC12C78B4 (2 samples, 0.07%)</title><rect x="20.1134%" y="3397" width="0.0667%" height="15" fill="rgb(215,151,48)" fg:x="603" fg:w="2"/><text x="20.3634%" y="3407.50"></text></g><g><title>`0x7FFAC12C80FC (1 samples, 0.03%)</title><rect x="20.1468%" y="3381" width="0.0334%" height="15" fill="rgb(229,84,14)" fg:x="604" fg:w="1"/><text x="20.3968%" y="3391.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;::push (1 samples, 0.03%)</title><rect x="20.1801%" y="3605" width="0.0334%" height="15" fill="rgb(229,68,14)" fg:x="605" fg:w="1"/><text x="20.4301%" y="3615.50"></text></g><g><title>boggle.exe`alloc::string::impl$6::clone (1 samples, 0.03%)</title><rect x="20.1801%" y="3589" width="0.0334%" height="15" fill="rgb(243,106,26)" fg:x="605" fg:w="1"/><text x="20.4301%" y="3599.50"></text></g><g><title>boggle.exe`alloc::vec::impl$11::clone (1 samples, 0.03%)</title><rect x="20.1801%" y="3573" width="0.0334%" height="15" fill="rgb(206,45,38)" fg:x="605" fg:w="1"/><text x="20.4301%" y="3583.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec_in (1 samples, 0.03%)</title><rect x="20.1801%" y="3557" width="0.0334%" height="15" fill="rgb(226,6,15)" fg:x="605" fg:w="1"/><text x="20.4301%" y="3567.50"></text></g><g><title>boggle.exe`alloc::slice::hack::to_vec (1 samples, 0.03%)</title><rect x="20.1801%" y="3541" width="0.0334%" height="15" fill="rgb(232,22,54)" fg:x="605" fg:w="1"/><text x="20.4301%" y="3551.50"></text></g><g><title>boggle.exe`alloc::slice::hack::impl$1::to_vec (1 samples, 0.03%)</title><rect x="20.1801%" y="3525" width="0.0334%" height="15" fill="rgb(229,222,32)" fg:x="605" fg:w="1"/><text x="20.4301%" y="3535.50"></text></g><g><title>boggle.exe`alloc::vec::Vec::with_capacity_in (1 samples, 0.03%)</title><rect x="20.1801%" y="3509" width="0.0334%" height="15" fill="rgb(228,62,29)" fg:x="605" fg:w="1"/><text x="20.4301%" y="3519.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec::with_capacity_in (1 samples, 0.03%)</title><rect x="20.1801%" y="3493" width="0.0334%" height="15" fill="rgb(251,103,34)" fg:x="605" fg:w="1"/><text x="20.4301%" y="3503.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner::with_capacity_in (1 samples, 0.03%)</title><rect x="20.1801%" y="3477" width="0.0334%" height="15" fill="rgb(233,12,30)" fg:x="605" fg:w="1"/><text x="20.4301%" y="3487.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner::try_allocate_in (1 samples, 0.03%)</title><rect x="20.1801%" y="3461" width="0.0334%" height="15" fill="rgb(238,52,0)" fg:x="605" fg:w="1"/><text x="20.4301%" y="3471.50"></text></g><g><title>`0x7FFAC12C7776 (1 samples, 0.03%)</title><rect x="20.1801%" y="3445" width="0.0334%" height="15" fill="rgb(223,98,5)" fg:x="605" fg:w="1"/><text x="20.4301%" y="3455.50"></text></g><g><title>`0x7FFAC12C78B4 (1 samples, 0.03%)</title><rect x="20.1801%" y="3429" width="0.0334%" height="15" fill="rgb(228,75,37)" fg:x="605" fg:w="1"/><text x="20.4301%" y="3439.50"></text></g><g><title>`0x7FFAC12C8134 (1 samples, 0.03%)</title><rect x="20.1801%" y="3413" width="0.0334%" height="15" fill="rgb(205,115,49)" fg:x="605" fg:w="1"/><text x="20.4301%" y="3423.50"></text></g><g><title>boggle.exe`alloc::string::String::pop (600 samples, 20.01%)</title><rect x="0.5670%" y="3669" width="20.0133%" height="15" fill="rgb(250,154,43)" fg:x="17" fg:w="600"/><text x="0.8170%" y="3679.50">boggle.exe`alloc::string::Strin..</text></g><g><title>boggle.exe`alloc::string::impl$28::deref (600 samples, 20.01%)</title><rect x="0.5670%" y="3653" width="20.0133%" height="15" fill="rgb(226,43,29)" fg:x="17" fg:w="600"/><text x="0.8170%" y="3663.50">boggle.exe`alloc::string::impl$..</text></g><g><title>boggle.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (600 samples, 20.01%)</title><rect x="0.5670%" y="3637" width="20.0133%" height="15" fill="rgb(249,228,39)" fg:x="17" fg:w="600"/><text x="0.8170%" y="3647.50">boggle.exe`alloc::vec::impl$8::..</text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::collect_words(boggle::utils::dict_trie::DictTrieNode*, ref$&lt;str$&gt;, alloc::vec::Vec (600 samples, 20.01%)</title><rect x="0.5670%" y="3621" width="20.0133%" height="15" fill="rgb(216,79,43)" fg:x="17" fg:w="600"/><text x="0.8170%" y="3631.50">boggle.exe`boggle::utils::dict_..</text></g><g><title>boggle.exe`std::collections::hash::map::impl$36::into_iter(std::collections::hash::map::HashMap (11 samples, 0.37%)</title><rect x="20.2135%" y="3605" width="0.3669%" height="15" fill="rgb(228,95,12)" fg:x="606" fg:w="11"/><text x="20.4635%" y="3615.50"></text></g><g><title>boggle.exe`std::collections::hash::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;::iter (11 samples, 0.37%)</title><rect x="20.2135%" y="3589" width="0.3669%" height="15" fill="rgb(249,221,15)" fg:x="606" fg:w="11"/><text x="20.4635%" y="3599.50"></text></g><g><title>boggle.exe`hashbrown::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt;::iter (11 samples, 0.37%)</title><rect x="20.2135%" y="3573" width="0.3669%" height="15" fill="rgb(233,34,13)" fg:x="606" fg:w="11"/><text x="20.4635%" y="3583.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTable&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;::iter (11 samples, 0.37%)</title><rect x="20.2135%" y="3557" width="0.3669%" height="15" fill="rgb(214,103,39)" fg:x="606" fg:w="11"/><text x="20.4635%" y="3567.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::iter (11 samples, 0.37%)</title><rect x="20.2135%" y="3541" width="0.3669%" height="15" fill="rgb(251,126,39)" fg:x="606" fg:w="11"/><text x="20.4635%" y="3551.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawIterRange&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::new(unsigned char*, hashbrown::raw::Bucket&lt;tuple$ (11 samples, 0.37%)</title><rect x="20.2135%" y="3525" width="0.3669%" height="15" fill="rgb(214,216,36)" fg:x="606" fg:w="11"/><text x="20.4635%" y="3535.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::load_aligned (11 samples, 0.37%)</title><rect x="20.2135%" y="3509" width="0.3669%" height="15" fill="rgb(220,221,8)" fg:x="606" fg:w="11"/><text x="20.4635%" y="3519.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::match_empty_or_deleted (11 samples, 0.37%)</title><rect x="20.2135%" y="3493" width="0.3669%" height="15" fill="rgb(240,216,3)" fg:x="606" fg:w="11"/><text x="20.4635%" y="3503.50"></text></g><g><title>boggle.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (11 samples, 0.37%)</title><rect x="20.2135%" y="3477" width="0.3669%" height="15" fill="rgb(232,218,17)" fg:x="606" fg:w="11"/><text x="20.4635%" y="3487.50"></text></g><g><title>boggle.exe`alloc::string::String::push (3 samples, 0.10%)</title><rect x="20.5804%" y="3669" width="0.1001%" height="15" fill="rgb(229,163,45)" fg:x="617" fg:w="3"/><text x="20.8304%" y="3679.50"></text></g><g><title>boggle.exe`core::char::methods::impl$0::len_utf8 (3 samples, 0.10%)</title><rect x="20.5804%" y="3653" width="0.1001%" height="15" fill="rgb(231,110,42)" fg:x="617" fg:w="3"/><text x="20.8304%" y="3663.50"></text></g><g><title>boggle.exe`core::char::methods::len_utf8 (3 samples, 0.10%)</title><rect x="20.5804%" y="3637" width="0.1001%" height="15" fill="rgb(208,170,48)" fg:x="617" fg:w="3"/><text x="20.8304%" y="3647.50"></text></g><g><title>boggle.exe`alloc::string::impl$102::to_string(ref$ (1 samples, 0.03%)</title><rect x="20.6805%" y="3669" width="0.0334%" height="15" fill="rgb(239,116,25)" fg:x="620" fg:w="1"/><text x="20.9305%" y="3679.50"></text></g><g><title>boggle.exe`alloc::string::impl$44::from(ref$ (1 samples, 0.03%)</title><rect x="20.6805%" y="3653" width="0.0334%" height="15" fill="rgb(219,200,50)" fg:x="620" fg:w="1"/><text x="20.9305%" y="3663.50"></text></g><g><title>boggle.exe`alloc::str::impl$4::to_owned(ref$ (1 samples, 0.03%)</title><rect x="20.6805%" y="3637" width="0.0334%" height="15" fill="rgb(245,200,0)" fg:x="620" fg:w="1"/><text x="20.9305%" y="3647.50"></text></g><g><title>boggle.exe`alloc::slice::impl$9::to_owned(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="20.6805%" y="3621" width="0.0334%" height="15" fill="rgb(245,119,33)" fg:x="620" fg:w="1"/><text x="20.9305%" y="3631.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="20.6805%" y="3605" width="0.0334%" height="15" fill="rgb(231,125,12)" fg:x="620" fg:w="1"/><text x="20.9305%" y="3615.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec_in(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="20.6805%" y="3589" width="0.0334%" height="15" fill="rgb(216,96,41)" fg:x="620" fg:w="1"/><text x="20.9305%" y="3599.50"></text></g><g><title>boggle.exe`alloc::slice::hack::to_vec(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="20.6805%" y="3573" width="0.0334%" height="15" fill="rgb(248,43,45)" fg:x="620" fg:w="1"/><text x="20.9305%" y="3583.50"></text></g><g><title>boggle.exe`alloc::slice::hack::impl$1::to_vec(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="20.6805%" y="3557" width="0.0334%" height="15" fill="rgb(217,222,7)" fg:x="620" fg:w="1"/><text x="20.9305%" y="3567.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="20.6805%" y="3541" width="0.0334%" height="15" fill="rgb(233,28,6)" fg:x="620" fg:w="1"/><text x="20.9305%" y="3551.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="20.6805%" y="3525" width="0.0334%" height="15" fill="rgb(231,218,15)" fg:x="620" fg:w="1"/><text x="20.9305%" y="3535.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="20.6805%" y="3509" width="0.0334%" height="15" fill="rgb(226,171,48)" fg:x="620" fg:w="1"/><text x="20.9305%" y="3519.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (1 samples, 0.03%)</title><rect x="20.6805%" y="3493" width="0.0334%" height="15" fill="rgb(235,201,9)" fg:x="620" fg:w="1"/><text x="20.9305%" y="3503.50"></text></g><g><title>`0x7FFAC12C7776 (1 samples, 0.03%)</title><rect x="20.6805%" y="3477" width="0.0334%" height="15" fill="rgb(217,80,15)" fg:x="620" fg:w="1"/><text x="20.9305%" y="3487.50"></text></g><g><title>`0x7FFAC12C78B4 (1 samples, 0.03%)</title><rect x="20.6805%" y="3461" width="0.0334%" height="15" fill="rgb(219,152,8)" fg:x="620" fg:w="1"/><text x="20.9305%" y="3471.50"></text></g><g><title>`0x7FFAC12C8047 (1 samples, 0.03%)</title><rect x="20.6805%" y="3445" width="0.0334%" height="15" fill="rgb(243,107,38)" fg:x="620" fg:w="1"/><text x="20.9305%" y="3455.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;::push (1 samples, 0.03%)</title><rect x="20.7138%" y="3669" width="0.0334%" height="15" fill="rgb(231,17,5)" fg:x="621" fg:w="1"/><text x="20.9638%" y="3679.50"></text></g><g><title>boggle.exe`alloc::string::impl$6::clone (1 samples, 0.03%)</title><rect x="20.7138%" y="3653" width="0.0334%" height="15" fill="rgb(209,25,54)" fg:x="621" fg:w="1"/><text x="20.9638%" y="3663.50"></text></g><g><title>boggle.exe`alloc::vec::impl$11::clone (1 samples, 0.03%)</title><rect x="20.7138%" y="3637" width="0.0334%" height="15" fill="rgb(219,0,2)" fg:x="621" fg:w="1"/><text x="20.9638%" y="3647.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec_in (1 samples, 0.03%)</title><rect x="20.7138%" y="3621" width="0.0334%" height="15" fill="rgb(246,9,5)" fg:x="621" fg:w="1"/><text x="20.9638%" y="3631.50"></text></g><g><title>boggle.exe`alloc::slice::hack::to_vec (1 samples, 0.03%)</title><rect x="20.7138%" y="3605" width="0.0334%" height="15" fill="rgb(226,159,4)" fg:x="621" fg:w="1"/><text x="20.9638%" y="3615.50"></text></g><g><title>boggle.exe`alloc::slice::hack::impl$1::to_vec (1 samples, 0.03%)</title><rect x="20.7138%" y="3589" width="0.0334%" height="15" fill="rgb(219,175,34)" fg:x="621" fg:w="1"/><text x="20.9638%" y="3599.50"></text></g><g><title>boggle.exe`alloc::vec::Vec::with_capacity_in (1 samples, 0.03%)</title><rect x="20.7138%" y="3573" width="0.0334%" height="15" fill="rgb(236,10,46)" fg:x="621" fg:w="1"/><text x="20.9638%" y="3583.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec::with_capacity_in (1 samples, 0.03%)</title><rect x="20.7138%" y="3557" width="0.0334%" height="15" fill="rgb(240,211,16)" fg:x="621" fg:w="1"/><text x="20.9638%" y="3567.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner::with_capacity_in (1 samples, 0.03%)</title><rect x="20.7138%" y="3541" width="0.0334%" height="15" fill="rgb(205,3,43)" fg:x="621" fg:w="1"/><text x="20.9638%" y="3551.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner::try_allocate_in (1 samples, 0.03%)</title><rect x="20.7138%" y="3525" width="0.0334%" height="15" fill="rgb(245,7,22)" fg:x="621" fg:w="1"/><text x="20.9638%" y="3535.50"></text></g><g><title>`0x7FFAC12C7771 (1 samples, 0.03%)</title><rect x="20.7138%" y="3509" width="0.0334%" height="15" fill="rgb(239,132,32)" fg:x="621" fg:w="1"/><text x="20.9638%" y="3519.50"></text></g><g><title>boggle.exe`alloc::string::String::pop (608 samples, 20.28%)</title><rect x="0.5670%" y="3733" width="20.2802%" height="15" fill="rgb(228,202,34)" fg:x="17" fg:w="608"/><text x="0.8170%" y="3743.50">boggle.exe`alloc::string::String..</text></g><g><title>boggle.exe`alloc::string::impl$28::deref (608 samples, 20.28%)</title><rect x="0.5670%" y="3717" width="20.2802%" height="15" fill="rgb(254,200,22)" fg:x="17" fg:w="608"/><text x="0.8170%" y="3727.50">boggle.exe`alloc::string::impl$2..</text></g><g><title>boggle.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (608 samples, 20.28%)</title><rect x="0.5670%" y="3701" width="20.2802%" height="15" fill="rgb(219,10,39)" fg:x="17" fg:w="608"/><text x="0.8170%" y="3711.50">boggle.exe`alloc::vec::impl$8::d..</text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::collect_words(boggle::utils::dict_trie::DictTrieNode*, ref$&lt;str$&gt;, alloc::vec::Vec (608 samples, 20.28%)</title><rect x="0.5670%" y="3685" width="20.2802%" height="15" fill="rgb(226,210,39)" fg:x="17" fg:w="608"/><text x="0.8170%" y="3695.50">boggle.exe`boggle::utils::dict_t..</text></g><g><title>boggle.exe`std::collections::hash::map::impl$36::into_iter(std::collections::hash::map::HashMap (3 samples, 0.10%)</title><rect x="20.7472%" y="3669" width="0.1001%" height="15" fill="rgb(208,219,16)" fg:x="622" fg:w="3"/><text x="20.9972%" y="3679.50"></text></g><g><title>boggle.exe`std::collections::hash::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;::iter (3 samples, 0.10%)</title><rect x="20.7472%" y="3653" width="0.1001%" height="15" fill="rgb(216,158,51)" fg:x="622" fg:w="3"/><text x="20.9972%" y="3663.50"></text></g><g><title>boggle.exe`hashbrown::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt;::iter (3 samples, 0.10%)</title><rect x="20.7472%" y="3637" width="0.1001%" height="15" fill="rgb(233,14,44)" fg:x="622" fg:w="3"/><text x="20.9972%" y="3647.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTable&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;::iter (3 samples, 0.10%)</title><rect x="20.7472%" y="3621" width="0.1001%" height="15" fill="rgb(237,97,39)" fg:x="622" fg:w="3"/><text x="20.9972%" y="3631.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::iter (3 samples, 0.10%)</title><rect x="20.7472%" y="3605" width="0.1001%" height="15" fill="rgb(218,198,43)" fg:x="622" fg:w="3"/><text x="20.9972%" y="3615.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawIterRange&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::new(unsigned char*, hashbrown::raw::Bucket&lt;tuple$ (3 samples, 0.10%)</title><rect x="20.7472%" y="3589" width="0.1001%" height="15" fill="rgb(231,104,20)" fg:x="622" fg:w="3"/><text x="20.9972%" y="3599.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::load_aligned (3 samples, 0.10%)</title><rect x="20.7472%" y="3573" width="0.1001%" height="15" fill="rgb(254,36,13)" fg:x="622" fg:w="3"/><text x="20.9972%" y="3583.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::match_empty_or_deleted (3 samples, 0.10%)</title><rect x="20.7472%" y="3557" width="0.1001%" height="15" fill="rgb(248,14,50)" fg:x="622" fg:w="3"/><text x="20.9972%" y="3567.50"></text></g><g><title>boggle.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (3 samples, 0.10%)</title><rect x="20.7472%" y="3541" width="0.1001%" height="15" fill="rgb(217,107,29)" fg:x="622" fg:w="3"/><text x="20.9972%" y="3551.50"></text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::collect_words(boggle::utils::dict_trie::DictTrieNode*, ref$&lt;str$&gt;, alloc::vec::Vec (611 samples, 20.38%)</title><rect x="0.5670%" y="3813" width="20.3803%" height="15" fill="rgb(251,169,33)" fg:x="17" fg:w="611"/><text x="0.8170%" y="3823.50">boggle.exe`boggle::utils::dict_t..</text></g><g><title>boggle.exe`alloc::string::String::pop (611 samples, 20.38%)</title><rect x="0.5670%" y="3797" width="20.3803%" height="15" fill="rgb(217,108,32)" fg:x="17" fg:w="611"/><text x="0.8170%" y="3807.50">boggle.exe`alloc::string::String..</text></g><g><title>boggle.exe`alloc::string::impl$28::deref (611 samples, 20.38%)</title><rect x="0.5670%" y="3781" width="20.3803%" height="15" fill="rgb(219,66,42)" fg:x="17" fg:w="611"/><text x="0.8170%" y="3791.50">boggle.exe`alloc::string::impl$2..</text></g><g><title>boggle.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (611 samples, 20.38%)</title><rect x="0.5670%" y="3765" width="20.3803%" height="15" fill="rgb(206,180,7)" fg:x="17" fg:w="611"/><text x="0.8170%" y="3775.50">boggle.exe`alloc::vec::impl$8::d..</text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::collect_words(boggle::utils::dict_trie::DictTrieNode*, ref$&lt;str$&gt;, alloc::vec::Vec (611 samples, 20.38%)</title><rect x="0.5670%" y="3749" width="20.3803%" height="15" fill="rgb(208,226,31)" fg:x="17" fg:w="611"/><text x="0.8170%" y="3759.50">boggle.exe`boggle::utils::dict_t..</text></g><g><title>boggle.exe`alloc::string::String::push (3 samples, 0.10%)</title><rect x="20.8472%" y="3733" width="0.1001%" height="15" fill="rgb(218,26,49)" fg:x="625" fg:w="3"/><text x="21.0972%" y="3743.50"></text></g><g><title>boggle.exe`core::char::methods::impl$0::len_utf8 (3 samples, 0.10%)</title><rect x="20.8472%" y="3717" width="0.1001%" height="15" fill="rgb(233,197,48)" fg:x="625" fg:w="3"/><text x="21.0972%" y="3727.50"></text></g><g><title>boggle.exe`core::char::methods::len_utf8 (3 samples, 0.10%)</title><rect x="20.8472%" y="3701" width="0.1001%" height="15" fill="rgb(252,181,51)" fg:x="625" fg:w="3"/><text x="21.0972%" y="3711.50"></text></g><g><title>boggle.exe`alloc::raw_vec::min_non_zero_cap (1 samples, 0.03%)</title><rect x="20.9807%" y="3605" width="0.0334%" height="15" fill="rgb(253,90,19)" fg:x="629" fg:w="1"/><text x="21.2307%" y="3615.50"></text></g><g><title>`0x7FFAC12D541C (1 samples, 0.03%)</title><rect x="21.0140%" y="3509" width="0.0334%" height="15" fill="rgb(215,171,30)" fg:x="630" fg:w="1"/><text x="21.2640%" y="3519.50"></text></g><g><title>`0x7FFAC12D5C95 (2 samples, 0.07%)</title><rect x="21.0474%" y="3493" width="0.0667%" height="15" fill="rgb(214,222,9)" fg:x="631" fg:w="2"/><text x="21.2974%" y="3503.50"></text></g><g><title>`0x7FFAC12D5CDB (1 samples, 0.03%)</title><rect x="21.1141%" y="3493" width="0.0334%" height="15" fill="rgb(223,3,22)" fg:x="633" fg:w="1"/><text x="21.3641%" y="3503.50"></text></g><g><title>`0x7FFAC12D5D40 (1 samples, 0.03%)</title><rect x="21.1474%" y="3493" width="0.0334%" height="15" fill="rgb(225,196,46)" fg:x="634" fg:w="1"/><text x="21.3974%" y="3503.50"></text></g><g><title>`0x7FFAC12D5D81 (1 samples, 0.03%)</title><rect x="21.1808%" y="3493" width="0.0334%" height="15" fill="rgb(209,110,37)" fg:x="635" fg:w="1"/><text x="21.4308%" y="3503.50"></text></g><g><title>`0x7FFAC12C6CAA (1 samples, 0.03%)</title><rect x="21.2141%" y="3477" width="0.0334%" height="15" fill="rgb(249,89,12)" fg:x="636" fg:w="1"/><text x="21.4641%" y="3487.50"></text></g><g><title>`0x7FFAC12C780A (1 samples, 0.03%)</title><rect x="21.2475%" y="3461" width="0.0334%" height="15" fill="rgb(226,27,33)" fg:x="637" fg:w="1"/><text x="21.4975%" y="3471.50"></text></g><g><title>`0x7FFAC12C782F (2 samples, 0.07%)</title><rect x="21.2809%" y="3461" width="0.0667%" height="15" fill="rgb(213,82,22)" fg:x="638" fg:w="2"/><text x="21.5309%" y="3471.50"></text></g><g><title>`0x7FFAC12C7E80 (1 samples, 0.03%)</title><rect x="21.3476%" y="3445" width="0.0334%" height="15" fill="rgb(248,140,0)" fg:x="640" fg:w="1"/><text x="21.5976%" y="3455.50"></text></g><g><title>`0x7FFAC12C8047 (8 samples, 0.27%)</title><rect x="21.3809%" y="3445" width="0.2668%" height="15" fill="rgb(228,106,3)" fg:x="641" fg:w="8"/><text x="21.6309%" y="3455.50"></text></g><g><title>`0x7FFAC12C809C (1 samples, 0.03%)</title><rect x="21.6478%" y="3445" width="0.0334%" height="15" fill="rgb(209,23,37)" fg:x="649" fg:w="1"/><text x="21.8978%" y="3455.50"></text></g><g><title>`0x7FFAC12C814B (1 samples, 0.03%)</title><rect x="21.6811%" y="3445" width="0.0334%" height="15" fill="rgb(241,93,50)" fg:x="650" fg:w="1"/><text x="21.9311%" y="3455.50"></text></g><g><title>`0x7FFAC12C818E (1 samples, 0.03%)</title><rect x="21.7145%" y="3445" width="0.0334%" height="15" fill="rgb(253,46,43)" fg:x="651" fg:w="1"/><text x="21.9645%" y="3455.50"></text></g><g><title>`0x7FFAC12C81D3 (1 samples, 0.03%)</title><rect x="21.7478%" y="3445" width="0.0334%" height="15" fill="rgb(226,206,43)" fg:x="652" fg:w="1"/><text x="21.9978%" y="3455.50"></text></g><g><title>`0x7FFAC12C78B4 (14 samples, 0.47%)</title><rect x="21.3476%" y="3461" width="0.4670%" height="15" fill="rgb(217,54,7)" fg:x="640" fg:w="14"/><text x="21.5976%" y="3471.50"></text></g><g><title>`0x7FFAC12C8306 (1 samples, 0.03%)</title><rect x="21.7812%" y="3445" width="0.0334%" height="15" fill="rgb(223,5,52)" fg:x="653" fg:w="1"/><text x="22.0312%" y="3455.50"></text></g><g><title>`0x7FFAC12D5DAA (19 samples, 0.63%)</title><rect x="21.2141%" y="3493" width="0.6338%" height="15" fill="rgb(206,52,46)" fg:x="636" fg:w="19"/><text x="21.4641%" y="3503.50"></text></g><g><title>`0x7FFAC12C7776 (18 samples, 0.60%)</title><rect x="21.2475%" y="3477" width="0.6004%" height="15" fill="rgb(253,136,11)" fg:x="637" fg:w="18"/><text x="21.4975%" y="3487.50"></text></g><g><title>`0x7FFAC12C7998 (1 samples, 0.03%)</title><rect x="21.8145%" y="3461" width="0.0334%" height="15" fill="rgb(208,106,33)" fg:x="654" fg:w="1"/><text x="22.0645%" y="3471.50"></text></g><g><title>`0x7FFAC12D5DF9 (1 samples, 0.03%)</title><rect x="21.8479%" y="3493" width="0.0334%" height="15" fill="rgb(206,54,4)" fg:x="655" fg:w="1"/><text x="22.0979%" y="3503.50"></text></g><g><title>`0x7FFAC12D225A (1 samples, 0.03%)</title><rect x="21.8813%" y="3477" width="0.0334%" height="15" fill="rgb(213,3,15)" fg:x="656" fg:w="1"/><text x="22.1313%" y="3487.50"></text></g><g><title>`0x7FFAC12D2282 (1 samples, 0.03%)</title><rect x="21.9146%" y="3477" width="0.0334%" height="15" fill="rgb(252,211,39)" fg:x="657" fg:w="1"/><text x="22.1646%" y="3487.50"></text></g><g><title>`0x7FFAC12D22DB (1 samples, 0.03%)</title><rect x="21.9480%" y="3477" width="0.0334%" height="15" fill="rgb(223,6,36)" fg:x="658" fg:w="1"/><text x="22.1980%" y="3487.50"></text></g><g><title>`0x7FFAC12D230C (1 samples, 0.03%)</title><rect x="21.9813%" y="3477" width="0.0334%" height="15" fill="rgb(252,169,45)" fg:x="659" fg:w="1"/><text x="22.2313%" y="3487.50"></text></g><g><title>`0x7FFAC12D231A (1 samples, 0.03%)</title><rect x="22.0147%" y="3477" width="0.0334%" height="15" fill="rgb(212,48,26)" fg:x="660" fg:w="1"/><text x="22.2647%" y="3487.50"></text></g><g><title>`0x7FFAC12D23A7 (7 samples, 0.23%)</title><rect x="22.0480%" y="3477" width="0.2335%" height="15" fill="rgb(251,102,48)" fg:x="661" fg:w="7"/><text x="22.2980%" y="3487.50"></text></g><g><title>`0x7FFAC12D5376 (39 samples, 1.30%)</title><rect x="21.0140%" y="3525" width="1.3009%" height="15" fill="rgb(243,208,16)" fg:x="630" fg:w="39"/><text x="21.2640%" y="3535.50"></text></g><g><title>`0x7FFAC12D54B5 (38 samples, 1.27%)</title><rect x="21.0474%" y="3509" width="1.2675%" height="15" fill="rgb(219,96,24)" fg:x="631" fg:w="38"/><text x="21.2974%" y="3519.50"></text></g><g><title>`0x7FFAC12D5E0B (13 samples, 0.43%)</title><rect x="21.8813%" y="3493" width="0.4336%" height="15" fill="rgb(219,33,29)" fg:x="656" fg:w="13"/><text x="22.1313%" y="3503.50"></text></g><g><title>`0x7FFAC12D23DD (1 samples, 0.03%)</title><rect x="22.2815%" y="3477" width="0.0334%" height="15" fill="rgb(223,176,5)" fg:x="668" fg:w="1"/><text x="22.5315%" y="3487.50"></text></g><g><title>boggle.exe`alloc::raw_vec::impl$5::reserve::do_reserve_and_handle&lt;alloc::alloc::Global&gt;(alloc::raw_vec::RawVecInner (43 samples, 1.43%)</title><rect x="20.9473%" y="3637" width="1.4343%" height="15" fill="rgb(228,140,14)" fg:x="628" fg:w="43"/><text x="21.1973%" y="3647.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (43 samples, 1.43%)</title><rect x="20.9473%" y="3621" width="1.4343%" height="15" fill="rgb(217,179,31)" fg:x="628" fg:w="43"/><text x="21.1973%" y="3631.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (41 samples, 1.37%)</title><rect x="21.0140%" y="3605" width="1.3676%" height="15" fill="rgb(230,9,30)" fg:x="630" fg:w="41"/><text x="21.2640%" y="3615.50"></text></g><g><title>boggle.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (41 samples, 1.37%)</title><rect x="21.0140%" y="3589" width="1.3676%" height="15" fill="rgb(230,136,20)" fg:x="630" fg:w="41"/><text x="21.2640%" y="3599.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (41 samples, 1.37%)</title><rect x="21.0140%" y="3573" width="1.3676%" height="15" fill="rgb(215,210,22)" fg:x="630" fg:w="41"/><text x="21.2640%" y="3583.50"></text></g><g><title>boggle.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (41 samples, 1.37%)</title><rect x="21.0140%" y="3557" width="1.3676%" height="15" fill="rgb(218,43,5)" fg:x="630" fg:w="41"/><text x="21.2640%" y="3567.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (41 samples, 1.37%)</title><rect x="21.0140%" y="3541" width="1.3676%" height="15" fill="rgb(216,11,5)" fg:x="630" fg:w="41"/><text x="21.2640%" y="3551.50"></text></g><g><title>`0x7FFAC12D537B (2 samples, 0.07%)</title><rect x="22.3149%" y="3525" width="0.0667%" height="15" fill="rgb(209,82,29)" fg:x="669" fg:w="2"/><text x="22.5649%" y="3535.50"></text></g><g><title>`0x7FFAB8910330 (1 samples, 0.03%)</title><rect x="22.3816%" y="3573" width="0.0334%" height="15" fill="rgb(244,115,12)" fg:x="671" fg:w="1"/><text x="22.6316%" y="3583.50"></text></g><g><title>`0x7FFAB8910332 (1 samples, 0.03%)</title><rect x="22.4149%" y="3573" width="0.0334%" height="15" fill="rgb(222,82,18)" fg:x="672" fg:w="1"/><text x="22.6649%" y="3583.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_mut_ptr (2 samples, 0.07%)</title><rect x="22.4483%" y="3573" width="0.0667%" height="15" fill="rgb(249,227,8)" fg:x="673" fg:w="2"/><text x="22.6983%" y="3583.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::ptr (1 samples, 0.03%)</title><rect x="22.4817%" y="3557" width="0.0334%" height="15" fill="rgb(253,141,45)" fg:x="674" fg:w="1"/><text x="22.7317%" y="3567.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (1 samples, 0.03%)</title><rect x="22.4817%" y="3541" width="0.0334%" height="15" fill="rgb(234,184,4)" fg:x="674" fg:w="1"/><text x="22.7317%" y="3551.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (1 samples, 0.03%)</title><rect x="22.4817%" y="3525" width="0.0334%" height="15" fill="rgb(218,194,23)" fg:x="674" fg:w="1"/><text x="22.7317%" y="3535.50"></text></g><g><title>boggle.exe`alloc::string::impl$24::add(alloc::string::String, ref$ (50 samples, 1.67%)</title><rect x="20.9473%" y="3653" width="1.6678%" height="15" fill="rgb(235,66,41)" fg:x="628" fg:w="50"/><text x="21.1973%" y="3663.50"></text></g><g><title>boggle.exe`alloc::string::String::push_str(ref$ (7 samples, 0.23%)</title><rect x="22.3816%" y="3637" width="0.2335%" height="15" fill="rgb(245,217,1)" fg:x="671" fg:w="7"/><text x="22.6316%" y="3647.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::extend_from_slice(ref$&lt;slice2$ (7 samples, 0.23%)</title><rect x="22.3816%" y="3621" width="0.2335%" height="15" fill="rgb(229,91,1)" fg:x="671" fg:w="7"/><text x="22.6316%" y="3631.50"></text></g><g><title>boggle.exe`alloc::vec::spec_extend::impl$4::spec_extend(alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;*, core::slice::iter::Iter (7 samples, 0.23%)</title><rect x="22.3816%" y="3605" width="0.2335%" height="15" fill="rgb(207,101,30)" fg:x="671" fg:w="7"/><text x="22.6316%" y="3615.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::append_elements(ptr_const$&lt;slice2$ (7 samples, 0.23%)</title><rect x="22.3816%" y="3589" width="0.2335%" height="15" fill="rgb(223,82,49)" fg:x="671" fg:w="7"/><text x="22.6316%" y="3599.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::reserve (3 samples, 0.10%)</title><rect x="22.5150%" y="3573" width="0.1001%" height="15" fill="rgb(218,167,17)" fg:x="675" fg:w="3"/><text x="22.7650%" y="3583.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::reserve (3 samples, 0.10%)</title><rect x="22.5150%" y="3557" width="0.1001%" height="15" fill="rgb(208,103,14)" fg:x="675" fg:w="3"/><text x="22.7650%" y="3567.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::reserve (3 samples, 0.10%)</title><rect x="22.5150%" y="3541" width="0.1001%" height="15" fill="rgb(238,20,8)" fg:x="675" fg:w="3"/><text x="22.7650%" y="3551.50"></text></g><g><title>boggle.exe`alloc::raw_vec::min_non_zero_cap (1 samples, 0.03%)</title><rect x="22.9153%" y="3573" width="0.0334%" height="15" fill="rgb(218,80,54)" fg:x="687" fg:w="1"/><text x="23.1653%" y="3583.50"></text></g><g><title>boggle.exe`core::num::impl$11::checked_add (1 samples, 0.03%)</title><rect x="22.9486%" y="3573" width="0.0334%" height="15" fill="rgb(240,144,17)" fg:x="688" fg:w="1"/><text x="23.1986%" y="3583.50"></text></g><g><title>`0x7FFAC12C776F (1 samples, 0.03%)</title><rect x="22.9820%" y="3493" width="0.0334%" height="15" fill="rgb(245,27,50)" fg:x="689" fg:w="1"/><text x="23.2320%" y="3503.50"></text></g><g><title>`0x7FFAC12C7E80 (1 samples, 0.03%)</title><rect x="23.0153%" y="3461" width="0.0334%" height="15" fill="rgb(251,51,7)" fg:x="690" fg:w="1"/><text x="23.2653%" y="3471.50"></text></g><g><title>`0x7FFAC12C7FF0 (2 samples, 0.07%)</title><rect x="23.0487%" y="3461" width="0.0667%" height="15" fill="rgb(245,217,29)" fg:x="691" fg:w="2"/><text x="23.2987%" y="3471.50"></text></g><g><title>`0x7FFAC12C7FF3 (1 samples, 0.03%)</title><rect x="23.1154%" y="3461" width="0.0334%" height="15" fill="rgb(221,176,29)" fg:x="693" fg:w="1"/><text x="23.3654%" y="3471.50"></text></g><g><title>`0x7FFAC12C801A (2 samples, 0.07%)</title><rect x="23.1488%" y="3461" width="0.0667%" height="15" fill="rgb(212,180,24)" fg:x="694" fg:w="2"/><text x="23.3988%" y="3471.50"></text></g><g><title>`0x7FFAC12C8047 (8 samples, 0.27%)</title><rect x="23.2155%" y="3461" width="0.2668%" height="15" fill="rgb(254,24,2)" fg:x="696" fg:w="8"/><text x="23.4655%" y="3471.50"></text></g><g><title>`0x7FFAC12C80CE (1 samples, 0.03%)</title><rect x="23.4823%" y="3461" width="0.0334%" height="15" fill="rgb(230,100,2)" fg:x="704" fg:w="1"/><text x="23.7323%" y="3471.50"></text></g><g><title>`0x7FFAC12C817A (1 samples, 0.03%)</title><rect x="23.5157%" y="3461" width="0.0334%" height="15" fill="rgb(219,142,25)" fg:x="705" fg:w="1"/><text x="23.7657%" y="3471.50"></text></g><g><title>`0x7FFAC12C8475 (1 samples, 0.03%)</title><rect x="23.5490%" y="3461" width="0.0334%" height="15" fill="rgb(240,73,43)" fg:x="706" fg:w="1"/><text x="23.7990%" y="3471.50"></text></g><g><title>`0x7FFAC12C8558 (1 samples, 0.03%)</title><rect x="23.5824%" y="3461" width="0.0334%" height="15" fill="rgb(214,114,15)" fg:x="707" fg:w="1"/><text x="23.8324%" y="3471.50"></text></g><g><title>`0x7FFAC12C85F0 (1 samples, 0.03%)</title><rect x="23.6157%" y="3461" width="0.0334%" height="15" fill="rgb(207,130,4)" fg:x="708" fg:w="1"/><text x="23.8657%" y="3471.50"></text></g><g><title>`0x7FFAC12C78B4 (20 samples, 0.67%)</title><rect x="23.0153%" y="3477" width="0.6671%" height="15" fill="rgb(221,25,40)" fg:x="690" fg:w="20"/><text x="23.2653%" y="3487.50"></text></g><g><title>`0x7FFAC12C8613 (1 samples, 0.03%)</title><rect x="23.6491%" y="3461" width="0.0334%" height="15" fill="rgb(241,184,7)" fg:x="709" fg:w="1"/><text x="23.8991%" y="3471.50"></text></g><g><title>`0x7FFAC12C796B (1 samples, 0.03%)</title><rect x="23.6825%" y="3477" width="0.0334%" height="15" fill="rgb(235,159,4)" fg:x="710" fg:w="1"/><text x="23.9325%" y="3487.50"></text></g><g><title>`0x7FFAC12C7776 (22 samples, 0.73%)</title><rect x="23.0153%" y="3493" width="0.7338%" height="15" fill="rgb(214,87,48)" fg:x="690" fg:w="22"/><text x="23.2653%" y="3503.50"></text></g><g><title>`0x7FFAC12C797B (1 samples, 0.03%)</title><rect x="23.7158%" y="3477" width="0.0334%" height="15" fill="rgb(246,198,24)" fg:x="711" fg:w="1"/><text x="23.9658%" y="3487.50"></text></g><g><title>`0x7FFAC12C7779 (1 samples, 0.03%)</title><rect x="23.7492%" y="3493" width="0.0334%" height="15" fill="rgb(209,66,40)" fg:x="712" fg:w="1"/><text x="23.9992%" y="3503.50"></text></g><g><title>boggle.exe`__rust_alloc (1 samples, 0.03%)</title><rect x="23.7825%" y="3493" width="0.0334%" height="15" fill="rgb(233,147,39)" fg:x="713" fg:w="1"/><text x="24.0325%" y="3503.50"></text></g><g><title>boggle.exe`alloc::raw_vec::impl$5::reserve::do_reserve_and_handle&lt;alloc::alloc::Global&gt;(alloc::raw_vec::RawVecInner (32 samples, 1.07%)</title><rect x="22.8152%" y="3605" width="1.0674%" height="15" fill="rgb(231,145,52)" fg:x="684" fg:w="32"/><text x="23.0652%" y="3615.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (30 samples, 1.00%)</title><rect x="22.8819%" y="3589" width="1.0007%" height="15" fill="rgb(206,20,26)" fg:x="686" fg:w="30"/><text x="23.1319%" y="3599.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (27 samples, 0.90%)</title><rect x="22.9820%" y="3573" width="0.9006%" height="15" fill="rgb(238,220,4)" fg:x="689" fg:w="27"/><text x="23.2320%" y="3583.50"></text></g><g><title>boggle.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (27 samples, 0.90%)</title><rect x="22.9820%" y="3557" width="0.9006%" height="15" fill="rgb(252,195,42)" fg:x="689" fg:w="27"/><text x="23.2320%" y="3567.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (27 samples, 0.90%)</title><rect x="22.9820%" y="3541" width="0.9006%" height="15" fill="rgb(209,10,6)" fg:x="689" fg:w="27"/><text x="23.2320%" y="3551.50"></text></g><g><title>boggle.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (27 samples, 0.90%)</title><rect x="22.9820%" y="3525" width="0.9006%" height="15" fill="rgb(229,3,52)" fg:x="689" fg:w="27"/><text x="23.2320%" y="3535.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (27 samples, 0.90%)</title><rect x="22.9820%" y="3509" width="0.9006%" height="15" fill="rgb(253,49,37)" fg:x="689" fg:w="27"/><text x="23.2320%" y="3519.50"></text></g><g><title>boggle.exe`std::alloc::__default_lib_allocator::__rdl_alloc (2 samples, 0.07%)</title><rect x="23.8159%" y="3493" width="0.0667%" height="15" fill="rgb(240,103,49)" fg:x="714" fg:w="2"/><text x="24.0659%" y="3503.50"></text></g><g><title>boggle.exe`std::sys::alloc::windows::impl$0::alloc (2 samples, 0.07%)</title><rect x="23.8159%" y="3477" width="0.0667%" height="15" fill="rgb(250,182,30)" fg:x="714" fg:w="2"/><text x="24.0659%" y="3487.50"></text></g><g><title>boggle.exe`std::sys::alloc::windows::allocate (2 samples, 0.07%)</title><rect x="23.8159%" y="3461" width="0.0667%" height="15" fill="rgb(248,8,30)" fg:x="714" fg:w="2"/><text x="24.0659%" y="3471.50"></text></g><g><title>boggle.exe`alloc::string::String::reserve (2 samples, 0.07%)</title><rect x="23.8826%" y="3605" width="0.0667%" height="15" fill="rgb(237,120,30)" fg:x="716" fg:w="2"/><text x="24.1326%" y="3615.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::reserve (2 samples, 0.07%)</title><rect x="23.8826%" y="3589" width="0.0667%" height="15" fill="rgb(221,146,34)" fg:x="716" fg:w="2"/><text x="24.1326%" y="3599.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::reserve (2 samples, 0.07%)</title><rect x="23.8826%" y="3573" width="0.0667%" height="15" fill="rgb(242,55,13)" fg:x="716" fg:w="2"/><text x="24.1326%" y="3583.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::reserve (2 samples, 0.07%)</title><rect x="23.8826%" y="3557" width="0.0667%" height="15" fill="rgb(242,112,31)" fg:x="716" fg:w="2"/><text x="24.1326%" y="3567.50"></text></g><g><title>boggle.exe`core::char::impl$34::size_hint (1 samples, 0.03%)</title><rect x="23.9493%" y="3605" width="0.0334%" height="15" fill="rgb(249,192,27)" fg:x="718" fg:w="1"/><text x="24.1993%" y="3615.50"></text></g><g><title>boggle.exe`alloc::string::impl$13::extend (36 samples, 1.20%)</title><rect x="22.8152%" y="3621" width="1.2008%" height="15" fill="rgb(208,204,44)" fg:x="684" fg:w="36"/><text x="23.0652%" y="3631.50"></text></g><g><title>boggle.exe`core::iter::traits::iterator::Iterator::for_each(core::char::ToUppercase, alloc::string::impl$13::extend::closure_env$0 (1 samples, 0.03%)</title><rect x="23.9827%" y="3605" width="0.0334%" height="15" fill="rgb(208,93,54)" fg:x="719" fg:w="1"/><text x="24.2327%" y="3615.50"></text></g><g><title>boggle.exe`alloc::string::impl$7::from_iter (47 samples, 1.57%)</title><rect x="22.6151%" y="3637" width="1.5677%" height="15" fill="rgb(242,1,31)" fg:x="678" fg:w="47"/><text x="22.8651%" y="3647.50"></text></g><g><title>boggle.exe`core::char::impl$44::fold&lt;tuple$&lt;&gt;,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;char,alloc::string::impl$13::extend::closure_env$0&lt;core::char::ToUppercase&gt; &gt; &gt;(core::char::ToUppercase, tuple$&lt;&gt;, core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;char,alloc::string::impl$13::extend::closure_env$0 (5 samples, 0.17%)</title><rect x="24.0160%" y="3621" width="0.1668%" height="15" fill="rgb(241,83,25)" fg:x="720" fg:w="5"/><text x="24.2660%" y="3631.50"></text></g><g><title>boggle.exe`core::char::impl$16::fold(core::char::CaseMappingIter, tuple$&lt;&gt;, core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;char,alloc::string::impl$13::extend::closure_env$0 (2 samples, 0.07%)</title><rect x="24.1161%" y="3605" width="0.0667%" height="15" fill="rgb(205,169,50)" fg:x="723" fg:w="2"/><text x="24.3661%" y="3615.50"></text></g><g><title>boggle.exe`core::array::iter::impl$2::fold(core::array::iter::IntoIter&lt;char,3&gt;, tuple$&lt;&gt;, core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;char,alloc::string::impl$13::extend::closure_env$0 (2 samples, 0.07%)</title><rect x="24.1161%" y="3589" width="0.0667%" height="15" fill="rgb(239,186,37)" fg:x="723" fg:w="2"/><text x="24.3661%" y="3599.50"></text></g><g><title>boggle.exe`core::iter::adapters::by_ref_sized::impl$0::fold(core::iter::adapters::by_ref_sized::ByRefSized&lt;core::ops::index_range::IndexRange&gt;, tuple$&lt;&gt;, core::array::iter::impl$2::fold::closure_env$0&lt;char,3,tuple$&lt;&gt;,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;char,alloc::string::impl$13::extend::closure_env$0 (2 samples, 0.07%)</title><rect x="24.1161%" y="3573" width="0.0667%" height="15" fill="rgb(205,221,10)" fg:x="723" fg:w="2"/><text x="24.3661%" y="3583.50"></text></g><g><title>boggle.exe`core::iter::traits::iterator::Iterator::try_fold(core::ops::index_range::IndexRange*, tuple$&lt;&gt;, core::ops::try_trait::impl$0::wrap_mut_2::closure_env$0&lt;tuple$&lt;&gt;,tuple$&lt;&gt;,usize,core::array::iter::impl$2::fold::closure_env$0&lt;char,3,tuple$&lt;&gt;,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;char,alloc::string::impl$13::extend::closure_env$0 (2 samples, 0.07%)</title><rect x="24.1161%" y="3557" width="0.0667%" height="15" fill="rgb(218,196,15)" fg:x="723" fg:w="2"/><text x="24.3661%" y="3567.50"></text></g><g><title>boggle.exe`core::ops::try_trait::impl$0::wrap_mut_2::closure$0(core::ops::try_trait::impl$0::wrap_mut_2::closure_env$0&lt;tuple$&lt;&gt;,tuple$&lt;&gt;,usize,core::array::iter::impl$2::fold::closure_env$0&lt;char,3,tuple$&lt;&gt;,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;char,alloc::string::impl$13::extend::closure_env$0&lt;core::char::ToUppercase&gt; &gt; &gt; &gt;*, tuple$ (2 samples, 0.07%)</title><rect x="24.1161%" y="3541" width="0.0667%" height="15" fill="rgb(218,196,35)" fg:x="723" fg:w="2"/><text x="24.3661%" y="3551.50"></text></g><g><title>boggle.exe`core::array::iter::impl$2::fold::closure$0(core::array::iter::impl$2::fold::closure_env$0&lt;char,3,tuple$&lt;&gt;,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;char,alloc::string::impl$13::extend::closure_env$0&lt;core::char::ToUppercase&gt; &gt; &gt;*, tuple$ (2 samples, 0.07%)</title><rect x="24.1161%" y="3525" width="0.0667%" height="15" fill="rgb(233,63,24)" fg:x="723" fg:w="2"/><text x="24.3661%" y="3535.50"></text></g><g><title>boggle.exe`core::iter::traits::iterator::Iterator::for_each::call::closure$0(core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;char,alloc::string::impl$13::extend::closure_env$0&lt;core::char::ToUppercase&gt; &gt;*, tuple$ (2 samples, 0.07%)</title><rect x="24.1161%" y="3509" width="0.0667%" height="15" fill="rgb(225,8,4)" fg:x="723" fg:w="2"/><text x="24.3661%" y="3519.50"></text></g><g><title>boggle.exe`alloc::string::impl$13::extend::closure$0(alloc::string::impl$13::extend::closure_env$0 (2 samples, 0.07%)</title><rect x="24.1161%" y="3493" width="0.0667%" height="15" fill="rgb(234,105,35)" fg:x="723" fg:w="2"/><text x="24.3661%" y="3503.50"></text></g><g><title>boggle.exe`alloc::string::String::push (2 samples, 0.07%)</title><rect x="24.1161%" y="3477" width="0.0667%" height="15" fill="rgb(236,21,32)" fg:x="723" fg:w="2"/><text x="24.3661%" y="3487.50"></text></g><g><title>boggle.exe`core::char::methods::impl$0::len_utf8 (2 samples, 0.07%)</title><rect x="24.1161%" y="3461" width="0.0667%" height="15" fill="rgb(228,109,6)" fg:x="723" fg:w="2"/><text x="24.3661%" y="3471.50"></text></g><g><title>boggle.exe`core::char::methods::len_utf8 (2 samples, 0.07%)</title><rect x="24.1161%" y="3445" width="0.0667%" height="15" fill="rgb(229,215,31)" fg:x="723" fg:w="2"/><text x="24.3661%" y="3455.50"></text></g><g><title>boggle.exe`core::char::methods::impl$0::to_uppercase (56 samples, 1.87%)</title><rect x="22.6151%" y="3653" width="1.8679%" height="15" fill="rgb(221,52,54)" fg:x="678" fg:w="56"/><text x="22.8651%" y="3663.50">b..</text></g><g><title>boggle.exe`core::char::CaseMappingIter::new (9 samples, 0.30%)</title><rect x="24.1828%" y="3637" width="0.3002%" height="15" fill="rgb(252,129,43)" fg:x="725" fg:w="9"/><text x="24.4328%" y="3647.50"></text></g><g><title>`0x7FFAC12D2225 (1 samples, 0.03%)</title><rect x="24.4830%" y="3541" width="0.0334%" height="15" fill="rgb(248,183,27)" fg:x="734" fg:w="1"/><text x="24.7330%" y="3551.50"></text></g><g><title>`0x7FFAC12D222E (1 samples, 0.03%)</title><rect x="24.5163%" y="3541" width="0.0334%" height="15" fill="rgb(250,0,22)" fg:x="735" fg:w="1"/><text x="24.7663%" y="3551.50"></text></g><g><title>`0x7FFAC12D2240 (2 samples, 0.07%)</title><rect x="24.5497%" y="3541" width="0.0667%" height="15" fill="rgb(213,166,10)" fg:x="736" fg:w="2"/><text x="24.7997%" y="3551.50"></text></g><g><title>`0x7FFAC12D2296 (1 samples, 0.03%)</title><rect x="24.6164%" y="3541" width="0.0334%" height="15" fill="rgb(207,163,36)" fg:x="738" fg:w="1"/><text x="24.8664%" y="3551.50"></text></g><g><title>`0x7FFAC12D22FC (1 samples, 0.03%)</title><rect x="24.6498%" y="3541" width="0.0334%" height="15" fill="rgb(208,122,22)" fg:x="739" fg:w="1"/><text x="24.8998%" y="3551.50"></text></g><g><title>`0x7FFAC12D2313 (1 samples, 0.03%)</title><rect x="24.6831%" y="3541" width="0.0334%" height="15" fill="rgb(207,104,49)" fg:x="740" fg:w="1"/><text x="24.9331%" y="3551.50"></text></g><g><title>`0x7FFAC12D2329 (2 samples, 0.07%)</title><rect x="24.7165%" y="3541" width="0.0667%" height="15" fill="rgb(248,211,50)" fg:x="741" fg:w="2"/><text x="24.9665%" y="3551.50"></text></g><g><title>`0x7FFAC12D23A7 (6 samples, 0.20%)</title><rect x="24.7832%" y="3541" width="0.2001%" height="15" fill="rgb(217,13,45)" fg:x="743" fg:w="6"/><text x="25.0332%" y="3551.50"></text></g><g><title>`0x7FFAC12D23C2 (1 samples, 0.03%)</title><rect x="24.9833%" y="3541" width="0.0334%" height="15" fill="rgb(211,216,49)" fg:x="749" fg:w="1"/><text x="25.2333%" y="3551.50"></text></g><g><title>`0x7FFAC12D269C (2 samples, 0.07%)</title><rect x="25.0167%" y="3541" width="0.0667%" height="15" fill="rgb(221,58,53)" fg:x="750" fg:w="2"/><text x="25.2667%" y="3551.50"></text></g><g><title>`0x7FFAC12D27BC (1 samples, 0.03%)</title><rect x="25.0834%" y="3541" width="0.0334%" height="15" fill="rgb(220,112,41)" fg:x="752" fg:w="1"/><text x="25.3334%" y="3551.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place (21 samples, 0.70%)</title><rect x="24.4830%" y="3653" width="0.7005%" height="15" fill="rgb(236,38,28)" fg:x="734" fg:w="21"/><text x="24.7330%" y="3663.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(alloc::vec::Vec (21 samples, 0.70%)</title><rect x="24.4830%" y="3637" width="0.7005%" height="15" fill="rgb(227,195,22)" fg:x="734" fg:w="21"/><text x="24.7330%" y="3647.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (21 samples, 0.70%)</title><rect x="24.4830%" y="3621" width="0.7005%" height="15" fill="rgb(214,55,33)" fg:x="734" fg:w="21"/><text x="24.7330%" y="3631.50"></text></g><g><title>boggle.exe`alloc::raw_vec::impl$4::drop(alloc::raw_vec::RawVec (21 samples, 0.70%)</title><rect x="24.4830%" y="3605" width="0.7005%" height="15" fill="rgb(248,80,13)" fg:x="734" fg:w="21"/><text x="24.7330%" y="3615.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::deallocate (21 samples, 0.70%)</title><rect x="24.4830%" y="3589" width="0.7005%" height="15" fill="rgb(238,52,6)" fg:x="734" fg:w="21"/><text x="24.7330%" y="3599.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (21 samples, 0.70%)</title><rect x="24.4830%" y="3573" width="0.7005%" height="15" fill="rgb(224,198,47)" fg:x="734" fg:w="21"/><text x="24.7330%" y="3583.50"></text></g><g><title>boggle.exe`alloc::alloc::dealloc (21 samples, 0.70%)</title><rect x="24.4830%" y="3557" width="0.7005%" height="15" fill="rgb(233,171,20)" fg:x="734" fg:w="21"/><text x="24.7330%" y="3567.50"></text></g><g><title>boggle.exe`std::alloc::__default_lib_allocator::__rdl_dealloc (2 samples, 0.07%)</title><rect x="25.1167%" y="3541" width="0.0667%" height="15" fill="rgb(241,30,25)" fg:x="753" fg:w="2"/><text x="25.3667%" y="3551.50"></text></g><g><title>boggle.exe`std::sys::alloc::windows::impl$0::dealloc (2 samples, 0.07%)</title><rect x="25.1167%" y="3525" width="0.0667%" height="15" fill="rgb(207,171,38)" fg:x="753" fg:w="2"/><text x="25.3667%" y="3535.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;::as_mut_ptr (739 samples, 24.65%)</title><rect x="0.5670%" y="3893" width="24.6498%" height="15" fill="rgb(234,70,1)" fg:x="17" fg:w="739"/><text x="0.8170%" y="3903.50">boggle.exe`alloc::vec::Vec&lt;alloc::strin..</text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;alloc::string::String,alloc::alloc::Global&gt;::ptr (739 samples, 24.65%)</title><rect x="0.5670%" y="3877" width="24.6498%" height="15" fill="rgb(232,178,18)" fg:x="17" fg:w="739"/><text x="0.8170%" y="3887.50">boggle.exe`alloc::raw_vec::RawVec&lt;alloc..</text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (739 samples, 24.65%)</title><rect x="0.5670%" y="3861" width="24.6498%" height="15" fill="rgb(241,78,40)" fg:x="17" fg:w="739"/><text x="0.8170%" y="3871.50">boggle.exe`alloc::raw_vec::RawVecInner&lt;..</text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (739 samples, 24.65%)</title><rect x="0.5670%" y="3845" width="24.6498%" height="15" fill="rgb(222,35,25)" fg:x="17" fg:w="739"/><text x="0.8170%" y="3855.50">boggle.exe`alloc::raw_vec::RawVecInner&lt;..</text></g><g><title>boggle.exe`boggle::utils::dict_trie::DictTrie::extend_word (739 samples, 24.65%)</title><rect x="0.5670%" y="3829" width="24.6498%" height="15" fill="rgb(207,92,16)" fg:x="17" fg:w="739"/><text x="0.8170%" y="3839.50">boggle.exe`boggle::utils::dict_trie::Di..</text></g><g><title>boggle.exe`core::ptr::drop_in_place (128 samples, 4.27%)</title><rect x="20.9473%" y="3813" width="4.2695%" height="15" fill="rgb(216,59,51)" fg:x="628" fg:w="128"/><text x="21.1973%" y="3823.50">boggl..</text></g><g><title>boggle.exe`core::ptr::drop_in_place(alloc::vec::Vec (128 samples, 4.27%)</title><rect x="20.9473%" y="3797" width="4.2695%" height="15" fill="rgb(213,80,28)" fg:x="628" fg:w="128"/><text x="21.1973%" y="3807.50">boggl..</text></g><g><title>boggle.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (128 samples, 4.27%)</title><rect x="20.9473%" y="3781" width="4.2695%" height="15" fill="rgb(220,93,7)" fg:x="628" fg:w="128"/><text x="21.1973%" y="3791.50">boggl..</text></g><g><title>boggle.exe`alloc::raw_vec::impl$4::drop(alloc::raw_vec::RawVec (128 samples, 4.27%)</title><rect x="20.9473%" y="3765" width="4.2695%" height="15" fill="rgb(225,24,44)" fg:x="628" fg:w="128"/><text x="21.1973%" y="3775.50">boggl..</text></g><g><title>boggle.exe`alloc::vec::in_place_collect::from_iter_in_place&lt;core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter&lt;alloc::string::String,alloc::alloc::Global&gt;,boggle::utils::dict_trie::impl$1::extend_word::closure_env$0&gt;,alloc::string::String&gt;(core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter (128 samples, 4.27%)</title><rect x="20.9473%" y="3749" width="4.2695%" height="15" fill="rgb(243,74,40)" fg:x="628" fg:w="128"/><text x="21.1973%" y="3759.50">boggl..</text></g><g><title>boggle.exe`alloc::vec::into_iter::IntoIter&lt;alloc::string::String,alloc::alloc::Global&gt;::forget_allocation_drop_remaining (128 samples, 4.27%)</title><rect x="20.9473%" y="3733" width="4.2695%" height="15" fill="rgb(228,39,7)" fg:x="628" fg:w="128"/><text x="21.1973%" y="3743.50">boggl..</text></g><g><title>boggle.exe`alloc::vec::into_iter::IntoIter&lt;alloc::string::String,alloc::alloc::Global&gt;::as_raw_mut_slice (128 samples, 4.27%)</title><rect x="20.9473%" y="3717" width="4.2695%" height="15" fill="rgb(227,79,8)" fg:x="628" fg:w="128"/><text x="21.1973%" y="3727.50">boggl..</text></g><g><title>boggle.exe`alloc::vec::into_iter::impl$5::try_fold&lt;alloc::string::String,alloc::alloc::Global,alloc::vec::in_place_drop::InPlaceDrop&lt;alloc::string::String&gt;,core::iter::adapters::map::map_try_fold::closure_env$0&lt;alloc::string::String,alloc::string::String,alloc::vec::in_place_drop::InPlaceDrop&lt;alloc::string::String&gt;,enum2$&lt;core::result::Result&lt;alloc::vec::in_place_drop::InPlaceDrop&lt;alloc::string::String&gt;,never$&gt; &gt;,boggle::utils::dict_trie::impl$1::extend_word::closure_env$0,alloc::vec::in_place_collect::write_in_place_with_drop::closure_env$0&lt;alloc::string::String&gt; &gt;,enum2$&lt;core::result::Result&lt;alloc::vec::in_place_drop::InPlaceDrop&lt;alloc::string::String&gt;,never$&gt; &gt; &gt;(alloc::vec::into_iter::IntoIter&lt;alloc::string::String,alloc::alloc::Global&gt;*, alloc::vec::in_place_drop::InPlaceDrop&lt;alloc::string::String&gt;, core::iter::adapters::map::map_try_fold::closure_env$0&lt;alloc::string::String,alloc::string::String,alloc::vec::in_place_drop::InPlaceDrop&lt;alloc::string::String&gt;,enum2$&lt;core::result::Result&lt;alloc::vec::in_place_drop::InPlaceDrop&lt;alloc::string::String&gt;,never$&gt; &gt;,boggle::utils::dict_trie::impl$1::extend_word::closure_env$0,alloc::vec::in_place_collect::write_in_place_with_drop::closure_env$0 (128 samples, 4.27%)</title><rect x="20.9473%" y="3701" width="4.2695%" height="15" fill="rgb(236,58,11)" fg:x="628" fg:w="128"/><text x="21.1973%" y="3711.50">boggl..</text></g><g><title>boggle.exe`core::iter::adapters::map::map_try_fold::closure$0(core::iter::adapters::map::map_try_fold::closure_env$0&lt;alloc::string::String,alloc::string::String,alloc::vec::in_place_drop::InPlaceDrop&lt;alloc::string::String&gt;,enum2$&lt;core::result::Result&lt;alloc::vec::in_place_drop::InPlaceDrop&lt;alloc::string::String&gt;,never$&gt; &gt;,boggle::utils::dict_trie::impl$1::extend_word::closure_env$0,alloc::vec::in_place_collect::write_in_place_with_drop::closure_env$0&lt;alloc::string::String&gt; &gt;*, alloc::vec::in_place_drop::InPlaceDrop (128 samples, 4.27%)</title><rect x="20.9473%" y="3685" width="4.2695%" height="15" fill="rgb(249,63,35)" fg:x="628" fg:w="128"/><text x="21.1973%" y="3695.50">boggl..</text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::closure$0 (128 samples, 4.27%)</title><rect x="20.9473%" y="3669" width="4.2695%" height="15" fill="rgb(252,114,16)" fg:x="628" fg:w="128"/><text x="21.1973%" y="3679.50">boggl..</text></g><g><title>boggle.exe`core::str::iter::impl$0::next (1 samples, 0.03%)</title><rect x="25.1835%" y="3653" width="0.0334%" height="15" fill="rgb(254,151,24)" fg:x="755" fg:w="1"/><text x="25.4335%" y="3663.50"></text></g><g><title>boggle.exe`core::str::validations::next_code_point(core::slice::iter::Iter (1 samples, 0.03%)</title><rect x="25.1835%" y="3637" width="0.0334%" height="15" fill="rgb(253,54,39)" fg:x="755" fg:w="1"/><text x="25.4335%" y="3647.50"></text></g><g><title>`0x7FFAC12D2240 (1 samples, 0.03%)</title><rect x="25.2168%" y="3765" width="0.0334%" height="15" fill="rgb(243,25,45)" fg:x="756" fg:w="1"/><text x="25.4668%" y="3775.50"></text></g><g><title>`0x7FFAC12D2316 (1 samples, 0.03%)</title><rect x="25.2502%" y="3765" width="0.0334%" height="15" fill="rgb(234,134,9)" fg:x="757" fg:w="1"/><text x="25.5002%" y="3775.50"></text></g><g><title>`0x7FFAC12D238C (1 samples, 0.03%)</title><rect x="25.2835%" y="3765" width="0.0334%" height="15" fill="rgb(227,166,31)" fg:x="758" fg:w="1"/><text x="25.5335%" y="3775.50"></text></g><g><title>`0x7FFAC12D2396 (1 samples, 0.03%)</title><rect x="25.3169%" y="3765" width="0.0334%" height="15" fill="rgb(245,143,41)" fg:x="759" fg:w="1"/><text x="25.5669%" y="3775.50"></text></g><g><title>`0x7FFAC12D23A7 (5 samples, 0.17%)</title><rect x="25.3502%" y="3765" width="0.1668%" height="15" fill="rgb(238,181,32)" fg:x="760" fg:w="5"/><text x="25.6002%" y="3775.50"></text></g><g><title>`0x7FFAC12D23C2 (1 samples, 0.03%)</title><rect x="25.5170%" y="3765" width="0.0334%" height="15" fill="rgb(224,113,18)" fg:x="765" fg:w="1"/><text x="25.7670%" y="3775.50"></text></g><g><title>`0x7FFAC12D23DD (1 samples, 0.03%)</title><rect x="25.5504%" y="3765" width="0.0334%" height="15" fill="rgb(240,229,28)" fg:x="766" fg:w="1"/><text x="25.8004%" y="3775.50"></text></g><g><title>`0x7FFAC12D2406 (2 samples, 0.07%)</title><rect x="25.5837%" y="3765" width="0.0667%" height="15" fill="rgb(250,185,3)" fg:x="767" fg:w="2"/><text x="25.8337%" y="3775.50"></text></g><g><title>`0x7FFAC12D243D (1 samples, 0.03%)</title><rect x="25.6504%" y="3765" width="0.0334%" height="15" fill="rgb(212,59,25)" fg:x="769" fg:w="1"/><text x="25.9004%" y="3775.50"></text></g><g><title>`0x7FFAC12D269C (1 samples, 0.03%)</title><rect x="25.6838%" y="3765" width="0.0334%" height="15" fill="rgb(221,87,20)" fg:x="770" fg:w="1"/><text x="25.9338%" y="3775.50"></text></g><g><title>`0x7FFAC12D29E7 (1 samples, 0.03%)</title><rect x="25.7171%" y="3765" width="0.0334%" height="15" fill="rgb(213,74,28)" fg:x="771" fg:w="1"/><text x="25.9671%" y="3775.50"></text></g><g><title>`0x7FFAC1319A44 (1 samples, 0.03%)</title><rect x="25.7171%" y="3749" width="0.0334%" height="15" fill="rgb(224,132,34)" fg:x="771" fg:w="1"/><text x="25.9671%" y="3759.50"></text></g><g><title>`0x7FFAC12D2871 (1 samples, 0.03%)</title><rect x="25.7171%" y="3733" width="0.0334%" height="15" fill="rgb(222,101,24)" fg:x="771" fg:w="1"/><text x="25.9671%" y="3743.50"></text></g><g><title>`0x7FFAC12CAC86 (1 samples, 0.03%)</title><rect x="25.7171%" y="3717" width="0.0334%" height="15" fill="rgb(254,142,4)" fg:x="771" fg:w="1"/><text x="25.9671%" y="3727.50"></text></g><g><title>boggle.exe`__rust_dealloc (1 samples, 0.03%)</title><rect x="25.7505%" y="3765" width="0.0334%" height="15" fill="rgb(230,229,49)" fg:x="772" fg:w="1"/><text x="26.0005%" y="3775.50"></text></g><g><title>boggle.exe`boggle::BoggleSolver::has_extension (758 samples, 25.28%)</title><rect x="0.5670%" y="3941" width="25.2835%" height="15" fill="rgb(238,70,47)" fg:x="17" fg:w="758"/><text x="0.8170%" y="3951.50">boggle.exe`boggle::BoggleSolver::has_ext..</text></g><g><title>boggle.exe`core::ptr::drop_in_place(alloc::vec::Vec (758 samples, 25.28%)</title><rect x="0.5670%" y="3925" width="25.2835%" height="15" fill="rgb(231,160,17)" fg:x="17" fg:w="758"/><text x="0.8170%" y="3935.50">boggle.exe`core::ptr::drop_in_place(allo..</text></g><g><title>boggle.exe`alloc::vec::impl$25::drop(alloc::vec::Vec (758 samples, 25.28%)</title><rect x="0.5670%" y="3909" width="25.2835%" height="15" fill="rgb(218,68,53)" fg:x="17" fg:w="758"/><text x="0.8170%" y="3919.50">boggle.exe`alloc::vec::impl$25::drop(all..</text></g><g><title>boggle.exe`core::ptr::drop_in_place(ptr_mut$&lt;slice2$ (19 samples, 0.63%)</title><rect x="25.2168%" y="3893" width="0.6338%" height="15" fill="rgb(236,111,10)" fg:x="756" fg:w="19"/><text x="25.4668%" y="3903.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place (19 samples, 0.63%)</title><rect x="25.2168%" y="3877" width="0.6338%" height="15" fill="rgb(224,34,41)" fg:x="756" fg:w="19"/><text x="25.4668%" y="3887.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(alloc::vec::Vec (19 samples, 0.63%)</title><rect x="25.2168%" y="3861" width="0.6338%" height="15" fill="rgb(241,118,19)" fg:x="756" fg:w="19"/><text x="25.4668%" y="3871.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (19 samples, 0.63%)</title><rect x="25.2168%" y="3845" width="0.6338%" height="15" fill="rgb(238,129,25)" fg:x="756" fg:w="19"/><text x="25.4668%" y="3855.50"></text></g><g><title>boggle.exe`alloc::raw_vec::impl$4::drop(alloc::raw_vec::RawVec (19 samples, 0.63%)</title><rect x="25.2168%" y="3829" width="0.6338%" height="15" fill="rgb(238,22,31)" fg:x="756" fg:w="19"/><text x="25.4668%" y="3839.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::deallocate (19 samples, 0.63%)</title><rect x="25.2168%" y="3813" width="0.6338%" height="15" fill="rgb(222,174,48)" fg:x="756" fg:w="19"/><text x="25.4668%" y="3823.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (19 samples, 0.63%)</title><rect x="25.2168%" y="3797" width="0.6338%" height="15" fill="rgb(206,152,40)" fg:x="756" fg:w="19"/><text x="25.4668%" y="3807.50"></text></g><g><title>boggle.exe`alloc::alloc::dealloc (19 samples, 0.63%)</title><rect x="25.2168%" y="3781" width="0.6338%" height="15" fill="rgb(218,99,54)" fg:x="756" fg:w="19"/><text x="25.4668%" y="3791.50"></text></g><g><title>boggle.exe`std::alloc::__default_lib_allocator::__rdl_dealloc (2 samples, 0.07%)</title><rect x="25.7839%" y="3765" width="0.0667%" height="15" fill="rgb(220,174,26)" fg:x="773" fg:w="2"/><text x="26.0339%" y="3775.50"></text></g><g><title>boggle.exe`std::sys::alloc::windows::impl$0::dealloc (2 samples, 0.07%)</title><rect x="25.7839%" y="3749" width="0.0667%" height="15" fill="rgb(245,116,9)" fg:x="773" fg:w="2"/><text x="26.0339%" y="3759.50"></text></g><g><title>`0x7FFAC12D2329 (1 samples, 0.03%)</title><rect x="25.8839%" y="3525" width="0.0334%" height="15" fill="rgb(209,72,35)" fg:x="776" fg:w="1"/><text x="26.1339%" y="3535.50"></text></g><g><title>`0x7FFAC12D23A7 (4 samples, 0.13%)</title><rect x="25.9173%" y="3525" width="0.1334%" height="15" fill="rgb(226,126,21)" fg:x="777" fg:w="4"/><text x="26.1673%" y="3535.50"></text></g><g><title>`0x7FFAC12D23DD (1 samples, 0.03%)</title><rect x="26.0507%" y="3525" width="0.0334%" height="15" fill="rgb(227,192,1)" fg:x="781" fg:w="1"/><text x="26.3007%" y="3535.50"></text></g><g><title>`0x7FFAC12D269C (2 samples, 0.07%)</title><rect x="26.0841%" y="3525" width="0.0667%" height="15" fill="rgb(237,180,29)" fg:x="782" fg:w="2"/><text x="26.3341%" y="3535.50"></text></g><g><title>`0x7FFAC12D2313 (1 samples, 0.03%)</title><rect x="26.1508%" y="3461" width="0.0334%" height="15" fill="rgb(230,197,35)" fg:x="784" fg:w="1"/><text x="26.4008%" y="3471.50"></text></g><g><title>`0x7FFAC12D2316 (1 samples, 0.03%)</title><rect x="26.1841%" y="3461" width="0.0334%" height="15" fill="rgb(246,193,31)" fg:x="785" fg:w="1"/><text x="26.4341%" y="3471.50"></text></g><g><title>`0x7FFAC12D2365 (1 samples, 0.03%)</title><rect x="26.2175%" y="3461" width="0.0334%" height="15" fill="rgb(241,36,4)" fg:x="786" fg:w="1"/><text x="26.4675%" y="3471.50"></text></g><g><title>`0x7FFAC12D2451 (1 samples, 0.03%)</title><rect x="26.2508%" y="3461" width="0.0334%" height="15" fill="rgb(241,130,17)" fg:x="787" fg:w="1"/><text x="26.5008%" y="3471.50"></text></g><g><title>`0x7FFAC12D2DF5 (1 samples, 0.03%)</title><rect x="26.2842%" y="3461" width="0.0334%" height="15" fill="rgb(206,137,32)" fg:x="788" fg:w="1"/><text x="26.5342%" y="3471.50"></text></g><g><title>`0x7FFAC12D22C0 (1 samples, 0.03%)</title><rect x="26.3509%" y="3397" width="0.0334%" height="15" fill="rgb(237,228,51)" fg:x="790" fg:w="1"/><text x="26.6009%" y="3407.50"></text></g><g><title>`0x7FFAC12D230F (1 samples, 0.03%)</title><rect x="26.3843%" y="3397" width="0.0334%" height="15" fill="rgb(243,6,42)" fg:x="791" fg:w="1"/><text x="26.6343%" y="3407.50"></text></g><g><title>`0x7FFAC12D2316 (1 samples, 0.03%)</title><rect x="26.4176%" y="3397" width="0.0334%" height="15" fill="rgb(251,74,28)" fg:x="792" fg:w="1"/><text x="26.6676%" y="3407.50"></text></g><g><title>`0x7FFAC12D23A7 (3 samples, 0.10%)</title><rect x="26.4510%" y="3397" width="0.1001%" height="15" fill="rgb(218,20,49)" fg:x="793" fg:w="3"/><text x="26.7010%" y="3407.50"></text></g><g><title>`0x7FFAC12D23C2 (1 samples, 0.03%)</title><rect x="26.5510%" y="3397" width="0.0334%" height="15" fill="rgb(238,28,14)" fg:x="796" fg:w="1"/><text x="26.8010%" y="3407.50"></text></g><g><title>`0x7FFAC12D28C4 (1 samples, 0.03%)</title><rect x="26.5844%" y="3397" width="0.0334%" height="15" fill="rgb(229,40,46)" fg:x="797" fg:w="1"/><text x="26.8344%" y="3407.50"></text></g><g><title>`0x7FFAC12D23A7 (2 samples, 0.07%)</title><rect x="26.7178%" y="3333" width="0.0667%" height="15" fill="rgb(244,195,20)" fg:x="801" fg:w="2"/><text x="26.9678%" y="3343.50"></text></g><g><title>`0x7FFAC12D23C2 (1 samples, 0.03%)</title><rect x="26.7845%" y="3333" width="0.0334%" height="15" fill="rgb(253,56,35)" fg:x="803" fg:w="1"/><text x="27.0345%" y="3343.50"></text></g><g><title>`0x7FFAC12D2365 (1 samples, 0.03%)</title><rect x="26.8512%" y="3269" width="0.0334%" height="15" fill="rgb(210,149,44)" fg:x="805" fg:w="1"/><text x="27.1012%" y="3279.50"></text></g><g><title>`0x7FFAC12D23A7 (4 samples, 0.13%)</title><rect x="26.8846%" y="3269" width="0.1334%" height="15" fill="rgb(240,135,12)" fg:x="806" fg:w="4"/><text x="27.1346%" y="3279.50"></text></g><g><title>`0x7FFAC12D23C2 (2 samples, 0.07%)</title><rect x="27.0180%" y="3269" width="0.0667%" height="15" fill="rgb(251,24,50)" fg:x="810" fg:w="2"/><text x="27.2680%" y="3279.50"></text></g><g><title>`0x7FFAC12D23FD (1 samples, 0.03%)</title><rect x="27.0847%" y="3269" width="0.0334%" height="15" fill="rgb(243,200,47)" fg:x="812" fg:w="1"/><text x="27.3347%" y="3279.50"></text></g><g><title>`0x7FFAC12D2406 (1 samples, 0.03%)</title><rect x="27.1181%" y="3269" width="0.0334%" height="15" fill="rgb(224,166,26)" fg:x="813" fg:w="1"/><text x="27.3681%" y="3279.50"></text></g><g><title>`0x7FFAC12D2240 (1 samples, 0.03%)</title><rect x="27.1848%" y="3205" width="0.0334%" height="15" fill="rgb(233,0,47)" fg:x="815" fg:w="1"/><text x="27.4348%" y="3215.50"></text></g><g><title>`0x7FFAC12D22AD (1 samples, 0.03%)</title><rect x="27.2181%" y="3205" width="0.0334%" height="15" fill="rgb(253,80,5)" fg:x="816" fg:w="1"/><text x="27.4681%" y="3215.50"></text></g><g><title>`0x7FFAC12D23A7 (3 samples, 0.10%)</title><rect x="27.2515%" y="3205" width="0.1001%" height="15" fill="rgb(214,133,25)" fg:x="817" fg:w="3"/><text x="27.5015%" y="3215.50"></text></g><g><title>`0x7FFAC12D2451 (1 samples, 0.03%)</title><rect x="27.3516%" y="3205" width="0.0334%" height="15" fill="rgb(209,27,14)" fg:x="820" fg:w="1"/><text x="27.6016%" y="3215.50"></text></g><g><title>`0x7FFAC12D2239 (1 samples, 0.03%)</title><rect x="27.3849%" y="3141" width="0.0334%" height="15" fill="rgb(219,102,51)" fg:x="821" fg:w="1"/><text x="27.6349%" y="3151.50"></text></g><g><title>`0x7FFAC12D2267 (1 samples, 0.03%)</title><rect x="27.4183%" y="3141" width="0.0334%" height="15" fill="rgb(237,18,16)" fg:x="822" fg:w="1"/><text x="27.6683%" y="3151.50"></text></g><g><title>`0x7FFAC12D2451 (1 samples, 0.03%)</title><rect x="27.4516%" y="3141" width="0.0334%" height="15" fill="rgb(241,85,17)" fg:x="823" fg:w="1"/><text x="27.7016%" y="3151.50"></text></g><g><title>`0x7FFAC12D269C (1 samples, 0.03%)</title><rect x="27.4850%" y="3141" width="0.0334%" height="15" fill="rgb(236,90,42)" fg:x="824" fg:w="1"/><text x="27.7350%" y="3151.50"></text></g><g><title>`0x7FFAC12D23A7 (1 samples, 0.03%)</title><rect x="27.5517%" y="3077" width="0.0334%" height="15" fill="rgb(249,57,21)" fg:x="826" fg:w="1"/><text x="27.8017%" y="3087.50"></text></g><g><title>`0x7FFAC12D238C (1 samples, 0.03%)</title><rect x="27.6518%" y="3013" width="0.0334%" height="15" fill="rgb(243,12,36)" fg:x="829" fg:w="1"/><text x="27.9018%" y="3023.50"></text></g><g><title>`0x7FFAC12D222E (1 samples, 0.03%)</title><rect x="27.7185%" y="2949" width="0.0334%" height="15" fill="rgb(253,128,47)" fg:x="831" fg:w="1"/><text x="27.9685%" y="2959.50"></text></g><g><title>`0x7FFAC12D22C0 (1 samples, 0.03%)</title><rect x="27.7518%" y="2949" width="0.0334%" height="15" fill="rgb(207,33,20)" fg:x="832" fg:w="1"/><text x="28.0018%" y="2959.50"></text></g><g><title>`0x7FFAC12D238C (1 samples, 0.03%)</title><rect x="27.7852%" y="2949" width="0.0334%" height="15" fill="rgb(233,215,35)" fg:x="833" fg:w="1"/><text x="28.0352%" y="2959.50"></text></g><g><title>`0x7FFAC12D23A7 (1 samples, 0.03%)</title><rect x="27.8185%" y="2949" width="0.0334%" height="15" fill="rgb(249,188,52)" fg:x="834" fg:w="1"/><text x="28.0685%" y="2959.50"></text></g><g><title>`0x7FFAC12D269C (1 samples, 0.03%)</title><rect x="27.8519%" y="2949" width="0.0334%" height="15" fill="rgb(225,12,32)" fg:x="835" fg:w="1"/><text x="28.1019%" y="2959.50"></text></g><g><title>`0x7FFAC12D23A7 (1 samples, 0.03%)</title><rect x="27.9186%" y="2821" width="0.0334%" height="15" fill="rgb(247,98,14)" fg:x="837" fg:w="1"/><text x="28.1686%" y="2831.50"></text></g><g><title>`0x7FFAC12D23DD (1 samples, 0.03%)</title><rect x="27.9520%" y="2757" width="0.0334%" height="15" fill="rgb(247,219,48)" fg:x="838" fg:w="1"/><text x="28.2020%" y="2767.50"></text></g><g><title>boggle.exe`alloc::string::String::push (1 samples, 0.03%)</title><rect x="28.0187%" y="2693" width="0.0334%" height="15" fill="rgb(253,60,48)" fg:x="840" fg:w="1"/><text x="28.2687%" y="2703.50"></text></g><g><title>boggle.exe`core::char::methods::impl$0::len_utf8 (1 samples, 0.03%)</title><rect x="28.0187%" y="2677" width="0.0334%" height="15" fill="rgb(245,15,52)" fg:x="840" fg:w="1"/><text x="28.2687%" y="2687.50"></text></g><g><title>boggle.exe`core::char::methods::len_utf8 (1 samples, 0.03%)</title><rect x="28.0187%" y="2661" width="0.0334%" height="15" fill="rgb(220,133,28)" fg:x="840" fg:w="1"/><text x="28.2687%" y="2671.50"></text></g><g><title>boggle.exe`alloc::string::String::pop (3 samples, 0.10%)</title><rect x="27.9853%" y="2757" width="0.1001%" height="15" fill="rgb(217,180,4)" fg:x="839" fg:w="3"/><text x="28.2353%" y="2767.50"></text></g><g><title>boggle.exe`alloc::string::impl$28::deref (3 samples, 0.10%)</title><rect x="27.9853%" y="2741" width="0.1001%" height="15" fill="rgb(251,24,1)" fg:x="839" fg:w="3"/><text x="28.2353%" y="2751.50"></text></g><g><title>boggle.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (3 samples, 0.10%)</title><rect x="27.9853%" y="2725" width="0.1001%" height="15" fill="rgb(212,185,49)" fg:x="839" fg:w="3"/><text x="28.2353%" y="2735.50"></text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::collect_words(boggle::utils::dict_trie::DictTrieNode*, ref$&lt;str$&gt;, alloc::vec::Vec (3 samples, 0.10%)</title><rect x="27.9853%" y="2709" width="0.1001%" height="15" fill="rgb(215,175,22)" fg:x="839" fg:w="3"/><text x="28.2353%" y="2719.50"></text></g><g><title>boggle.exe`std::collections::hash::map::impl$36::into_iter(std::collections::hash::map::HashMap (1 samples, 0.03%)</title><rect x="28.0520%" y="2693" width="0.0334%" height="15" fill="rgb(250,205,14)" fg:x="841" fg:w="1"/><text x="28.3020%" y="2703.50"></text></g><g><title>boggle.exe`std::collections::hash::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;::iter (1 samples, 0.03%)</title><rect x="28.0520%" y="2677" width="0.0334%" height="15" fill="rgb(225,211,22)" fg:x="841" fg:w="1"/><text x="28.3020%" y="2687.50"></text></g><g><title>boggle.exe`hashbrown::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt;::iter (1 samples, 0.03%)</title><rect x="28.0520%" y="2661" width="0.0334%" height="15" fill="rgb(251,179,42)" fg:x="841" fg:w="1"/><text x="28.3020%" y="2671.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTable&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;::iter (1 samples, 0.03%)</title><rect x="28.0520%" y="2645" width="0.0334%" height="15" fill="rgb(208,216,51)" fg:x="841" fg:w="1"/><text x="28.3020%" y="2655.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::iter (1 samples, 0.03%)</title><rect x="28.0520%" y="2629" width="0.0334%" height="15" fill="rgb(235,36,11)" fg:x="841" fg:w="1"/><text x="28.3020%" y="2639.50"></text></g><g><title>boggle.exe`alloc::string::impl$102::to_string(ref$ (1 samples, 0.03%)</title><rect x="28.0854%" y="2757" width="0.0334%" height="15" fill="rgb(213,189,28)" fg:x="842" fg:w="1"/><text x="28.3354%" y="2767.50"></text></g><g><title>boggle.exe`alloc::string::impl$44::from(ref$ (1 samples, 0.03%)</title><rect x="28.0854%" y="2741" width="0.0334%" height="15" fill="rgb(227,203,42)" fg:x="842" fg:w="1"/><text x="28.3354%" y="2751.50"></text></g><g><title>boggle.exe`alloc::str::impl$4::to_owned(ref$ (1 samples, 0.03%)</title><rect x="28.0854%" y="2725" width="0.0334%" height="15" fill="rgb(244,72,36)" fg:x="842" fg:w="1"/><text x="28.3354%" y="2735.50"></text></g><g><title>boggle.exe`alloc::slice::impl$9::to_owned(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="28.0854%" y="2709" width="0.0334%" height="15" fill="rgb(213,53,17)" fg:x="842" fg:w="1"/><text x="28.3354%" y="2719.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="28.0854%" y="2693" width="0.0334%" height="15" fill="rgb(207,167,3)" fg:x="842" fg:w="1"/><text x="28.3354%" y="2703.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec_in(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="28.0854%" y="2677" width="0.0334%" height="15" fill="rgb(216,98,30)" fg:x="842" fg:w="1"/><text x="28.3354%" y="2687.50"></text></g><g><title>boggle.exe`alloc::slice::hack::to_vec(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="28.0854%" y="2661" width="0.0334%" height="15" fill="rgb(236,123,15)" fg:x="842" fg:w="1"/><text x="28.3354%" y="2671.50"></text></g><g><title>boggle.exe`alloc::slice::hack::impl$1::to_vec(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="28.0854%" y="2645" width="0.0334%" height="15" fill="rgb(248,81,50)" fg:x="842" fg:w="1"/><text x="28.3354%" y="2655.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="28.0854%" y="2629" width="0.0334%" height="15" fill="rgb(214,120,4)" fg:x="842" fg:w="1"/><text x="28.3354%" y="2639.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="28.0854%" y="2613" width="0.0334%" height="15" fill="rgb(208,179,34)" fg:x="842" fg:w="1"/><text x="28.3354%" y="2623.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="28.0854%" y="2597" width="0.0334%" height="15" fill="rgb(227,140,7)" fg:x="842" fg:w="1"/><text x="28.3354%" y="2607.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (1 samples, 0.03%)</title><rect x="28.0854%" y="2581" width="0.0334%" height="15" fill="rgb(214,22,6)" fg:x="842" fg:w="1"/><text x="28.3354%" y="2591.50"></text></g><g><title>`0x7FFAC12C7776 (1 samples, 0.03%)</title><rect x="28.0854%" y="2565" width="0.0334%" height="15" fill="rgb(207,137,27)" fg:x="842" fg:w="1"/><text x="28.3354%" y="2575.50"></text></g><g><title>`0x7FFAC12C78B4 (1 samples, 0.03%)</title><rect x="28.0854%" y="2549" width="0.0334%" height="15" fill="rgb(210,8,46)" fg:x="842" fg:w="1"/><text x="28.3354%" y="2559.50"></text></g><g><title>`0x7FFAC12C7E80 (1 samples, 0.03%)</title><rect x="28.0854%" y="2533" width="0.0334%" height="15" fill="rgb(240,16,54)" fg:x="842" fg:w="1"/><text x="28.3354%" y="2543.50"></text></g><g><title>boggle.exe`alloc::string::String::pop (6 samples, 0.20%)</title><rect x="27.9520%" y="2821" width="0.2001%" height="15" fill="rgb(211,209,29)" fg:x="838" fg:w="6"/><text x="28.2020%" y="2831.50"></text></g><g><title>boggle.exe`alloc::string::impl$28::deref (6 samples, 0.20%)</title><rect x="27.9520%" y="2805" width="0.2001%" height="15" fill="rgb(226,228,24)" fg:x="838" fg:w="6"/><text x="28.2020%" y="2815.50"></text></g><g><title>boggle.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (6 samples, 0.20%)</title><rect x="27.9520%" y="2789" width="0.2001%" height="15" fill="rgb(222,84,9)" fg:x="838" fg:w="6"/><text x="28.2020%" y="2799.50"></text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::collect_words(boggle::utils::dict_trie::DictTrieNode*, ref$&lt;str$&gt;, alloc::vec::Vec (6 samples, 0.20%)</title><rect x="27.9520%" y="2773" width="0.2001%" height="15" fill="rgb(234,203,30)" fg:x="838" fg:w="6"/><text x="28.2020%" y="2783.50"></text></g><g><title>boggle.exe`std::collections::hash::map::impl$36::into_iter(std::collections::hash::map::HashMap (1 samples, 0.03%)</title><rect x="28.1187%" y="2757" width="0.0334%" height="15" fill="rgb(238,109,14)" fg:x="843" fg:w="1"/><text x="28.3687%" y="2767.50"></text></g><g><title>boggle.exe`std::collections::hash::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;::iter (1 samples, 0.03%)</title><rect x="28.1187%" y="2741" width="0.0334%" height="15" fill="rgb(233,206,34)" fg:x="843" fg:w="1"/><text x="28.3687%" y="2751.50"></text></g><g><title>boggle.exe`hashbrown::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt;::iter (1 samples, 0.03%)</title><rect x="28.1187%" y="2725" width="0.0334%" height="15" fill="rgb(220,167,47)" fg:x="843" fg:w="1"/><text x="28.3687%" y="2735.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTable&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;::iter (1 samples, 0.03%)</title><rect x="28.1187%" y="2709" width="0.0334%" height="15" fill="rgb(238,105,10)" fg:x="843" fg:w="1"/><text x="28.3687%" y="2719.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::iter (1 samples, 0.03%)</title><rect x="28.1187%" y="2693" width="0.0334%" height="15" fill="rgb(213,227,17)" fg:x="843" fg:w="1"/><text x="28.3687%" y="2703.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawIterRange&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::new(unsigned char*, hashbrown::raw::Bucket&lt;tuple$ (1 samples, 0.03%)</title><rect x="28.1187%" y="2677" width="0.0334%" height="15" fill="rgb(217,132,38)" fg:x="843" fg:w="1"/><text x="28.3687%" y="2687.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::load_aligned (1 samples, 0.03%)</title><rect x="28.1187%" y="2661" width="0.0334%" height="15" fill="rgb(242,146,4)" fg:x="843" fg:w="1"/><text x="28.3687%" y="2671.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::match_empty_or_deleted (1 samples, 0.03%)</title><rect x="28.1187%" y="2645" width="0.0334%" height="15" fill="rgb(212,61,9)" fg:x="843" fg:w="1"/><text x="28.3687%" y="2655.50"></text></g><g><title>boggle.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.03%)</title><rect x="28.1187%" y="2629" width="0.0334%" height="15" fill="rgb(247,126,22)" fg:x="843" fg:w="1"/><text x="28.3687%" y="2639.50"></text></g><g><title>boggle.exe`alloc::string::String::push (1 samples, 0.03%)</title><rect x="28.1521%" y="2821" width="0.0334%" height="15" fill="rgb(220,196,2)" fg:x="844" fg:w="1"/><text x="28.4021%" y="2831.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::push (1 samples, 0.03%)</title><rect x="28.1521%" y="2805" width="0.0334%" height="15" fill="rgb(208,46,4)" fg:x="844" fg:w="1"/><text x="28.4021%" y="2815.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_mut_ptr (1 samples, 0.03%)</title><rect x="28.1521%" y="2789" width="0.0334%" height="15" fill="rgb(252,104,46)" fg:x="844" fg:w="1"/><text x="28.4021%" y="2799.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::ptr (1 samples, 0.03%)</title><rect x="28.1521%" y="2773" width="0.0334%" height="15" fill="rgb(237,152,48)" fg:x="844" fg:w="1"/><text x="28.4021%" y="2783.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (1 samples, 0.03%)</title><rect x="28.1521%" y="2757" width="0.0334%" height="15" fill="rgb(221,59,37)" fg:x="844" fg:w="1"/><text x="28.4021%" y="2767.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (1 samples, 0.03%)</title><rect x="28.1521%" y="2741" width="0.0334%" height="15" fill="rgb(209,202,51)" fg:x="844" fg:w="1"/><text x="28.4021%" y="2751.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::grow_one&lt;u8,alloc::alloc::Global&gt; (1 samples, 0.03%)</title><rect x="28.1521%" y="2725" width="0.0334%" height="15" fill="rgb(228,81,30)" fg:x="844" fg:w="1"/><text x="28.4021%" y="2735.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_one (1 samples, 0.03%)</title><rect x="28.1521%" y="2709" width="0.0334%" height="15" fill="rgb(227,42,39)" fg:x="844" fg:w="1"/><text x="28.4021%" y="2719.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (1 samples, 0.03%)</title><rect x="28.1521%" y="2693" width="0.0334%" height="15" fill="rgb(221,26,2)" fg:x="844" fg:w="1"/><text x="28.4021%" y="2703.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (1 samples, 0.03%)</title><rect x="28.1521%" y="2677" width="0.0334%" height="15" fill="rgb(254,61,31)" fg:x="844" fg:w="1"/><text x="28.4021%" y="2687.50"></text></g><g><title>boggle.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="28.1521%" y="2661" width="0.0334%" height="15" fill="rgb(222,173,38)" fg:x="844" fg:w="1"/><text x="28.4021%" y="2671.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="28.1521%" y="2645" width="0.0334%" height="15" fill="rgb(218,50,12)" fg:x="844" fg:w="1"/><text x="28.4021%" y="2655.50"></text></g><g><title>boggle.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="28.1521%" y="2629" width="0.0334%" height="15" fill="rgb(223,88,40)" fg:x="844" fg:w="1"/><text x="28.4021%" y="2639.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="28.1521%" y="2613" width="0.0334%" height="15" fill="rgb(237,54,19)" fg:x="844" fg:w="1"/><text x="28.4021%" y="2623.50"></text></g><g><title>`0x7FFAC12D5376 (1 samples, 0.03%)</title><rect x="28.1521%" y="2597" width="0.0334%" height="15" fill="rgb(251,129,25)" fg:x="844" fg:w="1"/><text x="28.4021%" y="2607.50"></text></g><g><title>`0x7FFAC12D54B5 (1 samples, 0.03%)</title><rect x="28.1521%" y="2581" width="0.0334%" height="15" fill="rgb(238,97,19)" fg:x="844" fg:w="1"/><text x="28.4021%" y="2591.50"></text></g><g><title>`0x7FFAC12D5E4D (1 samples, 0.03%)</title><rect x="28.1521%" y="2565" width="0.0334%" height="15" fill="rgb(240,169,18)" fg:x="844" fg:w="1"/><text x="28.4021%" y="2575.50"></text></g><g><title>boggle.exe`alloc::string::impl$102::to_string(ref$ (1 samples, 0.03%)</title><rect x="28.1855%" y="2821" width="0.0334%" height="15" fill="rgb(230,187,49)" fg:x="845" fg:w="1"/><text x="28.4355%" y="2831.50"></text></g><g><title>boggle.exe`alloc::string::impl$44::from(ref$ (1 samples, 0.03%)</title><rect x="28.1855%" y="2805" width="0.0334%" height="15" fill="rgb(209,44,26)" fg:x="845" fg:w="1"/><text x="28.4355%" y="2815.50"></text></g><g><title>boggle.exe`alloc::str::impl$4::to_owned(ref$ (1 samples, 0.03%)</title><rect x="28.1855%" y="2789" width="0.0334%" height="15" fill="rgb(244,0,6)" fg:x="845" fg:w="1"/><text x="28.4355%" y="2799.50"></text></g><g><title>boggle.exe`alloc::slice::impl$9::to_owned(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="28.1855%" y="2773" width="0.0334%" height="15" fill="rgb(248,18,21)" fg:x="845" fg:w="1"/><text x="28.4355%" y="2783.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="28.1855%" y="2757" width="0.0334%" height="15" fill="rgb(245,180,19)" fg:x="845" fg:w="1"/><text x="28.4355%" y="2767.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec_in(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="28.1855%" y="2741" width="0.0334%" height="15" fill="rgb(252,118,36)" fg:x="845" fg:w="1"/><text x="28.4355%" y="2751.50"></text></g><g><title>boggle.exe`alloc::slice::hack::to_vec(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="28.1855%" y="2725" width="0.0334%" height="15" fill="rgb(210,224,19)" fg:x="845" fg:w="1"/><text x="28.4355%" y="2735.50"></text></g><g><title>boggle.exe`alloc::slice::hack::impl$1::to_vec(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="28.1855%" y="2709" width="0.0334%" height="15" fill="rgb(218,30,24)" fg:x="845" fg:w="1"/><text x="28.4355%" y="2719.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="28.1855%" y="2693" width="0.0334%" height="15" fill="rgb(219,75,50)" fg:x="845" fg:w="1"/><text x="28.4355%" y="2703.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="28.1855%" y="2677" width="0.0334%" height="15" fill="rgb(234,72,50)" fg:x="845" fg:w="1"/><text x="28.4355%" y="2687.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="28.1855%" y="2661" width="0.0334%" height="15" fill="rgb(219,100,48)" fg:x="845" fg:w="1"/><text x="28.4355%" y="2671.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (1 samples, 0.03%)</title><rect x="28.1855%" y="2645" width="0.0334%" height="15" fill="rgb(253,5,41)" fg:x="845" fg:w="1"/><text x="28.4355%" y="2655.50"></text></g><g><title>`0x7FFAC12C7776 (1 samples, 0.03%)</title><rect x="28.1855%" y="2629" width="0.0334%" height="15" fill="rgb(247,181,11)" fg:x="845" fg:w="1"/><text x="28.4355%" y="2639.50"></text></g><g><title>`0x7FFAC12C78B4 (1 samples, 0.03%)</title><rect x="28.1855%" y="2613" width="0.0334%" height="15" fill="rgb(222,223,25)" fg:x="845" fg:w="1"/><text x="28.4355%" y="2623.50"></text></g><g><title>`0x7FFAC12C8047 (1 samples, 0.03%)</title><rect x="28.1855%" y="2597" width="0.0334%" height="15" fill="rgb(214,198,28)" fg:x="845" fg:w="1"/><text x="28.4355%" y="2607.50"></text></g><g><title>boggle.exe`alloc::string::String::pop (10 samples, 0.33%)</title><rect x="27.9186%" y="2885" width="0.3336%" height="15" fill="rgb(230,46,43)" fg:x="837" fg:w="10"/><text x="28.1686%" y="2895.50"></text></g><g><title>boggle.exe`alloc::string::impl$28::deref (10 samples, 0.33%)</title><rect x="27.9186%" y="2869" width="0.3336%" height="15" fill="rgb(233,65,53)" fg:x="837" fg:w="10"/><text x="28.1686%" y="2879.50"></text></g><g><title>boggle.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (10 samples, 0.33%)</title><rect x="27.9186%" y="2853" width="0.3336%" height="15" fill="rgb(221,121,27)" fg:x="837" fg:w="10"/><text x="28.1686%" y="2863.50"></text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::collect_words(boggle::utils::dict_trie::DictTrieNode*, ref$&lt;str$&gt;, alloc::vec::Vec (10 samples, 0.33%)</title><rect x="27.9186%" y="2837" width="0.3336%" height="15" fill="rgb(247,70,47)" fg:x="837" fg:w="10"/><text x="28.1686%" y="2847.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;::push (1 samples, 0.03%)</title><rect x="28.2188%" y="2821" width="0.0334%" height="15" fill="rgb(228,85,35)" fg:x="846" fg:w="1"/><text x="28.4688%" y="2831.50"></text></g><g><title>boggle.exe`alloc::string::impl$6::clone (1 samples, 0.03%)</title><rect x="28.2188%" y="2805" width="0.0334%" height="15" fill="rgb(209,50,18)" fg:x="846" fg:w="1"/><text x="28.4688%" y="2815.50"></text></g><g><title>`0x7FFAC12D5C80 (1 samples, 0.03%)</title><rect x="28.2522%" y="2629" width="0.0334%" height="15" fill="rgb(250,19,35)" fg:x="847" fg:w="1"/><text x="28.5022%" y="2639.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::push (2 samples, 0.07%)</title><rect x="28.2522%" y="2869" width="0.0667%" height="15" fill="rgb(253,107,29)" fg:x="847" fg:w="2"/><text x="28.5022%" y="2879.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_mut_ptr (2 samples, 0.07%)</title><rect x="28.2522%" y="2853" width="0.0667%" height="15" fill="rgb(252,179,29)" fg:x="847" fg:w="2"/><text x="28.5022%" y="2863.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::ptr (2 samples, 0.07%)</title><rect x="28.2522%" y="2837" width="0.0667%" height="15" fill="rgb(238,194,6)" fg:x="847" fg:w="2"/><text x="28.5022%" y="2847.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (2 samples, 0.07%)</title><rect x="28.2522%" y="2821" width="0.0667%" height="15" fill="rgb(238,164,29)" fg:x="847" fg:w="2"/><text x="28.5022%" y="2831.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (2 samples, 0.07%)</title><rect x="28.2522%" y="2805" width="0.0667%" height="15" fill="rgb(224,25,9)" fg:x="847" fg:w="2"/><text x="28.5022%" y="2815.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::grow_one&lt;u8,alloc::alloc::Global&gt; (2 samples, 0.07%)</title><rect x="28.2522%" y="2789" width="0.0667%" height="15" fill="rgb(244,153,23)" fg:x="847" fg:w="2"/><text x="28.5022%" y="2799.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_one (2 samples, 0.07%)</title><rect x="28.2522%" y="2773" width="0.0667%" height="15" fill="rgb(212,203,14)" fg:x="847" fg:w="2"/><text x="28.5022%" y="2783.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (2 samples, 0.07%)</title><rect x="28.2522%" y="2757" width="0.0667%" height="15" fill="rgb(220,164,20)" fg:x="847" fg:w="2"/><text x="28.5022%" y="2767.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (2 samples, 0.07%)</title><rect x="28.2522%" y="2741" width="0.0667%" height="15" fill="rgb(222,203,48)" fg:x="847" fg:w="2"/><text x="28.5022%" y="2751.50"></text></g><g><title>boggle.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (2 samples, 0.07%)</title><rect x="28.2522%" y="2725" width="0.0667%" height="15" fill="rgb(215,159,22)" fg:x="847" fg:w="2"/><text x="28.5022%" y="2735.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (2 samples, 0.07%)</title><rect x="28.2522%" y="2709" width="0.0667%" height="15" fill="rgb(216,183,47)" fg:x="847" fg:w="2"/><text x="28.5022%" y="2719.50"></text></g><g><title>boggle.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (2 samples, 0.07%)</title><rect x="28.2522%" y="2693" width="0.0667%" height="15" fill="rgb(229,195,25)" fg:x="847" fg:w="2"/><text x="28.5022%" y="2703.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (2 samples, 0.07%)</title><rect x="28.2522%" y="2677" width="0.0667%" height="15" fill="rgb(224,132,51)" fg:x="847" fg:w="2"/><text x="28.5022%" y="2687.50"></text></g><g><title>`0x7FFAC12D5376 (2 samples, 0.07%)</title><rect x="28.2522%" y="2661" width="0.0667%" height="15" fill="rgb(240,63,7)" fg:x="847" fg:w="2"/><text x="28.5022%" y="2671.50"></text></g><g><title>`0x7FFAC12D54B5 (2 samples, 0.07%)</title><rect x="28.2522%" y="2645" width="0.0667%" height="15" fill="rgb(249,182,41)" fg:x="847" fg:w="2"/><text x="28.5022%" y="2655.50"></text></g><g><title>`0x7FFAC12D5DAA (1 samples, 0.03%)</title><rect x="28.2855%" y="2629" width="0.0334%" height="15" fill="rgb(243,47,26)" fg:x="848" fg:w="1"/><text x="28.5355%" y="2639.50"></text></g><g><title>`0x7FFAC12C7776 (1 samples, 0.03%)</title><rect x="28.2855%" y="2613" width="0.0334%" height="15" fill="rgb(233,48,2)" fg:x="848" fg:w="1"/><text x="28.5355%" y="2623.50"></text></g><g><title>`0x7FFAC12C78B4 (1 samples, 0.03%)</title><rect x="28.2855%" y="2597" width="0.0334%" height="15" fill="rgb(244,165,34)" fg:x="848" fg:w="1"/><text x="28.5355%" y="2607.50"></text></g><g><title>`0x7FFAC12C8047 (1 samples, 0.03%)</title><rect x="28.2855%" y="2581" width="0.0334%" height="15" fill="rgb(207,89,7)" fg:x="848" fg:w="1"/><text x="28.5355%" y="2591.50"></text></g><g><title>boggle.exe`alloc::string::String::push (3 samples, 0.10%)</title><rect x="28.2522%" y="2885" width="0.1001%" height="15" fill="rgb(244,117,36)" fg:x="847" fg:w="3"/><text x="28.5022%" y="2895.50"></text></g><g><title>boggle.exe`core::char::methods::impl$0::len_utf8 (1 samples, 0.03%)</title><rect x="28.3189%" y="2869" width="0.0334%" height="15" fill="rgb(226,144,34)" fg:x="849" fg:w="1"/><text x="28.5689%" y="2879.50"></text></g><g><title>boggle.exe`core::char::methods::len_utf8 (1 samples, 0.03%)</title><rect x="28.3189%" y="2853" width="0.0334%" height="15" fill="rgb(213,23,19)" fg:x="849" fg:w="1"/><text x="28.5689%" y="2863.50"></text></g><g><title>`0x7FFAC12C803A (1 samples, 0.03%)</title><rect x="28.3522%" y="2661" width="0.0334%" height="15" fill="rgb(217,75,12)" fg:x="850" fg:w="1"/><text x="28.6022%" y="2671.50"></text></g><g><title>`0x7FFAC12C7776 (2 samples, 0.07%)</title><rect x="28.3522%" y="2693" width="0.0667%" height="15" fill="rgb(224,159,17)" fg:x="850" fg:w="2"/><text x="28.6022%" y="2703.50"></text></g><g><title>`0x7FFAC12C78B4 (2 samples, 0.07%)</title><rect x="28.3522%" y="2677" width="0.0667%" height="15" fill="rgb(217,118,1)" fg:x="850" fg:w="2"/><text x="28.6022%" y="2687.50"></text></g><g><title>`0x7FFAC12C8125 (1 samples, 0.03%)</title><rect x="28.3856%" y="2661" width="0.0334%" height="15" fill="rgb(232,180,48)" fg:x="851" fg:w="1"/><text x="28.6356%" y="2671.50"></text></g><g><title>boggle.exe`alloc::string::impl$102::to_string(ref$ (3 samples, 0.10%)</title><rect x="28.3522%" y="2885" width="0.1001%" height="15" fill="rgb(230,27,33)" fg:x="850" fg:w="3"/><text x="28.6022%" y="2895.50"></text></g><g><title>boggle.exe`alloc::string::impl$44::from(ref$ (3 samples, 0.10%)</title><rect x="28.3522%" y="2869" width="0.1001%" height="15" fill="rgb(205,31,21)" fg:x="850" fg:w="3"/><text x="28.6022%" y="2879.50"></text></g><g><title>boggle.exe`alloc::str::impl$4::to_owned(ref$ (3 samples, 0.10%)</title><rect x="28.3522%" y="2853" width="0.1001%" height="15" fill="rgb(253,59,4)" fg:x="850" fg:w="3"/><text x="28.6022%" y="2863.50"></text></g><g><title>boggle.exe`alloc::slice::impl$9::to_owned(ref$&lt;slice2$ (3 samples, 0.10%)</title><rect x="28.3522%" y="2837" width="0.1001%" height="15" fill="rgb(224,201,9)" fg:x="850" fg:w="3"/><text x="28.6022%" y="2847.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec(ref$&lt;slice2$ (3 samples, 0.10%)</title><rect x="28.3522%" y="2821" width="0.1001%" height="15" fill="rgb(229,206,30)" fg:x="850" fg:w="3"/><text x="28.6022%" y="2831.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec_in(ref$&lt;slice2$ (3 samples, 0.10%)</title><rect x="28.3522%" y="2805" width="0.1001%" height="15" fill="rgb(212,67,47)" fg:x="850" fg:w="3"/><text x="28.6022%" y="2815.50"></text></g><g><title>boggle.exe`alloc::slice::hack::to_vec(ref$&lt;slice2$ (3 samples, 0.10%)</title><rect x="28.3522%" y="2789" width="0.1001%" height="15" fill="rgb(211,96,50)" fg:x="850" fg:w="3"/><text x="28.6022%" y="2799.50"></text></g><g><title>boggle.exe`alloc::slice::hack::impl$1::to_vec(ref$&lt;slice2$ (3 samples, 0.10%)</title><rect x="28.3522%" y="2773" width="0.1001%" height="15" fill="rgb(252,114,18)" fg:x="850" fg:w="3"/><text x="28.6022%" y="2783.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (3 samples, 0.10%)</title><rect x="28.3522%" y="2757" width="0.1001%" height="15" fill="rgb(223,58,37)" fg:x="850" fg:w="3"/><text x="28.6022%" y="2767.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (3 samples, 0.10%)</title><rect x="28.3522%" y="2741" width="0.1001%" height="15" fill="rgb(237,70,4)" fg:x="850" fg:w="3"/><text x="28.6022%" y="2751.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (3 samples, 0.10%)</title><rect x="28.3522%" y="2725" width="0.1001%" height="15" fill="rgb(244,85,46)" fg:x="850" fg:w="3"/><text x="28.6022%" y="2735.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (3 samples, 0.10%)</title><rect x="28.3522%" y="2709" width="0.1001%" height="15" fill="rgb(223,39,52)" fg:x="850" fg:w="3"/><text x="28.6022%" y="2719.50"></text></g><g><title>boggle.exe`std::sys::alloc::windows::process_heap_alloc (1 samples, 0.03%)</title><rect x="28.4189%" y="2693" width="0.0334%" height="15" fill="rgb(218,200,14)" fg:x="852" fg:w="1"/><text x="28.6689%" y="2703.50"></text></g><g><title>boggle.exe`core::sync::atomic::AtomicPtr::load (1 samples, 0.03%)</title><rect x="28.4189%" y="2677" width="0.0334%" height="15" fill="rgb(208,171,16)" fg:x="852" fg:w="1"/><text x="28.6689%" y="2687.50"></text></g><g><title>boggle.exe`core::sync::atomic::atomic_load (1 samples, 0.03%)</title><rect x="28.4189%" y="2661" width="0.0334%" height="15" fill="rgb(234,200,18)" fg:x="852" fg:w="1"/><text x="28.6689%" y="2671.50"></text></g><g><title>`0x7FFAB89102DE (1 samples, 0.03%)</title><rect x="28.4857%" y="2853" width="0.0334%" height="15" fill="rgb(228,45,11)" fg:x="854" fg:w="1"/><text x="28.7357%" y="2863.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;::push (3 samples, 0.10%)</title><rect x="28.4523%" y="2885" width="0.1001%" height="15" fill="rgb(237,182,11)" fg:x="853" fg:w="3"/><text x="28.7023%" y="2895.50"></text></g><g><title>boggle.exe`alloc::string::impl$6::clone (2 samples, 0.07%)</title><rect x="28.4857%" y="2869" width="0.0667%" height="15" fill="rgb(241,175,49)" fg:x="854" fg:w="2"/><text x="28.7357%" y="2879.50"></text></g><g><title>boggle.exe`alloc::vec::impl$11::clone (1 samples, 0.03%)</title><rect x="28.5190%" y="2853" width="0.0334%" height="15" fill="rgb(247,38,35)" fg:x="855" fg:w="1"/><text x="28.7690%" y="2863.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec_in (1 samples, 0.03%)</title><rect x="28.5190%" y="2837" width="0.0334%" height="15" fill="rgb(228,39,49)" fg:x="855" fg:w="1"/><text x="28.7690%" y="2847.50"></text></g><g><title>boggle.exe`alloc::slice::hack::to_vec (1 samples, 0.03%)</title><rect x="28.5190%" y="2821" width="0.0334%" height="15" fill="rgb(226,101,26)" fg:x="855" fg:w="1"/><text x="28.7690%" y="2831.50"></text></g><g><title>boggle.exe`alloc::slice::hack::impl$1::to_vec (1 samples, 0.03%)</title><rect x="28.5190%" y="2805" width="0.0334%" height="15" fill="rgb(206,141,19)" fg:x="855" fg:w="1"/><text x="28.7690%" y="2815.50"></text></g><g><title>boggle.exe`alloc::vec::Vec::with_capacity_in (1 samples, 0.03%)</title><rect x="28.5190%" y="2789" width="0.0334%" height="15" fill="rgb(211,200,13)" fg:x="855" fg:w="1"/><text x="28.7690%" y="2799.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec::with_capacity_in (1 samples, 0.03%)</title><rect x="28.5190%" y="2773" width="0.0334%" height="15" fill="rgb(241,121,6)" fg:x="855" fg:w="1"/><text x="28.7690%" y="2783.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner::with_capacity_in (1 samples, 0.03%)</title><rect x="28.5190%" y="2757" width="0.0334%" height="15" fill="rgb(234,221,29)" fg:x="855" fg:w="1"/><text x="28.7690%" y="2767.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner::try_allocate_in (1 samples, 0.03%)</title><rect x="28.5190%" y="2741" width="0.0334%" height="15" fill="rgb(229,136,5)" fg:x="855" fg:w="1"/><text x="28.7690%" y="2751.50"></text></g><g><title>`0x7FFAC12C7776 (1 samples, 0.03%)</title><rect x="28.5190%" y="2725" width="0.0334%" height="15" fill="rgb(238,36,11)" fg:x="855" fg:w="1"/><text x="28.7690%" y="2735.50"></text></g><g><title>`0x7FFAC12C78B4 (1 samples, 0.03%)</title><rect x="28.5190%" y="2709" width="0.0334%" height="15" fill="rgb(251,55,41)" fg:x="855" fg:w="1"/><text x="28.7690%" y="2719.50"></text></g><g><title>`0x7FFAC12C7F6D (1 samples, 0.03%)</title><rect x="28.5190%" y="2693" width="0.0334%" height="15" fill="rgb(242,34,40)" fg:x="855" fg:w="1"/><text x="28.7690%" y="2703.50"></text></g><g><title>boggle.exe`alloc::string::String::pop (21 samples, 0.70%)</title><rect x="27.8853%" y="2949" width="0.7005%" height="15" fill="rgb(215,42,17)" fg:x="836" fg:w="21"/><text x="28.1353%" y="2959.50"></text></g><g><title>boggle.exe`alloc::string::impl$28::deref (21 samples, 0.70%)</title><rect x="27.8853%" y="2933" width="0.7005%" height="15" fill="rgb(207,44,46)" fg:x="836" fg:w="21"/><text x="28.1353%" y="2943.50"></text></g><g><title>boggle.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (21 samples, 0.70%)</title><rect x="27.8853%" y="2917" width="0.7005%" height="15" fill="rgb(211,206,28)" fg:x="836" fg:w="21"/><text x="28.1353%" y="2927.50"></text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::collect_words(boggle::utils::dict_trie::DictTrieNode*, ref$&lt;str$&gt;, alloc::vec::Vec (21 samples, 0.70%)</title><rect x="27.8853%" y="2901" width="0.7005%" height="15" fill="rgb(237,167,16)" fg:x="836" fg:w="21"/><text x="28.1353%" y="2911.50"></text></g><g><title>boggle.exe`std::collections::hash::map::impl$36::into_iter(std::collections::hash::map::HashMap (1 samples, 0.03%)</title><rect x="28.5524%" y="2885" width="0.0334%" height="15" fill="rgb(233,66,6)" fg:x="856" fg:w="1"/><text x="28.8024%" y="2895.50"></text></g><g><title>boggle.exe`std::collections::hash::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;::iter (1 samples, 0.03%)</title><rect x="28.5524%" y="2869" width="0.0334%" height="15" fill="rgb(246,123,29)" fg:x="856" fg:w="1"/><text x="28.8024%" y="2879.50"></text></g><g><title>boggle.exe`hashbrown::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt;::iter (1 samples, 0.03%)</title><rect x="28.5524%" y="2853" width="0.0334%" height="15" fill="rgb(209,62,40)" fg:x="856" fg:w="1"/><text x="28.8024%" y="2863.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTable&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;::iter (1 samples, 0.03%)</title><rect x="28.5524%" y="2837" width="0.0334%" height="15" fill="rgb(218,4,25)" fg:x="856" fg:w="1"/><text x="28.8024%" y="2847.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::iter (1 samples, 0.03%)</title><rect x="28.5524%" y="2821" width="0.0334%" height="15" fill="rgb(253,91,49)" fg:x="856" fg:w="1"/><text x="28.8024%" y="2831.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawIterRange&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::new(unsigned char*, hashbrown::raw::Bucket&lt;tuple$ (1 samples, 0.03%)</title><rect x="28.5524%" y="2805" width="0.0334%" height="15" fill="rgb(228,155,29)" fg:x="856" fg:w="1"/><text x="28.8024%" y="2815.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::load_aligned (1 samples, 0.03%)</title><rect x="28.5524%" y="2789" width="0.0334%" height="15" fill="rgb(243,57,37)" fg:x="856" fg:w="1"/><text x="28.8024%" y="2799.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::match_empty_or_deleted (1 samples, 0.03%)</title><rect x="28.5524%" y="2773" width="0.0334%" height="15" fill="rgb(244,167,17)" fg:x="856" fg:w="1"/><text x="28.8024%" y="2783.50"></text></g><g><title>boggle.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.03%)</title><rect x="28.5524%" y="2757" width="0.0334%" height="15" fill="rgb(207,181,38)" fg:x="856" fg:w="1"/><text x="28.8024%" y="2767.50"></text></g><g><title>`0x7FFAC12D5C95 (1 samples, 0.03%)</title><rect x="28.5857%" y="2693" width="0.0334%" height="15" fill="rgb(211,8,23)" fg:x="857" fg:w="1"/><text x="28.8357%" y="2703.50"></text></g><g><title>`0x7FFAC12D5DAA (1 samples, 0.03%)</title><rect x="28.6191%" y="2693" width="0.0334%" height="15" fill="rgb(235,11,44)" fg:x="858" fg:w="1"/><text x="28.8691%" y="2703.50"></text></g><g><title>`0x7FFAC12C7776 (1 samples, 0.03%)</title><rect x="28.6191%" y="2677" width="0.0334%" height="15" fill="rgb(248,18,52)" fg:x="858" fg:w="1"/><text x="28.8691%" y="2687.50"></text></g><g><title>`0x7FFAC12C78B4 (1 samples, 0.03%)</title><rect x="28.6191%" y="2661" width="0.0334%" height="15" fill="rgb(208,4,7)" fg:x="858" fg:w="1"/><text x="28.8691%" y="2671.50"></text></g><g><title>`0x7FFAC12C7EDC (1 samples, 0.03%)</title><rect x="28.6191%" y="2645" width="0.0334%" height="15" fill="rgb(240,17,39)" fg:x="858" fg:w="1"/><text x="28.8691%" y="2655.50"></text></g><g><title>`0x7FFAC12D2235 (1 samples, 0.03%)</title><rect x="28.6524%" y="2677" width="0.0334%" height="15" fill="rgb(207,170,3)" fg:x="859" fg:w="1"/><text x="28.9024%" y="2687.50"></text></g><g><title>boggle.exe`alloc::string::String::push (4 samples, 0.13%)</title><rect x="28.5857%" y="2949" width="0.1334%" height="15" fill="rgb(236,100,52)" fg:x="857" fg:w="4"/><text x="28.8357%" y="2959.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::push (4 samples, 0.13%)</title><rect x="28.5857%" y="2933" width="0.1334%" height="15" fill="rgb(246,78,51)" fg:x="857" fg:w="4"/><text x="28.8357%" y="2943.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_mut_ptr (4 samples, 0.13%)</title><rect x="28.5857%" y="2917" width="0.1334%" height="15" fill="rgb(211,17,15)" fg:x="857" fg:w="4"/><text x="28.8357%" y="2927.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::ptr (4 samples, 0.13%)</title><rect x="28.5857%" y="2901" width="0.1334%" height="15" fill="rgb(209,59,46)" fg:x="857" fg:w="4"/><text x="28.8357%" y="2911.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (4 samples, 0.13%)</title><rect x="28.5857%" y="2885" width="0.1334%" height="15" fill="rgb(210,92,25)" fg:x="857" fg:w="4"/><text x="28.8357%" y="2895.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (4 samples, 0.13%)</title><rect x="28.5857%" y="2869" width="0.1334%" height="15" fill="rgb(238,174,52)" fg:x="857" fg:w="4"/><text x="28.8357%" y="2879.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::grow_one&lt;u8,alloc::alloc::Global&gt; (4 samples, 0.13%)</title><rect x="28.5857%" y="2853" width="0.1334%" height="15" fill="rgb(230,73,7)" fg:x="857" fg:w="4"/><text x="28.8357%" y="2863.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_one (4 samples, 0.13%)</title><rect x="28.5857%" y="2837" width="0.1334%" height="15" fill="rgb(243,124,40)" fg:x="857" fg:w="4"/><text x="28.8357%" y="2847.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (4 samples, 0.13%)</title><rect x="28.5857%" y="2821" width="0.1334%" height="15" fill="rgb(244,170,11)" fg:x="857" fg:w="4"/><text x="28.8357%" y="2831.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (4 samples, 0.13%)</title><rect x="28.5857%" y="2805" width="0.1334%" height="15" fill="rgb(207,114,54)" fg:x="857" fg:w="4"/><text x="28.8357%" y="2815.50"></text></g><g><title>boggle.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (4 samples, 0.13%)</title><rect x="28.5857%" y="2789" width="0.1334%" height="15" fill="rgb(205,42,20)" fg:x="857" fg:w="4"/><text x="28.8357%" y="2799.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (4 samples, 0.13%)</title><rect x="28.5857%" y="2773" width="0.1334%" height="15" fill="rgb(230,30,28)" fg:x="857" fg:w="4"/><text x="28.8357%" y="2783.50"></text></g><g><title>boggle.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (4 samples, 0.13%)</title><rect x="28.5857%" y="2757" width="0.1334%" height="15" fill="rgb(205,73,54)" fg:x="857" fg:w="4"/><text x="28.8357%" y="2767.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (4 samples, 0.13%)</title><rect x="28.5857%" y="2741" width="0.1334%" height="15" fill="rgb(254,227,23)" fg:x="857" fg:w="4"/><text x="28.8357%" y="2751.50"></text></g><g><title>`0x7FFAC12D5376 (4 samples, 0.13%)</title><rect x="28.5857%" y="2725" width="0.1334%" height="15" fill="rgb(228,202,34)" fg:x="857" fg:w="4"/><text x="28.8357%" y="2735.50"></text></g><g><title>`0x7FFAC12D54B5 (4 samples, 0.13%)</title><rect x="28.5857%" y="2709" width="0.1334%" height="15" fill="rgb(222,225,37)" fg:x="857" fg:w="4"/><text x="28.8357%" y="2719.50"></text></g><g><title>`0x7FFAC12D5E0B (2 samples, 0.07%)</title><rect x="28.6524%" y="2693" width="0.0667%" height="15" fill="rgb(221,14,54)" fg:x="859" fg:w="2"/><text x="28.9024%" y="2703.50"></text></g><g><title>`0x7FFAC12D2451 (1 samples, 0.03%)</title><rect x="28.6858%" y="2677" width="0.0334%" height="15" fill="rgb(254,102,2)" fg:x="860" fg:w="1"/><text x="28.9358%" y="2687.50"></text></g><g><title>`0x7FFAC12C780A (1 samples, 0.03%)</title><rect x="28.7191%" y="2741" width="0.0334%" height="15" fill="rgb(232,104,17)" fg:x="861" fg:w="1"/><text x="28.9691%" y="2751.50"></text></g><g><title>`0x7FFAC12C7EA9 (1 samples, 0.03%)</title><rect x="28.7525%" y="2725" width="0.0334%" height="15" fill="rgb(250,220,14)" fg:x="862" fg:w="1"/><text x="29.0025%" y="2735.50"></text></g><g><title>`0x7FFAC12C8134 (1 samples, 0.03%)</title><rect x="28.7859%" y="2725" width="0.0334%" height="15" fill="rgb(241,158,9)" fg:x="863" fg:w="1"/><text x="29.0359%" y="2735.50"></text></g><g><title>`0x7FFAC12C7776 (4 samples, 0.13%)</title><rect x="28.7191%" y="2757" width="0.1334%" height="15" fill="rgb(246,9,43)" fg:x="861" fg:w="4"/><text x="28.9691%" y="2767.50"></text></g><g><title>`0x7FFAC12C78B4 (3 samples, 0.10%)</title><rect x="28.7525%" y="2741" width="0.1001%" height="15" fill="rgb(206,73,33)" fg:x="862" fg:w="3"/><text x="29.0025%" y="2751.50"></text></g><g><title>`0x7FFAC12C814B (1 samples, 0.03%)</title><rect x="28.8192%" y="2725" width="0.0334%" height="15" fill="rgb(222,79,8)" fg:x="864" fg:w="1"/><text x="29.0692%" y="2735.50"></text></g><g><title>`0x7FFAC12C7795 (1 samples, 0.03%)</title><rect x="28.8526%" y="2757" width="0.0334%" height="15" fill="rgb(234,8,54)" fg:x="865" fg:w="1"/><text x="29.1026%" y="2767.50"></text></g><g><title>boggle.exe`alloc::string::impl$102::to_string(ref$ (6 samples, 0.20%)</title><rect x="28.7191%" y="2949" width="0.2001%" height="15" fill="rgb(209,134,38)" fg:x="861" fg:w="6"/><text x="28.9691%" y="2959.50"></text></g><g><title>boggle.exe`alloc::string::impl$44::from(ref$ (6 samples, 0.20%)</title><rect x="28.7191%" y="2933" width="0.2001%" height="15" fill="rgb(230,127,29)" fg:x="861" fg:w="6"/><text x="28.9691%" y="2943.50"></text></g><g><title>boggle.exe`alloc::str::impl$4::to_owned(ref$ (6 samples, 0.20%)</title><rect x="28.7191%" y="2917" width="0.2001%" height="15" fill="rgb(242,44,41)" fg:x="861" fg:w="6"/><text x="28.9691%" y="2927.50"></text></g><g><title>boggle.exe`alloc::slice::impl$9::to_owned(ref$&lt;slice2$ (6 samples, 0.20%)</title><rect x="28.7191%" y="2901" width="0.2001%" height="15" fill="rgb(222,56,43)" fg:x="861" fg:w="6"/><text x="28.9691%" y="2911.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec(ref$&lt;slice2$ (6 samples, 0.20%)</title><rect x="28.7191%" y="2885" width="0.2001%" height="15" fill="rgb(238,39,47)" fg:x="861" fg:w="6"/><text x="28.9691%" y="2895.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec_in(ref$&lt;slice2$ (6 samples, 0.20%)</title><rect x="28.7191%" y="2869" width="0.2001%" height="15" fill="rgb(226,79,43)" fg:x="861" fg:w="6"/><text x="28.9691%" y="2879.50"></text></g><g><title>boggle.exe`alloc::slice::hack::to_vec(ref$&lt;slice2$ (6 samples, 0.20%)</title><rect x="28.7191%" y="2853" width="0.2001%" height="15" fill="rgb(242,105,53)" fg:x="861" fg:w="6"/><text x="28.9691%" y="2863.50"></text></g><g><title>boggle.exe`alloc::slice::hack::impl$1::to_vec(ref$&lt;slice2$ (6 samples, 0.20%)</title><rect x="28.7191%" y="2837" width="0.2001%" height="15" fill="rgb(251,132,46)" fg:x="861" fg:w="6"/><text x="28.9691%" y="2847.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (6 samples, 0.20%)</title><rect x="28.7191%" y="2821" width="0.2001%" height="15" fill="rgb(231,77,14)" fg:x="861" fg:w="6"/><text x="28.9691%" y="2831.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (6 samples, 0.20%)</title><rect x="28.7191%" y="2805" width="0.2001%" height="15" fill="rgb(240,135,9)" fg:x="861" fg:w="6"/><text x="28.9691%" y="2815.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (6 samples, 0.20%)</title><rect x="28.7191%" y="2789" width="0.2001%" height="15" fill="rgb(248,109,14)" fg:x="861" fg:w="6"/><text x="28.9691%" y="2799.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (6 samples, 0.20%)</title><rect x="28.7191%" y="2773" width="0.2001%" height="15" fill="rgb(227,146,52)" fg:x="861" fg:w="6"/><text x="28.9691%" y="2783.50"></text></g><g><title>boggle.exe`__rust_alloc (1 samples, 0.03%)</title><rect x="28.8859%" y="2757" width="0.0334%" height="15" fill="rgb(232,54,3)" fg:x="866" fg:w="1"/><text x="29.1359%" y="2767.50"></text></g><g><title>`0x7FFAC12C780A (1 samples, 0.03%)</title><rect x="28.9193%" y="2773" width="0.0334%" height="15" fill="rgb(229,201,43)" fg:x="867" fg:w="1"/><text x="29.1693%" y="2783.50"></text></g><g><title>`0x7FFAC12C8033 (1 samples, 0.03%)</title><rect x="28.9526%" y="2757" width="0.0334%" height="15" fill="rgb(252,161,33)" fg:x="868" fg:w="1"/><text x="29.2026%" y="2767.50"></text></g><g><title>`0x7FFAC12C78B4 (2 samples, 0.07%)</title><rect x="28.9526%" y="2773" width="0.0667%" height="15" fill="rgb(226,146,40)" fg:x="868" fg:w="2"/><text x="29.2026%" y="2783.50"></text></g><g><title>`0x7FFAC12C8A61 (1 samples, 0.03%)</title><rect x="28.9860%" y="2757" width="0.0334%" height="15" fill="rgb(219,47,25)" fg:x="869" fg:w="1"/><text x="29.2360%" y="2767.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;::push (4 samples, 0.13%)</title><rect x="28.9193%" y="2949" width="0.1334%" height="15" fill="rgb(250,135,13)" fg:x="867" fg:w="4"/><text x="29.1693%" y="2959.50"></text></g><g><title>boggle.exe`alloc::string::impl$6::clone (4 samples, 0.13%)</title><rect x="28.9193%" y="2933" width="0.1334%" height="15" fill="rgb(219,229,18)" fg:x="867" fg:w="4"/><text x="29.1693%" y="2943.50"></text></g><g><title>boggle.exe`alloc::vec::impl$11::clone (4 samples, 0.13%)</title><rect x="28.9193%" y="2917" width="0.1334%" height="15" fill="rgb(217,152,27)" fg:x="867" fg:w="4"/><text x="29.1693%" y="2927.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec_in (4 samples, 0.13%)</title><rect x="28.9193%" y="2901" width="0.1334%" height="15" fill="rgb(225,71,47)" fg:x="867" fg:w="4"/><text x="29.1693%" y="2911.50"></text></g><g><title>boggle.exe`alloc::slice::hack::to_vec (4 samples, 0.13%)</title><rect x="28.9193%" y="2885" width="0.1334%" height="15" fill="rgb(220,139,14)" fg:x="867" fg:w="4"/><text x="29.1693%" y="2895.50"></text></g><g><title>boggle.exe`alloc::slice::hack::impl$1::to_vec (4 samples, 0.13%)</title><rect x="28.9193%" y="2869" width="0.1334%" height="15" fill="rgb(247,54,32)" fg:x="867" fg:w="4"/><text x="29.1693%" y="2879.50"></text></g><g><title>boggle.exe`alloc::vec::Vec::with_capacity_in (4 samples, 0.13%)</title><rect x="28.9193%" y="2853" width="0.1334%" height="15" fill="rgb(252,131,39)" fg:x="867" fg:w="4"/><text x="29.1693%" y="2863.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec::with_capacity_in (4 samples, 0.13%)</title><rect x="28.9193%" y="2837" width="0.1334%" height="15" fill="rgb(210,108,39)" fg:x="867" fg:w="4"/><text x="29.1693%" y="2847.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner::with_capacity_in (4 samples, 0.13%)</title><rect x="28.9193%" y="2821" width="0.1334%" height="15" fill="rgb(205,23,29)" fg:x="867" fg:w="4"/><text x="29.1693%" y="2831.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner::try_allocate_in (4 samples, 0.13%)</title><rect x="28.9193%" y="2805" width="0.1334%" height="15" fill="rgb(246,139,46)" fg:x="867" fg:w="4"/><text x="29.1693%" y="2815.50"></text></g><g><title>`0x7FFAC12C7776 (4 samples, 0.13%)</title><rect x="28.9193%" y="2789" width="0.1334%" height="15" fill="rgb(250,81,26)" fg:x="867" fg:w="4"/><text x="29.1693%" y="2799.50"></text></g><g><title>`0x7FFAC12C78B7 (1 samples, 0.03%)</title><rect x="29.0193%" y="2773" width="0.0334%" height="15" fill="rgb(214,104,7)" fg:x="870" fg:w="1"/><text x="29.2693%" y="2783.50"></text></g><g><title>boggle.exe`alloc::string::String::pop (42 samples, 1.40%)</title><rect x="27.6851%" y="3013" width="1.4009%" height="15" fill="rgb(233,189,8)" fg:x="830" fg:w="42"/><text x="27.9351%" y="3023.50"></text></g><g><title>boggle.exe`alloc::string::impl$28::deref (42 samples, 1.40%)</title><rect x="27.6851%" y="2997" width="1.4009%" height="15" fill="rgb(228,141,17)" fg:x="830" fg:w="42"/><text x="27.9351%" y="3007.50"></text></g><g><title>boggle.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (42 samples, 1.40%)</title><rect x="27.6851%" y="2981" width="1.4009%" height="15" fill="rgb(247,157,1)" fg:x="830" fg:w="42"/><text x="27.9351%" y="2991.50"></text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::collect_words(boggle::utils::dict_trie::DictTrieNode*, ref$&lt;str$&gt;, alloc::vec::Vec (42 samples, 1.40%)</title><rect x="27.6851%" y="2965" width="1.4009%" height="15" fill="rgb(249,225,5)" fg:x="830" fg:w="42"/><text x="27.9351%" y="2975.50"></text></g><g><title>boggle.exe`std::collections::hash::map::impl$36::into_iter(std::collections::hash::map::HashMap (1 samples, 0.03%)</title><rect x="29.0527%" y="2949" width="0.0334%" height="15" fill="rgb(242,55,13)" fg:x="871" fg:w="1"/><text x="29.3027%" y="2959.50"></text></g><g><title>boggle.exe`std::collections::hash::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;::iter (1 samples, 0.03%)</title><rect x="29.0527%" y="2933" width="0.0334%" height="15" fill="rgb(230,49,50)" fg:x="871" fg:w="1"/><text x="29.3027%" y="2943.50"></text></g><g><title>boggle.exe`hashbrown::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt;::iter (1 samples, 0.03%)</title><rect x="29.0527%" y="2917" width="0.0334%" height="15" fill="rgb(241,111,38)" fg:x="871" fg:w="1"/><text x="29.3027%" y="2927.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTable&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;::iter (1 samples, 0.03%)</title><rect x="29.0527%" y="2901" width="0.0334%" height="15" fill="rgb(252,155,4)" fg:x="871" fg:w="1"/><text x="29.3027%" y="2911.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::iter (1 samples, 0.03%)</title><rect x="29.0527%" y="2885" width="0.0334%" height="15" fill="rgb(212,69,32)" fg:x="871" fg:w="1"/><text x="29.3027%" y="2895.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawIterRange&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::new(unsigned char*, hashbrown::raw::Bucket&lt;tuple$ (1 samples, 0.03%)</title><rect x="29.0527%" y="2869" width="0.0334%" height="15" fill="rgb(243,107,47)" fg:x="871" fg:w="1"/><text x="29.3027%" y="2879.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::load_aligned (1 samples, 0.03%)</title><rect x="29.0527%" y="2853" width="0.0334%" height="15" fill="rgb(247,130,12)" fg:x="871" fg:w="1"/><text x="29.3027%" y="2863.50"></text></g><g><title>boggle.exe`core::core_arch::x86::sse2::_mm_load_si128 (1 samples, 0.03%)</title><rect x="29.0527%" y="2837" width="0.0334%" height="15" fill="rgb(233,74,16)" fg:x="871" fg:w="1"/><text x="29.3027%" y="2847.50"></text></g><g><title>`0x7FFAC12D5DAA (1 samples, 0.03%)</title><rect x="29.1194%" y="2757" width="0.0334%" height="15" fill="rgb(208,58,18)" fg:x="873" fg:w="1"/><text x="29.3694%" y="2767.50"></text></g><g><title>`0x7FFAC12C7776 (1 samples, 0.03%)</title><rect x="29.1194%" y="2741" width="0.0334%" height="15" fill="rgb(242,225,1)" fg:x="873" fg:w="1"/><text x="29.3694%" y="2751.50"></text></g><g><title>`0x7FFAC12C78B4 (1 samples, 0.03%)</title><rect x="29.1194%" y="2725" width="0.0334%" height="15" fill="rgb(249,39,40)" fg:x="873" fg:w="1"/><text x="29.3694%" y="2735.50"></text></g><g><title>`0x7FFAC12C7EB5 (1 samples, 0.03%)</title><rect x="29.1194%" y="2709" width="0.0334%" height="15" fill="rgb(207,72,44)" fg:x="873" fg:w="1"/><text x="29.3694%" y="2719.50"></text></g><g><title>`0x7FFAC12D233B (1 samples, 0.03%)</title><rect x="29.1861%" y="2741" width="0.0334%" height="15" fill="rgb(215,193,12)" fg:x="875" fg:w="1"/><text x="29.4361%" y="2751.50"></text></g><g><title>boggle.exe`alloc::string::String::push (5 samples, 0.17%)</title><rect x="29.0861%" y="3013" width="0.1668%" height="15" fill="rgb(248,41,39)" fg:x="872" fg:w="5"/><text x="29.3361%" y="3023.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::push (5 samples, 0.17%)</title><rect x="29.0861%" y="2997" width="0.1668%" height="15" fill="rgb(253,85,4)" fg:x="872" fg:w="5"/><text x="29.3361%" y="3007.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_mut_ptr (5 samples, 0.17%)</title><rect x="29.0861%" y="2981" width="0.1668%" height="15" fill="rgb(243,70,31)" fg:x="872" fg:w="5"/><text x="29.3361%" y="2991.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::ptr (5 samples, 0.17%)</title><rect x="29.0861%" y="2965" width="0.1668%" height="15" fill="rgb(253,195,26)" fg:x="872" fg:w="5"/><text x="29.3361%" y="2975.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (5 samples, 0.17%)</title><rect x="29.0861%" y="2949" width="0.1668%" height="15" fill="rgb(243,42,11)" fg:x="872" fg:w="5"/><text x="29.3361%" y="2959.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (5 samples, 0.17%)</title><rect x="29.0861%" y="2933" width="0.1668%" height="15" fill="rgb(239,66,17)" fg:x="872" fg:w="5"/><text x="29.3361%" y="2943.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::grow_one&lt;u8,alloc::alloc::Global&gt; (5 samples, 0.17%)</title><rect x="29.0861%" y="2917" width="0.1668%" height="15" fill="rgb(217,132,21)" fg:x="872" fg:w="5"/><text x="29.3361%" y="2927.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_one (5 samples, 0.17%)</title><rect x="29.0861%" y="2901" width="0.1668%" height="15" fill="rgb(252,202,21)" fg:x="872" fg:w="5"/><text x="29.3361%" y="2911.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (5 samples, 0.17%)</title><rect x="29.0861%" y="2885" width="0.1668%" height="15" fill="rgb(233,98,36)" fg:x="872" fg:w="5"/><text x="29.3361%" y="2895.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (4 samples, 0.13%)</title><rect x="29.1194%" y="2869" width="0.1334%" height="15" fill="rgb(216,153,54)" fg:x="873" fg:w="4"/><text x="29.3694%" y="2879.50"></text></g><g><title>boggle.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (4 samples, 0.13%)</title><rect x="29.1194%" y="2853" width="0.1334%" height="15" fill="rgb(250,99,7)" fg:x="873" fg:w="4"/><text x="29.3694%" y="2863.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (4 samples, 0.13%)</title><rect x="29.1194%" y="2837" width="0.1334%" height="15" fill="rgb(207,56,50)" fg:x="873" fg:w="4"/><text x="29.3694%" y="2847.50"></text></g><g><title>boggle.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (4 samples, 0.13%)</title><rect x="29.1194%" y="2821" width="0.1334%" height="15" fill="rgb(244,61,34)" fg:x="873" fg:w="4"/><text x="29.3694%" y="2831.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (4 samples, 0.13%)</title><rect x="29.1194%" y="2805" width="0.1334%" height="15" fill="rgb(241,50,38)" fg:x="873" fg:w="4"/><text x="29.3694%" y="2815.50"></text></g><g><title>`0x7FFAC12D5376 (4 samples, 0.13%)</title><rect x="29.1194%" y="2789" width="0.1334%" height="15" fill="rgb(212,166,30)" fg:x="873" fg:w="4"/><text x="29.3694%" y="2799.50"></text></g><g><title>`0x7FFAC12D54B5 (4 samples, 0.13%)</title><rect x="29.1194%" y="2773" width="0.1334%" height="15" fill="rgb(249,127,32)" fg:x="873" fg:w="4"/><text x="29.3694%" y="2783.50"></text></g><g><title>`0x7FFAC12D5E0B (3 samples, 0.10%)</title><rect x="29.1528%" y="2757" width="0.1001%" height="15" fill="rgb(209,103,0)" fg:x="874" fg:w="3"/><text x="29.4028%" y="2767.50"></text></g><g><title>`0x7FFAC12D23A7 (1 samples, 0.03%)</title><rect x="29.2195%" y="2741" width="0.0334%" height="15" fill="rgb(238,209,51)" fg:x="876" fg:w="1"/><text x="29.4695%" y="2751.50"></text></g><g><title>`0x7FFAC12C787B (2 samples, 0.07%)</title><rect x="29.2862%" y="2805" width="0.0667%" height="15" fill="rgb(237,56,23)" fg:x="878" fg:w="2"/><text x="29.5362%" y="2815.50"></text></g><g><title>boggle.exe`alloc::string::impl$102::to_string(ref$ (4 samples, 0.13%)</title><rect x="29.2528%" y="3013" width="0.1334%" height="15" fill="rgb(215,153,46)" fg:x="877" fg:w="4"/><text x="29.5028%" y="3023.50"></text></g><g><title>boggle.exe`alloc::string::impl$44::from(ref$ (4 samples, 0.13%)</title><rect x="29.2528%" y="2997" width="0.1334%" height="15" fill="rgb(224,49,31)" fg:x="877" fg:w="4"/><text x="29.5028%" y="3007.50"></text></g><g><title>boggle.exe`alloc::str::impl$4::to_owned(ref$ (4 samples, 0.13%)</title><rect x="29.2528%" y="2981" width="0.1334%" height="15" fill="rgb(250,18,42)" fg:x="877" fg:w="4"/><text x="29.5028%" y="2991.50"></text></g><g><title>boggle.exe`alloc::slice::impl$9::to_owned(ref$&lt;slice2$ (4 samples, 0.13%)</title><rect x="29.2528%" y="2965" width="0.1334%" height="15" fill="rgb(215,176,39)" fg:x="877" fg:w="4"/><text x="29.5028%" y="2975.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec(ref$&lt;slice2$ (3 samples, 0.10%)</title><rect x="29.2862%" y="2949" width="0.1001%" height="15" fill="rgb(223,77,29)" fg:x="878" fg:w="3"/><text x="29.5362%" y="2959.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec_in(ref$&lt;slice2$ (3 samples, 0.10%)</title><rect x="29.2862%" y="2933" width="0.1001%" height="15" fill="rgb(234,94,52)" fg:x="878" fg:w="3"/><text x="29.5362%" y="2943.50"></text></g><g><title>boggle.exe`alloc::slice::hack::to_vec(ref$&lt;slice2$ (3 samples, 0.10%)</title><rect x="29.2862%" y="2917" width="0.1001%" height="15" fill="rgb(220,154,50)" fg:x="878" fg:w="3"/><text x="29.5362%" y="2927.50"></text></g><g><title>boggle.exe`alloc::slice::hack::impl$1::to_vec(ref$&lt;slice2$ (3 samples, 0.10%)</title><rect x="29.2862%" y="2901" width="0.1001%" height="15" fill="rgb(212,11,10)" fg:x="878" fg:w="3"/><text x="29.5362%" y="2911.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (3 samples, 0.10%)</title><rect x="29.2862%" y="2885" width="0.1001%" height="15" fill="rgb(205,166,19)" fg:x="878" fg:w="3"/><text x="29.5362%" y="2895.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (3 samples, 0.10%)</title><rect x="29.2862%" y="2869" width="0.1001%" height="15" fill="rgb(244,198,16)" fg:x="878" fg:w="3"/><text x="29.5362%" y="2879.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (3 samples, 0.10%)</title><rect x="29.2862%" y="2853" width="0.1001%" height="15" fill="rgb(219,69,12)" fg:x="878" fg:w="3"/><text x="29.5362%" y="2863.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (3 samples, 0.10%)</title><rect x="29.2862%" y="2837" width="0.1001%" height="15" fill="rgb(245,30,7)" fg:x="878" fg:w="3"/><text x="29.5362%" y="2847.50"></text></g><g><title>`0x7FFAC12C7776 (3 samples, 0.10%)</title><rect x="29.2862%" y="2821" width="0.1001%" height="15" fill="rgb(218,221,48)" fg:x="878" fg:w="3"/><text x="29.5362%" y="2831.50"></text></g><g><title>`0x7FFAC12C78B4 (1 samples, 0.03%)</title><rect x="29.3529%" y="2805" width="0.0334%" height="15" fill="rgb(216,66,15)" fg:x="880" fg:w="1"/><text x="29.6029%" y="2815.50"></text></g><g><title>`0x7FFAC12C8047 (1 samples, 0.03%)</title><rect x="29.3529%" y="2789" width="0.0334%" height="15" fill="rgb(226,122,50)" fg:x="880" fg:w="1"/><text x="29.6029%" y="2799.50"></text></g><g><title>`0x7FFAC12C785E (1 samples, 0.03%)</title><rect x="29.4530%" y="2837" width="0.0334%" height="15" fill="rgb(239,156,16)" fg:x="883" fg:w="1"/><text x="29.7030%" y="2847.50"></text></g><g><title>`0x7FFAC12C7F57 (1 samples, 0.03%)</title><rect x="29.4863%" y="2821" width="0.0334%" height="15" fill="rgb(224,27,38)" fg:x="884" fg:w="1"/><text x="29.7363%" y="2831.50"></text></g><g><title>boggle.exe`alloc::string::impl$6::clone (5 samples, 0.17%)</title><rect x="29.3863%" y="2997" width="0.1668%" height="15" fill="rgb(224,39,27)" fg:x="881" fg:w="5"/><text x="29.6363%" y="3007.50"></text></g><g><title>boggle.exe`alloc::vec::impl$11::clone (3 samples, 0.10%)</title><rect x="29.4530%" y="2981" width="0.1001%" height="15" fill="rgb(215,92,29)" fg:x="883" fg:w="3"/><text x="29.7030%" y="2991.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec_in (3 samples, 0.10%)</title><rect x="29.4530%" y="2965" width="0.1001%" height="15" fill="rgb(207,159,16)" fg:x="883" fg:w="3"/><text x="29.7030%" y="2975.50"></text></g><g><title>boggle.exe`alloc::slice::hack::to_vec (3 samples, 0.10%)</title><rect x="29.4530%" y="2949" width="0.1001%" height="15" fill="rgb(238,163,47)" fg:x="883" fg:w="3"/><text x="29.7030%" y="2959.50"></text></g><g><title>boggle.exe`alloc::slice::hack::impl$1::to_vec (3 samples, 0.10%)</title><rect x="29.4530%" y="2933" width="0.1001%" height="15" fill="rgb(219,91,49)" fg:x="883" fg:w="3"/><text x="29.7030%" y="2943.50"></text></g><g><title>boggle.exe`alloc::vec::Vec::with_capacity_in (3 samples, 0.10%)</title><rect x="29.4530%" y="2917" width="0.1001%" height="15" fill="rgb(227,167,31)" fg:x="883" fg:w="3"/><text x="29.7030%" y="2927.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec::with_capacity_in (3 samples, 0.10%)</title><rect x="29.4530%" y="2901" width="0.1001%" height="15" fill="rgb(234,80,54)" fg:x="883" fg:w="3"/><text x="29.7030%" y="2911.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner::with_capacity_in (3 samples, 0.10%)</title><rect x="29.4530%" y="2885" width="0.1001%" height="15" fill="rgb(212,114,2)" fg:x="883" fg:w="3"/><text x="29.7030%" y="2895.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner::try_allocate_in (3 samples, 0.10%)</title><rect x="29.4530%" y="2869" width="0.1001%" height="15" fill="rgb(234,50,24)" fg:x="883" fg:w="3"/><text x="29.7030%" y="2879.50"></text></g><g><title>`0x7FFAC12C7776 (3 samples, 0.10%)</title><rect x="29.4530%" y="2853" width="0.1001%" height="15" fill="rgb(221,68,8)" fg:x="883" fg:w="3"/><text x="29.7030%" y="2863.50"></text></g><g><title>`0x7FFAC12C78B4 (2 samples, 0.07%)</title><rect x="29.4863%" y="2837" width="0.0667%" height="15" fill="rgb(254,180,31)" fg:x="884" fg:w="2"/><text x="29.7363%" y="2847.50"></text></g><g><title>`0x7FFAC12C80F8 (1 samples, 0.03%)</title><rect x="29.5197%" y="2821" width="0.0334%" height="15" fill="rgb(247,130,50)" fg:x="885" fg:w="1"/><text x="29.7697%" y="2831.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;::as_mut_ptr (1 samples, 0.03%)</title><rect x="29.5530%" y="2997" width="0.0334%" height="15" fill="rgb(211,109,4)" fg:x="886" fg:w="1"/><text x="29.8030%" y="3007.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;alloc::string::String,alloc::alloc::Global&gt;::ptr (1 samples, 0.03%)</title><rect x="29.5530%" y="2981" width="0.0334%" height="15" fill="rgb(238,50,21)" fg:x="886" fg:w="1"/><text x="29.8030%" y="2991.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (1 samples, 0.03%)</title><rect x="29.5530%" y="2965" width="0.0334%" height="15" fill="rgb(225,57,45)" fg:x="886" fg:w="1"/><text x="29.8030%" y="2975.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (1 samples, 0.03%)</title><rect x="29.5530%" y="2949" width="0.0334%" height="15" fill="rgb(209,196,50)" fg:x="886" fg:w="1"/><text x="29.8030%" y="2959.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;std::ffi::os_str::OsString,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;::grow_one&lt;alloc::vec::Vec&lt;std::ffi::os_str::OsString,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; (1 samples, 0.03%)</title><rect x="29.5530%" y="2933" width="0.0334%" height="15" fill="rgb(242,140,13)" fg:x="886" fg:w="1"/><text x="29.8030%" y="2943.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_one (1 samples, 0.03%)</title><rect x="29.5530%" y="2917" width="0.0334%" height="15" fill="rgb(217,111,7)" fg:x="886" fg:w="1"/><text x="29.8030%" y="2927.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (1 samples, 0.03%)</title><rect x="29.5530%" y="2901" width="0.0334%" height="15" fill="rgb(253,193,51)" fg:x="886" fg:w="1"/><text x="29.8030%" y="2911.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (1 samples, 0.03%)</title><rect x="29.5530%" y="2885" width="0.0334%" height="15" fill="rgb(252,70,29)" fg:x="886" fg:w="1"/><text x="29.8030%" y="2895.50"></text></g><g><title>boggle.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="29.5530%" y="2869" width="0.0334%" height="15" fill="rgb(232,127,12)" fg:x="886" fg:w="1"/><text x="29.8030%" y="2879.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="29.5530%" y="2853" width="0.0334%" height="15" fill="rgb(211,180,21)" fg:x="886" fg:w="1"/><text x="29.8030%" y="2863.50"></text></g><g><title>boggle.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="29.5530%" y="2837" width="0.0334%" height="15" fill="rgb(229,72,13)" fg:x="886" fg:w="1"/><text x="29.8030%" y="2847.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="29.5530%" y="2821" width="0.0334%" height="15" fill="rgb(240,211,49)" fg:x="886" fg:w="1"/><text x="29.8030%" y="2831.50"></text></g><g><title>`0x7FFAC12D5376 (1 samples, 0.03%)</title><rect x="29.5530%" y="2805" width="0.0334%" height="15" fill="rgb(219,149,40)" fg:x="886" fg:w="1"/><text x="29.8030%" y="2815.50"></text></g><g><title>`0x7FFAC12D54B5 (1 samples, 0.03%)</title><rect x="29.5530%" y="2789" width="0.0334%" height="15" fill="rgb(210,127,46)" fg:x="886" fg:w="1"/><text x="29.8030%" y="2799.50"></text></g><g><title>`0x7FFAC12D5DAA (1 samples, 0.03%)</title><rect x="29.5530%" y="2773" width="0.0334%" height="15" fill="rgb(220,106,7)" fg:x="886" fg:w="1"/><text x="29.8030%" y="2783.50"></text></g><g><title>`0x7FFAC12C7776 (1 samples, 0.03%)</title><rect x="29.5530%" y="2757" width="0.0334%" height="15" fill="rgb(249,31,22)" fg:x="886" fg:w="1"/><text x="29.8030%" y="2767.50"></text></g><g><title>`0x7FFAC12C78B4 (1 samples, 0.03%)</title><rect x="29.5530%" y="2741" width="0.0334%" height="15" fill="rgb(253,1,49)" fg:x="886" fg:w="1"/><text x="29.8030%" y="2751.50"></text></g><g><title>`0x7FFAC12C7FF0 (1 samples, 0.03%)</title><rect x="29.5530%" y="2725" width="0.0334%" height="15" fill="rgb(227,144,33)" fg:x="886" fg:w="1"/><text x="29.8030%" y="2735.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;::push (8 samples, 0.27%)</title><rect x="29.3863%" y="3013" width="0.2668%" height="15" fill="rgb(249,163,44)" fg:x="881" fg:w="8"/><text x="29.6363%" y="3023.50"></text></g><g><title>boggle.exe`core::ptr::write (2 samples, 0.07%)</title><rect x="29.5864%" y="2997" width="0.0667%" height="15" fill="rgb(234,15,39)" fg:x="887" fg:w="2"/><text x="29.8364%" y="3007.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place (1 samples, 0.03%)</title><rect x="29.6531%" y="3013" width="0.0334%" height="15" fill="rgb(207,66,16)" fg:x="889" fg:w="1"/><text x="29.9031%" y="3023.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(alloc::vec::Vec (1 samples, 0.03%)</title><rect x="29.6531%" y="2997" width="0.0334%" height="15" fill="rgb(233,112,24)" fg:x="889" fg:w="1"/><text x="29.9031%" y="3007.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (1 samples, 0.03%)</title><rect x="29.6531%" y="2981" width="0.0334%" height="15" fill="rgb(230,90,22)" fg:x="889" fg:w="1"/><text x="29.9031%" y="2991.50"></text></g><g><title>boggle.exe`alloc::raw_vec::impl$4::drop(alloc::raw_vec::RawVec (1 samples, 0.03%)</title><rect x="29.6531%" y="2965" width="0.0334%" height="15" fill="rgb(229,61,13)" fg:x="889" fg:w="1"/><text x="29.9031%" y="2975.50"></text></g><g><title>boggle.exe`alloc::string::String::pop (65 samples, 2.17%)</title><rect x="27.5851%" y="3077" width="2.1681%" height="15" fill="rgb(225,57,24)" fg:x="827" fg:w="65"/><text x="27.8351%" y="3087.50">b..</text></g><g><title>boggle.exe`alloc::string::impl$28::deref (64 samples, 2.13%)</title><rect x="27.6184%" y="3061" width="2.1348%" height="15" fill="rgb(208,169,48)" fg:x="828" fg:w="64"/><text x="27.8684%" y="3071.50">b..</text></g><g><title>boggle.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (64 samples, 2.13%)</title><rect x="27.6184%" y="3045" width="2.1348%" height="15" fill="rgb(244,218,51)" fg:x="828" fg:w="64"/><text x="27.8684%" y="3055.50">b..</text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::collect_words(boggle::utils::dict_trie::DictTrieNode*, ref$&lt;str$&gt;, alloc::vec::Vec (64 samples, 2.13%)</title><rect x="27.6184%" y="3029" width="2.1348%" height="15" fill="rgb(214,148,10)" fg:x="828" fg:w="64"/><text x="27.8684%" y="3039.50">b..</text></g><g><title>boggle.exe`std::collections::hash::map::impl$36::into_iter(std::collections::hash::map::HashMap (2 samples, 0.07%)</title><rect x="29.6865%" y="3013" width="0.0667%" height="15" fill="rgb(225,174,27)" fg:x="890" fg:w="2"/><text x="29.9365%" y="3023.50"></text></g><g><title>boggle.exe`std::collections::hash::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;::iter (2 samples, 0.07%)</title><rect x="29.6865%" y="2997" width="0.0667%" height="15" fill="rgb(230,96,26)" fg:x="890" fg:w="2"/><text x="29.9365%" y="3007.50"></text></g><g><title>boggle.exe`hashbrown::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt;::iter (2 samples, 0.07%)</title><rect x="29.6865%" y="2981" width="0.0667%" height="15" fill="rgb(232,10,30)" fg:x="890" fg:w="2"/><text x="29.9365%" y="2991.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTable&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;::iter (2 samples, 0.07%)</title><rect x="29.6865%" y="2965" width="0.0667%" height="15" fill="rgb(222,8,50)" fg:x="890" fg:w="2"/><text x="29.9365%" y="2975.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::iter (2 samples, 0.07%)</title><rect x="29.6865%" y="2949" width="0.0667%" height="15" fill="rgb(213,81,27)" fg:x="890" fg:w="2"/><text x="29.9365%" y="2959.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawIterRange&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::new(unsigned char*, hashbrown::raw::Bucket&lt;tuple$ (2 samples, 0.07%)</title><rect x="29.6865%" y="2933" width="0.0667%" height="15" fill="rgb(245,50,10)" fg:x="890" fg:w="2"/><text x="29.9365%" y="2943.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::load_aligned (2 samples, 0.07%)</title><rect x="29.6865%" y="2917" width="0.0667%" height="15" fill="rgb(216,100,18)" fg:x="890" fg:w="2"/><text x="29.9365%" y="2927.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::match_empty_or_deleted (2 samples, 0.07%)</title><rect x="29.6865%" y="2901" width="0.0667%" height="15" fill="rgb(236,147,54)" fg:x="890" fg:w="2"/><text x="29.9365%" y="2911.50"></text></g><g><title>boggle.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (2 samples, 0.07%)</title><rect x="29.6865%" y="2885" width="0.0667%" height="15" fill="rgb(205,143,26)" fg:x="890" fg:w="2"/><text x="29.9365%" y="2895.50"></text></g><g><title>`0x7FFAC12D5DA0 (1 samples, 0.03%)</title><rect x="29.7865%" y="2821" width="0.0334%" height="15" fill="rgb(236,26,9)" fg:x="893" fg:w="1"/><text x="30.0365%" y="2831.50"></text></g><g><title>`0x7FFAC12C780A (1 samples, 0.03%)</title><rect x="29.8199%" y="2789" width="0.0334%" height="15" fill="rgb(221,165,53)" fg:x="894" fg:w="1"/><text x="30.0699%" y="2799.50"></text></g><g><title>`0x7FFAC12C7F93 (1 samples, 0.03%)</title><rect x="29.8532%" y="2773" width="0.0334%" height="15" fill="rgb(214,110,17)" fg:x="895" fg:w="1"/><text x="30.1032%" y="2783.50"></text></g><g><title>`0x7FFAC12C8047 (1 samples, 0.03%)</title><rect x="29.8866%" y="2773" width="0.0334%" height="15" fill="rgb(237,197,12)" fg:x="896" fg:w="1"/><text x="30.1366%" y="2783.50"></text></g><g><title>`0x7FFAC12D5DAA (4 samples, 0.13%)</title><rect x="29.8199%" y="2821" width="0.1334%" height="15" fill="rgb(205,84,17)" fg:x="894" fg:w="4"/><text x="30.0699%" y="2831.50"></text></g><g><title>`0x7FFAC12C7776 (4 samples, 0.13%)</title><rect x="29.8199%" y="2805" width="0.1334%" height="15" fill="rgb(237,18,45)" fg:x="894" fg:w="4"/><text x="30.0699%" y="2815.50"></text></g><g><title>`0x7FFAC12C78B4 (3 samples, 0.10%)</title><rect x="29.8532%" y="2789" width="0.1001%" height="15" fill="rgb(221,87,14)" fg:x="895" fg:w="3"/><text x="30.1032%" y="2799.50"></text></g><g><title>`0x7FFAC12C8351 (1 samples, 0.03%)</title><rect x="29.9199%" y="2773" width="0.0334%" height="15" fill="rgb(238,186,15)" fg:x="897" fg:w="1"/><text x="30.1699%" y="2783.50"></text></g><g><title>`0x7FFAC12D23A7 (1 samples, 0.03%)</title><rect x="29.9533%" y="2805" width="0.0334%" height="15" fill="rgb(208,115,11)" fg:x="898" fg:w="1"/><text x="30.2033%" y="2815.50"></text></g><g><title>`0x7FFAC12D5E0B (2 samples, 0.07%)</title><rect x="29.9533%" y="2821" width="0.0667%" height="15" fill="rgb(254,175,0)" fg:x="898" fg:w="2"/><text x="30.2033%" y="2831.50"></text></g><g><title>`0x7FFAC12D23DD (1 samples, 0.03%)</title><rect x="29.9867%" y="2805" width="0.0334%" height="15" fill="rgb(227,24,42)" fg:x="899" fg:w="1"/><text x="30.2367%" y="2815.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::push (9 samples, 0.30%)</title><rect x="29.7532%" y="3061" width="0.3002%" height="15" fill="rgb(223,211,37)" fg:x="892" fg:w="9"/><text x="30.0032%" y="3071.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_mut_ptr (9 samples, 0.30%)</title><rect x="29.7532%" y="3045" width="0.3002%" height="15" fill="rgb(235,49,27)" fg:x="892" fg:w="9"/><text x="30.0032%" y="3055.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::ptr (9 samples, 0.30%)</title><rect x="29.7532%" y="3029" width="0.3002%" height="15" fill="rgb(254,97,51)" fg:x="892" fg:w="9"/><text x="30.0032%" y="3039.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (9 samples, 0.30%)</title><rect x="29.7532%" y="3013" width="0.3002%" height="15" fill="rgb(249,51,40)" fg:x="892" fg:w="9"/><text x="30.0032%" y="3023.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (9 samples, 0.30%)</title><rect x="29.7532%" y="2997" width="0.3002%" height="15" fill="rgb(210,128,45)" fg:x="892" fg:w="9"/><text x="30.0032%" y="3007.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::grow_one&lt;u8,alloc::alloc::Global&gt; (9 samples, 0.30%)</title><rect x="29.7532%" y="2981" width="0.3002%" height="15" fill="rgb(224,137,50)" fg:x="892" fg:w="9"/><text x="30.0032%" y="2991.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_one (9 samples, 0.30%)</title><rect x="29.7532%" y="2965" width="0.3002%" height="15" fill="rgb(242,15,9)" fg:x="892" fg:w="9"/><text x="30.0032%" y="2975.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (9 samples, 0.30%)</title><rect x="29.7532%" y="2949" width="0.3002%" height="15" fill="rgb(233,187,41)" fg:x="892" fg:w="9"/><text x="30.0032%" y="2959.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (9 samples, 0.30%)</title><rect x="29.7532%" y="2933" width="0.3002%" height="15" fill="rgb(227,2,29)" fg:x="892" fg:w="9"/><text x="30.0032%" y="2943.50"></text></g><g><title>boggle.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (9 samples, 0.30%)</title><rect x="29.7532%" y="2917" width="0.3002%" height="15" fill="rgb(222,70,3)" fg:x="892" fg:w="9"/><text x="30.0032%" y="2927.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (8 samples, 0.27%)</title><rect x="29.7865%" y="2901" width="0.2668%" height="15" fill="rgb(213,11,42)" fg:x="893" fg:w="8"/><text x="30.0365%" y="2911.50"></text></g><g><title>boggle.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (8 samples, 0.27%)</title><rect x="29.7865%" y="2885" width="0.2668%" height="15" fill="rgb(225,150,9)" fg:x="893" fg:w="8"/><text x="30.0365%" y="2895.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (8 samples, 0.27%)</title><rect x="29.7865%" y="2869" width="0.2668%" height="15" fill="rgb(230,162,45)" fg:x="893" fg:w="8"/><text x="30.0365%" y="2879.50"></text></g><g><title>`0x7FFAC12D5376 (8 samples, 0.27%)</title><rect x="29.7865%" y="2853" width="0.2668%" height="15" fill="rgb(222,14,52)" fg:x="893" fg:w="8"/><text x="30.0365%" y="2863.50"></text></g><g><title>`0x7FFAC12D54B5 (8 samples, 0.27%)</title><rect x="29.7865%" y="2837" width="0.2668%" height="15" fill="rgb(254,198,14)" fg:x="893" fg:w="8"/><text x="30.0365%" y="2847.50"></text></g><g><title>`0x7FFAC12D6C14 (1 samples, 0.03%)</title><rect x="30.0200%" y="2821" width="0.0334%" height="15" fill="rgb(220,217,30)" fg:x="900" fg:w="1"/><text x="30.2700%" y="2831.50"></text></g><g><title>boggle.exe`alloc::string::String::push (12 samples, 0.40%)</title><rect x="29.7532%" y="3077" width="0.4003%" height="15" fill="rgb(215,146,41)" fg:x="892" fg:w="12"/><text x="30.0032%" y="3087.50"></text></g><g><title>boggle.exe`core::char::methods::impl$0::len_utf8 (3 samples, 0.10%)</title><rect x="30.0534%" y="3061" width="0.1001%" height="15" fill="rgb(217,27,36)" fg:x="901" fg:w="3"/><text x="30.3034%" y="3071.50"></text></g><g><title>boggle.exe`core::char::methods::len_utf8 (3 samples, 0.10%)</title><rect x="30.0534%" y="3045" width="0.1001%" height="15" fill="rgb(219,218,39)" fg:x="901" fg:w="3"/><text x="30.3034%" y="3055.50"></text></g><g><title>`0x7FFAB8910268 (1 samples, 0.03%)</title><rect x="30.1534%" y="3013" width="0.0334%" height="15" fill="rgb(219,4,42)" fg:x="904" fg:w="1"/><text x="30.4034%" y="3023.50"></text></g><g><title>`0x7FFAC12C776F (1 samples, 0.03%)</title><rect x="30.1868%" y="2885" width="0.0334%" height="15" fill="rgb(249,119,36)" fg:x="905" fg:w="1"/><text x="30.4368%" y="2895.50"></text></g><g><title>`0x7FFAC12C7FF3 (1 samples, 0.03%)</title><rect x="30.2201%" y="2853" width="0.0334%" height="15" fill="rgb(209,23,33)" fg:x="906" fg:w="1"/><text x="30.4701%" y="2863.50"></text></g><g><title>`0x7FFAC12C8047 (2 samples, 0.07%)</title><rect x="30.2535%" y="2853" width="0.0667%" height="15" fill="rgb(211,10,0)" fg:x="907" fg:w="2"/><text x="30.5035%" y="2863.50"></text></g><g><title>`0x7FFAC12C80CE (1 samples, 0.03%)</title><rect x="30.3202%" y="2853" width="0.0334%" height="15" fill="rgb(208,99,37)" fg:x="909" fg:w="1"/><text x="30.5702%" y="2863.50"></text></g><g><title>`0x7FFAC12C810C (1 samples, 0.03%)</title><rect x="30.3536%" y="2853" width="0.0334%" height="15" fill="rgb(213,132,31)" fg:x="910" fg:w="1"/><text x="30.6036%" y="2863.50"></text></g><g><title>`0x7FFAC12C7776 (6 samples, 0.20%)</title><rect x="30.2201%" y="2885" width="0.2001%" height="15" fill="rgb(243,129,40)" fg:x="906" fg:w="6"/><text x="30.4701%" y="2895.50"></text></g><g><title>`0x7FFAC12C78B4 (6 samples, 0.20%)</title><rect x="30.2201%" y="2869" width="0.2001%" height="15" fill="rgb(210,66,33)" fg:x="906" fg:w="6"/><text x="30.4701%" y="2879.50"></text></g><g><title>`0x7FFAC12C8197 (1 samples, 0.03%)</title><rect x="30.3869%" y="2853" width="0.0334%" height="15" fill="rgb(209,189,4)" fg:x="911" fg:w="1"/><text x="30.6369%" y="2863.50"></text></g><g><title>boggle.exe`alloc::string::impl$102::to_string(ref$ (9 samples, 0.30%)</title><rect x="30.1534%" y="3077" width="0.3002%" height="15" fill="rgb(214,107,37)" fg:x="904" fg:w="9"/><text x="30.4034%" y="3087.50"></text></g><g><title>boggle.exe`alloc::string::impl$44::from(ref$ (9 samples, 0.30%)</title><rect x="30.1534%" y="3061" width="0.3002%" height="15" fill="rgb(245,88,54)" fg:x="904" fg:w="9"/><text x="30.4034%" y="3071.50"></text></g><g><title>boggle.exe`alloc::str::impl$4::to_owned(ref$ (9 samples, 0.30%)</title><rect x="30.1534%" y="3045" width="0.3002%" height="15" fill="rgb(205,146,20)" fg:x="904" fg:w="9"/><text x="30.4034%" y="3055.50"></text></g><g><title>boggle.exe`alloc::slice::impl$9::to_owned(ref$&lt;slice2$ (9 samples, 0.30%)</title><rect x="30.1534%" y="3029" width="0.3002%" height="15" fill="rgb(220,161,25)" fg:x="904" fg:w="9"/><text x="30.4034%" y="3039.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec(ref$&lt;slice2$ (8 samples, 0.27%)</title><rect x="30.1868%" y="3013" width="0.2668%" height="15" fill="rgb(215,152,15)" fg:x="905" fg:w="8"/><text x="30.4368%" y="3023.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec_in(ref$&lt;slice2$ (8 samples, 0.27%)</title><rect x="30.1868%" y="2997" width="0.2668%" height="15" fill="rgb(233,192,44)" fg:x="905" fg:w="8"/><text x="30.4368%" y="3007.50"></text></g><g><title>boggle.exe`alloc::slice::hack::to_vec(ref$&lt;slice2$ (8 samples, 0.27%)</title><rect x="30.1868%" y="2981" width="0.2668%" height="15" fill="rgb(240,170,46)" fg:x="905" fg:w="8"/><text x="30.4368%" y="2991.50"></text></g><g><title>boggle.exe`alloc::slice::hack::impl$1::to_vec(ref$&lt;slice2$ (8 samples, 0.27%)</title><rect x="30.1868%" y="2965" width="0.2668%" height="15" fill="rgb(207,104,33)" fg:x="905" fg:w="8"/><text x="30.4368%" y="2975.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (8 samples, 0.27%)</title><rect x="30.1868%" y="2949" width="0.2668%" height="15" fill="rgb(219,21,39)" fg:x="905" fg:w="8"/><text x="30.4368%" y="2959.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (8 samples, 0.27%)</title><rect x="30.1868%" y="2933" width="0.2668%" height="15" fill="rgb(214,133,29)" fg:x="905" fg:w="8"/><text x="30.4368%" y="2943.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (8 samples, 0.27%)</title><rect x="30.1868%" y="2917" width="0.2668%" height="15" fill="rgb(226,93,6)" fg:x="905" fg:w="8"/><text x="30.4368%" y="2927.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (8 samples, 0.27%)</title><rect x="30.1868%" y="2901" width="0.2668%" height="15" fill="rgb(252,222,34)" fg:x="905" fg:w="8"/><text x="30.4368%" y="2911.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::allocate (1 samples, 0.03%)</title><rect x="30.4203%" y="2885" width="0.0334%" height="15" fill="rgb(252,92,48)" fg:x="912" fg:w="1"/><text x="30.6703%" y="2895.50"></text></g><g><title>boggle.exe`alloc::alloc::Global::alloc_impl (1 samples, 0.03%)</title><rect x="30.4203%" y="2869" width="0.0334%" height="15" fill="rgb(245,223,24)" fg:x="912" fg:w="1"/><text x="30.6703%" y="2879.50"></text></g><g><title>boggle.exe`alloc::alloc::alloc (1 samples, 0.03%)</title><rect x="30.4203%" y="2853" width="0.0334%" height="15" fill="rgb(205,176,3)" fg:x="912" fg:w="1"/><text x="30.6703%" y="2863.50"></text></g><g><title>boggle.exe`core::ptr::read_volatile (1 samples, 0.03%)</title><rect x="30.4203%" y="2837" width="0.0334%" height="15" fill="rgb(235,151,15)" fg:x="912" fg:w="1"/><text x="30.6703%" y="2847.50"></text></g><g><title>boggle.exe`alloc::string::impl$28::deref (1 samples, 0.03%)</title><rect x="30.4536%" y="3077" width="0.0334%" height="15" fill="rgb(237,209,11)" fg:x="913" fg:w="1"/><text x="30.7036%" y="3087.50"></text></g><g><title>boggle.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (1 samples, 0.03%)</title><rect x="30.4536%" y="3061" width="0.0334%" height="15" fill="rgb(243,227,24)" fg:x="913" fg:w="1"/><text x="30.7036%" y="3071.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_ptr (1 samples, 0.03%)</title><rect x="30.4536%" y="3045" width="0.0334%" height="15" fill="rgb(239,193,16)" fg:x="913" fg:w="1"/><text x="30.7036%" y="3055.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::ptr (1 samples, 0.03%)</title><rect x="30.4536%" y="3029" width="0.0334%" height="15" fill="rgb(231,27,9)" fg:x="913" fg:w="1"/><text x="30.7036%" y="3039.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (1 samples, 0.03%)</title><rect x="30.4536%" y="3013" width="0.0334%" height="15" fill="rgb(219,169,10)" fg:x="913" fg:w="1"/><text x="30.7036%" y="3023.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (1 samples, 0.03%)</title><rect x="30.4536%" y="2997" width="0.0334%" height="15" fill="rgb(244,229,43)" fg:x="913" fg:w="1"/><text x="30.7036%" y="3007.50"></text></g><g><title>`0x7FFAC12C782F (1 samples, 0.03%)</title><rect x="30.5203%" y="2901" width="0.0334%" height="15" fill="rgb(254,38,20)" fg:x="915" fg:w="1"/><text x="30.7703%" y="2911.50"></text></g><g><title>`0x7FFAC12C7EDA (1 samples, 0.03%)</title><rect x="30.5537%" y="2885" width="0.0334%" height="15" fill="rgb(250,47,30)" fg:x="916" fg:w="1"/><text x="30.8037%" y="2895.50"></text></g><g><title>`0x7FFAC12C7EE2 (1 samples, 0.03%)</title><rect x="30.5871%" y="2885" width="0.0334%" height="15" fill="rgb(224,124,36)" fg:x="917" fg:w="1"/><text x="30.8371%" y="2895.50"></text></g><g><title>`0x7FFAC12C8047 (1 samples, 0.03%)</title><rect x="30.6204%" y="2885" width="0.0334%" height="15" fill="rgb(246,68,51)" fg:x="918" fg:w="1"/><text x="30.8704%" y="2895.50"></text></g><g><title>`0x7FFAC12C8538 (1 samples, 0.03%)</title><rect x="30.6538%" y="2885" width="0.0334%" height="15" fill="rgb(253,43,49)" fg:x="919" fg:w="1"/><text x="30.9038%" y="2895.50"></text></g><g><title>boggle.exe`alloc::string::impl$6::clone (6 samples, 0.20%)</title><rect x="30.5203%" y="3061" width="0.2001%" height="15" fill="rgb(219,54,36)" fg:x="915" fg:w="6"/><text x="30.7703%" y="3071.50"></text></g><g><title>boggle.exe`alloc::vec::impl$11::clone (6 samples, 0.20%)</title><rect x="30.5203%" y="3045" width="0.2001%" height="15" fill="rgb(227,133,34)" fg:x="915" fg:w="6"/><text x="30.7703%" y="3055.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec_in (6 samples, 0.20%)</title><rect x="30.5203%" y="3029" width="0.2001%" height="15" fill="rgb(247,227,15)" fg:x="915" fg:w="6"/><text x="30.7703%" y="3039.50"></text></g><g><title>boggle.exe`alloc::slice::hack::to_vec (6 samples, 0.20%)</title><rect x="30.5203%" y="3013" width="0.2001%" height="15" fill="rgb(229,96,14)" fg:x="915" fg:w="6"/><text x="30.7703%" y="3023.50"></text></g><g><title>boggle.exe`alloc::slice::hack::impl$1::to_vec (6 samples, 0.20%)</title><rect x="30.5203%" y="2997" width="0.2001%" height="15" fill="rgb(220,79,17)" fg:x="915" fg:w="6"/><text x="30.7703%" y="3007.50"></text></g><g><title>boggle.exe`alloc::vec::Vec::with_capacity_in (6 samples, 0.20%)</title><rect x="30.5203%" y="2981" width="0.2001%" height="15" fill="rgb(205,131,53)" fg:x="915" fg:w="6"/><text x="30.7703%" y="2991.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec::with_capacity_in (6 samples, 0.20%)</title><rect x="30.5203%" y="2965" width="0.2001%" height="15" fill="rgb(209,50,29)" fg:x="915" fg:w="6"/><text x="30.7703%" y="2975.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner::with_capacity_in (6 samples, 0.20%)</title><rect x="30.5203%" y="2949" width="0.2001%" height="15" fill="rgb(245,86,46)" fg:x="915" fg:w="6"/><text x="30.7703%" y="2959.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner::try_allocate_in (6 samples, 0.20%)</title><rect x="30.5203%" y="2933" width="0.2001%" height="15" fill="rgb(235,66,46)" fg:x="915" fg:w="6"/><text x="30.7703%" y="2943.50"></text></g><g><title>`0x7FFAC12C7776 (6 samples, 0.20%)</title><rect x="30.5203%" y="2917" width="0.2001%" height="15" fill="rgb(232,148,31)" fg:x="915" fg:w="6"/><text x="30.7703%" y="2927.50"></text></g><g><title>`0x7FFAC12C78B4 (5 samples, 0.17%)</title><rect x="30.5537%" y="2901" width="0.1668%" height="15" fill="rgb(217,149,8)" fg:x="916" fg:w="5"/><text x="30.8037%" y="2911.50"></text></g><g><title>`0x7FFAC12C865E (1 samples, 0.03%)</title><rect x="30.6871%" y="2885" width="0.0334%" height="15" fill="rgb(209,183,11)" fg:x="920" fg:w="1"/><text x="30.9371%" y="2895.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;::push (10 samples, 0.33%)</title><rect x="30.4870%" y="3077" width="0.3336%" height="15" fill="rgb(208,55,20)" fg:x="914" fg:w="10"/><text x="30.7370%" y="3087.50"></text></g><g><title>boggle.exe`core::ptr::write (3 samples, 0.10%)</title><rect x="30.7205%" y="3061" width="0.1001%" height="15" fill="rgb(218,39,14)" fg:x="921" fg:w="3"/><text x="30.9705%" y="3071.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawIterRange&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::new(unsigned char*, hashbrown::raw::Bucket&lt;tuple$ (4 samples, 0.13%)</title><rect x="30.8205%" y="2997" width="0.1334%" height="15" fill="rgb(216,169,33)" fg:x="924" fg:w="4"/><text x="31.0705%" y="3007.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::load_aligned (4 samples, 0.13%)</title><rect x="30.8205%" y="2981" width="0.1334%" height="15" fill="rgb(233,80,24)" fg:x="924" fg:w="4"/><text x="31.0705%" y="2991.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::match_empty_or_deleted (4 samples, 0.13%)</title><rect x="30.8205%" y="2965" width="0.1334%" height="15" fill="rgb(213,179,31)" fg:x="924" fg:w="4"/><text x="31.0705%" y="2975.50"></text></g><g><title>boggle.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (4 samples, 0.13%)</title><rect x="30.8205%" y="2949" width="0.1334%" height="15" fill="rgb(209,19,5)" fg:x="924" fg:w="4"/><text x="31.0705%" y="2959.50"></text></g><g><title>boggle.exe`std::collections::hash::map::impl$36::into_iter(std::collections::hash::map::HashMap (5 samples, 0.17%)</title><rect x="30.8205%" y="3077" width="0.1668%" height="15" fill="rgb(219,18,35)" fg:x="924" fg:w="5"/><text x="31.0705%" y="3087.50"></text></g><g><title>boggle.exe`std::collections::hash::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;::iter (5 samples, 0.17%)</title><rect x="30.8205%" y="3061" width="0.1668%" height="15" fill="rgb(209,169,16)" fg:x="924" fg:w="5"/><text x="31.0705%" y="3071.50"></text></g><g><title>boggle.exe`hashbrown::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt;::iter (5 samples, 0.17%)</title><rect x="30.8205%" y="3045" width="0.1668%" height="15" fill="rgb(245,90,51)" fg:x="924" fg:w="5"/><text x="31.0705%" y="3055.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTable&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;::iter (5 samples, 0.17%)</title><rect x="30.8205%" y="3029" width="0.1668%" height="15" fill="rgb(220,99,45)" fg:x="924" fg:w="5"/><text x="31.0705%" y="3039.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::iter (5 samples, 0.17%)</title><rect x="30.8205%" y="3013" width="0.1668%" height="15" fill="rgb(249,89,25)" fg:x="924" fg:w="5"/><text x="31.0705%" y="3023.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::data_end (1 samples, 0.03%)</title><rect x="30.9540%" y="2997" width="0.0334%" height="15" fill="rgb(239,193,0)" fg:x="928" fg:w="1"/><text x="31.2040%" y="3007.50"></text></g><g><title>boggle.exe`alloc::string::String::pop (105 samples, 3.50%)</title><rect x="27.5183%" y="3141" width="3.5023%" height="15" fill="rgb(231,126,1)" fg:x="825" fg:w="105"/><text x="27.7683%" y="3151.50">bog..</text></g><g><title>boggle.exe`alloc::string::impl$28::deref (105 samples, 3.50%)</title><rect x="27.5183%" y="3125" width="3.5023%" height="15" fill="rgb(243,166,3)" fg:x="825" fg:w="105"/><text x="27.7683%" y="3135.50">bog..</text></g><g><title>boggle.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (105 samples, 3.50%)</title><rect x="27.5183%" y="3109" width="3.5023%" height="15" fill="rgb(223,22,34)" fg:x="825" fg:w="105"/><text x="27.7683%" y="3119.50">bog..</text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::collect_words(boggle::utils::dict_trie::DictTrieNode*, ref$&lt;str$&gt;, alloc::vec::Vec (105 samples, 3.50%)</title><rect x="27.5183%" y="3093" width="3.5023%" height="15" fill="rgb(251,52,51)" fg:x="825" fg:w="105"/><text x="27.7683%" y="3103.50">bog..</text></g><g><title>boggle.exe`std::collections::hash::map::impl$39::next(std::collections::hash::map::Iter (1 samples, 0.03%)</title><rect x="30.9873%" y="3077" width="0.0334%" height="15" fill="rgb(221,165,28)" fg:x="929" fg:w="1"/><text x="31.2373%" y="3087.50"></text></g><g><title>boggle.exe`hashbrown::map::impl$60::next(hashbrown::map::Iter (1 samples, 0.03%)</title><rect x="30.9873%" y="3061" width="0.0334%" height="15" fill="rgb(218,121,47)" fg:x="929" fg:w="1"/><text x="31.2373%" y="3071.50"></text></g><g><title>boggle.exe`hashbrown::raw::impl$28::next(hashbrown::raw::RawIter&lt;tuple$ (1 samples, 0.03%)</title><rect x="30.9873%" y="3045" width="0.0334%" height="15" fill="rgb(209,120,9)" fg:x="929" fg:w="1"/><text x="31.2373%" y="3055.50"></text></g><g><title>`0x7FFAC12C7E95 (1 samples, 0.03%)</title><rect x="31.0874%" y="2837" width="0.0334%" height="15" fill="rgb(236,68,12)" fg:x="932" fg:w="1"/><text x="31.3374%" y="2847.50"></text></g><g><title>`0x7FFAC12C803A (1 samples, 0.03%)</title><rect x="31.1207%" y="2837" width="0.0334%" height="15" fill="rgb(225,194,26)" fg:x="933" fg:w="1"/><text x="31.3707%" y="2847.50"></text></g><g><title>`0x7FFAC12C8047 (3 samples, 0.10%)</title><rect x="31.1541%" y="2837" width="0.1001%" height="15" fill="rgb(231,84,39)" fg:x="934" fg:w="3"/><text x="31.4041%" y="2847.50"></text></g><g><title>`0x7FFAC12C809C (1 samples, 0.03%)</title><rect x="31.2542%" y="2837" width="0.0334%" height="15" fill="rgb(210,11,45)" fg:x="937" fg:w="1"/><text x="31.5042%" y="2847.50"></text></g><g><title>`0x7FFAC12C8235 (1 samples, 0.03%)</title><rect x="31.2875%" y="2837" width="0.0334%" height="15" fill="rgb(224,54,52)" fg:x="938" fg:w="1"/><text x="31.5375%" y="2847.50"></text></g><g><title>`0x7FFAC12D5DAA (8 samples, 0.27%)</title><rect x="31.0874%" y="2885" width="0.2668%" height="15" fill="rgb(238,102,14)" fg:x="932" fg:w="8"/><text x="31.3374%" y="2895.50"></text></g><g><title>`0x7FFAC12C7776 (8 samples, 0.27%)</title><rect x="31.0874%" y="2869" width="0.2668%" height="15" fill="rgb(243,160,52)" fg:x="932" fg:w="8"/><text x="31.3374%" y="2879.50"></text></g><g><title>`0x7FFAC12C78B4 (8 samples, 0.27%)</title><rect x="31.0874%" y="2853" width="0.2668%" height="15" fill="rgb(216,114,19)" fg:x="932" fg:w="8"/><text x="31.3374%" y="2863.50"></text></g><g><title>`0x7FFAC12C8CE9 (1 samples, 0.03%)</title><rect x="31.3209%" y="2837" width="0.0334%" height="15" fill="rgb(244,166,37)" fg:x="939" fg:w="1"/><text x="31.5709%" y="2847.50"></text></g><g><title>`0x7FFAC12C7776 (1 samples, 0.03%)</title><rect x="31.3209%" y="2821" width="0.0334%" height="15" fill="rgb(246,29,44)" fg:x="939" fg:w="1"/><text x="31.5709%" y="2831.50"></text></g><g><title>`0x7FFAC12C7AFE (1 samples, 0.03%)</title><rect x="31.3209%" y="2805" width="0.0334%" height="15" fill="rgb(215,56,53)" fg:x="939" fg:w="1"/><text x="31.5709%" y="2815.50"></text></g><g><title>`0x7FFAC12B00D5 (1 samples, 0.03%)</title><rect x="31.3209%" y="2789" width="0.0334%" height="15" fill="rgb(217,60,2)" fg:x="939" fg:w="1"/><text x="31.5709%" y="2799.50"></text></g><g><title>`0x7FFAC12D5DB2 (1 samples, 0.03%)</title><rect x="31.3542%" y="2885" width="0.0334%" height="15" fill="rgb(207,26,24)" fg:x="940" fg:w="1"/><text x="31.6042%" y="2895.50"></text></g><g><title>`0x7FFAC12D22DB (1 samples, 0.03%)</title><rect x="31.3876%" y="2869" width="0.0334%" height="15" fill="rgb(252,210,15)" fg:x="941" fg:w="1"/><text x="31.6376%" y="2879.50"></text></g><g><title>`0x7FFAC12D230C (1 samples, 0.03%)</title><rect x="31.4209%" y="2869" width="0.0334%" height="15" fill="rgb(253,209,26)" fg:x="942" fg:w="1"/><text x="31.6709%" y="2879.50"></text></g><g><title>`0x7FFAC12D2325 (1 samples, 0.03%)</title><rect x="31.4543%" y="2869" width="0.0334%" height="15" fill="rgb(238,170,14)" fg:x="943" fg:w="1"/><text x="31.7043%" y="2879.50"></text></g><g><title>`0x7FFAC12D2329 (1 samples, 0.03%)</title><rect x="31.4877%" y="2869" width="0.0334%" height="15" fill="rgb(216,178,15)" fg:x="944" fg:w="1"/><text x="31.7377%" y="2879.50"></text></g><g><title>`0x7FFAC12D23A7 (1 samples, 0.03%)</title><rect x="31.5210%" y="2869" width="0.0334%" height="15" fill="rgb(250,197,2)" fg:x="945" fg:w="1"/><text x="31.7710%" y="2879.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::push (17 samples, 0.57%)</title><rect x="31.0207%" y="3125" width="0.5670%" height="15" fill="rgb(212,70,42)" fg:x="930" fg:w="17"/><text x="31.2707%" y="3135.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_mut_ptr (17 samples, 0.57%)</title><rect x="31.0207%" y="3109" width="0.5670%" height="15" fill="rgb(227,213,9)" fg:x="930" fg:w="17"/><text x="31.2707%" y="3119.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::ptr (17 samples, 0.57%)</title><rect x="31.0207%" y="3093" width="0.5670%" height="15" fill="rgb(245,99,25)" fg:x="930" fg:w="17"/><text x="31.2707%" y="3103.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (17 samples, 0.57%)</title><rect x="31.0207%" y="3077" width="0.5670%" height="15" fill="rgb(250,82,29)" fg:x="930" fg:w="17"/><text x="31.2707%" y="3087.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (17 samples, 0.57%)</title><rect x="31.0207%" y="3061" width="0.5670%" height="15" fill="rgb(241,226,54)" fg:x="930" fg:w="17"/><text x="31.2707%" y="3071.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::grow_one&lt;u8,alloc::alloc::Global&gt; (17 samples, 0.57%)</title><rect x="31.0207%" y="3045" width="0.5670%" height="15" fill="rgb(221,99,41)" fg:x="930" fg:w="17"/><text x="31.2707%" y="3055.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_one (17 samples, 0.57%)</title><rect x="31.0207%" y="3029" width="0.5670%" height="15" fill="rgb(213,90,21)" fg:x="930" fg:w="17"/><text x="31.2707%" y="3039.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (17 samples, 0.57%)</title><rect x="31.0207%" y="3013" width="0.5670%" height="15" fill="rgb(205,208,24)" fg:x="930" fg:w="17"/><text x="31.2707%" y="3023.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (17 samples, 0.57%)</title><rect x="31.0207%" y="2997" width="0.5670%" height="15" fill="rgb(246,31,12)" fg:x="930" fg:w="17"/><text x="31.2707%" y="3007.50"></text></g><g><title>boggle.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (16 samples, 0.53%)</title><rect x="31.0540%" y="2981" width="0.5337%" height="15" fill="rgb(213,154,6)" fg:x="931" fg:w="16"/><text x="31.3040%" y="2991.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (15 samples, 0.50%)</title><rect x="31.0874%" y="2965" width="0.5003%" height="15" fill="rgb(222,163,29)" fg:x="932" fg:w="15"/><text x="31.3374%" y="2975.50"></text></g><g><title>boggle.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (15 samples, 0.50%)</title><rect x="31.0874%" y="2949" width="0.5003%" height="15" fill="rgb(227,201,8)" fg:x="932" fg:w="15"/><text x="31.3374%" y="2959.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (15 samples, 0.50%)</title><rect x="31.0874%" y="2933" width="0.5003%" height="15" fill="rgb(233,9,32)" fg:x="932" fg:w="15"/><text x="31.3374%" y="2943.50"></text></g><g><title>`0x7FFAC12D5376 (15 samples, 0.50%)</title><rect x="31.0874%" y="2917" width="0.5003%" height="15" fill="rgb(217,54,24)" fg:x="932" fg:w="15"/><text x="31.3374%" y="2927.50"></text></g><g><title>`0x7FFAC12D54B5 (15 samples, 0.50%)</title><rect x="31.0874%" y="2901" width="0.5003%" height="15" fill="rgb(235,192,0)" fg:x="932" fg:w="15"/><text x="31.3374%" y="2911.50"></text></g><g><title>`0x7FFAC12D5E0B (6 samples, 0.20%)</title><rect x="31.3876%" y="2885" width="0.2001%" height="15" fill="rgb(235,45,9)" fg:x="941" fg:w="6"/><text x="31.6376%" y="2895.50"></text></g><g><title>`0x7FFAC12D23DD (1 samples, 0.03%)</title><rect x="31.5544%" y="2869" width="0.0334%" height="15" fill="rgb(246,42,40)" fg:x="946" fg:w="1"/><text x="31.8044%" y="2879.50"></text></g><g><title>boggle.exe`alloc::string::String::push (25 samples, 0.83%)</title><rect x="31.0207%" y="3141" width="0.8339%" height="15" fill="rgb(248,111,24)" fg:x="930" fg:w="25"/><text x="31.2707%" y="3151.50"></text></g><g><title>boggle.exe`core::char::methods::impl$0::len_utf8 (8 samples, 0.27%)</title><rect x="31.5877%" y="3125" width="0.2668%" height="15" fill="rgb(249,65,22)" fg:x="947" fg:w="8"/><text x="31.8377%" y="3135.50"></text></g><g><title>boggle.exe`core::char::methods::len_utf8 (8 samples, 0.27%)</title><rect x="31.5877%" y="3109" width="0.2668%" height="15" fill="rgb(238,111,51)" fg:x="947" fg:w="8"/><text x="31.8377%" y="3119.50"></text></g><g><title>`0x7FFAC12C77E7 (1 samples, 0.03%)</title><rect x="31.8546%" y="2933" width="0.0334%" height="15" fill="rgb(250,118,22)" fg:x="955" fg:w="1"/><text x="32.1046%" y="2943.50"></text></g><g><title>`0x7FFAC12C7F93 (1 samples, 0.03%)</title><rect x="31.8879%" y="2917" width="0.0334%" height="15" fill="rgb(234,84,26)" fg:x="956" fg:w="1"/><text x="32.1379%" y="2927.50"></text></g><g><title>`0x7FFAC12C80A4 (1 samples, 0.03%)</title><rect x="31.9213%" y="2917" width="0.0334%" height="15" fill="rgb(243,172,12)" fg:x="957" fg:w="1"/><text x="32.1713%" y="2927.50"></text></g><g><title>`0x7FFAC12C80CE (1 samples, 0.03%)</title><rect x="31.9546%" y="2917" width="0.0334%" height="15" fill="rgb(236,150,49)" fg:x="958" fg:w="1"/><text x="32.2046%" y="2927.50"></text></g><g><title>`0x7FFAC12C8156 (1 samples, 0.03%)</title><rect x="31.9880%" y="2917" width="0.0334%" height="15" fill="rgb(225,197,26)" fg:x="959" fg:w="1"/><text x="32.2380%" y="2927.50"></text></g><g><title>`0x7FFAC12C7776 (6 samples, 0.20%)</title><rect x="31.8546%" y="2949" width="0.2001%" height="15" fill="rgb(214,17,42)" fg:x="955" fg:w="6"/><text x="32.1046%" y="2959.50"></text></g><g><title>`0x7FFAC12C78B4 (5 samples, 0.17%)</title><rect x="31.8879%" y="2933" width="0.1668%" height="15" fill="rgb(224,165,40)" fg:x="956" fg:w="5"/><text x="32.1379%" y="2943.50"></text></g><g><title>`0x7FFAC12C817A (1 samples, 0.03%)</title><rect x="32.0213%" y="2917" width="0.0334%" height="15" fill="rgb(246,100,4)" fg:x="960" fg:w="1"/><text x="32.2713%" y="2927.50"></text></g><g><title>boggle.exe`alloc::string::impl$102::to_string(ref$ (7 samples, 0.23%)</title><rect x="31.8546%" y="3141" width="0.2335%" height="15" fill="rgb(222,103,0)" fg:x="955" fg:w="7"/><text x="32.1046%" y="3151.50"></text></g><g><title>boggle.exe`alloc::string::impl$44::from(ref$ (7 samples, 0.23%)</title><rect x="31.8546%" y="3125" width="0.2335%" height="15" fill="rgb(227,189,26)" fg:x="955" fg:w="7"/><text x="32.1046%" y="3135.50"></text></g><g><title>boggle.exe`alloc::str::impl$4::to_owned(ref$ (7 samples, 0.23%)</title><rect x="31.8546%" y="3109" width="0.2335%" height="15" fill="rgb(214,202,17)" fg:x="955" fg:w="7"/><text x="32.1046%" y="3119.50"></text></g><g><title>boggle.exe`alloc::slice::impl$9::to_owned(ref$&lt;slice2$ (7 samples, 0.23%)</title><rect x="31.8546%" y="3093" width="0.2335%" height="15" fill="rgb(229,111,3)" fg:x="955" fg:w="7"/><text x="32.1046%" y="3103.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec(ref$&lt;slice2$ (7 samples, 0.23%)</title><rect x="31.8546%" y="3077" width="0.2335%" height="15" fill="rgb(229,172,15)" fg:x="955" fg:w="7"/><text x="32.1046%" y="3087.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec_in(ref$&lt;slice2$ (7 samples, 0.23%)</title><rect x="31.8546%" y="3061" width="0.2335%" height="15" fill="rgb(230,224,35)" fg:x="955" fg:w="7"/><text x="32.1046%" y="3071.50"></text></g><g><title>boggle.exe`alloc::slice::hack::to_vec(ref$&lt;slice2$ (7 samples, 0.23%)</title><rect x="31.8546%" y="3045" width="0.2335%" height="15" fill="rgb(251,141,6)" fg:x="955" fg:w="7"/><text x="32.1046%" y="3055.50"></text></g><g><title>boggle.exe`alloc::slice::hack::impl$1::to_vec(ref$&lt;slice2$ (7 samples, 0.23%)</title><rect x="31.8546%" y="3029" width="0.2335%" height="15" fill="rgb(225,208,6)" fg:x="955" fg:w="7"/><text x="32.1046%" y="3039.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (7 samples, 0.23%)</title><rect x="31.8546%" y="3013" width="0.2335%" height="15" fill="rgb(246,181,16)" fg:x="955" fg:w="7"/><text x="32.1046%" y="3023.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (7 samples, 0.23%)</title><rect x="31.8546%" y="2997" width="0.2335%" height="15" fill="rgb(227,129,36)" fg:x="955" fg:w="7"/><text x="32.1046%" y="3007.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (7 samples, 0.23%)</title><rect x="31.8546%" y="2981" width="0.2335%" height="15" fill="rgb(248,117,24)" fg:x="955" fg:w="7"/><text x="32.1046%" y="2991.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (7 samples, 0.23%)</title><rect x="31.8546%" y="2965" width="0.2335%" height="15" fill="rgb(214,185,35)" fg:x="955" fg:w="7"/><text x="32.1046%" y="2975.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::allocate (1 samples, 0.03%)</title><rect x="32.0547%" y="2949" width="0.0334%" height="15" fill="rgb(236,150,34)" fg:x="961" fg:w="1"/><text x="32.3047%" y="2959.50"></text></g><g><title>boggle.exe`alloc::alloc::Global::alloc_impl (1 samples, 0.03%)</title><rect x="32.0547%" y="2933" width="0.0334%" height="15" fill="rgb(243,228,27)" fg:x="961" fg:w="1"/><text x="32.3047%" y="2943.50"></text></g><g><title>boggle.exe`alloc::alloc::alloc (1 samples, 0.03%)</title><rect x="32.0547%" y="2917" width="0.0334%" height="15" fill="rgb(245,77,44)" fg:x="961" fg:w="1"/><text x="32.3047%" y="2927.50"></text></g><g><title>boggle.exe`core::ptr::read_volatile (1 samples, 0.03%)</title><rect x="32.0547%" y="2901" width="0.0334%" height="15" fill="rgb(235,214,42)" fg:x="961" fg:w="1"/><text x="32.3047%" y="2911.50"></text></g><g><title>`0x7FFAB8910309 (1 samples, 0.03%)</title><rect x="32.1881%" y="3109" width="0.0334%" height="15" fill="rgb(221,74,3)" fg:x="965" fg:w="1"/><text x="32.4381%" y="3119.50"></text></g><g><title>`0x7FFAC12C8047 (1 samples, 0.03%)</title><rect x="32.2215%" y="2949" width="0.0334%" height="15" fill="rgb(206,121,29)" fg:x="966" fg:w="1"/><text x="32.4715%" y="2959.50"></text></g><g><title>`0x7FFAC12C8142 (1 samples, 0.03%)</title><rect x="32.2548%" y="2949" width="0.0334%" height="15" fill="rgb(249,131,53)" fg:x="967" fg:w="1"/><text x="32.5048%" y="2959.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;::push (7 samples, 0.23%)</title><rect x="32.0881%" y="3141" width="0.2335%" height="15" fill="rgb(236,170,29)" fg:x="962" fg:w="7"/><text x="32.3381%" y="3151.50"></text></g><g><title>boggle.exe`alloc::string::impl$6::clone (5 samples, 0.17%)</title><rect x="32.1548%" y="3125" width="0.1668%" height="15" fill="rgb(247,96,15)" fg:x="964" fg:w="5"/><text x="32.4048%" y="3135.50"></text></g><g><title>boggle.exe`alloc::vec::impl$11::clone (3 samples, 0.10%)</title><rect x="32.2215%" y="3109" width="0.1001%" height="15" fill="rgb(211,210,7)" fg:x="966" fg:w="3"/><text x="32.4715%" y="3119.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec_in (3 samples, 0.10%)</title><rect x="32.2215%" y="3093" width="0.1001%" height="15" fill="rgb(240,88,50)" fg:x="966" fg:w="3"/><text x="32.4715%" y="3103.50"></text></g><g><title>boggle.exe`alloc::slice::hack::to_vec (3 samples, 0.10%)</title><rect x="32.2215%" y="3077" width="0.1001%" height="15" fill="rgb(209,229,26)" fg:x="966" fg:w="3"/><text x="32.4715%" y="3087.50"></text></g><g><title>boggle.exe`alloc::slice::hack::impl$1::to_vec (3 samples, 0.10%)</title><rect x="32.2215%" y="3061" width="0.1001%" height="15" fill="rgb(210,68,23)" fg:x="966" fg:w="3"/><text x="32.4715%" y="3071.50"></text></g><g><title>boggle.exe`alloc::vec::Vec::with_capacity_in (3 samples, 0.10%)</title><rect x="32.2215%" y="3045" width="0.1001%" height="15" fill="rgb(229,180,13)" fg:x="966" fg:w="3"/><text x="32.4715%" y="3055.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec::with_capacity_in (3 samples, 0.10%)</title><rect x="32.2215%" y="3029" width="0.1001%" height="15" fill="rgb(236,53,44)" fg:x="966" fg:w="3"/><text x="32.4715%" y="3039.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner::with_capacity_in (3 samples, 0.10%)</title><rect x="32.2215%" y="3013" width="0.1001%" height="15" fill="rgb(244,214,29)" fg:x="966" fg:w="3"/><text x="32.4715%" y="3023.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner::try_allocate_in (3 samples, 0.10%)</title><rect x="32.2215%" y="2997" width="0.1001%" height="15" fill="rgb(220,75,29)" fg:x="966" fg:w="3"/><text x="32.4715%" y="3007.50"></text></g><g><title>`0x7FFAC12C7776 (3 samples, 0.10%)</title><rect x="32.2215%" y="2981" width="0.1001%" height="15" fill="rgb(214,183,37)" fg:x="966" fg:w="3"/><text x="32.4715%" y="2991.50"></text></g><g><title>`0x7FFAC12C78B4 (3 samples, 0.10%)</title><rect x="32.2215%" y="2965" width="0.1001%" height="15" fill="rgb(239,117,29)" fg:x="966" fg:w="3"/><text x="32.4715%" y="2975.50"></text></g><g><title>`0x7FFAC12C814E (1 samples, 0.03%)</title><rect x="32.2882%" y="2949" width="0.0334%" height="15" fill="rgb(237,171,35)" fg:x="968" fg:w="1"/><text x="32.5382%" y="2959.50"></text></g><g><title>boggle.exe`alloc::string::String::pop (153 samples, 5.10%)</title><rect x="27.3849%" y="3205" width="5.1034%" height="15" fill="rgb(229,178,53)" fg:x="821" fg:w="153"/><text x="27.6349%" y="3215.50">boggle..</text></g><g><title>boggle.exe`alloc::string::impl$28::deref (153 samples, 5.10%)</title><rect x="27.3849%" y="3189" width="5.1034%" height="15" fill="rgb(210,102,19)" fg:x="821" fg:w="153"/><text x="27.6349%" y="3199.50">boggle..</text></g><g><title>boggle.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (153 samples, 5.10%)</title><rect x="27.3849%" y="3173" width="5.1034%" height="15" fill="rgb(235,127,22)" fg:x="821" fg:w="153"/><text x="27.6349%" y="3183.50">boggle..</text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::collect_words(boggle::utils::dict_trie::DictTrieNode*, ref$&lt;str$&gt;, alloc::vec::Vec (153 samples, 5.10%)</title><rect x="27.3849%" y="3157" width="5.1034%" height="15" fill="rgb(244,31,31)" fg:x="821" fg:w="153"/><text x="27.6349%" y="3167.50">boggle..</text></g><g><title>boggle.exe`std::collections::hash::map::impl$36::into_iter(std::collections::hash::map::HashMap (5 samples, 0.17%)</title><rect x="32.3215%" y="3141" width="0.1668%" height="15" fill="rgb(231,43,21)" fg:x="969" fg:w="5"/><text x="32.5715%" y="3151.50"></text></g><g><title>boggle.exe`std::collections::hash::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;::iter (5 samples, 0.17%)</title><rect x="32.3215%" y="3125" width="0.1668%" height="15" fill="rgb(217,131,35)" fg:x="969" fg:w="5"/><text x="32.5715%" y="3135.50"></text></g><g><title>boggle.exe`hashbrown::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt;::iter (5 samples, 0.17%)</title><rect x="32.3215%" y="3109" width="0.1668%" height="15" fill="rgb(221,149,4)" fg:x="969" fg:w="5"/><text x="32.5715%" y="3119.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTable&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;::iter (5 samples, 0.17%)</title><rect x="32.3215%" y="3093" width="0.1668%" height="15" fill="rgb(232,170,28)" fg:x="969" fg:w="5"/><text x="32.5715%" y="3103.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::iter (5 samples, 0.17%)</title><rect x="32.3215%" y="3077" width="0.1668%" height="15" fill="rgb(238,56,10)" fg:x="969" fg:w="5"/><text x="32.5715%" y="3087.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawIterRange&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::new(unsigned char*, hashbrown::raw::Bucket&lt;tuple$ (5 samples, 0.17%)</title><rect x="32.3215%" y="3061" width="0.1668%" height="15" fill="rgb(235,196,14)" fg:x="969" fg:w="5"/><text x="32.5715%" y="3071.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::load_aligned (5 samples, 0.17%)</title><rect x="32.3215%" y="3045" width="0.1668%" height="15" fill="rgb(216,45,48)" fg:x="969" fg:w="5"/><text x="32.5715%" y="3055.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::match_empty_or_deleted (5 samples, 0.17%)</title><rect x="32.3215%" y="3029" width="0.1668%" height="15" fill="rgb(238,213,17)" fg:x="969" fg:w="5"/><text x="32.5715%" y="3039.50"></text></g><g><title>boggle.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (5 samples, 0.17%)</title><rect x="32.3215%" y="3013" width="0.1668%" height="15" fill="rgb(212,13,2)" fg:x="969" fg:w="5"/><text x="32.5715%" y="3023.50"></text></g><g><title>`0x7FFAC12D5477 (1 samples, 0.03%)</title><rect x="32.5217%" y="2965" width="0.0334%" height="15" fill="rgb(240,114,20)" fg:x="975" fg:w="1"/><text x="32.7717%" y="2975.50"></text></g><g><title>`0x7FFAC12C77D0 (1 samples, 0.03%)</title><rect x="32.5550%" y="2917" width="0.0334%" height="15" fill="rgb(228,41,40)" fg:x="976" fg:w="1"/><text x="32.8050%" y="2927.50"></text></g><g><title>`0x7FFAC12C785E (1 samples, 0.03%)</title><rect x="32.5884%" y="2917" width="0.0334%" height="15" fill="rgb(244,132,35)" fg:x="977" fg:w="1"/><text x="32.8384%" y="2927.50"></text></g><g><title>`0x7FFAC12C8047 (3 samples, 0.10%)</title><rect x="32.6217%" y="2901" width="0.1001%" height="15" fill="rgb(253,189,4)" fg:x="978" fg:w="3"/><text x="32.8717%" y="2911.50"></text></g><g><title>`0x7FFAC12C85E5 (1 samples, 0.03%)</title><rect x="32.7218%" y="2901" width="0.0334%" height="15" fill="rgb(224,37,19)" fg:x="981" fg:w="1"/><text x="32.9718%" y="2911.50"></text></g><g><title>`0x7FFAC12D5DAA (7 samples, 0.23%)</title><rect x="32.5550%" y="2949" width="0.2335%" height="15" fill="rgb(235,223,18)" fg:x="976" fg:w="7"/><text x="32.8050%" y="2959.50"></text></g><g><title>`0x7FFAC12C7776 (7 samples, 0.23%)</title><rect x="32.5550%" y="2933" width="0.2335%" height="15" fill="rgb(235,163,25)" fg:x="976" fg:w="7"/><text x="32.8050%" y="2943.50"></text></g><g><title>`0x7FFAC12C78B4 (5 samples, 0.17%)</title><rect x="32.6217%" y="2917" width="0.1668%" height="15" fill="rgb(217,145,28)" fg:x="978" fg:w="5"/><text x="32.8717%" y="2927.50"></text></g><g><title>`0x7FFAC12C8CE9 (1 samples, 0.03%)</title><rect x="32.7552%" y="2901" width="0.0334%" height="15" fill="rgb(223,223,32)" fg:x="982" fg:w="1"/><text x="33.0052%" y="2911.50"></text></g><g><title>`0x7FFAC12C7776 (1 samples, 0.03%)</title><rect x="32.7552%" y="2885" width="0.0334%" height="15" fill="rgb(227,189,39)" fg:x="982" fg:w="1"/><text x="33.0052%" y="2895.50"></text></g><g><title>`0x7FFAC12C7AFE (1 samples, 0.03%)</title><rect x="32.7552%" y="2869" width="0.0334%" height="15" fill="rgb(248,10,22)" fg:x="982" fg:w="1"/><text x="33.0052%" y="2879.50"></text></g><g><title>`0x7FFAC12AF9E2 (1 samples, 0.03%)</title><rect x="32.7552%" y="2853" width="0.0334%" height="15" fill="rgb(248,46,39)" fg:x="982" fg:w="1"/><text x="33.0052%" y="2863.50"></text></g><g><title>`0x7FFAC12D5DB2 (1 samples, 0.03%)</title><rect x="32.7885%" y="2949" width="0.0334%" height="15" fill="rgb(248,113,48)" fg:x="983" fg:w="1"/><text x="33.0385%" y="2959.50"></text></g><g><title>`0x7FFAC12D230F (1 samples, 0.03%)</title><rect x="32.8219%" y="2933" width="0.0334%" height="15" fill="rgb(245,16,25)" fg:x="984" fg:w="1"/><text x="33.0719%" y="2943.50"></text></g><g><title>`0x7FFAC12D23A2 (1 samples, 0.03%)</title><rect x="32.8552%" y="2933" width="0.0334%" height="15" fill="rgb(249,152,16)" fg:x="985" fg:w="1"/><text x="33.1052%" y="2943.50"></text></g><g><title>`0x7FFAC12D23A7 (1 samples, 0.03%)</title><rect x="32.8886%" y="2933" width="0.0334%" height="15" fill="rgb(250,16,1)" fg:x="986" fg:w="1"/><text x="33.1386%" y="2943.50"></text></g><g><title>`0x7FFAC12D5E0B (4 samples, 0.13%)</title><rect x="32.8219%" y="2949" width="0.1334%" height="15" fill="rgb(249,138,3)" fg:x="984" fg:w="4"/><text x="33.0719%" y="2959.50"></text></g><g><title>`0x7FFAC12D23DD (1 samples, 0.03%)</title><rect x="32.9219%" y="2933" width="0.0334%" height="15" fill="rgb(227,71,41)" fg:x="987" fg:w="1"/><text x="33.1719%" y="2943.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::push (16 samples, 0.53%)</title><rect x="32.4883%" y="3189" width="0.5337%" height="15" fill="rgb(209,184,23)" fg:x="974" fg:w="16"/><text x="32.7383%" y="3199.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_mut_ptr (16 samples, 0.53%)</title><rect x="32.4883%" y="3173" width="0.5337%" height="15" fill="rgb(223,215,31)" fg:x="974" fg:w="16"/><text x="32.7383%" y="3183.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::ptr (16 samples, 0.53%)</title><rect x="32.4883%" y="3157" width="0.5337%" height="15" fill="rgb(210,146,28)" fg:x="974" fg:w="16"/><text x="32.7383%" y="3167.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (16 samples, 0.53%)</title><rect x="32.4883%" y="3141" width="0.5337%" height="15" fill="rgb(209,183,41)" fg:x="974" fg:w="16"/><text x="32.7383%" y="3151.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (16 samples, 0.53%)</title><rect x="32.4883%" y="3125" width="0.5337%" height="15" fill="rgb(209,224,45)" fg:x="974" fg:w="16"/><text x="32.7383%" y="3135.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::grow_one&lt;u8,alloc::alloc::Global&gt; (16 samples, 0.53%)</title><rect x="32.4883%" y="3109" width="0.5337%" height="15" fill="rgb(224,209,51)" fg:x="974" fg:w="16"/><text x="32.7383%" y="3119.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_one (15 samples, 0.50%)</title><rect x="32.5217%" y="3093" width="0.5003%" height="15" fill="rgb(223,17,39)" fg:x="975" fg:w="15"/><text x="32.7717%" y="3103.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (15 samples, 0.50%)</title><rect x="32.5217%" y="3077" width="0.5003%" height="15" fill="rgb(234,204,37)" fg:x="975" fg:w="15"/><text x="32.7717%" y="3087.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (15 samples, 0.50%)</title><rect x="32.5217%" y="3061" width="0.5003%" height="15" fill="rgb(236,120,5)" fg:x="975" fg:w="15"/><text x="32.7717%" y="3071.50"></text></g><g><title>boggle.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (15 samples, 0.50%)</title><rect x="32.5217%" y="3045" width="0.5003%" height="15" fill="rgb(248,97,27)" fg:x="975" fg:w="15"/><text x="32.7717%" y="3055.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (15 samples, 0.50%)</title><rect x="32.5217%" y="3029" width="0.5003%" height="15" fill="rgb(240,66,17)" fg:x="975" fg:w="15"/><text x="32.7717%" y="3039.50"></text></g><g><title>boggle.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (15 samples, 0.50%)</title><rect x="32.5217%" y="3013" width="0.5003%" height="15" fill="rgb(210,79,3)" fg:x="975" fg:w="15"/><text x="32.7717%" y="3023.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (15 samples, 0.50%)</title><rect x="32.5217%" y="2997" width="0.5003%" height="15" fill="rgb(214,176,27)" fg:x="975" fg:w="15"/><text x="32.7717%" y="3007.50"></text></g><g><title>`0x7FFAC12D5376 (15 samples, 0.50%)</title><rect x="32.5217%" y="2981" width="0.5003%" height="15" fill="rgb(235,185,3)" fg:x="975" fg:w="15"/><text x="32.7717%" y="2991.50"></text></g><g><title>`0x7FFAC12D54B5 (14 samples, 0.47%)</title><rect x="32.5550%" y="2965" width="0.4670%" height="15" fill="rgb(227,24,12)" fg:x="976" fg:w="14"/><text x="32.8050%" y="2975.50"></text></g><g><title>`0x7FFAC12D6C14 (2 samples, 0.07%)</title><rect x="32.9553%" y="2949" width="0.0667%" height="15" fill="rgb(252,169,48)" fg:x="988" fg:w="2"/><text x="33.2053%" y="2959.50"></text></g><g><title>boggle.exe`alloc::string::String::push (18 samples, 0.60%)</title><rect x="32.4883%" y="3205" width="0.6004%" height="15" fill="rgb(212,65,1)" fg:x="974" fg:w="18"/><text x="32.7383%" y="3215.50"></text></g><g><title>boggle.exe`core::char::methods::impl$0::len_utf8 (2 samples, 0.07%)</title><rect x="33.0220%" y="3189" width="0.0667%" height="15" fill="rgb(242,39,24)" fg:x="990" fg:w="2"/><text x="33.2720%" y="3199.50"></text></g><g><title>boggle.exe`core::char::methods::len_utf8 (2 samples, 0.07%)</title><rect x="33.0220%" y="3173" width="0.0667%" height="15" fill="rgb(249,32,23)" fg:x="990" fg:w="2"/><text x="33.2720%" y="3183.50"></text></g><g><title>`0x7FFAC12C7F7D (1 samples, 0.03%)</title><rect x="33.0887%" y="2981" width="0.0334%" height="15" fill="rgb(251,195,23)" fg:x="992" fg:w="1"/><text x="33.3387%" y="2991.50"></text></g><g><title>`0x7FFAC12C7FF3 (1 samples, 0.03%)</title><rect x="33.1221%" y="2981" width="0.0334%" height="15" fill="rgb(236,174,8)" fg:x="993" fg:w="1"/><text x="33.3721%" y="2991.50"></text></g><g><title>`0x7FFAC12C809C (1 samples, 0.03%)</title><rect x="33.1554%" y="2981" width="0.0334%" height="15" fill="rgb(220,197,8)" fg:x="994" fg:w="1"/><text x="33.4054%" y="2991.50"></text></g><g><title>`0x7FFAC12C818A (1 samples, 0.03%)</title><rect x="33.1888%" y="2981" width="0.0334%" height="15" fill="rgb(240,108,37)" fg:x="995" fg:w="1"/><text x="33.4388%" y="2991.50"></text></g><g><title>`0x7FFAC12C8197 (1 samples, 0.03%)</title><rect x="33.2221%" y="2981" width="0.0334%" height="15" fill="rgb(232,176,24)" fg:x="996" fg:w="1"/><text x="33.4721%" y="2991.50"></text></g><g><title>boggle.exe`alloc::string::impl$102::to_string(ref$ (6 samples, 0.20%)</title><rect x="33.0887%" y="3205" width="0.2001%" height="15" fill="rgb(243,35,29)" fg:x="992" fg:w="6"/><text x="33.3387%" y="3215.50"></text></g><g><title>boggle.exe`alloc::string::impl$44::from(ref$ (6 samples, 0.20%)</title><rect x="33.0887%" y="3189" width="0.2001%" height="15" fill="rgb(210,37,18)" fg:x="992" fg:w="6"/><text x="33.3387%" y="3199.50"></text></g><g><title>boggle.exe`alloc::str::impl$4::to_owned(ref$ (6 samples, 0.20%)</title><rect x="33.0887%" y="3173" width="0.2001%" height="15" fill="rgb(224,184,40)" fg:x="992" fg:w="6"/><text x="33.3387%" y="3183.50"></text></g><g><title>boggle.exe`alloc::slice::impl$9::to_owned(ref$&lt;slice2$ (6 samples, 0.20%)</title><rect x="33.0887%" y="3157" width="0.2001%" height="15" fill="rgb(236,39,29)" fg:x="992" fg:w="6"/><text x="33.3387%" y="3167.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec(ref$&lt;slice2$ (6 samples, 0.20%)</title><rect x="33.0887%" y="3141" width="0.2001%" height="15" fill="rgb(232,48,39)" fg:x="992" fg:w="6"/><text x="33.3387%" y="3151.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec_in(ref$&lt;slice2$ (6 samples, 0.20%)</title><rect x="33.0887%" y="3125" width="0.2001%" height="15" fill="rgb(236,34,42)" fg:x="992" fg:w="6"/><text x="33.3387%" y="3135.50"></text></g><g><title>boggle.exe`alloc::slice::hack::to_vec(ref$&lt;slice2$ (6 samples, 0.20%)</title><rect x="33.0887%" y="3109" width="0.2001%" height="15" fill="rgb(243,106,37)" fg:x="992" fg:w="6"/><text x="33.3387%" y="3119.50"></text></g><g><title>boggle.exe`alloc::slice::hack::impl$1::to_vec(ref$&lt;slice2$ (6 samples, 0.20%)</title><rect x="33.0887%" y="3093" width="0.2001%" height="15" fill="rgb(218,96,6)" fg:x="992" fg:w="6"/><text x="33.3387%" y="3103.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (6 samples, 0.20%)</title><rect x="33.0887%" y="3077" width="0.2001%" height="15" fill="rgb(235,130,12)" fg:x="992" fg:w="6"/><text x="33.3387%" y="3087.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (6 samples, 0.20%)</title><rect x="33.0887%" y="3061" width="0.2001%" height="15" fill="rgb(231,95,0)" fg:x="992" fg:w="6"/><text x="33.3387%" y="3071.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (6 samples, 0.20%)</title><rect x="33.0887%" y="3045" width="0.2001%" height="15" fill="rgb(228,12,23)" fg:x="992" fg:w="6"/><text x="33.3387%" y="3055.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (6 samples, 0.20%)</title><rect x="33.0887%" y="3029" width="0.2001%" height="15" fill="rgb(216,12,1)" fg:x="992" fg:w="6"/><text x="33.3387%" y="3039.50"></text></g><g><title>`0x7FFAC12C7776 (6 samples, 0.20%)</title><rect x="33.0887%" y="3013" width="0.2001%" height="15" fill="rgb(219,59,3)" fg:x="992" fg:w="6"/><text x="33.3387%" y="3023.50"></text></g><g><title>`0x7FFAC12C78B4 (6 samples, 0.20%)</title><rect x="33.0887%" y="2997" width="0.2001%" height="15" fill="rgb(215,208,46)" fg:x="992" fg:w="6"/><text x="33.3387%" y="3007.50"></text></g><g><title>`0x7FFAC12C8602 (1 samples, 0.03%)</title><rect x="33.2555%" y="2981" width="0.0334%" height="15" fill="rgb(254,224,29)" fg:x="997" fg:w="1"/><text x="33.5055%" y="2991.50"></text></g><g><title>`0x7FFAC12C780A (1 samples, 0.03%)</title><rect x="33.2889%" y="3029" width="0.0334%" height="15" fill="rgb(232,14,29)" fg:x="998" fg:w="1"/><text x="33.5389%" y="3039.50"></text></g><g><title>`0x7FFAC12C7EB5 (1 samples, 0.03%)</title><rect x="33.3222%" y="3013" width="0.0334%" height="15" fill="rgb(208,45,52)" fg:x="999" fg:w="1"/><text x="33.5722%" y="3023.50"></text></g><g><title>`0x7FFAC12C8047 (1 samples, 0.03%)</title><rect x="33.3556%" y="3013" width="0.0334%" height="15" fill="rgb(234,191,28)" fg:x="1000" fg:w="1"/><text x="33.6056%" y="3023.50"></text></g><g><title>`0x7FFAC12C7776 (4 samples, 0.13%)</title><rect x="33.2889%" y="3045" width="0.1334%" height="15" fill="rgb(244,67,43)" fg:x="998" fg:w="4"/><text x="33.5389%" y="3055.50"></text></g><g><title>`0x7FFAC12C78B4 (3 samples, 0.10%)</title><rect x="33.3222%" y="3029" width="0.1001%" height="15" fill="rgb(236,189,24)" fg:x="999" fg:w="3"/><text x="33.5722%" y="3039.50"></text></g><g><title>`0x7FFAC12C818E (1 samples, 0.03%)</title><rect x="33.3889%" y="3013" width="0.0334%" height="15" fill="rgb(239,214,33)" fg:x="1001" fg:w="1"/><text x="33.6389%" y="3023.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;::push (5 samples, 0.17%)</title><rect x="33.2889%" y="3205" width="0.1668%" height="15" fill="rgb(226,176,41)" fg:x="998" fg:w="5"/><text x="33.5389%" y="3215.50"></text></g><g><title>boggle.exe`alloc::string::impl$6::clone (5 samples, 0.17%)</title><rect x="33.2889%" y="3189" width="0.1668%" height="15" fill="rgb(248,47,8)" fg:x="998" fg:w="5"/><text x="33.5389%" y="3199.50"></text></g><g><title>boggle.exe`alloc::vec::impl$11::clone (5 samples, 0.17%)</title><rect x="33.2889%" y="3173" width="0.1668%" height="15" fill="rgb(218,81,44)" fg:x="998" fg:w="5"/><text x="33.5389%" y="3183.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec_in (5 samples, 0.17%)</title><rect x="33.2889%" y="3157" width="0.1668%" height="15" fill="rgb(213,98,6)" fg:x="998" fg:w="5"/><text x="33.5389%" y="3167.50"></text></g><g><title>boggle.exe`alloc::slice::hack::to_vec (5 samples, 0.17%)</title><rect x="33.2889%" y="3141" width="0.1668%" height="15" fill="rgb(222,85,22)" fg:x="998" fg:w="5"/><text x="33.5389%" y="3151.50"></text></g><g><title>boggle.exe`alloc::slice::hack::impl$1::to_vec (5 samples, 0.17%)</title><rect x="33.2889%" y="3125" width="0.1668%" height="15" fill="rgb(239,46,39)" fg:x="998" fg:w="5"/><text x="33.5389%" y="3135.50"></text></g><g><title>boggle.exe`alloc::vec::Vec::with_capacity_in (5 samples, 0.17%)</title><rect x="33.2889%" y="3109" width="0.1668%" height="15" fill="rgb(237,12,29)" fg:x="998" fg:w="5"/><text x="33.5389%" y="3119.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec::with_capacity_in (5 samples, 0.17%)</title><rect x="33.2889%" y="3093" width="0.1668%" height="15" fill="rgb(214,77,8)" fg:x="998" fg:w="5"/><text x="33.5389%" y="3103.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner::with_capacity_in (5 samples, 0.17%)</title><rect x="33.2889%" y="3077" width="0.1668%" height="15" fill="rgb(217,168,37)" fg:x="998" fg:w="5"/><text x="33.5389%" y="3087.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner::try_allocate_in (5 samples, 0.17%)</title><rect x="33.2889%" y="3061" width="0.1668%" height="15" fill="rgb(221,217,23)" fg:x="998" fg:w="5"/><text x="33.5389%" y="3071.50"></text></g><g><title>boggle.exe`__rust_alloc (1 samples, 0.03%)</title><rect x="33.4223%" y="3045" width="0.0334%" height="15" fill="rgb(243,229,36)" fg:x="1002" fg:w="1"/><text x="33.6723%" y="3055.50"></text></g><g><title>boggle.exe`alloc::string::String::pop (198 samples, 6.60%)</title><rect x="27.1514%" y="3269" width="6.6044%" height="15" fill="rgb(251,163,40)" fg:x="814" fg:w="198"/><text x="27.4014%" y="3279.50">boggle.ex..</text></g><g><title>boggle.exe`alloc::string::impl$28::deref (198 samples, 6.60%)</title><rect x="27.1514%" y="3253" width="6.6044%" height="15" fill="rgb(237,222,12)" fg:x="814" fg:w="198"/><text x="27.4014%" y="3263.50">boggle.ex..</text></g><g><title>boggle.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (198 samples, 6.60%)</title><rect x="27.1514%" y="3237" width="6.6044%" height="15" fill="rgb(248,132,6)" fg:x="814" fg:w="198"/><text x="27.4014%" y="3247.50">boggle.ex..</text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::collect_words(boggle::utils::dict_trie::DictTrieNode*, ref$&lt;str$&gt;, alloc::vec::Vec (198 samples, 6.60%)</title><rect x="27.1514%" y="3221" width="6.6044%" height="15" fill="rgb(227,167,50)" fg:x="814" fg:w="198"/><text x="27.4014%" y="3231.50">boggle.ex..</text></g><g><title>boggle.exe`std::collections::hash::map::impl$36::into_iter(std::collections::hash::map::HashMap (9 samples, 0.30%)</title><rect x="33.4556%" y="3205" width="0.3002%" height="15" fill="rgb(242,84,37)" fg:x="1003" fg:w="9"/><text x="33.7056%" y="3215.50"></text></g><g><title>boggle.exe`std::collections::hash::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;::iter (9 samples, 0.30%)</title><rect x="33.4556%" y="3189" width="0.3002%" height="15" fill="rgb(212,4,50)" fg:x="1003" fg:w="9"/><text x="33.7056%" y="3199.50"></text></g><g><title>boggle.exe`hashbrown::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt;::iter (9 samples, 0.30%)</title><rect x="33.4556%" y="3173" width="0.3002%" height="15" fill="rgb(230,228,32)" fg:x="1003" fg:w="9"/><text x="33.7056%" y="3183.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTable&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;::iter (9 samples, 0.30%)</title><rect x="33.4556%" y="3157" width="0.3002%" height="15" fill="rgb(248,217,23)" fg:x="1003" fg:w="9"/><text x="33.7056%" y="3167.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::iter (9 samples, 0.30%)</title><rect x="33.4556%" y="3141" width="0.3002%" height="15" fill="rgb(238,197,32)" fg:x="1003" fg:w="9"/><text x="33.7056%" y="3151.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawIterRange&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::new(unsigned char*, hashbrown::raw::Bucket&lt;tuple$ (9 samples, 0.30%)</title><rect x="33.4556%" y="3125" width="0.3002%" height="15" fill="rgb(236,106,1)" fg:x="1003" fg:w="9"/><text x="33.7056%" y="3135.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::load_aligned (9 samples, 0.30%)</title><rect x="33.4556%" y="3109" width="0.3002%" height="15" fill="rgb(219,228,13)" fg:x="1003" fg:w="9"/><text x="33.7056%" y="3119.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::match_empty_or_deleted (9 samples, 0.30%)</title><rect x="33.4556%" y="3093" width="0.3002%" height="15" fill="rgb(238,30,35)" fg:x="1003" fg:w="9"/><text x="33.7056%" y="3103.50"></text></g><g><title>boggle.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (8 samples, 0.27%)</title><rect x="33.4890%" y="3077" width="0.2668%" height="15" fill="rgb(236,70,23)" fg:x="1004" fg:w="8"/><text x="33.7390%" y="3087.50"></text></g><g><title>`0x7FFAC12D541C (1 samples, 0.03%)</title><rect x="33.7558%" y="3029" width="0.0334%" height="15" fill="rgb(249,104,48)" fg:x="1012" fg:w="1"/><text x="34.0058%" y="3039.50"></text></g><g><title>`0x7FFAC12D54A1 (1 samples, 0.03%)</title><rect x="33.7892%" y="3029" width="0.0334%" height="15" fill="rgb(254,117,50)" fg:x="1013" fg:w="1"/><text x="34.0392%" y="3039.50"></text></g><g><title>`0x7FFAC12D5C80 (1 samples, 0.03%)</title><rect x="33.8225%" y="3013" width="0.0334%" height="15" fill="rgb(223,152,4)" fg:x="1014" fg:w="1"/><text x="34.0725%" y="3023.50"></text></g><g><title>`0x7FFAC12C78AB (1 samples, 0.03%)</title><rect x="33.8559%" y="2981" width="0.0334%" height="15" fill="rgb(245,6,2)" fg:x="1015" fg:w="1"/><text x="34.1059%" y="2991.50"></text></g><g><title>`0x7FFAC12C803A (2 samples, 0.07%)</title><rect x="33.8893%" y="2965" width="0.0667%" height="15" fill="rgb(249,150,24)" fg:x="1016" fg:w="2"/><text x="34.1393%" y="2975.50"></text></g><g><title>`0x7FFAC12C8047 (5 samples, 0.17%)</title><rect x="33.9560%" y="2965" width="0.1668%" height="15" fill="rgb(228,185,42)" fg:x="1018" fg:w="5"/><text x="34.2060%" y="2975.50"></text></g><g><title>`0x7FFAC12C8109 (1 samples, 0.03%)</title><rect x="34.1227%" y="2965" width="0.0334%" height="15" fill="rgb(226,39,33)" fg:x="1023" fg:w="1"/><text x="34.3727%" y="2975.50"></text></g><g><title>`0x7FFAC12D5DAA (10 samples, 0.33%)</title><rect x="33.8559%" y="3013" width="0.3336%" height="15" fill="rgb(221,166,19)" fg:x="1015" fg:w="10"/><text x="34.1059%" y="3023.50"></text></g><g><title>`0x7FFAC12C7776 (10 samples, 0.33%)</title><rect x="33.8559%" y="2997" width="0.3336%" height="15" fill="rgb(209,109,2)" fg:x="1015" fg:w="10"/><text x="34.1059%" y="3007.50"></text></g><g><title>`0x7FFAC12C78B4 (9 samples, 0.30%)</title><rect x="33.8893%" y="2981" width="0.3002%" height="15" fill="rgb(252,216,26)" fg:x="1016" fg:w="9"/><text x="34.1393%" y="2991.50"></text></g><g><title>`0x7FFAC12C8165 (1 samples, 0.03%)</title><rect x="34.1561%" y="2965" width="0.0334%" height="15" fill="rgb(227,173,36)" fg:x="1024" fg:w="1"/><text x="34.4061%" y="2975.50"></text></g><g><title>`0x7FFAC12D230C (1 samples, 0.03%)</title><rect x="34.1895%" y="2997" width="0.0334%" height="15" fill="rgb(209,90,7)" fg:x="1025" fg:w="1"/><text x="34.4395%" y="3007.50"></text></g><g><title>`0x7FFAC12D5E0B (3 samples, 0.10%)</title><rect x="34.1895%" y="3013" width="0.1001%" height="15" fill="rgb(250,194,11)" fg:x="1025" fg:w="3"/><text x="34.4395%" y="3023.50"></text></g><g><title>`0x7FFAC12D23A7 (2 samples, 0.07%)</title><rect x="34.2228%" y="2997" width="0.0667%" height="15" fill="rgb(220,72,50)" fg:x="1026" fg:w="2"/><text x="34.4728%" y="3007.50"></text></g><g><title>`0x7FFAC12D5376 (17 samples, 0.57%)</title><rect x="33.7558%" y="3045" width="0.5670%" height="15" fill="rgb(222,106,48)" fg:x="1012" fg:w="17"/><text x="34.0058%" y="3055.50"></text></g><g><title>`0x7FFAC12D54B5 (15 samples, 0.50%)</title><rect x="33.8225%" y="3029" width="0.5003%" height="15" fill="rgb(216,220,45)" fg:x="1014" fg:w="15"/><text x="34.0725%" y="3039.50"></text></g><g><title>`0x7FFAC12D5E32 (1 samples, 0.03%)</title><rect x="34.2895%" y="3013" width="0.0334%" height="15" fill="rgb(234,112,18)" fg:x="1028" fg:w="1"/><text x="34.5395%" y="3023.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::push (18 samples, 0.60%)</title><rect x="33.7558%" y="3253" width="0.6004%" height="15" fill="rgb(206,179,9)" fg:x="1012" fg:w="18"/><text x="34.0058%" y="3263.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_mut_ptr (18 samples, 0.60%)</title><rect x="33.7558%" y="3237" width="0.6004%" height="15" fill="rgb(215,115,40)" fg:x="1012" fg:w="18"/><text x="34.0058%" y="3247.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::ptr (18 samples, 0.60%)</title><rect x="33.7558%" y="3221" width="0.6004%" height="15" fill="rgb(222,69,34)" fg:x="1012" fg:w="18"/><text x="34.0058%" y="3231.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (18 samples, 0.60%)</title><rect x="33.7558%" y="3205" width="0.6004%" height="15" fill="rgb(209,161,10)" fg:x="1012" fg:w="18"/><text x="34.0058%" y="3215.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (18 samples, 0.60%)</title><rect x="33.7558%" y="3189" width="0.6004%" height="15" fill="rgb(217,6,38)" fg:x="1012" fg:w="18"/><text x="34.0058%" y="3199.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::grow_one&lt;u8,alloc::alloc::Global&gt; (18 samples, 0.60%)</title><rect x="33.7558%" y="3173" width="0.6004%" height="15" fill="rgb(229,229,48)" fg:x="1012" fg:w="18"/><text x="34.0058%" y="3183.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_one (18 samples, 0.60%)</title><rect x="33.7558%" y="3157" width="0.6004%" height="15" fill="rgb(225,21,28)" fg:x="1012" fg:w="18"/><text x="34.0058%" y="3167.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (18 samples, 0.60%)</title><rect x="33.7558%" y="3141" width="0.6004%" height="15" fill="rgb(206,33,13)" fg:x="1012" fg:w="18"/><text x="34.0058%" y="3151.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (18 samples, 0.60%)</title><rect x="33.7558%" y="3125" width="0.6004%" height="15" fill="rgb(242,178,17)" fg:x="1012" fg:w="18"/><text x="34.0058%" y="3135.50"></text></g><g><title>boggle.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (18 samples, 0.60%)</title><rect x="33.7558%" y="3109" width="0.6004%" height="15" fill="rgb(220,162,5)" fg:x="1012" fg:w="18"/><text x="34.0058%" y="3119.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (18 samples, 0.60%)</title><rect x="33.7558%" y="3093" width="0.6004%" height="15" fill="rgb(210,33,43)" fg:x="1012" fg:w="18"/><text x="34.0058%" y="3103.50"></text></g><g><title>boggle.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (18 samples, 0.60%)</title><rect x="33.7558%" y="3077" width="0.6004%" height="15" fill="rgb(216,116,54)" fg:x="1012" fg:w="18"/><text x="34.0058%" y="3087.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (18 samples, 0.60%)</title><rect x="33.7558%" y="3061" width="0.6004%" height="15" fill="rgb(249,92,24)" fg:x="1012" fg:w="18"/><text x="34.0058%" y="3071.50"></text></g><g><title>boggle.exe`std::alloc::__default_lib_allocator::__rdl_realloc (1 samples, 0.03%)</title><rect x="34.3229%" y="3045" width="0.0334%" height="15" fill="rgb(231,189,14)" fg:x="1029" fg:w="1"/><text x="34.5729%" y="3055.50"></text></g><g><title>boggle.exe`std::sys::alloc::windows::impl$0::realloc (1 samples, 0.03%)</title><rect x="34.3229%" y="3029" width="0.0334%" height="15" fill="rgb(230,8,41)" fg:x="1029" fg:w="1"/><text x="34.5729%" y="3039.50"></text></g><g><title>boggle.exe`alloc::string::String::push (28 samples, 0.93%)</title><rect x="33.7558%" y="3269" width="0.9340%" height="15" fill="rgb(249,7,27)" fg:x="1012" fg:w="28"/><text x="34.0058%" y="3279.50"></text></g><g><title>boggle.exe`core::char::methods::impl$0::len_utf8 (10 samples, 0.33%)</title><rect x="34.3562%" y="3253" width="0.3336%" height="15" fill="rgb(232,86,5)" fg:x="1030" fg:w="10"/><text x="34.6062%" y="3263.50"></text></g><g><title>boggle.exe`core::char::methods::len_utf8 (10 samples, 0.33%)</title><rect x="34.3562%" y="3237" width="0.3336%" height="15" fill="rgb(224,175,18)" fg:x="1030" fg:w="10"/><text x="34.6062%" y="3247.50"></text></g><g><title>`0x7FFAB8910350 (1 samples, 0.03%)</title><rect x="34.6898%" y="3205" width="0.0334%" height="15" fill="rgb(220,129,12)" fg:x="1040" fg:w="1"/><text x="34.9398%" y="3215.50"></text></g><g><title>`0x7FFAC12C782F (1 samples, 0.03%)</title><rect x="34.7231%" y="3061" width="0.0334%" height="15" fill="rgb(210,19,36)" fg:x="1041" fg:w="1"/><text x="34.9731%" y="3071.50"></text></g><g><title>`0x7FFAC12C7896 (1 samples, 0.03%)</title><rect x="34.7565%" y="3061" width="0.0334%" height="15" fill="rgb(219,96,14)" fg:x="1042" fg:w="1"/><text x="35.0065%" y="3071.50"></text></g><g><title>`0x7FFAC12C7FF0 (1 samples, 0.03%)</title><rect x="34.7899%" y="3045" width="0.0334%" height="15" fill="rgb(249,106,1)" fg:x="1043" fg:w="1"/><text x="35.0399%" y="3055.50"></text></g><g><title>`0x7FFAC12C803A (1 samples, 0.03%)</title><rect x="34.8232%" y="3045" width="0.0334%" height="15" fill="rgb(249,155,20)" fg:x="1044" fg:w="1"/><text x="35.0732%" y="3055.50"></text></g><g><title>`0x7FFAC12C8047 (4 samples, 0.13%)</title><rect x="34.8566%" y="3045" width="0.1334%" height="15" fill="rgb(244,168,9)" fg:x="1045" fg:w="4"/><text x="35.1066%" y="3055.50"></text></g><g><title>`0x7FFAC12C8060 (1 samples, 0.03%)</title><rect x="34.9900%" y="3045" width="0.0334%" height="15" fill="rgb(216,23,50)" fg:x="1049" fg:w="1"/><text x="35.2400%" y="3055.50"></text></g><g><title>`0x7FFAC12C8134 (1 samples, 0.03%)</title><rect x="35.0233%" y="3045" width="0.0334%" height="15" fill="rgb(224,219,20)" fg:x="1050" fg:w="1"/><text x="35.2733%" y="3055.50"></text></g><g><title>`0x7FFAC12C8165 (1 samples, 0.03%)</title><rect x="35.0567%" y="3045" width="0.0334%" height="15" fill="rgb(222,156,15)" fg:x="1051" fg:w="1"/><text x="35.3067%" y="3055.50"></text></g><g><title>`0x7FFAC12C78B4 (10 samples, 0.33%)</title><rect x="34.7899%" y="3061" width="0.3336%" height="15" fill="rgb(231,97,17)" fg:x="1043" fg:w="10"/><text x="35.0399%" y="3071.50"></text></g><g><title>`0x7FFAC12C818E (1 samples, 0.03%)</title><rect x="35.0901%" y="3045" width="0.0334%" height="15" fill="rgb(218,70,48)" fg:x="1052" fg:w="1"/><text x="35.3401%" y="3055.50"></text></g><g><title>`0x7FFAC12C7776 (13 samples, 0.43%)</title><rect x="34.7231%" y="3077" width="0.4336%" height="15" fill="rgb(212,196,52)" fg:x="1041" fg:w="13"/><text x="34.9731%" y="3087.50"></text></g><g><title>`0x7FFAC12C796B (1 samples, 0.03%)</title><rect x="35.1234%" y="3061" width="0.0334%" height="15" fill="rgb(243,203,18)" fg:x="1053" fg:w="1"/><text x="35.3734%" y="3071.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::allocate (1 samples, 0.03%)</title><rect x="35.1568%" y="3077" width="0.0334%" height="15" fill="rgb(252,125,41)" fg:x="1054" fg:w="1"/><text x="35.4068%" y="3087.50"></text></g><g><title>boggle.exe`alloc::alloc::Global::alloc_impl (1 samples, 0.03%)</title><rect x="35.1568%" y="3061" width="0.0334%" height="15" fill="rgb(223,180,33)" fg:x="1054" fg:w="1"/><text x="35.4068%" y="3071.50"></text></g><g><title>boggle.exe`alloc::alloc::alloc (1 samples, 0.03%)</title><rect x="35.1568%" y="3045" width="0.0334%" height="15" fill="rgb(254,159,46)" fg:x="1054" fg:w="1"/><text x="35.4068%" y="3055.50"></text></g><g><title>boggle.exe`core::ptr::read_volatile (1 samples, 0.03%)</title><rect x="35.1568%" y="3029" width="0.0334%" height="15" fill="rgb(254,38,10)" fg:x="1054" fg:w="1"/><text x="35.4068%" y="3039.50"></text></g><g><title>boggle.exe`alloc::string::impl$102::to_string(ref$ (16 samples, 0.53%)</title><rect x="34.6898%" y="3269" width="0.5337%" height="15" fill="rgb(208,217,32)" fg:x="1040" fg:w="16"/><text x="34.9398%" y="3279.50"></text></g><g><title>boggle.exe`alloc::string::impl$44::from(ref$ (16 samples, 0.53%)</title><rect x="34.6898%" y="3253" width="0.5337%" height="15" fill="rgb(221,120,13)" fg:x="1040" fg:w="16"/><text x="34.9398%" y="3263.50"></text></g><g><title>boggle.exe`alloc::str::impl$4::to_owned(ref$ (16 samples, 0.53%)</title><rect x="34.6898%" y="3237" width="0.5337%" height="15" fill="rgb(246,54,52)" fg:x="1040" fg:w="16"/><text x="34.9398%" y="3247.50"></text></g><g><title>boggle.exe`alloc::slice::impl$9::to_owned(ref$&lt;slice2$ (16 samples, 0.53%)</title><rect x="34.6898%" y="3221" width="0.5337%" height="15" fill="rgb(242,34,25)" fg:x="1040" fg:w="16"/><text x="34.9398%" y="3231.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec(ref$&lt;slice2$ (15 samples, 0.50%)</title><rect x="34.7231%" y="3205" width="0.5003%" height="15" fill="rgb(247,209,9)" fg:x="1041" fg:w="15"/><text x="34.9731%" y="3215.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec_in(ref$&lt;slice2$ (15 samples, 0.50%)</title><rect x="34.7231%" y="3189" width="0.5003%" height="15" fill="rgb(228,71,26)" fg:x="1041" fg:w="15"/><text x="34.9731%" y="3199.50"></text></g><g><title>boggle.exe`alloc::slice::hack::to_vec(ref$&lt;slice2$ (15 samples, 0.50%)</title><rect x="34.7231%" y="3173" width="0.5003%" height="15" fill="rgb(222,145,49)" fg:x="1041" fg:w="15"/><text x="34.9731%" y="3183.50"></text></g><g><title>boggle.exe`alloc::slice::hack::impl$1::to_vec(ref$&lt;slice2$ (15 samples, 0.50%)</title><rect x="34.7231%" y="3157" width="0.5003%" height="15" fill="rgb(218,121,17)" fg:x="1041" fg:w="15"/><text x="34.9731%" y="3167.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (15 samples, 0.50%)</title><rect x="34.7231%" y="3141" width="0.5003%" height="15" fill="rgb(244,50,7)" fg:x="1041" fg:w="15"/><text x="34.9731%" y="3151.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (15 samples, 0.50%)</title><rect x="34.7231%" y="3125" width="0.5003%" height="15" fill="rgb(246,229,37)" fg:x="1041" fg:w="15"/><text x="34.9731%" y="3135.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (15 samples, 0.50%)</title><rect x="34.7231%" y="3109" width="0.5003%" height="15" fill="rgb(225,18,5)" fg:x="1041" fg:w="15"/><text x="34.9731%" y="3119.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (15 samples, 0.50%)</title><rect x="34.7231%" y="3093" width="0.5003%" height="15" fill="rgb(213,204,8)" fg:x="1041" fg:w="15"/><text x="34.9731%" y="3103.50"></text></g><g><title>boggle.exe`std::alloc::__default_lib_allocator::__rdl_alloc (1 samples, 0.03%)</title><rect x="35.1901%" y="3077" width="0.0334%" height="15" fill="rgb(238,103,6)" fg:x="1055" fg:w="1"/><text x="35.4401%" y="3087.50"></text></g><g><title>boggle.exe`std::sys::alloc::windows::impl$0::alloc (1 samples, 0.03%)</title><rect x="35.1901%" y="3061" width="0.0334%" height="15" fill="rgb(222,25,35)" fg:x="1055" fg:w="1"/><text x="35.4401%" y="3071.50"></text></g><g><title>boggle.exe`std::sys::alloc::windows::allocate (1 samples, 0.03%)</title><rect x="35.1901%" y="3045" width="0.0334%" height="15" fill="rgb(213,203,35)" fg:x="1055" fg:w="1"/><text x="35.4401%" y="3055.50"></text></g><g><title>`0x7FFAB8910353 (1 samples, 0.03%)</title><rect x="35.2235%" y="3237" width="0.0334%" height="15" fill="rgb(221,79,53)" fg:x="1056" fg:w="1"/><text x="35.4735%" y="3247.50"></text></g><g><title>`0x7FFAC12C780A (1 samples, 0.03%)</title><rect x="35.2568%" y="3093" width="0.0334%" height="15" fill="rgb(243,200,35)" fg:x="1057" fg:w="1"/><text x="35.5068%" y="3103.50"></text></g><g><title>`0x7FFAC12C801A (1 samples, 0.03%)</title><rect x="35.2902%" y="3077" width="0.0334%" height="15" fill="rgb(248,60,25)" fg:x="1058" fg:w="1"/><text x="35.5402%" y="3087.50"></text></g><g><title>`0x7FFAC12C8033 (1 samples, 0.03%)</title><rect x="35.3235%" y="3077" width="0.0334%" height="15" fill="rgb(227,53,46)" fg:x="1059" fg:w="1"/><text x="35.5735%" y="3087.50"></text></g><g><title>boggle.exe`alloc::string::impl$6::clone (5 samples, 0.17%)</title><rect x="35.2235%" y="3253" width="0.1668%" height="15" fill="rgb(216,120,32)" fg:x="1056" fg:w="5"/><text x="35.4735%" y="3263.50"></text></g><g><title>boggle.exe`alloc::vec::impl$11::clone (4 samples, 0.13%)</title><rect x="35.2568%" y="3237" width="0.1334%" height="15" fill="rgb(220,134,1)" fg:x="1057" fg:w="4"/><text x="35.5068%" y="3247.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec_in (4 samples, 0.13%)</title><rect x="35.2568%" y="3221" width="0.1334%" height="15" fill="rgb(237,168,5)" fg:x="1057" fg:w="4"/><text x="35.5068%" y="3231.50"></text></g><g><title>boggle.exe`alloc::slice::hack::to_vec (4 samples, 0.13%)</title><rect x="35.2568%" y="3205" width="0.1334%" height="15" fill="rgb(231,100,33)" fg:x="1057" fg:w="4"/><text x="35.5068%" y="3215.50"></text></g><g><title>boggle.exe`alloc::slice::hack::impl$1::to_vec (4 samples, 0.13%)</title><rect x="35.2568%" y="3189" width="0.1334%" height="15" fill="rgb(236,177,47)" fg:x="1057" fg:w="4"/><text x="35.5068%" y="3199.50"></text></g><g><title>boggle.exe`alloc::vec::Vec::with_capacity_in (4 samples, 0.13%)</title><rect x="35.2568%" y="3173" width="0.1334%" height="15" fill="rgb(235,7,49)" fg:x="1057" fg:w="4"/><text x="35.5068%" y="3183.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec::with_capacity_in (4 samples, 0.13%)</title><rect x="35.2568%" y="3157" width="0.1334%" height="15" fill="rgb(232,119,22)" fg:x="1057" fg:w="4"/><text x="35.5068%" y="3167.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner::with_capacity_in (4 samples, 0.13%)</title><rect x="35.2568%" y="3141" width="0.1334%" height="15" fill="rgb(254,73,53)" fg:x="1057" fg:w="4"/><text x="35.5068%" y="3151.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner::try_allocate_in (4 samples, 0.13%)</title><rect x="35.2568%" y="3125" width="0.1334%" height="15" fill="rgb(251,35,20)" fg:x="1057" fg:w="4"/><text x="35.5068%" y="3135.50"></text></g><g><title>`0x7FFAC12C7776 (4 samples, 0.13%)</title><rect x="35.2568%" y="3109" width="0.1334%" height="15" fill="rgb(241,119,20)" fg:x="1057" fg:w="4"/><text x="35.5068%" y="3119.50"></text></g><g><title>`0x7FFAC12C78B4 (3 samples, 0.10%)</title><rect x="35.2902%" y="3093" width="0.1001%" height="15" fill="rgb(207,102,14)" fg:x="1058" fg:w="3"/><text x="35.5402%" y="3103.50"></text></g><g><title>`0x7FFAC12C860F (1 samples, 0.03%)</title><rect x="35.3569%" y="3077" width="0.0334%" height="15" fill="rgb(248,201,50)" fg:x="1060" fg:w="1"/><text x="35.6069%" y="3087.50"></text></g><g><title>`0x7FFAC1404FA6 (1 samples, 0.03%)</title><rect x="35.3903%" y="3013" width="0.0334%" height="15" fill="rgb(222,185,44)" fg:x="1061" fg:w="1"/><text x="35.6403%" y="3023.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;::as_mut_ptr (2 samples, 0.07%)</title><rect x="35.3903%" y="3253" width="0.0667%" height="15" fill="rgb(218,107,18)" fg:x="1061" fg:w="2"/><text x="35.6403%" y="3263.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;alloc::string::String,alloc::alloc::Global&gt;::ptr (2 samples, 0.07%)</title><rect x="35.3903%" y="3237" width="0.0667%" height="15" fill="rgb(237,177,39)" fg:x="1061" fg:w="2"/><text x="35.6403%" y="3247.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (2 samples, 0.07%)</title><rect x="35.3903%" y="3221" width="0.0667%" height="15" fill="rgb(246,69,6)" fg:x="1061" fg:w="2"/><text x="35.6403%" y="3231.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (2 samples, 0.07%)</title><rect x="35.3903%" y="3205" width="0.0667%" height="15" fill="rgb(234,208,37)" fg:x="1061" fg:w="2"/><text x="35.6403%" y="3215.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;std::ffi::os_str::OsString,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;::grow_one&lt;alloc::vec::Vec&lt;std::ffi::os_str::OsString,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; (2 samples, 0.07%)</title><rect x="35.3903%" y="3189" width="0.0667%" height="15" fill="rgb(225,4,6)" fg:x="1061" fg:w="2"/><text x="35.6403%" y="3199.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_one (2 samples, 0.07%)</title><rect x="35.3903%" y="3173" width="0.0667%" height="15" fill="rgb(233,45,0)" fg:x="1061" fg:w="2"/><text x="35.6403%" y="3183.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (2 samples, 0.07%)</title><rect x="35.3903%" y="3157" width="0.0667%" height="15" fill="rgb(226,136,5)" fg:x="1061" fg:w="2"/><text x="35.6403%" y="3167.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (2 samples, 0.07%)</title><rect x="35.3903%" y="3141" width="0.0667%" height="15" fill="rgb(211,91,47)" fg:x="1061" fg:w="2"/><text x="35.6403%" y="3151.50"></text></g><g><title>boggle.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (2 samples, 0.07%)</title><rect x="35.3903%" y="3125" width="0.0667%" height="15" fill="rgb(242,88,51)" fg:x="1061" fg:w="2"/><text x="35.6403%" y="3135.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (2 samples, 0.07%)</title><rect x="35.3903%" y="3109" width="0.0667%" height="15" fill="rgb(230,91,28)" fg:x="1061" fg:w="2"/><text x="35.6403%" y="3119.50"></text></g><g><title>boggle.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (2 samples, 0.07%)</title><rect x="35.3903%" y="3093" width="0.0667%" height="15" fill="rgb(254,186,29)" fg:x="1061" fg:w="2"/><text x="35.6403%" y="3103.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (2 samples, 0.07%)</title><rect x="35.3903%" y="3077" width="0.0667%" height="15" fill="rgb(238,6,4)" fg:x="1061" fg:w="2"/><text x="35.6403%" y="3087.50"></text></g><g><title>`0x7FFAC12D5376 (2 samples, 0.07%)</title><rect x="35.3903%" y="3061" width="0.0667%" height="15" fill="rgb(221,151,16)" fg:x="1061" fg:w="2"/><text x="35.6403%" y="3071.50"></text></g><g><title>`0x7FFAC12D54B5 (2 samples, 0.07%)</title><rect x="35.3903%" y="3045" width="0.0667%" height="15" fill="rgb(251,143,52)" fg:x="1061" fg:w="2"/><text x="35.6403%" y="3055.50"></text></g><g><title>`0x7FFAC12D6459 (2 samples, 0.07%)</title><rect x="35.3903%" y="3029" width="0.0667%" height="15" fill="rgb(206,90,15)" fg:x="1061" fg:w="2"/><text x="35.6403%" y="3039.50"></text></g><g><title>`0x7FFAC1404FAA (1 samples, 0.03%)</title><rect x="35.4236%" y="3013" width="0.0334%" height="15" fill="rgb(218,35,8)" fg:x="1062" fg:w="1"/><text x="35.6736%" y="3023.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;::push (9 samples, 0.30%)</title><rect x="35.2235%" y="3269" width="0.3002%" height="15" fill="rgb(239,215,6)" fg:x="1056" fg:w="9"/><text x="35.4735%" y="3279.50"></text></g><g><title>boggle.exe`core::ptr::write (2 samples, 0.07%)</title><rect x="35.4570%" y="3253" width="0.0667%" height="15" fill="rgb(245,116,39)" fg:x="1063" fg:w="2"/><text x="35.7070%" y="3263.50"></text></g><g><title>boggle.exe`alloc::string::String::pop (274 samples, 9.14%)</title><rect x="26.8179%" y="3333" width="9.1394%" height="15" fill="rgb(242,65,28)" fg:x="804" fg:w="274"/><text x="27.0679%" y="3343.50">boggle.exe`al..</text></g><g><title>boggle.exe`alloc::string::impl$28::deref (274 samples, 9.14%)</title><rect x="26.8179%" y="3317" width="9.1394%" height="15" fill="rgb(252,132,53)" fg:x="804" fg:w="274"/><text x="27.0679%" y="3327.50">boggle.exe`al..</text></g><g><title>boggle.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (274 samples, 9.14%)</title><rect x="26.8179%" y="3301" width="9.1394%" height="15" fill="rgb(224,159,50)" fg:x="804" fg:w="274"/><text x="27.0679%" y="3311.50">boggle.exe`al..</text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::collect_words(boggle::utils::dict_trie::DictTrieNode*, ref$&lt;str$&gt;, alloc::vec::Vec (274 samples, 9.14%)</title><rect x="26.8179%" y="3285" width="9.1394%" height="15" fill="rgb(224,93,4)" fg:x="804" fg:w="274"/><text x="27.0679%" y="3295.50">boggle.exe`bo..</text></g><g><title>boggle.exe`std::collections::hash::map::impl$36::into_iter(std::collections::hash::map::HashMap (13 samples, 0.43%)</title><rect x="35.5237%" y="3269" width="0.4336%" height="15" fill="rgb(208,81,34)" fg:x="1065" fg:w="13"/><text x="35.7737%" y="3279.50"></text></g><g><title>boggle.exe`std::collections::hash::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;::iter (13 samples, 0.43%)</title><rect x="35.5237%" y="3253" width="0.4336%" height="15" fill="rgb(233,92,54)" fg:x="1065" fg:w="13"/><text x="35.7737%" y="3263.50"></text></g><g><title>boggle.exe`hashbrown::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt;::iter (13 samples, 0.43%)</title><rect x="35.5237%" y="3237" width="0.4336%" height="15" fill="rgb(237,21,14)" fg:x="1065" fg:w="13"/><text x="35.7737%" y="3247.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTable&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;::iter (13 samples, 0.43%)</title><rect x="35.5237%" y="3221" width="0.4336%" height="15" fill="rgb(249,128,51)" fg:x="1065" fg:w="13"/><text x="35.7737%" y="3231.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::iter (13 samples, 0.43%)</title><rect x="35.5237%" y="3205" width="0.4336%" height="15" fill="rgb(223,129,24)" fg:x="1065" fg:w="13"/><text x="35.7737%" y="3215.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawIterRange&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::new(unsigned char*, hashbrown::raw::Bucket&lt;tuple$ (13 samples, 0.43%)</title><rect x="35.5237%" y="3189" width="0.4336%" height="15" fill="rgb(231,168,25)" fg:x="1065" fg:w="13"/><text x="35.7737%" y="3199.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::load_aligned (13 samples, 0.43%)</title><rect x="35.5237%" y="3173" width="0.4336%" height="15" fill="rgb(224,39,20)" fg:x="1065" fg:w="13"/><text x="35.7737%" y="3183.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::match_empty_or_deleted (13 samples, 0.43%)</title><rect x="35.5237%" y="3157" width="0.4336%" height="15" fill="rgb(225,152,53)" fg:x="1065" fg:w="13"/><text x="35.7737%" y="3167.50"></text></g><g><title>boggle.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (13 samples, 0.43%)</title><rect x="35.5237%" y="3141" width="0.4336%" height="15" fill="rgb(252,17,24)" fg:x="1065" fg:w="13"/><text x="35.7737%" y="3151.50"></text></g><g><title>`0x7FFAC12D534F (1 samples, 0.03%)</title><rect x="35.9907%" y="3109" width="0.0334%" height="15" fill="rgb(250,114,30)" fg:x="1079" fg:w="1"/><text x="36.2407%" y="3119.50"></text></g><g><title>`0x7FFAC12D5CAD (1 samples, 0.03%)</title><rect x="36.0240%" y="3077" width="0.0334%" height="15" fill="rgb(229,5,4)" fg:x="1080" fg:w="1"/><text x="36.2740%" y="3087.50"></text></g><g><title>`0x7FFAC12D5DA0 (1 samples, 0.03%)</title><rect x="36.0574%" y="3077" width="0.0334%" height="15" fill="rgb(225,176,49)" fg:x="1081" fg:w="1"/><text x="36.3074%" y="3087.50"></text></g><g><title>`0x7FFAC12C8047 (3 samples, 0.10%)</title><rect x="36.0907%" y="3029" width="0.1001%" height="15" fill="rgb(224,221,49)" fg:x="1082" fg:w="3"/><text x="36.3407%" y="3039.50"></text></g><g><title>`0x7FFAC12C78B4 (4 samples, 0.13%)</title><rect x="36.0907%" y="3045" width="0.1334%" height="15" fill="rgb(253,169,27)" fg:x="1082" fg:w="4"/><text x="36.3407%" y="3055.50"></text></g><g><title>`0x7FFAC12C818E (1 samples, 0.03%)</title><rect x="36.1908%" y="3029" width="0.0334%" height="15" fill="rgb(211,206,16)" fg:x="1085" fg:w="1"/><text x="36.4408%" y="3039.50"></text></g><g><title>`0x7FFAC12D5DAA (5 samples, 0.17%)</title><rect x="36.0907%" y="3077" width="0.1668%" height="15" fill="rgb(244,87,35)" fg:x="1082" fg:w="5"/><text x="36.3407%" y="3087.50"></text></g><g><title>`0x7FFAC12C7776 (5 samples, 0.17%)</title><rect x="36.0907%" y="3061" width="0.1668%" height="15" fill="rgb(246,28,10)" fg:x="1082" fg:w="5"/><text x="36.3407%" y="3071.50"></text></g><g><title>`0x7FFAC12C7966 (1 samples, 0.03%)</title><rect x="36.2241%" y="3045" width="0.0334%" height="15" fill="rgb(229,12,44)" fg:x="1086" fg:w="1"/><text x="36.4741%" y="3055.50"></text></g><g><title>`0x7FFAC12D5DF9 (1 samples, 0.03%)</title><rect x="36.2575%" y="3077" width="0.0334%" height="15" fill="rgb(210,145,37)" fg:x="1087" fg:w="1"/><text x="36.5075%" y="3087.50"></text></g><g><title>`0x7FFAC1404ECE (1 samples, 0.03%)</title><rect x="36.2575%" y="3061" width="0.0334%" height="15" fill="rgb(227,112,52)" fg:x="1087" fg:w="1"/><text x="36.5075%" y="3071.50"></text></g><g><title>`0x7FFAC12D2313 (1 samples, 0.03%)</title><rect x="36.2909%" y="3061" width="0.0334%" height="15" fill="rgb(238,155,34)" fg:x="1088" fg:w="1"/><text x="36.5409%" y="3071.50"></text></g><g><title>`0x7FFAC12D23A7 (6 samples, 0.20%)</title><rect x="36.3242%" y="3061" width="0.2001%" height="15" fill="rgb(239,226,36)" fg:x="1089" fg:w="6"/><text x="36.5742%" y="3071.50"></text></g><g><title>`0x7FFAC12D5E0B (8 samples, 0.27%)</title><rect x="36.2909%" y="3077" width="0.2668%" height="15" fill="rgb(230,16,23)" fg:x="1088" fg:w="8"/><text x="36.5409%" y="3087.50"></text></g><g><title>`0x7FFAC12D23C2 (1 samples, 0.03%)</title><rect x="36.5243%" y="3061" width="0.0334%" height="15" fill="rgb(236,171,36)" fg:x="1095" fg:w="1"/><text x="36.7743%" y="3071.50"></text></g><g><title>`0x7FFAC12D5E48 (1 samples, 0.03%)</title><rect x="36.5577%" y="3077" width="0.0334%" height="15" fill="rgb(221,22,14)" fg:x="1096" fg:w="1"/><text x="36.8077%" y="3087.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::push (20 samples, 0.67%)</title><rect x="35.9573%" y="3317" width="0.6671%" height="15" fill="rgb(242,43,11)" fg:x="1078" fg:w="20"/><text x="36.2073%" y="3327.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_mut_ptr (20 samples, 0.67%)</title><rect x="35.9573%" y="3301" width="0.6671%" height="15" fill="rgb(232,69,23)" fg:x="1078" fg:w="20"/><text x="36.2073%" y="3311.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::ptr (20 samples, 0.67%)</title><rect x="35.9573%" y="3285" width="0.6671%" height="15" fill="rgb(216,180,54)" fg:x="1078" fg:w="20"/><text x="36.2073%" y="3295.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (20 samples, 0.67%)</title><rect x="35.9573%" y="3269" width="0.6671%" height="15" fill="rgb(216,5,24)" fg:x="1078" fg:w="20"/><text x="36.2073%" y="3279.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (20 samples, 0.67%)</title><rect x="35.9573%" y="3253" width="0.6671%" height="15" fill="rgb(225,89,9)" fg:x="1078" fg:w="20"/><text x="36.2073%" y="3263.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::grow_one&lt;u8,alloc::alloc::Global&gt; (20 samples, 0.67%)</title><rect x="35.9573%" y="3237" width="0.6671%" height="15" fill="rgb(243,75,33)" fg:x="1078" fg:w="20"/><text x="36.2073%" y="3247.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_one (20 samples, 0.67%)</title><rect x="35.9573%" y="3221" width="0.6671%" height="15" fill="rgb(247,141,45)" fg:x="1078" fg:w="20"/><text x="36.2073%" y="3231.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (20 samples, 0.67%)</title><rect x="35.9573%" y="3205" width="0.6671%" height="15" fill="rgb(232,177,36)" fg:x="1078" fg:w="20"/><text x="36.2073%" y="3215.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (20 samples, 0.67%)</title><rect x="35.9573%" y="3189" width="0.6671%" height="15" fill="rgb(219,125,36)" fg:x="1078" fg:w="20"/><text x="36.2073%" y="3199.50"></text></g><g><title>boggle.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (20 samples, 0.67%)</title><rect x="35.9573%" y="3173" width="0.6671%" height="15" fill="rgb(227,94,9)" fg:x="1078" fg:w="20"/><text x="36.2073%" y="3183.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (19 samples, 0.63%)</title><rect x="35.9907%" y="3157" width="0.6338%" height="15" fill="rgb(240,34,52)" fg:x="1079" fg:w="19"/><text x="36.2407%" y="3167.50"></text></g><g><title>boggle.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (19 samples, 0.63%)</title><rect x="35.9907%" y="3141" width="0.6338%" height="15" fill="rgb(216,45,12)" fg:x="1079" fg:w="19"/><text x="36.2407%" y="3151.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (19 samples, 0.63%)</title><rect x="35.9907%" y="3125" width="0.6338%" height="15" fill="rgb(246,21,19)" fg:x="1079" fg:w="19"/><text x="36.2407%" y="3135.50"></text></g><g><title>`0x7FFAC12D5376 (18 samples, 0.60%)</title><rect x="36.0240%" y="3109" width="0.6004%" height="15" fill="rgb(213,98,42)" fg:x="1080" fg:w="18"/><text x="36.2740%" y="3119.50"></text></g><g><title>`0x7FFAC12D54B5 (18 samples, 0.60%)</title><rect x="36.0240%" y="3093" width="0.6004%" height="15" fill="rgb(250,136,47)" fg:x="1080" fg:w="18"/><text x="36.2740%" y="3103.50"></text></g><g><title>`0x7FFAC12D6C14 (1 samples, 0.03%)</title><rect x="36.5911%" y="3077" width="0.0334%" height="15" fill="rgb(251,124,27)" fg:x="1097" fg:w="1"/><text x="36.8411%" y="3087.50"></text></g><g><title>boggle.exe`alloc::string::String::push (35 samples, 1.17%)</title><rect x="35.9573%" y="3333" width="1.1674%" height="15" fill="rgb(229,180,14)" fg:x="1078" fg:w="35"/><text x="36.2073%" y="3343.50"></text></g><g><title>boggle.exe`core::char::methods::impl$0::len_utf8 (15 samples, 0.50%)</title><rect x="36.6244%" y="3317" width="0.5003%" height="15" fill="rgb(245,216,25)" fg:x="1098" fg:w="15"/><text x="36.8744%" y="3327.50"></text></g><g><title>boggle.exe`core::char::methods::len_utf8 (15 samples, 0.50%)</title><rect x="36.6244%" y="3301" width="0.5003%" height="15" fill="rgb(251,43,5)" fg:x="1098" fg:w="15"/><text x="36.8744%" y="3311.50"></text></g><g><title>`0x7FFAB89102B2 (1 samples, 0.03%)</title><rect x="37.1247%" y="3269" width="0.0334%" height="15" fill="rgb(250,128,24)" fg:x="1113" fg:w="1"/><text x="37.3747%" y="3279.50"></text></g><g><title>`0x7FFAC12C780A (1 samples, 0.03%)</title><rect x="37.1581%" y="3125" width="0.0334%" height="15" fill="rgb(217,117,27)" fg:x="1114" fg:w="1"/><text x="37.4081%" y="3135.50"></text></g><g><title>`0x7FFAC12C7F6D (2 samples, 0.07%)</title><rect x="37.1915%" y="3109" width="0.0667%" height="15" fill="rgb(245,147,4)" fg:x="1115" fg:w="2"/><text x="37.4415%" y="3119.50"></text></g><g><title>`0x7FFAC12C802D (1 samples, 0.03%)</title><rect x="37.2582%" y="3109" width="0.0334%" height="15" fill="rgb(242,201,35)" fg:x="1117" fg:w="1"/><text x="37.5082%" y="3119.50"></text></g><g><title>`0x7FFAC12C8047 (4 samples, 0.13%)</title><rect x="37.2915%" y="3109" width="0.1334%" height="15" fill="rgb(218,181,1)" fg:x="1118" fg:w="4"/><text x="37.5415%" y="3119.50"></text></g><g><title>`0x7FFAC12C812B (1 samples, 0.03%)</title><rect x="37.4249%" y="3109" width="0.0334%" height="15" fill="rgb(222,6,29)" fg:x="1122" fg:w="1"/><text x="37.6749%" y="3119.50"></text></g><g><title>`0x7FFAC12C8137 (1 samples, 0.03%)</title><rect x="37.4583%" y="3109" width="0.0334%" height="15" fill="rgb(208,186,3)" fg:x="1123" fg:w="1"/><text x="37.7083%" y="3119.50"></text></g><g><title>`0x7FFAC12C81D3 (1 samples, 0.03%)</title><rect x="37.4917%" y="3109" width="0.0334%" height="15" fill="rgb(216,36,26)" fg:x="1124" fg:w="1"/><text x="37.7417%" y="3119.50"></text></g><g><title>boggle.exe`alloc::string::impl$102::to_string(ref$ (13 samples, 0.43%)</title><rect x="37.1247%" y="3333" width="0.4336%" height="15" fill="rgb(248,201,23)" fg:x="1113" fg:w="13"/><text x="37.3747%" y="3343.50"></text></g><g><title>boggle.exe`alloc::string::impl$44::from(ref$ (13 samples, 0.43%)</title><rect x="37.1247%" y="3317" width="0.4336%" height="15" fill="rgb(251,170,31)" fg:x="1113" fg:w="13"/><text x="37.3747%" y="3327.50"></text></g><g><title>boggle.exe`alloc::str::impl$4::to_owned(ref$ (13 samples, 0.43%)</title><rect x="37.1247%" y="3301" width="0.4336%" height="15" fill="rgb(207,110,25)" fg:x="1113" fg:w="13"/><text x="37.3747%" y="3311.50"></text></g><g><title>boggle.exe`alloc::slice::impl$9::to_owned(ref$&lt;slice2$ (13 samples, 0.43%)</title><rect x="37.1247%" y="3285" width="0.4336%" height="15" fill="rgb(250,54,15)" fg:x="1113" fg:w="13"/><text x="37.3747%" y="3295.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec(ref$&lt;slice2$ (12 samples, 0.40%)</title><rect x="37.1581%" y="3269" width="0.4003%" height="15" fill="rgb(227,68,33)" fg:x="1114" fg:w="12"/><text x="37.4081%" y="3279.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec_in(ref$&lt;slice2$ (12 samples, 0.40%)</title><rect x="37.1581%" y="3253" width="0.4003%" height="15" fill="rgb(238,34,41)" fg:x="1114" fg:w="12"/><text x="37.4081%" y="3263.50"></text></g><g><title>boggle.exe`alloc::slice::hack::to_vec(ref$&lt;slice2$ (12 samples, 0.40%)</title><rect x="37.1581%" y="3237" width="0.4003%" height="15" fill="rgb(220,11,15)" fg:x="1114" fg:w="12"/><text x="37.4081%" y="3247.50"></text></g><g><title>boggle.exe`alloc::slice::hack::impl$1::to_vec(ref$&lt;slice2$ (12 samples, 0.40%)</title><rect x="37.1581%" y="3221" width="0.4003%" height="15" fill="rgb(246,111,35)" fg:x="1114" fg:w="12"/><text x="37.4081%" y="3231.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (12 samples, 0.40%)</title><rect x="37.1581%" y="3205" width="0.4003%" height="15" fill="rgb(209,88,53)" fg:x="1114" fg:w="12"/><text x="37.4081%" y="3215.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (12 samples, 0.40%)</title><rect x="37.1581%" y="3189" width="0.4003%" height="15" fill="rgb(231,185,47)" fg:x="1114" fg:w="12"/><text x="37.4081%" y="3199.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (12 samples, 0.40%)</title><rect x="37.1581%" y="3173" width="0.4003%" height="15" fill="rgb(233,154,1)" fg:x="1114" fg:w="12"/><text x="37.4081%" y="3183.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (12 samples, 0.40%)</title><rect x="37.1581%" y="3157" width="0.4003%" height="15" fill="rgb(225,15,46)" fg:x="1114" fg:w="12"/><text x="37.4081%" y="3167.50"></text></g><g><title>`0x7FFAC12C7776 (12 samples, 0.40%)</title><rect x="37.1581%" y="3141" width="0.4003%" height="15" fill="rgb(211,135,41)" fg:x="1114" fg:w="12"/><text x="37.4081%" y="3151.50"></text></g><g><title>`0x7FFAC12C78B4 (11 samples, 0.37%)</title><rect x="37.1915%" y="3125" width="0.3669%" height="15" fill="rgb(208,54,0)" fg:x="1115" fg:w="11"/><text x="37.4415%" y="3135.50"></text></g><g><title>`0x7FFAC12C85FA (1 samples, 0.03%)</title><rect x="37.5250%" y="3109" width="0.0334%" height="15" fill="rgb(244,136,14)" fg:x="1125" fg:w="1"/><text x="37.7750%" y="3119.50"></text></g><g><title>`0x7FFAC12C8047 (3 samples, 0.10%)</title><rect x="37.5584%" y="3141" width="0.1001%" height="15" fill="rgb(241,56,14)" fg:x="1126" fg:w="3"/><text x="37.8084%" y="3151.50"></text></g><g><title>`0x7FFAC12C8165 (1 samples, 0.03%)</title><rect x="37.6584%" y="3141" width="0.0334%" height="15" fill="rgb(205,80,24)" fg:x="1129" fg:w="1"/><text x="37.9084%" y="3151.50"></text></g><g><title>`0x7FFAC12C8172 (1 samples, 0.03%)</title><rect x="37.6918%" y="3141" width="0.0334%" height="15" fill="rgb(220,57,4)" fg:x="1130" fg:w="1"/><text x="37.9418%" y="3151.50"></text></g><g><title>`0x7FFAC12C78B4 (6 samples, 0.20%)</title><rect x="37.5584%" y="3157" width="0.2001%" height="15" fill="rgb(226,193,50)" fg:x="1126" fg:w="6"/><text x="37.8084%" y="3167.50"></text></g><g><title>`0x7FFAC12C89F1 (1 samples, 0.03%)</title><rect x="37.7252%" y="3141" width="0.0334%" height="15" fill="rgb(231,168,22)" fg:x="1131" fg:w="1"/><text x="37.9752%" y="3151.50"></text></g><g><title>`0x7FFAC1403487 (1 samples, 0.03%)</title><rect x="37.7252%" y="3125" width="0.0334%" height="15" fill="rgb(254,215,14)" fg:x="1131" fg:w="1"/><text x="37.9752%" y="3135.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;::push (7 samples, 0.23%)</title><rect x="37.5584%" y="3333" width="0.2335%" height="15" fill="rgb(211,115,16)" fg:x="1126" fg:w="7"/><text x="37.8084%" y="3343.50"></text></g><g><title>boggle.exe`alloc::string::impl$6::clone (7 samples, 0.23%)</title><rect x="37.5584%" y="3317" width="0.2335%" height="15" fill="rgb(236,210,16)" fg:x="1126" fg:w="7"/><text x="37.8084%" y="3327.50"></text></g><g><title>boggle.exe`alloc::vec::impl$11::clone (7 samples, 0.23%)</title><rect x="37.5584%" y="3301" width="0.2335%" height="15" fill="rgb(221,94,12)" fg:x="1126" fg:w="7"/><text x="37.8084%" y="3311.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec_in (7 samples, 0.23%)</title><rect x="37.5584%" y="3285" width="0.2335%" height="15" fill="rgb(235,218,49)" fg:x="1126" fg:w="7"/><text x="37.8084%" y="3295.50"></text></g><g><title>boggle.exe`alloc::slice::hack::to_vec (7 samples, 0.23%)</title><rect x="37.5584%" y="3269" width="0.2335%" height="15" fill="rgb(217,114,14)" fg:x="1126" fg:w="7"/><text x="37.8084%" y="3279.50"></text></g><g><title>boggle.exe`alloc::slice::hack::impl$1::to_vec (7 samples, 0.23%)</title><rect x="37.5584%" y="3253" width="0.2335%" height="15" fill="rgb(216,145,22)" fg:x="1126" fg:w="7"/><text x="37.8084%" y="3263.50"></text></g><g><title>boggle.exe`alloc::vec::Vec::with_capacity_in (7 samples, 0.23%)</title><rect x="37.5584%" y="3237" width="0.2335%" height="15" fill="rgb(217,112,39)" fg:x="1126" fg:w="7"/><text x="37.8084%" y="3247.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec::with_capacity_in (7 samples, 0.23%)</title><rect x="37.5584%" y="3221" width="0.2335%" height="15" fill="rgb(225,85,32)" fg:x="1126" fg:w="7"/><text x="37.8084%" y="3231.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner::with_capacity_in (7 samples, 0.23%)</title><rect x="37.5584%" y="3205" width="0.2335%" height="15" fill="rgb(245,209,47)" fg:x="1126" fg:w="7"/><text x="37.8084%" y="3215.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner::try_allocate_in (7 samples, 0.23%)</title><rect x="37.5584%" y="3189" width="0.2335%" height="15" fill="rgb(218,220,15)" fg:x="1126" fg:w="7"/><text x="37.8084%" y="3199.50"></text></g><g><title>`0x7FFAC12C7776 (7 samples, 0.23%)</title><rect x="37.5584%" y="3173" width="0.2335%" height="15" fill="rgb(222,202,31)" fg:x="1126" fg:w="7"/><text x="37.8084%" y="3183.50"></text></g><g><title>`0x7FFAC12C795C (1 samples, 0.03%)</title><rect x="37.7585%" y="3157" width="0.0334%" height="15" fill="rgb(243,203,4)" fg:x="1132" fg:w="1"/><text x="38.0085%" y="3167.50"></text></g><g><title>boggle.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (348 samples, 11.61%)</title><rect x="26.6177%" y="3365" width="11.6077%" height="15" fill="rgb(237,92,17)" fg:x="798" fg:w="348"/><text x="26.8677%" y="3375.50">boggle.exe`alloc:..</text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::collect_words(boggle::utils::dict_trie::DictTrieNode*, ref$&lt;str$&gt;, alloc::vec::Vec (348 samples, 11.61%)</title><rect x="26.6177%" y="3349" width="11.6077%" height="15" fill="rgb(231,119,7)" fg:x="798" fg:w="348"/><text x="26.8677%" y="3359.50">boggle.exe`boggle..</text></g><g><title>boggle.exe`std::collections::hash::map::impl$36::into_iter(std::collections::hash::map::HashMap (13 samples, 0.43%)</title><rect x="37.7919%" y="3333" width="0.4336%" height="15" fill="rgb(237,82,41)" fg:x="1133" fg:w="13"/><text x="38.0419%" y="3343.50"></text></g><g><title>boggle.exe`std::collections::hash::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;::iter (13 samples, 0.43%)</title><rect x="37.7919%" y="3317" width="0.4336%" height="15" fill="rgb(226,81,48)" fg:x="1133" fg:w="13"/><text x="38.0419%" y="3327.50"></text></g><g><title>boggle.exe`hashbrown::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt;::iter (13 samples, 0.43%)</title><rect x="37.7919%" y="3301" width="0.4336%" height="15" fill="rgb(234,70,51)" fg:x="1133" fg:w="13"/><text x="38.0419%" y="3311.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTable&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;::iter (13 samples, 0.43%)</title><rect x="37.7919%" y="3285" width="0.4336%" height="15" fill="rgb(251,86,4)" fg:x="1133" fg:w="13"/><text x="38.0419%" y="3295.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::iter (13 samples, 0.43%)</title><rect x="37.7919%" y="3269" width="0.4336%" height="15" fill="rgb(244,144,28)" fg:x="1133" fg:w="13"/><text x="38.0419%" y="3279.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawIterRange&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::new(unsigned char*, hashbrown::raw::Bucket&lt;tuple$ (13 samples, 0.43%)</title><rect x="37.7919%" y="3253" width="0.4336%" height="15" fill="rgb(232,161,39)" fg:x="1133" fg:w="13"/><text x="38.0419%" y="3263.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::load_aligned (13 samples, 0.43%)</title><rect x="37.7919%" y="3237" width="0.4336%" height="15" fill="rgb(247,34,51)" fg:x="1133" fg:w="13"/><text x="38.0419%" y="3247.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::match_empty_or_deleted (13 samples, 0.43%)</title><rect x="37.7919%" y="3221" width="0.4336%" height="15" fill="rgb(225,132,2)" fg:x="1133" fg:w="13"/><text x="38.0419%" y="3231.50"></text></g><g><title>boggle.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (13 samples, 0.43%)</title><rect x="37.7919%" y="3205" width="0.4336%" height="15" fill="rgb(209,159,44)" fg:x="1133" fg:w="13"/><text x="38.0419%" y="3215.50"></text></g><g><title>boggle.exe`alloc::string::String::pop (349 samples, 11.64%)</title><rect x="26.6177%" y="3397" width="11.6411%" height="15" fill="rgb(251,214,1)" fg:x="798" fg:w="349"/><text x="26.8677%" y="3407.50">boggle.exe`alloc:..</text></g><g><title>boggle.exe`alloc::string::impl$28::deref (349 samples, 11.64%)</title><rect x="26.6177%" y="3381" width="11.6411%" height="15" fill="rgb(247,84,47)" fg:x="798" fg:w="349"/><text x="26.8677%" y="3391.50">boggle.exe`alloc:..</text></g><g><title>boggle.exe`core::str::iter::impl$2::next_back (1 samples, 0.03%)</title><rect x="38.2255%" y="3365" width="0.0334%" height="15" fill="rgb(240,111,43)" fg:x="1146" fg:w="1"/><text x="38.4755%" y="3375.50"></text></g><g><title>boggle.exe`core::str::validations::next_code_point_reverse(core::slice::iter::Iter (1 samples, 0.03%)</title><rect x="38.2255%" y="3349" width="0.0334%" height="15" fill="rgb(215,214,35)" fg:x="1146" fg:w="1"/><text x="38.4755%" y="3359.50"></text></g><g><title>boggle.exe`core::slice::iter::impl$183::next_back(core::slice::iter::Iter (1 samples, 0.03%)</title><rect x="38.2255%" y="3333" width="0.0334%" height="15" fill="rgb(248,207,23)" fg:x="1146" fg:w="1"/><text x="38.4755%" y="3343.50"></text></g><g><title>boggle.exe`core::ptr::non_null::impl$13::eq(core::ptr::non_null::NonNull&lt;u8&gt;*, core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="38.2255%" y="3317" width="0.0334%" height="15" fill="rgb(214,186,4)" fg:x="1146" fg:w="1"/><text x="38.4755%" y="3327.50"></text></g><g><title>`0x7FFAC12D5D7A (1 samples, 0.03%)</title><rect x="38.3256%" y="3141" width="0.0334%" height="15" fill="rgb(220,133,22)" fg:x="1149" fg:w="1"/><text x="38.5756%" y="3151.50"></text></g><g><title>`0x7FFAC12C6C90 (1 samples, 0.03%)</title><rect x="38.3589%" y="3125" width="0.0334%" height="15" fill="rgb(239,134,19)" fg:x="1150" fg:w="1"/><text x="38.6089%" y="3135.50"></text></g><g><title>`0x7FFAC12C8047 (5 samples, 0.17%)</title><rect x="38.3923%" y="3093" width="0.1668%" height="15" fill="rgb(250,140,9)" fg:x="1151" fg:w="5"/><text x="38.6423%" y="3103.50"></text></g><g><title>`0x7FFAC12C7776 (6 samples, 0.20%)</title><rect x="38.3923%" y="3125" width="0.2001%" height="15" fill="rgb(225,59,14)" fg:x="1151" fg:w="6"/><text x="38.6423%" y="3135.50"></text></g><g><title>`0x7FFAC12C78B4 (6 samples, 0.20%)</title><rect x="38.3923%" y="3109" width="0.2001%" height="15" fill="rgb(214,152,51)" fg:x="1151" fg:w="6"/><text x="38.6423%" y="3119.50"></text></g><g><title>`0x7FFAC12C8142 (1 samples, 0.03%)</title><rect x="38.5590%" y="3093" width="0.0334%" height="15" fill="rgb(251,227,43)" fg:x="1156" fg:w="1"/><text x="38.8090%" y="3103.50"></text></g><g><title>`0x7FFAC12D5DAA (8 samples, 0.27%)</title><rect x="38.3589%" y="3141" width="0.2668%" height="15" fill="rgb(241,96,17)" fg:x="1150" fg:w="8"/><text x="38.6089%" y="3151.50"></text></g><g><title>`0x7FFAC12C7795 (1 samples, 0.03%)</title><rect x="38.5924%" y="3125" width="0.0334%" height="15" fill="rgb(234,198,43)" fg:x="1157" fg:w="1"/><text x="38.8424%" y="3135.50"></text></g><g><title>`0x7FFAC12D5DF9 (1 samples, 0.03%)</title><rect x="38.6258%" y="3141" width="0.0334%" height="15" fill="rgb(220,108,29)" fg:x="1158" fg:w="1"/><text x="38.8758%" y="3151.50"></text></g><g><title>`0x7FFAC1404ED1 (1 samples, 0.03%)</title><rect x="38.6258%" y="3125" width="0.0334%" height="15" fill="rgb(226,163,33)" fg:x="1158" fg:w="1"/><text x="38.8758%" y="3135.50"></text></g><g><title>`0x7FFAC12D5376 (13 samples, 0.43%)</title><rect x="38.2922%" y="3173" width="0.4336%" height="15" fill="rgb(205,194,45)" fg:x="1148" fg:w="13"/><text x="38.5422%" y="3183.50"></text></g><g><title>`0x7FFAC12D54B5 (12 samples, 0.40%)</title><rect x="38.3256%" y="3157" width="0.4003%" height="15" fill="rgb(206,143,44)" fg:x="1149" fg:w="12"/><text x="38.5756%" y="3167.50"></text></g><g><title>`0x7FFAC12D5E0B (2 samples, 0.07%)</title><rect x="38.6591%" y="3141" width="0.0667%" height="15" fill="rgb(236,136,36)" fg:x="1159" fg:w="2"/><text x="38.9091%" y="3151.50"></text></g><g><title>`0x7FFAC12D23A7 (2 samples, 0.07%)</title><rect x="38.6591%" y="3125" width="0.0667%" height="15" fill="rgb(249,172,42)" fg:x="1159" fg:w="2"/><text x="38.9091%" y="3135.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::push (15 samples, 0.50%)</title><rect x="38.2588%" y="3381" width="0.5003%" height="15" fill="rgb(216,139,23)" fg:x="1147" fg:w="15"/><text x="38.5088%" y="3391.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_mut_ptr (15 samples, 0.50%)</title><rect x="38.2588%" y="3365" width="0.5003%" height="15" fill="rgb(207,166,20)" fg:x="1147" fg:w="15"/><text x="38.5088%" y="3375.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::ptr (15 samples, 0.50%)</title><rect x="38.2588%" y="3349" width="0.5003%" height="15" fill="rgb(210,209,22)" fg:x="1147" fg:w="15"/><text x="38.5088%" y="3359.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (15 samples, 0.50%)</title><rect x="38.2588%" y="3333" width="0.5003%" height="15" fill="rgb(232,118,20)" fg:x="1147" fg:w="15"/><text x="38.5088%" y="3343.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (15 samples, 0.50%)</title><rect x="38.2588%" y="3317" width="0.5003%" height="15" fill="rgb(238,113,42)" fg:x="1147" fg:w="15"/><text x="38.5088%" y="3327.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::grow_one&lt;u8,alloc::alloc::Global&gt; (15 samples, 0.50%)</title><rect x="38.2588%" y="3301" width="0.5003%" height="15" fill="rgb(231,42,5)" fg:x="1147" fg:w="15"/><text x="38.5088%" y="3311.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_one (15 samples, 0.50%)</title><rect x="38.2588%" y="3285" width="0.5003%" height="15" fill="rgb(243,166,24)" fg:x="1147" fg:w="15"/><text x="38.5088%" y="3295.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (15 samples, 0.50%)</title><rect x="38.2588%" y="3269" width="0.5003%" height="15" fill="rgb(237,226,12)" fg:x="1147" fg:w="15"/><text x="38.5088%" y="3279.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (14 samples, 0.47%)</title><rect x="38.2922%" y="3253" width="0.4670%" height="15" fill="rgb(229,133,24)" fg:x="1148" fg:w="14"/><text x="38.5422%" y="3263.50"></text></g><g><title>boggle.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (14 samples, 0.47%)</title><rect x="38.2922%" y="3237" width="0.4670%" height="15" fill="rgb(238,33,43)" fg:x="1148" fg:w="14"/><text x="38.5422%" y="3247.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (14 samples, 0.47%)</title><rect x="38.2922%" y="3221" width="0.4670%" height="15" fill="rgb(227,59,38)" fg:x="1148" fg:w="14"/><text x="38.5422%" y="3231.50"></text></g><g><title>boggle.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (14 samples, 0.47%)</title><rect x="38.2922%" y="3205" width="0.4670%" height="15" fill="rgb(230,97,0)" fg:x="1148" fg:w="14"/><text x="38.5422%" y="3215.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (14 samples, 0.47%)</title><rect x="38.2922%" y="3189" width="0.4670%" height="15" fill="rgb(250,173,50)" fg:x="1148" fg:w="14"/><text x="38.5422%" y="3199.50"></text></g><g><title>`0x7FFAC12D537B (1 samples, 0.03%)</title><rect x="38.7258%" y="3173" width="0.0334%" height="15" fill="rgb(240,15,50)" fg:x="1161" fg:w="1"/><text x="38.9758%" y="3183.50"></text></g><g><title>boggle.exe`alloc::string::String::push (23 samples, 0.77%)</title><rect x="38.2588%" y="3397" width="0.7672%" height="15" fill="rgb(221,93,22)" fg:x="1147" fg:w="23"/><text x="38.5088%" y="3407.50"></text></g><g><title>boggle.exe`core::char::methods::impl$0::len_utf8 (8 samples, 0.27%)</title><rect x="38.7592%" y="3381" width="0.2668%" height="15" fill="rgb(245,180,53)" fg:x="1162" fg:w="8"/><text x="39.0092%" y="3391.50"></text></g><g><title>boggle.exe`core::char::methods::len_utf8 (8 samples, 0.27%)</title><rect x="38.7592%" y="3365" width="0.2668%" height="15" fill="rgb(231,88,51)" fg:x="1162" fg:w="8"/><text x="39.0092%" y="3375.50"></text></g><g><title>`0x7FFAC12C7765 (1 samples, 0.03%)</title><rect x="39.0594%" y="3205" width="0.0334%" height="15" fill="rgb(240,58,21)" fg:x="1171" fg:w="1"/><text x="39.3094%" y="3215.50"></text></g><g><title>`0x7FFAC12C77E7 (1 samples, 0.03%)</title><rect x="39.0927%" y="3189" width="0.0334%" height="15" fill="rgb(237,21,10)" fg:x="1172" fg:w="1"/><text x="39.3427%" y="3199.50"></text></g><g><title>`0x7FFAC12C78AB (1 samples, 0.03%)</title><rect x="39.1261%" y="3189" width="0.0334%" height="15" fill="rgb(218,43,11)" fg:x="1173" fg:w="1"/><text x="39.3761%" y="3199.50"></text></g><g><title>`0x7FFAC12C8047 (4 samples, 0.13%)</title><rect x="39.1594%" y="3173" width="0.1334%" height="15" fill="rgb(218,221,29)" fg:x="1174" fg:w="4"/><text x="39.4094%" y="3183.50"></text></g><g><title>`0x7FFAC12C80CE (1 samples, 0.03%)</title><rect x="39.2929%" y="3173" width="0.0334%" height="15" fill="rgb(214,118,42)" fg:x="1178" fg:w="1"/><text x="39.5429%" y="3183.50"></text></g><g><title>`0x7FFAC12C7776 (8 samples, 0.27%)</title><rect x="39.0927%" y="3205" width="0.2668%" height="15" fill="rgb(251,200,26)" fg:x="1172" fg:w="8"/><text x="39.3427%" y="3215.50"></text></g><g><title>`0x7FFAC12C78B4 (6 samples, 0.20%)</title><rect x="39.1594%" y="3189" width="0.2001%" height="15" fill="rgb(237,101,39)" fg:x="1174" fg:w="6"/><text x="39.4094%" y="3199.50"></text></g><g><title>`0x7FFAC12C8615 (1 samples, 0.03%)</title><rect x="39.3262%" y="3173" width="0.0334%" height="15" fill="rgb(251,117,11)" fg:x="1179" fg:w="1"/><text x="39.5762%" y="3183.50"></text></g><g><title>boggle.exe`std::alloc::__default_lib_allocator::__rdl_alloc (1 samples, 0.03%)</title><rect x="39.3596%" y="3205" width="0.0334%" height="15" fill="rgb(216,223,23)" fg:x="1180" fg:w="1"/><text x="39.6096%" y="3215.50"></text></g><g><title>boggle.exe`alloc::string::impl$102::to_string(ref$ (12 samples, 0.40%)</title><rect x="39.0260%" y="3397" width="0.4003%" height="15" fill="rgb(251,54,12)" fg:x="1170" fg:w="12"/><text x="39.2760%" y="3407.50"></text></g><g><title>boggle.exe`alloc::string::impl$44::from(ref$ (12 samples, 0.40%)</title><rect x="39.0260%" y="3381" width="0.4003%" height="15" fill="rgb(254,176,54)" fg:x="1170" fg:w="12"/><text x="39.2760%" y="3391.50"></text></g><g><title>boggle.exe`alloc::str::impl$4::to_owned(ref$ (12 samples, 0.40%)</title><rect x="39.0260%" y="3365" width="0.4003%" height="15" fill="rgb(210,32,8)" fg:x="1170" fg:w="12"/><text x="39.2760%" y="3375.50"></text></g><g><title>boggle.exe`alloc::slice::impl$9::to_owned(ref$&lt;slice2$ (12 samples, 0.40%)</title><rect x="39.0260%" y="3349" width="0.4003%" height="15" fill="rgb(235,52,38)" fg:x="1170" fg:w="12"/><text x="39.2760%" y="3359.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec(ref$&lt;slice2$ (11 samples, 0.37%)</title><rect x="39.0594%" y="3333" width="0.3669%" height="15" fill="rgb(231,4,44)" fg:x="1171" fg:w="11"/><text x="39.3094%" y="3343.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec_in(ref$&lt;slice2$ (11 samples, 0.37%)</title><rect x="39.0594%" y="3317" width="0.3669%" height="15" fill="rgb(249,2,32)" fg:x="1171" fg:w="11"/><text x="39.3094%" y="3327.50"></text></g><g><title>boggle.exe`alloc::slice::hack::to_vec(ref$&lt;slice2$ (11 samples, 0.37%)</title><rect x="39.0594%" y="3301" width="0.3669%" height="15" fill="rgb(224,65,26)" fg:x="1171" fg:w="11"/><text x="39.3094%" y="3311.50"></text></g><g><title>boggle.exe`alloc::slice::hack::impl$1::to_vec(ref$&lt;slice2$ (11 samples, 0.37%)</title><rect x="39.0594%" y="3285" width="0.3669%" height="15" fill="rgb(250,73,40)" fg:x="1171" fg:w="11"/><text x="39.3094%" y="3295.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (11 samples, 0.37%)</title><rect x="39.0594%" y="3269" width="0.3669%" height="15" fill="rgb(253,177,16)" fg:x="1171" fg:w="11"/><text x="39.3094%" y="3279.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (11 samples, 0.37%)</title><rect x="39.0594%" y="3253" width="0.3669%" height="15" fill="rgb(217,32,34)" fg:x="1171" fg:w="11"/><text x="39.3094%" y="3263.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (11 samples, 0.37%)</title><rect x="39.0594%" y="3237" width="0.3669%" height="15" fill="rgb(212,7,10)" fg:x="1171" fg:w="11"/><text x="39.3094%" y="3247.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (11 samples, 0.37%)</title><rect x="39.0594%" y="3221" width="0.3669%" height="15" fill="rgb(245,89,8)" fg:x="1171" fg:w="11"/><text x="39.3094%" y="3231.50"></text></g><g><title>boggle.exe`std::sys::alloc::windows::process_heap_alloc (1 samples, 0.03%)</title><rect x="39.3929%" y="3205" width="0.0334%" height="15" fill="rgb(237,16,53)" fg:x="1181" fg:w="1"/><text x="39.6429%" y="3215.50"></text></g><g><title>boggle.exe`core::sync::atomic::AtomicPtr::load (1 samples, 0.03%)</title><rect x="39.3929%" y="3189" width="0.0334%" height="15" fill="rgb(250,204,30)" fg:x="1181" fg:w="1"/><text x="39.6429%" y="3199.50"></text></g><g><title>boggle.exe`core::sync::atomic::atomic_load (1 samples, 0.03%)</title><rect x="39.3929%" y="3173" width="0.0334%" height="15" fill="rgb(208,77,27)" fg:x="1181" fg:w="1"/><text x="39.6429%" y="3183.50"></text></g><g><title>`0x7FFAC12C8007 (1 samples, 0.03%)</title><rect x="39.4930%" y="3205" width="0.0334%" height="15" fill="rgb(250,204,28)" fg:x="1184" fg:w="1"/><text x="39.7430%" y="3215.50"></text></g><g><title>`0x7FFAC12C80F4 (1 samples, 0.03%)</title><rect x="39.5264%" y="3205" width="0.0334%" height="15" fill="rgb(244,63,21)" fg:x="1185" fg:w="1"/><text x="39.7764%" y="3215.50"></text></g><g><title>`0x7FFAC12C815A (1 samples, 0.03%)</title><rect x="39.5597%" y="3205" width="0.0334%" height="15" fill="rgb(236,85,44)" fg:x="1186" fg:w="1"/><text x="39.8097%" y="3215.50"></text></g><g><title>`0x7FFAC12C818E (1 samples, 0.03%)</title><rect x="39.5931%" y="3205" width="0.0334%" height="15" fill="rgb(215,98,4)" fg:x="1187" fg:w="1"/><text x="39.8431%" y="3215.50"></text></g><g><title>boggle.exe`alloc::string::impl$6::clone (7 samples, 0.23%)</title><rect x="39.4263%" y="3381" width="0.2335%" height="15" fill="rgb(235,38,11)" fg:x="1182" fg:w="7"/><text x="39.6763%" y="3391.50"></text></g><g><title>boggle.exe`alloc::vec::impl$11::clone (6 samples, 0.20%)</title><rect x="39.4596%" y="3365" width="0.2001%" height="15" fill="rgb(254,186,25)" fg:x="1183" fg:w="6"/><text x="39.7096%" y="3375.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec_in (6 samples, 0.20%)</title><rect x="39.4596%" y="3349" width="0.2001%" height="15" fill="rgb(225,55,31)" fg:x="1183" fg:w="6"/><text x="39.7096%" y="3359.50"></text></g><g><title>boggle.exe`alloc::slice::hack::to_vec (6 samples, 0.20%)</title><rect x="39.4596%" y="3333" width="0.2001%" height="15" fill="rgb(211,15,21)" fg:x="1183" fg:w="6"/><text x="39.7096%" y="3343.50"></text></g><g><title>boggle.exe`alloc::slice::hack::impl$1::to_vec (6 samples, 0.20%)</title><rect x="39.4596%" y="3317" width="0.2001%" height="15" fill="rgb(215,187,41)" fg:x="1183" fg:w="6"/><text x="39.7096%" y="3327.50"></text></g><g><title>boggle.exe`alloc::vec::Vec::with_capacity_in (6 samples, 0.20%)</title><rect x="39.4596%" y="3301" width="0.2001%" height="15" fill="rgb(248,69,32)" fg:x="1183" fg:w="6"/><text x="39.7096%" y="3311.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec::with_capacity_in (6 samples, 0.20%)</title><rect x="39.4596%" y="3285" width="0.2001%" height="15" fill="rgb(252,102,52)" fg:x="1183" fg:w="6"/><text x="39.7096%" y="3295.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner::with_capacity_in (6 samples, 0.20%)</title><rect x="39.4596%" y="3269" width="0.2001%" height="15" fill="rgb(253,140,32)" fg:x="1183" fg:w="6"/><text x="39.7096%" y="3279.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner::try_allocate_in (6 samples, 0.20%)</title><rect x="39.4596%" y="3253" width="0.2001%" height="15" fill="rgb(216,56,42)" fg:x="1183" fg:w="6"/><text x="39.7096%" y="3263.50"></text></g><g><title>`0x7FFAC12C7776 (5 samples, 0.17%)</title><rect x="39.4930%" y="3237" width="0.1668%" height="15" fill="rgb(216,184,14)" fg:x="1184" fg:w="5"/><text x="39.7430%" y="3247.50"></text></g><g><title>`0x7FFAC12C78B4 (5 samples, 0.17%)</title><rect x="39.4930%" y="3221" width="0.1668%" height="15" fill="rgb(237,187,27)" fg:x="1184" fg:w="5"/><text x="39.7430%" y="3231.50"></text></g><g><title>`0x7FFAC12C8A44 (1 samples, 0.03%)</title><rect x="39.6264%" y="3205" width="0.0334%" height="15" fill="rgb(219,65,3)" fg:x="1188" fg:w="1"/><text x="39.8764%" y="3215.50"></text></g><g><title>`0x7FFAC1371345 (1 samples, 0.03%)</title><rect x="39.6264%" y="3189" width="0.0334%" height="15" fill="rgb(245,83,25)" fg:x="1188" fg:w="1"/><text x="39.8764%" y="3199.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;::push (8 samples, 0.27%)</title><rect x="39.4263%" y="3397" width="0.2668%" height="15" fill="rgb(214,205,45)" fg:x="1182" fg:w="8"/><text x="39.6763%" y="3407.50"></text></g><g><title>boggle.exe`core::ptr::write (1 samples, 0.03%)</title><rect x="39.6598%" y="3381" width="0.0334%" height="15" fill="rgb(241,20,18)" fg:x="1189" fg:w="1"/><text x="39.9098%" y="3391.50"></text></g><g><title>boggle.exe`alloc::string::String::pop (414 samples, 13.81%)</title><rect x="26.3175%" y="3461" width="13.8092%" height="15" fill="rgb(232,163,23)" fg:x="789" fg:w="414"/><text x="26.5675%" y="3471.50">boggle.exe`alloc::str..</text></g><g><title>boggle.exe`alloc::string::impl$28::deref (414 samples, 13.81%)</title><rect x="26.3175%" y="3445" width="13.8092%" height="15" fill="rgb(214,5,46)" fg:x="789" fg:w="414"/><text x="26.5675%" y="3455.50">boggle.exe`alloc::str..</text></g><g><title>boggle.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (414 samples, 13.81%)</title><rect x="26.3175%" y="3429" width="13.8092%" height="15" fill="rgb(229,78,17)" fg:x="789" fg:w="414"/><text x="26.5675%" y="3439.50">boggle.exe`alloc::vec..</text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::collect_words(boggle::utils::dict_trie::DictTrieNode*, ref$&lt;str$&gt;, alloc::vec::Vec (414 samples, 13.81%)</title><rect x="26.3175%" y="3413" width="13.8092%" height="15" fill="rgb(248,89,10)" fg:x="789" fg:w="414"/><text x="26.5675%" y="3423.50">boggle.exe`boggle::ut..</text></g><g><title>boggle.exe`std::collections::hash::map::impl$36::into_iter(std::collections::hash::map::HashMap (13 samples, 0.43%)</title><rect x="39.6931%" y="3397" width="0.4336%" height="15" fill="rgb(248,54,15)" fg:x="1190" fg:w="13"/><text x="39.9431%" y="3407.50"></text></g><g><title>boggle.exe`std::collections::hash::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;::iter (13 samples, 0.43%)</title><rect x="39.6931%" y="3381" width="0.4336%" height="15" fill="rgb(223,116,6)" fg:x="1190" fg:w="13"/><text x="39.9431%" y="3391.50"></text></g><g><title>boggle.exe`hashbrown::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt;::iter (13 samples, 0.43%)</title><rect x="39.6931%" y="3365" width="0.4336%" height="15" fill="rgb(205,125,38)" fg:x="1190" fg:w="13"/><text x="39.9431%" y="3375.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTable&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;::iter (13 samples, 0.43%)</title><rect x="39.6931%" y="3349" width="0.4336%" height="15" fill="rgb(251,78,38)" fg:x="1190" fg:w="13"/><text x="39.9431%" y="3359.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::iter (13 samples, 0.43%)</title><rect x="39.6931%" y="3333" width="0.4336%" height="15" fill="rgb(253,78,28)" fg:x="1190" fg:w="13"/><text x="39.9431%" y="3343.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawIterRange&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::new(unsigned char*, hashbrown::raw::Bucket&lt;tuple$ (13 samples, 0.43%)</title><rect x="39.6931%" y="3317" width="0.4336%" height="15" fill="rgb(209,120,3)" fg:x="1190" fg:w="13"/><text x="39.9431%" y="3327.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::load_aligned (13 samples, 0.43%)</title><rect x="39.6931%" y="3301" width="0.4336%" height="15" fill="rgb(238,229,9)" fg:x="1190" fg:w="13"/><text x="39.9431%" y="3311.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::match_empty_or_deleted (13 samples, 0.43%)</title><rect x="39.6931%" y="3285" width="0.4336%" height="15" fill="rgb(253,159,18)" fg:x="1190" fg:w="13"/><text x="39.9431%" y="3295.50"></text></g><g><title>boggle.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (13 samples, 0.43%)</title><rect x="39.6931%" y="3269" width="0.4336%" height="15" fill="rgb(244,42,34)" fg:x="1190" fg:w="13"/><text x="39.9431%" y="3279.50"></text></g><g><title>`0x7FFAC12D53D2 (1 samples, 0.03%)</title><rect x="40.1601%" y="3221" width="0.0334%" height="15" fill="rgb(224,8,7)" fg:x="1204" fg:w="1"/><text x="40.4101%" y="3231.50"></text></g><g><title>`0x7FFAC12D53FD (1 samples, 0.03%)</title><rect x="40.1935%" y="3221" width="0.0334%" height="15" fill="rgb(210,201,45)" fg:x="1205" fg:w="1"/><text x="40.4435%" y="3231.50"></text></g><g><title>`0x7FFAC12C80B4 (1 samples, 0.03%)</title><rect x="40.2268%" y="3157" width="0.0334%" height="15" fill="rgb(252,185,21)" fg:x="1206" fg:w="1"/><text x="40.4768%" y="3167.50"></text></g><g><title>`0x7FFAC12C80CE (1 samples, 0.03%)</title><rect x="40.2602%" y="3157" width="0.0334%" height="15" fill="rgb(223,131,1)" fg:x="1207" fg:w="1"/><text x="40.5102%" y="3167.50"></text></g><g><title>`0x7FFAC12D5DAA (3 samples, 0.10%)</title><rect x="40.2268%" y="3205" width="0.1001%" height="15" fill="rgb(245,141,16)" fg:x="1206" fg:w="3"/><text x="40.4768%" y="3215.50"></text></g><g><title>`0x7FFAC12C7776 (3 samples, 0.10%)</title><rect x="40.2268%" y="3189" width="0.1001%" height="15" fill="rgb(229,55,45)" fg:x="1206" fg:w="3"/><text x="40.4768%" y="3199.50"></text></g><g><title>`0x7FFAC12C78B4 (3 samples, 0.10%)</title><rect x="40.2268%" y="3173" width="0.1001%" height="15" fill="rgb(208,92,15)" fg:x="1206" fg:w="3"/><text x="40.4768%" y="3183.50"></text></g><g><title>`0x7FFAC12C85F0 (1 samples, 0.03%)</title><rect x="40.2935%" y="3157" width="0.0334%" height="15" fill="rgb(234,185,47)" fg:x="1208" fg:w="1"/><text x="40.5435%" y="3167.50"></text></g><g><title>`0x7FFAC12D5DF9 (1 samples, 0.03%)</title><rect x="40.3269%" y="3205" width="0.0334%" height="15" fill="rgb(253,104,50)" fg:x="1209" fg:w="1"/><text x="40.5769%" y="3215.50"></text></g><g><title>`0x7FFAC12D2396 (1 samples, 0.03%)</title><rect x="40.3602%" y="3189" width="0.0334%" height="15" fill="rgb(205,70,7)" fg:x="1210" fg:w="1"/><text x="40.6102%" y="3199.50"></text></g><g><title>`0x7FFAC12D23A7 (3 samples, 0.10%)</title><rect x="40.3936%" y="3189" width="0.1001%" height="15" fill="rgb(240,178,43)" fg:x="1211" fg:w="3"/><text x="40.6436%" y="3199.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_mut_ptr (12 samples, 0.40%)</title><rect x="40.1268%" y="3429" width="0.4003%" height="15" fill="rgb(214,112,2)" fg:x="1203" fg:w="12"/><text x="40.3768%" y="3439.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::ptr (12 samples, 0.40%)</title><rect x="40.1268%" y="3413" width="0.4003%" height="15" fill="rgb(206,46,17)" fg:x="1203" fg:w="12"/><text x="40.3768%" y="3423.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (12 samples, 0.40%)</title><rect x="40.1268%" y="3397" width="0.4003%" height="15" fill="rgb(225,220,16)" fg:x="1203" fg:w="12"/><text x="40.3768%" y="3407.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (12 samples, 0.40%)</title><rect x="40.1268%" y="3381" width="0.4003%" height="15" fill="rgb(238,65,40)" fg:x="1203" fg:w="12"/><text x="40.3768%" y="3391.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::grow_one&lt;u8,alloc::alloc::Global&gt; (12 samples, 0.40%)</title><rect x="40.1268%" y="3365" width="0.4003%" height="15" fill="rgb(230,151,21)" fg:x="1203" fg:w="12"/><text x="40.3768%" y="3375.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_one (12 samples, 0.40%)</title><rect x="40.1268%" y="3349" width="0.4003%" height="15" fill="rgb(218,58,49)" fg:x="1203" fg:w="12"/><text x="40.3768%" y="3359.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (12 samples, 0.40%)</title><rect x="40.1268%" y="3333" width="0.4003%" height="15" fill="rgb(219,179,14)" fg:x="1203" fg:w="12"/><text x="40.3768%" y="3343.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (12 samples, 0.40%)</title><rect x="40.1268%" y="3317" width="0.4003%" height="15" fill="rgb(223,72,1)" fg:x="1203" fg:w="12"/><text x="40.3768%" y="3327.50"></text></g><g><title>boggle.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (12 samples, 0.40%)</title><rect x="40.1268%" y="3301" width="0.4003%" height="15" fill="rgb(238,126,10)" fg:x="1203" fg:w="12"/><text x="40.3768%" y="3311.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (11 samples, 0.37%)</title><rect x="40.1601%" y="3285" width="0.3669%" height="15" fill="rgb(224,206,38)" fg:x="1204" fg:w="11"/><text x="40.4101%" y="3295.50"></text></g><g><title>boggle.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (11 samples, 0.37%)</title><rect x="40.1601%" y="3269" width="0.3669%" height="15" fill="rgb(212,201,54)" fg:x="1204" fg:w="11"/><text x="40.4101%" y="3279.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (11 samples, 0.37%)</title><rect x="40.1601%" y="3253" width="0.3669%" height="15" fill="rgb(218,154,48)" fg:x="1204" fg:w="11"/><text x="40.4101%" y="3263.50"></text></g><g><title>`0x7FFAC12D5376 (11 samples, 0.37%)</title><rect x="40.1601%" y="3237" width="0.3669%" height="15" fill="rgb(232,93,24)" fg:x="1204" fg:w="11"/><text x="40.4101%" y="3247.50"></text></g><g><title>`0x7FFAC12D54B5 (9 samples, 0.30%)</title><rect x="40.2268%" y="3221" width="0.3002%" height="15" fill="rgb(245,30,21)" fg:x="1206" fg:w="9"/><text x="40.4768%" y="3231.50"></text></g><g><title>`0x7FFAC12D5E0B (5 samples, 0.17%)</title><rect x="40.3602%" y="3205" width="0.1668%" height="15" fill="rgb(242,148,29)" fg:x="1210" fg:w="5"/><text x="40.6102%" y="3215.50"></text></g><g><title>`0x7FFAC12D23DD (1 samples, 0.03%)</title><rect x="40.4937%" y="3189" width="0.0334%" height="15" fill="rgb(244,153,54)" fg:x="1214" fg:w="1"/><text x="40.7437%" y="3199.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::push (13 samples, 0.43%)</title><rect x="40.1268%" y="3445" width="0.4336%" height="15" fill="rgb(252,87,22)" fg:x="1203" fg:w="13"/><text x="40.3768%" y="3455.50"></text></g><g><title>boggle.exe`core::ptr::write (1 samples, 0.03%)</title><rect x="40.5270%" y="3429" width="0.0334%" height="15" fill="rgb(210,51,29)" fg:x="1215" fg:w="1"/><text x="40.7770%" y="3439.50"></text></g><g><title>boggle.exe`alloc::string::String::push (25 samples, 0.83%)</title><rect x="40.1268%" y="3461" width="0.8339%" height="15" fill="rgb(242,136,47)" fg:x="1203" fg:w="25"/><text x="40.3768%" y="3471.50"></text></g><g><title>boggle.exe`core::char::methods::impl$0::len_utf8 (12 samples, 0.40%)</title><rect x="40.5604%" y="3445" width="0.4003%" height="15" fill="rgb(238,68,4)" fg:x="1216" fg:w="12"/><text x="40.8104%" y="3455.50"></text></g><g><title>boggle.exe`core::char::methods::len_utf8 (12 samples, 0.40%)</title><rect x="40.5604%" y="3429" width="0.4003%" height="15" fill="rgb(242,161,30)" fg:x="1216" fg:w="12"/><text x="40.8104%" y="3439.50"></text></g><g><title>`0x7FFAC12C7EB5 (1 samples, 0.03%)</title><rect x="40.9606%" y="3237" width="0.0334%" height="15" fill="rgb(218,58,44)" fg:x="1228" fg:w="1"/><text x="41.2106%" y="3247.50"></text></g><g><title>`0x7FFAC12C8047 (1 samples, 0.03%)</title><rect x="40.9940%" y="3237" width="0.0334%" height="15" fill="rgb(252,125,32)" fg:x="1229" fg:w="1"/><text x="41.2440%" y="3247.50"></text></g><g><title>`0x7FFAC12C809C (1 samples, 0.03%)</title><rect x="41.0274%" y="3237" width="0.0334%" height="15" fill="rgb(219,178,0)" fg:x="1230" fg:w="1"/><text x="41.2774%" y="3247.50"></text></g><g><title>`0x7FFAC12C80CE (1 samples, 0.03%)</title><rect x="41.0607%" y="3237" width="0.0334%" height="15" fill="rgb(213,152,7)" fg:x="1231" fg:w="1"/><text x="41.3107%" y="3247.50"></text></g><g><title>`0x7FFAC12C8142 (1 samples, 0.03%)</title><rect x="41.0941%" y="3237" width="0.0334%" height="15" fill="rgb(249,109,34)" fg:x="1232" fg:w="1"/><text x="41.3441%" y="3247.50"></text></g><g><title>`0x7FFAC12C8165 (1 samples, 0.03%)</title><rect x="41.1274%" y="3237" width="0.0334%" height="15" fill="rgb(232,96,21)" fg:x="1233" fg:w="1"/><text x="41.3774%" y="3247.50"></text></g><g><title>`0x7FFAC12C7776 (7 samples, 0.23%)</title><rect x="40.9606%" y="3269" width="0.2335%" height="15" fill="rgb(228,27,39)" fg:x="1228" fg:w="7"/><text x="41.2106%" y="3279.50"></text></g><g><title>`0x7FFAC12C78B4 (7 samples, 0.23%)</title><rect x="40.9606%" y="3253" width="0.2335%" height="15" fill="rgb(211,182,52)" fg:x="1228" fg:w="7"/><text x="41.2106%" y="3263.50"></text></g><g><title>`0x7FFAC12C82F3 (1 samples, 0.03%)</title><rect x="41.1608%" y="3237" width="0.0334%" height="15" fill="rgb(234,178,38)" fg:x="1234" fg:w="1"/><text x="41.4108%" y="3247.50"></text></g><g><title>boggle.exe`alloc::string::impl$102::to_string(ref$ (8 samples, 0.27%)</title><rect x="40.9606%" y="3461" width="0.2668%" height="15" fill="rgb(221,111,3)" fg:x="1228" fg:w="8"/><text x="41.2106%" y="3471.50"></text></g><g><title>boggle.exe`alloc::string::impl$44::from(ref$ (8 samples, 0.27%)</title><rect x="40.9606%" y="3445" width="0.2668%" height="15" fill="rgb(228,175,21)" fg:x="1228" fg:w="8"/><text x="41.2106%" y="3455.50"></text></g><g><title>boggle.exe`alloc::str::impl$4::to_owned(ref$ (8 samples, 0.27%)</title><rect x="40.9606%" y="3429" width="0.2668%" height="15" fill="rgb(228,174,43)" fg:x="1228" fg:w="8"/><text x="41.2106%" y="3439.50"></text></g><g><title>boggle.exe`alloc::slice::impl$9::to_owned(ref$&lt;slice2$ (8 samples, 0.27%)</title><rect x="40.9606%" y="3413" width="0.2668%" height="15" fill="rgb(211,191,0)" fg:x="1228" fg:w="8"/><text x="41.2106%" y="3423.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec(ref$&lt;slice2$ (8 samples, 0.27%)</title><rect x="40.9606%" y="3397" width="0.2668%" height="15" fill="rgb(253,117,3)" fg:x="1228" fg:w="8"/><text x="41.2106%" y="3407.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec_in(ref$&lt;slice2$ (8 samples, 0.27%)</title><rect x="40.9606%" y="3381" width="0.2668%" height="15" fill="rgb(241,127,19)" fg:x="1228" fg:w="8"/><text x="41.2106%" y="3391.50"></text></g><g><title>boggle.exe`alloc::slice::hack::to_vec(ref$&lt;slice2$ (8 samples, 0.27%)</title><rect x="40.9606%" y="3365" width="0.2668%" height="15" fill="rgb(218,103,12)" fg:x="1228" fg:w="8"/><text x="41.2106%" y="3375.50"></text></g><g><title>boggle.exe`alloc::slice::hack::impl$1::to_vec(ref$&lt;slice2$ (8 samples, 0.27%)</title><rect x="40.9606%" y="3349" width="0.2668%" height="15" fill="rgb(236,214,43)" fg:x="1228" fg:w="8"/><text x="41.2106%" y="3359.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (8 samples, 0.27%)</title><rect x="40.9606%" y="3333" width="0.2668%" height="15" fill="rgb(244,144,19)" fg:x="1228" fg:w="8"/><text x="41.2106%" y="3343.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (8 samples, 0.27%)</title><rect x="40.9606%" y="3317" width="0.2668%" height="15" fill="rgb(246,188,10)" fg:x="1228" fg:w="8"/><text x="41.2106%" y="3327.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (8 samples, 0.27%)</title><rect x="40.9606%" y="3301" width="0.2668%" height="15" fill="rgb(212,193,33)" fg:x="1228" fg:w="8"/><text x="41.2106%" y="3311.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (8 samples, 0.27%)</title><rect x="40.9606%" y="3285" width="0.2668%" height="15" fill="rgb(241,51,29)" fg:x="1228" fg:w="8"/><text x="41.2106%" y="3295.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::allocate (1 samples, 0.03%)</title><rect x="41.1941%" y="3269" width="0.0334%" height="15" fill="rgb(211,58,19)" fg:x="1235" fg:w="1"/><text x="41.4441%" y="3279.50"></text></g><g><title>boggle.exe`alloc::alloc::Global::alloc_impl (1 samples, 0.03%)</title><rect x="41.1941%" y="3253" width="0.0334%" height="15" fill="rgb(229,111,26)" fg:x="1235" fg:w="1"/><text x="41.4441%" y="3263.50"></text></g><g><title>boggle.exe`alloc::alloc::alloc (1 samples, 0.03%)</title><rect x="41.1941%" y="3237" width="0.0334%" height="15" fill="rgb(213,115,40)" fg:x="1235" fg:w="1"/><text x="41.4441%" y="3247.50"></text></g><g><title>boggle.exe`core::ptr::read_volatile (1 samples, 0.03%)</title><rect x="41.1941%" y="3221" width="0.0334%" height="15" fill="rgb(209,56,44)" fg:x="1235" fg:w="1"/><text x="41.4441%" y="3231.50"></text></g><g><title>`0x7FFAC12C77E7 (1 samples, 0.03%)</title><rect x="41.2608%" y="3285" width="0.0334%" height="15" fill="rgb(230,108,32)" fg:x="1237" fg:w="1"/><text x="41.5108%" y="3295.50"></text></g><g><title>`0x7FFAC12C787B (1 samples, 0.03%)</title><rect x="41.2942%" y="3285" width="0.0334%" height="15" fill="rgb(216,165,31)" fg:x="1238" fg:w="1"/><text x="41.5442%" y="3295.50"></text></g><g><title>`0x7FFAC12C78B4 (1 samples, 0.03%)</title><rect x="41.3276%" y="3285" width="0.0334%" height="15" fill="rgb(218,122,21)" fg:x="1239" fg:w="1"/><text x="41.5776%" y="3295.50"></text></g><g><title>`0x7FFAC12C85FE (1 samples, 0.03%)</title><rect x="41.3276%" y="3269" width="0.0334%" height="15" fill="rgb(223,224,47)" fg:x="1239" fg:w="1"/><text x="41.5776%" y="3279.50"></text></g><g><title>`0x7FFAC12C78C0 (1 samples, 0.03%)</title><rect x="41.3609%" y="3285" width="0.0334%" height="15" fill="rgb(238,102,44)" fg:x="1240" fg:w="1"/><text x="41.6109%" y="3295.50"></text></g><g><title>`0x7FFAC12C7776 (5 samples, 0.17%)</title><rect x="41.2608%" y="3301" width="0.1668%" height="15" fill="rgb(236,46,40)" fg:x="1237" fg:w="5"/><text x="41.5108%" y="3311.50"></text></g><g><title>`0x7FFAC12C79A1 (1 samples, 0.03%)</title><rect x="41.3943%" y="3285" width="0.0334%" height="15" fill="rgb(247,202,50)" fg:x="1241" fg:w="1"/><text x="41.6443%" y="3295.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;::push (7 samples, 0.23%)</title><rect x="41.2275%" y="3461" width="0.2335%" height="15" fill="rgb(209,99,20)" fg:x="1236" fg:w="7"/><text x="41.4775%" y="3471.50"></text></g><g><title>boggle.exe`alloc::string::impl$6::clone (6 samples, 0.20%)</title><rect x="41.2608%" y="3445" width="0.2001%" height="15" fill="rgb(252,27,34)" fg:x="1237" fg:w="6"/><text x="41.5108%" y="3455.50"></text></g><g><title>boggle.exe`alloc::vec::impl$11::clone (6 samples, 0.20%)</title><rect x="41.2608%" y="3429" width="0.2001%" height="15" fill="rgb(215,206,23)" fg:x="1237" fg:w="6"/><text x="41.5108%" y="3439.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec_in (6 samples, 0.20%)</title><rect x="41.2608%" y="3413" width="0.2001%" height="15" fill="rgb(212,135,36)" fg:x="1237" fg:w="6"/><text x="41.5108%" y="3423.50"></text></g><g><title>boggle.exe`alloc::slice::hack::to_vec (6 samples, 0.20%)</title><rect x="41.2608%" y="3397" width="0.2001%" height="15" fill="rgb(240,189,1)" fg:x="1237" fg:w="6"/><text x="41.5108%" y="3407.50"></text></g><g><title>boggle.exe`alloc::slice::hack::impl$1::to_vec (6 samples, 0.20%)</title><rect x="41.2608%" y="3381" width="0.2001%" height="15" fill="rgb(242,56,20)" fg:x="1237" fg:w="6"/><text x="41.5108%" y="3391.50"></text></g><g><title>boggle.exe`alloc::vec::Vec::with_capacity_in (6 samples, 0.20%)</title><rect x="41.2608%" y="3365" width="0.2001%" height="15" fill="rgb(247,132,33)" fg:x="1237" fg:w="6"/><text x="41.5108%" y="3375.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec::with_capacity_in (6 samples, 0.20%)</title><rect x="41.2608%" y="3349" width="0.2001%" height="15" fill="rgb(208,149,11)" fg:x="1237" fg:w="6"/><text x="41.5108%" y="3359.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner::with_capacity_in (6 samples, 0.20%)</title><rect x="41.2608%" y="3333" width="0.2001%" height="15" fill="rgb(211,33,11)" fg:x="1237" fg:w="6"/><text x="41.5108%" y="3343.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner::try_allocate_in (6 samples, 0.20%)</title><rect x="41.2608%" y="3317" width="0.2001%" height="15" fill="rgb(221,29,38)" fg:x="1237" fg:w="6"/><text x="41.5108%" y="3327.50"></text></g><g><title>`0x7FFAC12C7784 (1 samples, 0.03%)</title><rect x="41.4276%" y="3301" width="0.0334%" height="15" fill="rgb(206,182,49)" fg:x="1242" fg:w="1"/><text x="41.6776%" y="3311.50"></text></g><g><title>boggle.exe`core::ptr::const_ptr::impl$0::add (1 samples, 0.03%)</title><rect x="41.4610%" y="3365" width="0.0334%" height="15" fill="rgb(216,140,1)" fg:x="1243" fg:w="1"/><text x="41.7110%" y="3375.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawIterRange&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::new(unsigned char*, hashbrown::raw::Bucket&lt;tuple$ (9 samples, 0.30%)</title><rect x="41.4610%" y="3381" width="0.3002%" height="15" fill="rgb(232,57,40)" fg:x="1243" fg:w="9"/><text x="41.7110%" y="3391.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::load_aligned (8 samples, 0.27%)</title><rect x="41.4943%" y="3365" width="0.2668%" height="15" fill="rgb(224,186,18)" fg:x="1244" fg:w="8"/><text x="41.7443%" y="3375.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::match_empty_or_deleted (8 samples, 0.27%)</title><rect x="41.4943%" y="3349" width="0.2668%" height="15" fill="rgb(215,121,11)" fg:x="1244" fg:w="8"/><text x="41.7443%" y="3359.50"></text></g><g><title>boggle.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (8 samples, 0.27%)</title><rect x="41.4943%" y="3333" width="0.2668%" height="15" fill="rgb(245,147,10)" fg:x="1244" fg:w="8"/><text x="41.7443%" y="3343.50"></text></g><g><title>boggle.exe`std::collections::hash::map::impl$36::into_iter(std::collections::hash::map::HashMap (10 samples, 0.33%)</title><rect x="41.4610%" y="3461" width="0.3336%" height="15" fill="rgb(238,153,13)" fg:x="1243" fg:w="10"/><text x="41.7110%" y="3471.50"></text></g><g><title>boggle.exe`std::collections::hash::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;::iter (10 samples, 0.33%)</title><rect x="41.4610%" y="3445" width="0.3336%" height="15" fill="rgb(233,108,0)" fg:x="1243" fg:w="10"/><text x="41.7110%" y="3455.50"></text></g><g><title>boggle.exe`hashbrown::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt;::iter (10 samples, 0.33%)</title><rect x="41.4610%" y="3429" width="0.3336%" height="15" fill="rgb(212,157,17)" fg:x="1243" fg:w="10"/><text x="41.7110%" y="3439.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTable&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;::iter (10 samples, 0.33%)</title><rect x="41.4610%" y="3413" width="0.3336%" height="15" fill="rgb(225,213,38)" fg:x="1243" fg:w="10"/><text x="41.7110%" y="3423.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::iter (10 samples, 0.33%)</title><rect x="41.4610%" y="3397" width="0.3336%" height="15" fill="rgb(248,16,11)" fg:x="1243" fg:w="10"/><text x="41.7110%" y="3407.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::data_end (1 samples, 0.03%)</title><rect x="41.7612%" y="3381" width="0.0334%" height="15" fill="rgb(241,33,4)" fg:x="1252" fg:w="1"/><text x="42.0112%" y="3391.50"></text></g><g><title>boggle.exe`alloc::string::String::pop (471 samples, 15.71%)</title><rect x="26.1508%" y="3525" width="15.7105%" height="15" fill="rgb(222,26,43)" fg:x="784" fg:w="471"/><text x="26.4008%" y="3535.50">boggle.exe`alloc::string..</text></g><g><title>boggle.exe`alloc::string::impl$28::deref (471 samples, 15.71%)</title><rect x="26.1508%" y="3509" width="15.7105%" height="15" fill="rgb(243,29,36)" fg:x="784" fg:w="471"/><text x="26.4008%" y="3519.50">boggle.exe`alloc::string..</text></g><g><title>boggle.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (471 samples, 15.71%)</title><rect x="26.1508%" y="3493" width="15.7105%" height="15" fill="rgb(241,9,27)" fg:x="784" fg:w="471"/><text x="26.4008%" y="3503.50">boggle.exe`alloc::vec::i..</text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::collect_words(boggle::utils::dict_trie::DictTrieNode*, ref$&lt;str$&gt;, alloc::vec::Vec (471 samples, 15.71%)</title><rect x="26.1508%" y="3477" width="15.7105%" height="15" fill="rgb(205,117,26)" fg:x="784" fg:w="471"/><text x="26.4008%" y="3487.50">boggle.exe`boggle::utils..</text></g><g><title>boggle.exe`std::collections::hash::map::impl$39::next(std::collections::hash::map::Iter (2 samples, 0.07%)</title><rect x="41.7945%" y="3461" width="0.0667%" height="15" fill="rgb(209,80,39)" fg:x="1253" fg:w="2"/><text x="42.0445%" y="3471.50"></text></g><g><title>boggle.exe`hashbrown::map::impl$60::next(hashbrown::map::Iter (2 samples, 0.07%)</title><rect x="41.7945%" y="3445" width="0.0667%" height="15" fill="rgb(239,155,6)" fg:x="1253" fg:w="2"/><text x="42.0445%" y="3455.50"></text></g><g><title>boggle.exe`hashbrown::raw::impl$28::next(hashbrown::raw::RawIter&lt;tuple$ (2 samples, 0.07%)</title><rect x="41.7945%" y="3429" width="0.0667%" height="15" fill="rgb(212,104,12)" fg:x="1253" fg:w="2"/><text x="42.0445%" y="3439.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawIterRange&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::next_impl (2 samples, 0.07%)</title><rect x="41.7945%" y="3413" width="0.0667%" height="15" fill="rgb(234,204,3)" fg:x="1253" fg:w="2"/><text x="42.0445%" y="3423.50"></text></g><g><title>boggle.exe`hashbrown::raw::bitmask::impl$3::next (2 samples, 0.07%)</title><rect x="41.7945%" y="3397" width="0.0667%" height="15" fill="rgb(251,218,7)" fg:x="1253" fg:w="2"/><text x="42.0445%" y="3407.50"></text></g><g><title>boggle.exe`hashbrown::raw::bitmask::BitMask::remove_lowest_bit (2 samples, 0.07%)</title><rect x="41.7945%" y="3381" width="0.0667%" height="15" fill="rgb(221,81,32)" fg:x="1253" fg:w="2"/><text x="42.0445%" y="3391.50"></text></g><g><title>`0x7FFAC12D5C95 (1 samples, 0.03%)</title><rect x="41.8612%" y="3269" width="0.0334%" height="15" fill="rgb(214,152,26)" fg:x="1255" fg:w="1"/><text x="42.1112%" y="3279.50"></text></g><g><title>`0x7FFAC12C7FF0 (1 samples, 0.03%)</title><rect x="41.8946%" y="3221" width="0.0334%" height="15" fill="rgb(223,22,3)" fg:x="1256" fg:w="1"/><text x="42.1446%" y="3231.50"></text></g><g><title>`0x7FFAC12C8047 (2 samples, 0.07%)</title><rect x="41.9280%" y="3221" width="0.0667%" height="15" fill="rgb(207,174,7)" fg:x="1257" fg:w="2"/><text x="42.1780%" y="3231.50"></text></g><g><title>`0x7FFAC12C78B4 (4 samples, 0.13%)</title><rect x="41.8946%" y="3237" width="0.1334%" height="15" fill="rgb(224,19,52)" fg:x="1256" fg:w="4"/><text x="42.1446%" y="3247.50"></text></g><g><title>`0x7FFAC12C8538 (1 samples, 0.03%)</title><rect x="41.9947%" y="3221" width="0.0334%" height="15" fill="rgb(228,24,14)" fg:x="1259" fg:w="1"/><text x="42.2447%" y="3231.50"></text></g><g><title>`0x7FFAC12D5DAA (5 samples, 0.17%)</title><rect x="41.8946%" y="3269" width="0.1668%" height="15" fill="rgb(230,153,43)" fg:x="1256" fg:w="5"/><text x="42.1446%" y="3279.50"></text></g><g><title>`0x7FFAC12C7776 (5 samples, 0.17%)</title><rect x="41.8946%" y="3253" width="0.1668%" height="15" fill="rgb(231,106,12)" fg:x="1256" fg:w="5"/><text x="42.1446%" y="3263.50"></text></g><g><title>`0x7FFAC12C7998 (1 samples, 0.03%)</title><rect x="42.0280%" y="3237" width="0.0334%" height="15" fill="rgb(215,92,2)" fg:x="1260" fg:w="1"/><text x="42.2780%" y="3247.50"></text></g><g><title>`0x7FFAC12D5DF9 (1 samples, 0.03%)</title><rect x="42.0614%" y="3269" width="0.0334%" height="15" fill="rgb(249,143,25)" fg:x="1261" fg:w="1"/><text x="42.3114%" y="3279.50"></text></g><g><title>`0x7FFAC1404EC5 (1 samples, 0.03%)</title><rect x="42.0614%" y="3253" width="0.0334%" height="15" fill="rgb(252,7,35)" fg:x="1261" fg:w="1"/><text x="42.3114%" y="3263.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::push (9 samples, 0.30%)</title><rect x="41.8612%" y="3509" width="0.3002%" height="15" fill="rgb(216,69,40)" fg:x="1255" fg:w="9"/><text x="42.1112%" y="3519.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_mut_ptr (9 samples, 0.30%)</title><rect x="41.8612%" y="3493" width="0.3002%" height="15" fill="rgb(240,36,33)" fg:x="1255" fg:w="9"/><text x="42.1112%" y="3503.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::ptr (9 samples, 0.30%)</title><rect x="41.8612%" y="3477" width="0.3002%" height="15" fill="rgb(231,128,14)" fg:x="1255" fg:w="9"/><text x="42.1112%" y="3487.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (9 samples, 0.30%)</title><rect x="41.8612%" y="3461" width="0.3002%" height="15" fill="rgb(245,143,14)" fg:x="1255" fg:w="9"/><text x="42.1112%" y="3471.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (9 samples, 0.30%)</title><rect x="41.8612%" y="3445" width="0.3002%" height="15" fill="rgb(222,130,28)" fg:x="1255" fg:w="9"/><text x="42.1112%" y="3455.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::grow_one&lt;u8,alloc::alloc::Global&gt; (9 samples, 0.30%)</title><rect x="41.8612%" y="3429" width="0.3002%" height="15" fill="rgb(212,10,48)" fg:x="1255" fg:w="9"/><text x="42.1112%" y="3439.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_one (9 samples, 0.30%)</title><rect x="41.8612%" y="3413" width="0.3002%" height="15" fill="rgb(254,118,45)" fg:x="1255" fg:w="9"/><text x="42.1112%" y="3423.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (9 samples, 0.30%)</title><rect x="41.8612%" y="3397" width="0.3002%" height="15" fill="rgb(228,6,45)" fg:x="1255" fg:w="9"/><text x="42.1112%" y="3407.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (9 samples, 0.30%)</title><rect x="41.8612%" y="3381" width="0.3002%" height="15" fill="rgb(241,18,35)" fg:x="1255" fg:w="9"/><text x="42.1112%" y="3391.50"></text></g><g><title>boggle.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (9 samples, 0.30%)</title><rect x="41.8612%" y="3365" width="0.3002%" height="15" fill="rgb(227,214,53)" fg:x="1255" fg:w="9"/><text x="42.1112%" y="3375.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (9 samples, 0.30%)</title><rect x="41.8612%" y="3349" width="0.3002%" height="15" fill="rgb(224,107,51)" fg:x="1255" fg:w="9"/><text x="42.1112%" y="3359.50"></text></g><g><title>boggle.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (9 samples, 0.30%)</title><rect x="41.8612%" y="3333" width="0.3002%" height="15" fill="rgb(248,60,28)" fg:x="1255" fg:w="9"/><text x="42.1112%" y="3343.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (9 samples, 0.30%)</title><rect x="41.8612%" y="3317" width="0.3002%" height="15" fill="rgb(249,101,23)" fg:x="1255" fg:w="9"/><text x="42.1112%" y="3327.50"></text></g><g><title>`0x7FFAC12D5376 (9 samples, 0.30%)</title><rect x="41.8612%" y="3301" width="0.3002%" height="15" fill="rgb(228,51,19)" fg:x="1255" fg:w="9"/><text x="42.1112%" y="3311.50"></text></g><g><title>`0x7FFAC12D54B5 (9 samples, 0.30%)</title><rect x="41.8612%" y="3285" width="0.3002%" height="15" fill="rgb(213,20,6)" fg:x="1255" fg:w="9"/><text x="42.1112%" y="3295.50"></text></g><g><title>`0x7FFAC12D5E0B (2 samples, 0.07%)</title><rect x="42.0947%" y="3269" width="0.0667%" height="15" fill="rgb(212,124,10)" fg:x="1262" fg:w="2"/><text x="42.3447%" y="3279.50"></text></g><g><title>`0x7FFAC12D23A7 (2 samples, 0.07%)</title><rect x="42.0947%" y="3253" width="0.0667%" height="15" fill="rgb(248,3,40)" fg:x="1262" fg:w="2"/><text x="42.3447%" y="3263.50"></text></g><g><title>boggle.exe`alloc::string::String::push (16 samples, 0.53%)</title><rect x="41.8612%" y="3525" width="0.5337%" height="15" fill="rgb(223,178,23)" fg:x="1255" fg:w="16"/><text x="42.1112%" y="3535.50"></text></g><g><title>boggle.exe`core::char::methods::impl$0::len_utf8 (7 samples, 0.23%)</title><rect x="42.1614%" y="3509" width="0.2335%" height="15" fill="rgb(240,132,45)" fg:x="1264" fg:w="7"/><text x="42.4114%" y="3519.50"></text></g><g><title>boggle.exe`core::char::methods::len_utf8 (7 samples, 0.23%)</title><rect x="42.1614%" y="3493" width="0.2335%" height="15" fill="rgb(245,164,36)" fg:x="1264" fg:w="7"/><text x="42.4114%" y="3503.50"></text></g><g><title>`0x7FFAC12C6C9B (1 samples, 0.03%)</title><rect x="42.3949%" y="3333" width="0.0334%" height="15" fill="rgb(231,188,53)" fg:x="1271" fg:w="1"/><text x="42.6449%" y="3343.50"></text></g><g><title>`0x7FFAC12C7776 (1 samples, 0.03%)</title><rect x="42.4283%" y="3333" width="0.0334%" height="15" fill="rgb(237,198,39)" fg:x="1272" fg:w="1"/><text x="42.6783%" y="3343.50"></text></g><g><title>`0x7FFAC12C78B4 (1 samples, 0.03%)</title><rect x="42.4283%" y="3317" width="0.0334%" height="15" fill="rgb(223,120,35)" fg:x="1272" fg:w="1"/><text x="42.6783%" y="3327.50"></text></g><g><title>`0x7FFAC12C817D (1 samples, 0.03%)</title><rect x="42.4283%" y="3301" width="0.0334%" height="15" fill="rgb(253,107,49)" fg:x="1272" fg:w="1"/><text x="42.6783%" y="3311.50"></text></g><g><title>boggle.exe`alloc::string::impl$102::to_string(ref$ (3 samples, 0.10%)</title><rect x="42.3949%" y="3525" width="0.1001%" height="15" fill="rgb(216,44,31)" fg:x="1271" fg:w="3"/><text x="42.6449%" y="3535.50"></text></g><g><title>boggle.exe`alloc::string::impl$44::from(ref$ (3 samples, 0.10%)</title><rect x="42.3949%" y="3509" width="0.1001%" height="15" fill="rgb(253,87,21)" fg:x="1271" fg:w="3"/><text x="42.6449%" y="3519.50"></text></g><g><title>boggle.exe`alloc::str::impl$4::to_owned(ref$ (3 samples, 0.10%)</title><rect x="42.3949%" y="3493" width="0.1001%" height="15" fill="rgb(226,18,2)" fg:x="1271" fg:w="3"/><text x="42.6449%" y="3503.50"></text></g><g><title>boggle.exe`alloc::slice::impl$9::to_owned(ref$&lt;slice2$ (3 samples, 0.10%)</title><rect x="42.3949%" y="3477" width="0.1001%" height="15" fill="rgb(216,8,46)" fg:x="1271" fg:w="3"/><text x="42.6449%" y="3487.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec(ref$&lt;slice2$ (3 samples, 0.10%)</title><rect x="42.3949%" y="3461" width="0.1001%" height="15" fill="rgb(226,140,39)" fg:x="1271" fg:w="3"/><text x="42.6449%" y="3471.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec_in(ref$&lt;slice2$ (3 samples, 0.10%)</title><rect x="42.3949%" y="3445" width="0.1001%" height="15" fill="rgb(221,194,54)" fg:x="1271" fg:w="3"/><text x="42.6449%" y="3455.50"></text></g><g><title>boggle.exe`alloc::slice::hack::to_vec(ref$&lt;slice2$ (3 samples, 0.10%)</title><rect x="42.3949%" y="3429" width="0.1001%" height="15" fill="rgb(213,92,11)" fg:x="1271" fg:w="3"/><text x="42.6449%" y="3439.50"></text></g><g><title>boggle.exe`alloc::slice::hack::impl$1::to_vec(ref$&lt;slice2$ (3 samples, 0.10%)</title><rect x="42.3949%" y="3413" width="0.1001%" height="15" fill="rgb(229,162,46)" fg:x="1271" fg:w="3"/><text x="42.6449%" y="3423.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (3 samples, 0.10%)</title><rect x="42.3949%" y="3397" width="0.1001%" height="15" fill="rgb(214,111,36)" fg:x="1271" fg:w="3"/><text x="42.6449%" y="3407.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (3 samples, 0.10%)</title><rect x="42.3949%" y="3381" width="0.1001%" height="15" fill="rgb(207,6,21)" fg:x="1271" fg:w="3"/><text x="42.6449%" y="3391.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (3 samples, 0.10%)</title><rect x="42.3949%" y="3365" width="0.1001%" height="15" fill="rgb(213,127,38)" fg:x="1271" fg:w="3"/><text x="42.6449%" y="3375.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (3 samples, 0.10%)</title><rect x="42.3949%" y="3349" width="0.1001%" height="15" fill="rgb(238,118,32)" fg:x="1271" fg:w="3"/><text x="42.6449%" y="3359.50"></text></g><g><title>boggle.exe`std::alloc::__default_lib_allocator::__rdl_alloc (1 samples, 0.03%)</title><rect x="42.4616%" y="3333" width="0.0334%" height="15" fill="rgb(240,139,39)" fg:x="1273" fg:w="1"/><text x="42.7116%" y="3343.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;::push (2 samples, 0.07%)</title><rect x="42.4950%" y="3525" width="0.0667%" height="15" fill="rgb(235,10,37)" fg:x="1274" fg:w="2"/><text x="42.7450%" y="3535.50"></text></g><g><title>boggle.exe`alloc::string::impl$6::clone (2 samples, 0.07%)</title><rect x="42.4950%" y="3509" width="0.0667%" height="15" fill="rgb(249,171,38)" fg:x="1274" fg:w="2"/><text x="42.7450%" y="3519.50"></text></g><g><title>boggle.exe`alloc::vec::impl$11::clone (2 samples, 0.07%)</title><rect x="42.4950%" y="3493" width="0.0667%" height="15" fill="rgb(242,144,32)" fg:x="1274" fg:w="2"/><text x="42.7450%" y="3503.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec_in (2 samples, 0.07%)</title><rect x="42.4950%" y="3477" width="0.0667%" height="15" fill="rgb(217,117,21)" fg:x="1274" fg:w="2"/><text x="42.7450%" y="3487.50"></text></g><g><title>boggle.exe`alloc::slice::hack::to_vec (2 samples, 0.07%)</title><rect x="42.4950%" y="3461" width="0.0667%" height="15" fill="rgb(249,87,1)" fg:x="1274" fg:w="2"/><text x="42.7450%" y="3471.50"></text></g><g><title>boggle.exe`alloc::slice::hack::impl$1::to_vec (2 samples, 0.07%)</title><rect x="42.4950%" y="3445" width="0.0667%" height="15" fill="rgb(248,196,48)" fg:x="1274" fg:w="2"/><text x="42.7450%" y="3455.50"></text></g><g><title>boggle.exe`alloc::vec::Vec::with_capacity_in (2 samples, 0.07%)</title><rect x="42.4950%" y="3429" width="0.0667%" height="15" fill="rgb(251,206,33)" fg:x="1274" fg:w="2"/><text x="42.7450%" y="3439.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec::with_capacity_in (2 samples, 0.07%)</title><rect x="42.4950%" y="3413" width="0.0667%" height="15" fill="rgb(232,141,28)" fg:x="1274" fg:w="2"/><text x="42.7450%" y="3423.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner::with_capacity_in (2 samples, 0.07%)</title><rect x="42.4950%" y="3397" width="0.0667%" height="15" fill="rgb(209,167,14)" fg:x="1274" fg:w="2"/><text x="42.7450%" y="3407.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner::try_allocate_in (2 samples, 0.07%)</title><rect x="42.4950%" y="3381" width="0.0667%" height="15" fill="rgb(225,11,50)" fg:x="1274" fg:w="2"/><text x="42.7450%" y="3391.50"></text></g><g><title>`0x7FFAC12C7776 (2 samples, 0.07%)</title><rect x="42.4950%" y="3365" width="0.0667%" height="15" fill="rgb(209,50,20)" fg:x="1274" fg:w="2"/><text x="42.7450%" y="3375.50"></text></g><g><title>`0x7FFAC12C78B4 (2 samples, 0.07%)</title><rect x="42.4950%" y="3349" width="0.0667%" height="15" fill="rgb(212,17,46)" fg:x="1274" fg:w="2"/><text x="42.7450%" y="3359.50"></text></g><g><title>`0x7FFAC12C8047 (2 samples, 0.07%)</title><rect x="42.4950%" y="3333" width="0.0667%" height="15" fill="rgb(216,101,39)" fg:x="1274" fg:w="2"/><text x="42.7450%" y="3343.50"></text></g><g><title>boggle.exe`alloc::string::String::pop (507 samples, 16.91%)</title><rect x="25.8506%" y="3589" width="16.9113%" height="15" fill="rgb(212,228,48)" fg:x="775" fg:w="507"/><text x="26.1006%" y="3599.50">boggle.exe`alloc::string::..</text></g><g><title>boggle.exe`alloc::string::impl$28::deref (507 samples, 16.91%)</title><rect x="25.8506%" y="3573" width="16.9113%" height="15" fill="rgb(250,6,50)" fg:x="775" fg:w="507"/><text x="26.1006%" y="3583.50">boggle.exe`alloc::string::..</text></g><g><title>boggle.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (507 samples, 16.91%)</title><rect x="25.8506%" y="3557" width="16.9113%" height="15" fill="rgb(250,160,48)" fg:x="775" fg:w="507"/><text x="26.1006%" y="3567.50">boggle.exe`alloc::vec::imp..</text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::collect_words(boggle::utils::dict_trie::DictTrieNode*, ref$&lt;str$&gt;, alloc::vec::Vec (507 samples, 16.91%)</title><rect x="25.8506%" y="3541" width="16.9113%" height="15" fill="rgb(244,216,33)" fg:x="775" fg:w="507"/><text x="26.1006%" y="3551.50">boggle.exe`boggle::utils::..</text></g><g><title>boggle.exe`std::collections::hash::map::impl$36::into_iter(std::collections::hash::map::HashMap (6 samples, 0.20%)</title><rect x="42.5617%" y="3525" width="0.2001%" height="15" fill="rgb(207,157,5)" fg:x="1276" fg:w="6"/><text x="42.8117%" y="3535.50"></text></g><g><title>boggle.exe`std::collections::hash::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;::iter (6 samples, 0.20%)</title><rect x="42.5617%" y="3509" width="0.2001%" height="15" fill="rgb(228,199,8)" fg:x="1276" fg:w="6"/><text x="42.8117%" y="3519.50"></text></g><g><title>boggle.exe`hashbrown::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt;::iter (6 samples, 0.20%)</title><rect x="42.5617%" y="3493" width="0.2001%" height="15" fill="rgb(227,80,20)" fg:x="1276" fg:w="6"/><text x="42.8117%" y="3503.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTable&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;::iter (6 samples, 0.20%)</title><rect x="42.5617%" y="3477" width="0.2001%" height="15" fill="rgb(222,9,33)" fg:x="1276" fg:w="6"/><text x="42.8117%" y="3487.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::iter (6 samples, 0.20%)</title><rect x="42.5617%" y="3461" width="0.2001%" height="15" fill="rgb(239,44,28)" fg:x="1276" fg:w="6"/><text x="42.8117%" y="3471.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawIterRange&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::new(unsigned char*, hashbrown::raw::Bucket&lt;tuple$ (6 samples, 0.20%)</title><rect x="42.5617%" y="3445" width="0.2001%" height="15" fill="rgb(249,187,43)" fg:x="1276" fg:w="6"/><text x="42.8117%" y="3455.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::load_aligned (6 samples, 0.20%)</title><rect x="42.5617%" y="3429" width="0.2001%" height="15" fill="rgb(216,141,28)" fg:x="1276" fg:w="6"/><text x="42.8117%" y="3439.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::match_empty_or_deleted (6 samples, 0.20%)</title><rect x="42.5617%" y="3413" width="0.2001%" height="15" fill="rgb(230,154,53)" fg:x="1276" fg:w="6"/><text x="42.8117%" y="3423.50"></text></g><g><title>boggle.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (6 samples, 0.20%)</title><rect x="42.5617%" y="3397" width="0.2001%" height="15" fill="rgb(227,82,4)" fg:x="1276" fg:w="6"/><text x="42.8117%" y="3407.50"></text></g><g><title>boggle.exe`alloc::string::String::push (2 samples, 0.07%)</title><rect x="42.7618%" y="3589" width="0.0667%" height="15" fill="rgb(220,107,16)" fg:x="1282" fg:w="2"/><text x="43.0118%" y="3599.50"></text></g><g><title>boggle.exe`core::char::methods::impl$0::len_utf8 (2 samples, 0.07%)</title><rect x="42.7618%" y="3573" width="0.0667%" height="15" fill="rgb(207,187,2)" fg:x="1282" fg:w="2"/><text x="43.0118%" y="3583.50"></text></g><g><title>boggle.exe`core::char::methods::len_utf8 (2 samples, 0.07%)</title><rect x="42.7618%" y="3557" width="0.0667%" height="15" fill="rgb(210,162,52)" fg:x="1282" fg:w="2"/><text x="43.0118%" y="3567.50"></text></g><g><title>boggle.exe`std::collections::hash::map::impl$36::into_iter(std::collections::hash::map::HashMap (1 samples, 0.03%)</title><rect x="42.8286%" y="3589" width="0.0334%" height="15" fill="rgb(217,216,49)" fg:x="1284" fg:w="1"/><text x="43.0786%" y="3599.50"></text></g><g><title>boggle.exe`std::collections::hash::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;::iter (1 samples, 0.03%)</title><rect x="42.8286%" y="3573" width="0.0334%" height="15" fill="rgb(218,146,49)" fg:x="1284" fg:w="1"/><text x="43.0786%" y="3583.50"></text></g><g><title>boggle.exe`hashbrown::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt;::iter (1 samples, 0.03%)</title><rect x="42.8286%" y="3557" width="0.0334%" height="15" fill="rgb(216,55,40)" fg:x="1284" fg:w="1"/><text x="43.0786%" y="3567.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTable&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;::iter (1 samples, 0.03%)</title><rect x="42.8286%" y="3541" width="0.0334%" height="15" fill="rgb(208,196,21)" fg:x="1284" fg:w="1"/><text x="43.0786%" y="3551.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::iter (1 samples, 0.03%)</title><rect x="42.8286%" y="3525" width="0.0334%" height="15" fill="rgb(242,117,42)" fg:x="1284" fg:w="1"/><text x="43.0786%" y="3535.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawIterRange&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::new(unsigned char*, hashbrown::raw::Bucket&lt;tuple$ (1 samples, 0.03%)</title><rect x="42.8286%" y="3509" width="0.0334%" height="15" fill="rgb(210,11,23)" fg:x="1284" fg:w="1"/><text x="43.0786%" y="3519.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::load_aligned (1 samples, 0.03%)</title><rect x="42.8286%" y="3493" width="0.0334%" height="15" fill="rgb(217,110,2)" fg:x="1284" fg:w="1"/><text x="43.0786%" y="3503.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::match_empty_or_deleted (1 samples, 0.03%)</title><rect x="42.8286%" y="3477" width="0.0334%" height="15" fill="rgb(229,77,54)" fg:x="1284" fg:w="1"/><text x="43.0786%" y="3487.50"></text></g><g><title>boggle.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.03%)</title><rect x="42.8286%" y="3461" width="0.0334%" height="15" fill="rgb(218,53,16)" fg:x="1284" fg:w="1"/><text x="43.0786%" y="3471.50"></text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::collect_words(boggle::utils::dict_trie::DictTrieNode*, ref$&lt;str$&gt;, alloc::vec::Vec (511 samples, 17.04%)</title><rect x="25.8506%" y="3733" width="17.0447%" height="15" fill="rgb(215,38,13)" fg:x="775" fg:w="511"/><text x="26.1006%" y="3743.50">boggle.exe`boggle::utils::..</text></g><g><title>boggle.exe`alloc::string::String::pop (511 samples, 17.04%)</title><rect x="25.8506%" y="3717" width="17.0447%" height="15" fill="rgb(235,42,18)" fg:x="775" fg:w="511"/><text x="26.1006%" y="3727.50">boggle.exe`alloc::string::..</text></g><g><title>boggle.exe`alloc::string::impl$28::deref (511 samples, 17.04%)</title><rect x="25.8506%" y="3701" width="17.0447%" height="15" fill="rgb(219,66,54)" fg:x="775" fg:w="511"/><text x="26.1006%" y="3711.50">boggle.exe`alloc::string::..</text></g><g><title>boggle.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (511 samples, 17.04%)</title><rect x="25.8506%" y="3685" width="17.0447%" height="15" fill="rgb(222,205,4)" fg:x="775" fg:w="511"/><text x="26.1006%" y="3695.50">boggle.exe`alloc::vec::imp..</text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::collect_words(boggle::utils::dict_trie::DictTrieNode*, ref$&lt;str$&gt;, alloc::vec::Vec (511 samples, 17.04%)</title><rect x="25.8506%" y="3669" width="17.0447%" height="15" fill="rgb(227,213,46)" fg:x="775" fg:w="511"/><text x="26.1006%" y="3679.50">boggle.exe`boggle::utils::..</text></g><g><title>boggle.exe`alloc::string::String::pop (511 samples, 17.04%)</title><rect x="25.8506%" y="3653" width="17.0447%" height="15" fill="rgb(250,145,42)" fg:x="775" fg:w="511"/><text x="26.1006%" y="3663.50">boggle.exe`alloc::string::..</text></g><g><title>boggle.exe`alloc::string::impl$28::deref (511 samples, 17.04%)</title><rect x="25.8506%" y="3637" width="17.0447%" height="15" fill="rgb(219,15,2)" fg:x="775" fg:w="511"/><text x="26.1006%" y="3647.50">boggle.exe`alloc::string::..</text></g><g><title>boggle.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (511 samples, 17.04%)</title><rect x="25.8506%" y="3621" width="17.0447%" height="15" fill="rgb(231,181,52)" fg:x="775" fg:w="511"/><text x="26.1006%" y="3631.50">boggle.exe`alloc::vec::imp..</text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::collect_words(boggle::utils::dict_trie::DictTrieNode*, ref$&lt;str$&gt;, alloc::vec::Vec (511 samples, 17.04%)</title><rect x="25.8506%" y="3605" width="17.0447%" height="15" fill="rgb(235,1,42)" fg:x="775" fg:w="511"/><text x="26.1006%" y="3615.50">boggle.exe`boggle::utils::..</text></g><g><title>boggle.exe`std::collections::hash::map::impl$39::next(std::collections::hash::map::Iter (1 samples, 0.03%)</title><rect x="42.8619%" y="3589" width="0.0334%" height="15" fill="rgb(249,88,27)" fg:x="1285" fg:w="1"/><text x="43.1119%" y="3599.50"></text></g><g><title>boggle.exe`hashbrown::map::impl$60::next(hashbrown::map::Iter (1 samples, 0.03%)</title><rect x="42.8619%" y="3573" width="0.0334%" height="15" fill="rgb(235,145,16)" fg:x="1285" fg:w="1"/><text x="43.1119%" y="3583.50"></text></g><g><title>boggle.exe`hashbrown::raw::impl$28::next(hashbrown::raw::RawIter&lt;tuple$ (1 samples, 0.03%)</title><rect x="42.8619%" y="3557" width="0.0334%" height="15" fill="rgb(237,114,19)" fg:x="1285" fg:w="1"/><text x="43.1119%" y="3567.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawIterRange&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::next_impl (1 samples, 0.03%)</title><rect x="42.8619%" y="3541" width="0.0334%" height="15" fill="rgb(238,51,50)" fg:x="1285" fg:w="1"/><text x="43.1119%" y="3551.50"></text></g><g><title>boggle.exe`hashbrown::raw::bitmask::impl$3::next (1 samples, 0.03%)</title><rect x="42.8619%" y="3525" width="0.0334%" height="15" fill="rgb(205,194,25)" fg:x="1285" fg:w="1"/><text x="43.1119%" y="3535.50"></text></g><g><title>boggle.exe`hashbrown::raw::bitmask::BitMask::remove_lowest_bit (1 samples, 0.03%)</title><rect x="42.8619%" y="3509" width="0.0334%" height="15" fill="rgb(215,203,17)" fg:x="1285" fg:w="1"/><text x="43.1119%" y="3519.50"></text></g><g><title>boggle.exe`alloc::raw_vec::layout_array (1 samples, 0.03%)</title><rect x="42.9286%" y="3525" width="0.0334%" height="15" fill="rgb(233,112,49)" fg:x="1287" fg:w="1"/><text x="43.1786%" y="3535.50"></text></g><g><title>boggle.exe`core::alloc::layout::Layout::repeat (1 samples, 0.03%)</title><rect x="42.9286%" y="3509" width="0.0334%" height="15" fill="rgb(241,130,26)" fg:x="1287" fg:w="1"/><text x="43.1786%" y="3519.50"></text></g><g><title>boggle.exe`core::alloc::layout::Layout::padding_needed_for (1 samples, 0.03%)</title><rect x="42.9286%" y="3493" width="0.0334%" height="15" fill="rgb(252,223,19)" fg:x="1287" fg:w="1"/><text x="43.1786%" y="3503.50"></text></g><g><title>boggle.exe`core::num::impl$11::wrapping_sub (1 samples, 0.03%)</title><rect x="42.9286%" y="3477" width="0.0334%" height="15" fill="rgb(211,95,25)" fg:x="1287" fg:w="1"/><text x="43.1786%" y="3487.50"></text></g><g><title>`0x7FFAC12D5335 (1 samples, 0.03%)</title><rect x="42.9953%" y="3445" width="0.0334%" height="15" fill="rgb(251,182,27)" fg:x="1289" fg:w="1"/><text x="43.2453%" y="3455.50"></text></g><g><title>`0x7FFAC12D536C (1 samples, 0.03%)</title><rect x="43.0287%" y="3445" width="0.0334%" height="15" fill="rgb(238,24,4)" fg:x="1290" fg:w="1"/><text x="43.2787%" y="3455.50"></text></g><g><title>`0x7FFAC12D53D0 (1 samples, 0.03%)</title><rect x="43.0620%" y="3429" width="0.0334%" height="15" fill="rgb(224,220,25)" fg:x="1291" fg:w="1"/><text x="43.3120%" y="3439.50"></text></g><g><title>`0x7FFAC12D53E1 (1 samples, 0.03%)</title><rect x="43.0954%" y="3429" width="0.0334%" height="15" fill="rgb(239,133,26)" fg:x="1292" fg:w="1"/><text x="43.3454%" y="3439.50"></text></g><g><title>`0x7FFAC12D5402 (1 samples, 0.03%)</title><rect x="43.1288%" y="3429" width="0.0334%" height="15" fill="rgb(211,94,48)" fg:x="1293" fg:w="1"/><text x="43.3788%" y="3439.50"></text></g><g><title>`0x7FFAC12D5448 (1 samples, 0.03%)</title><rect x="43.1621%" y="3429" width="0.0334%" height="15" fill="rgb(239,87,6)" fg:x="1294" fg:w="1"/><text x="43.4121%" y="3439.50"></text></g><g><title>`0x7FFAC12D5C80 (2 samples, 0.07%)</title><rect x="43.1955%" y="3413" width="0.0667%" height="15" fill="rgb(227,62,0)" fg:x="1295" fg:w="2"/><text x="43.4455%" y="3423.50"></text></g><g><title>`0x7FFAC12D5CDB (1 samples, 0.03%)</title><rect x="43.2622%" y="3413" width="0.0334%" height="15" fill="rgb(211,226,4)" fg:x="1297" fg:w="1"/><text x="43.5122%" y="3423.50"></text></g><g><title>`0x7FFAC12D5D58 (1 samples, 0.03%)</title><rect x="43.2955%" y="3413" width="0.0334%" height="15" fill="rgb(253,38,52)" fg:x="1298" fg:w="1"/><text x="43.5455%" y="3423.50"></text></g><g><title>`0x7FFAC12C6C90 (1 samples, 0.03%)</title><rect x="43.3289%" y="3397" width="0.0334%" height="15" fill="rgb(229,126,40)" fg:x="1299" fg:w="1"/><text x="43.5789%" y="3407.50"></text></g><g><title>`0x7FFAC12C78AB (1 samples, 0.03%)</title><rect x="43.3622%" y="3381" width="0.0334%" height="15" fill="rgb(229,165,44)" fg:x="1300" fg:w="1"/><text x="43.6122%" y="3391.50"></text></g><g><title>`0x7FFAC12C7EDC (1 samples, 0.03%)</title><rect x="43.3956%" y="3365" width="0.0334%" height="15" fill="rgb(247,95,47)" fg:x="1301" fg:w="1"/><text x="43.6456%" y="3375.50"></text></g><g><title>`0x7FFAC12C7FF0 (1 samples, 0.03%)</title><rect x="43.4290%" y="3365" width="0.0334%" height="15" fill="rgb(216,140,30)" fg:x="1302" fg:w="1"/><text x="43.6790%" y="3375.50"></text></g><g><title>`0x7FFAC12C7FFE (1 samples, 0.03%)</title><rect x="43.4623%" y="3365" width="0.0334%" height="15" fill="rgb(246,214,8)" fg:x="1303" fg:w="1"/><text x="43.7123%" y="3375.50"></text></g><g><title>`0x7FFAC12C801A (1 samples, 0.03%)</title><rect x="43.4957%" y="3365" width="0.0334%" height="15" fill="rgb(227,224,15)" fg:x="1304" fg:w="1"/><text x="43.7457%" y="3375.50"></text></g><g><title>`0x7FFAC12C8047 (4 samples, 0.13%)</title><rect x="43.5290%" y="3365" width="0.1334%" height="15" fill="rgb(233,175,4)" fg:x="1305" fg:w="4"/><text x="43.7790%" y="3375.50"></text></g><g><title>`0x7FFAC12C816D (1 samples, 0.03%)</title><rect x="43.6624%" y="3365" width="0.0334%" height="15" fill="rgb(221,66,45)" fg:x="1309" fg:w="1"/><text x="43.9124%" y="3375.50"></text></g><g><title>`0x7FFAC12C78B4 (10 samples, 0.33%)</title><rect x="43.3956%" y="3381" width="0.3336%" height="15" fill="rgb(221,178,18)" fg:x="1301" fg:w="10"/><text x="43.6456%" y="3391.50"></text></g><g><title>`0x7FFAC12C818A (1 samples, 0.03%)</title><rect x="43.6958%" y="3365" width="0.0334%" height="15" fill="rgb(213,81,29)" fg:x="1310" fg:w="1"/><text x="43.9458%" y="3375.50"></text></g><g><title>`0x7FFAC12C7776 (13 samples, 0.43%)</title><rect x="43.3622%" y="3397" width="0.4336%" height="15" fill="rgb(220,89,49)" fg:x="1300" fg:w="13"/><text x="43.6122%" y="3407.50"></text></g><g><title>`0x7FFAC12C78C0 (2 samples, 0.07%)</title><rect x="43.7292%" y="3381" width="0.0667%" height="15" fill="rgb(227,60,33)" fg:x="1311" fg:w="2"/><text x="43.9792%" y="3391.50"></text></g><g><title>`0x7FFAC12D5DAA (15 samples, 0.50%)</title><rect x="43.3289%" y="3413" width="0.5003%" height="15" fill="rgb(205,113,12)" fg:x="1299" fg:w="15"/><text x="43.5789%" y="3423.50"></text></g><g><title>`0x7FFAC12C7788 (1 samples, 0.03%)</title><rect x="43.7959%" y="3397" width="0.0334%" height="15" fill="rgb(211,32,1)" fg:x="1313" fg:w="1"/><text x="44.0459%" y="3407.50"></text></g><g><title>`0x7FFAC12D22DB (1 samples, 0.03%)</title><rect x="43.8292%" y="3397" width="0.0334%" height="15" fill="rgb(246,2,12)" fg:x="1314" fg:w="1"/><text x="44.0792%" y="3407.50"></text></g><g><title>`0x7FFAC12D22EC (1 samples, 0.03%)</title><rect x="43.8626%" y="3397" width="0.0334%" height="15" fill="rgb(243,37,27)" fg:x="1315" fg:w="1"/><text x="44.1126%" y="3407.50"></text></g><g><title>`0x7FFAC12D2313 (1 samples, 0.03%)</title><rect x="43.8959%" y="3397" width="0.0334%" height="15" fill="rgb(248,211,31)" fg:x="1316" fg:w="1"/><text x="44.1459%" y="3407.50"></text></g><g><title>`0x7FFAC12D23A7 (5 samples, 0.17%)</title><rect x="43.9293%" y="3397" width="0.1668%" height="15" fill="rgb(242,146,47)" fg:x="1317" fg:w="5"/><text x="44.1793%" y="3407.50"></text></g><g><title>`0x7FFAC12D54B5 (28 samples, 0.93%)</title><rect x="43.1955%" y="3429" width="0.9340%" height="15" fill="rgb(206,70,20)" fg:x="1295" fg:w="28"/><text x="43.4455%" y="3439.50"></text></g><g><title>`0x7FFAC12D5E0B (9 samples, 0.30%)</title><rect x="43.8292%" y="3413" width="0.3002%" height="15" fill="rgb(215,10,51)" fg:x="1314" fg:w="9"/><text x="44.0792%" y="3423.50"></text></g><g><title>`0x7FFAC12D243D (1 samples, 0.03%)</title><rect x="44.0961%" y="3397" width="0.0334%" height="15" fill="rgb(243,178,53)" fg:x="1322" fg:w="1"/><text x="44.3461%" y="3407.50"></text></g><g><title>`0x7FFAC12D54CF (1 samples, 0.03%)</title><rect x="44.1294%" y="3429" width="0.0334%" height="15" fill="rgb(233,221,20)" fg:x="1323" fg:w="1"/><text x="44.3794%" y="3439.50"></text></g><g><title>`0x7FFAC12D5376 (34 samples, 1.13%)</title><rect x="43.0620%" y="3445" width="1.1341%" height="15" fill="rgb(218,95,35)" fg:x="1291" fg:w="34"/><text x="43.3120%" y="3455.50"></text></g><g><title>`0x7FFAC12D54F2 (1 samples, 0.03%)</title><rect x="44.1628%" y="3429" width="0.0334%" height="15" fill="rgb(229,13,5)" fg:x="1324" fg:w="1"/><text x="44.4128%" y="3439.50"></text></g><g><title>`0x7FFAC1403440 (1 samples, 0.03%)</title><rect x="44.1628%" y="3413" width="0.0334%" height="15" fill="rgb(252,164,30)" fg:x="1324" fg:w="1"/><text x="44.4128%" y="3423.50"></text></g><g><title>`0x7FFAC12D537B (1 samples, 0.03%)</title><rect x="44.1961%" y="3445" width="0.0334%" height="15" fill="rgb(232,68,36)" fg:x="1325" fg:w="1"/><text x="44.4461%" y="3455.50"></text></g><g><title>boggle.exe`__rust_realloc (2 samples, 0.07%)</title><rect x="44.2295%" y="3445" width="0.0667%" height="15" fill="rgb(219,59,54)" fg:x="1326" fg:w="2"/><text x="44.4795%" y="3455.50"></text></g><g><title>boggle.exe`alloc::raw_vec::impl$5::reserve::do_reserve_and_handle&lt;alloc::alloc::Global&gt;(alloc::raw_vec::RawVecInner (44 samples, 1.47%)</title><rect x="42.8953%" y="3557" width="1.4676%" height="15" fill="rgb(250,92,33)" fg:x="1286" fg:w="44"/><text x="43.1453%" y="3567.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (44 samples, 1.47%)</title><rect x="42.8953%" y="3541" width="1.4676%" height="15" fill="rgb(229,162,54)" fg:x="1286" fg:w="44"/><text x="43.1453%" y="3551.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (42 samples, 1.40%)</title><rect x="42.9620%" y="3525" width="1.4009%" height="15" fill="rgb(244,114,52)" fg:x="1288" fg:w="42"/><text x="43.2120%" y="3535.50"></text></g><g><title>boggle.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (42 samples, 1.40%)</title><rect x="42.9620%" y="3509" width="1.4009%" height="15" fill="rgb(212,211,43)" fg:x="1288" fg:w="42"/><text x="43.2120%" y="3519.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (41 samples, 1.37%)</title><rect x="42.9953%" y="3493" width="1.3676%" height="15" fill="rgb(226,147,8)" fg:x="1289" fg:w="41"/><text x="43.2453%" y="3503.50"></text></g><g><title>boggle.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (41 samples, 1.37%)</title><rect x="42.9953%" y="3477" width="1.3676%" height="15" fill="rgb(226,23,13)" fg:x="1289" fg:w="41"/><text x="43.2453%" y="3487.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (41 samples, 1.37%)</title><rect x="42.9953%" y="3461" width="1.3676%" height="15" fill="rgb(240,63,4)" fg:x="1289" fg:w="41"/><text x="43.2453%" y="3471.50"></text></g><g><title>boggle.exe`std::alloc::__default_lib_allocator::__rdl_realloc (2 samples, 0.07%)</title><rect x="44.2962%" y="3445" width="0.0667%" height="15" fill="rgb(221,1,32)" fg:x="1328" fg:w="2"/><text x="44.5462%" y="3455.50"></text></g><g><title>boggle.exe`std::sys::alloc::windows::impl$0::realloc (1 samples, 0.03%)</title><rect x="44.3296%" y="3429" width="0.0334%" height="15" fill="rgb(242,117,10)" fg:x="1329" fg:w="1"/><text x="44.5796%" y="3439.50"></text></g><g><title>`0x7FFAB8910260 (1 samples, 0.03%)</title><rect x="44.3629%" y="3493" width="0.0334%" height="15" fill="rgb(249,172,44)" fg:x="1330" fg:w="1"/><text x="44.6129%" y="3503.50"></text></g><g><title>`0x7FFAB89102B0 (1 samples, 0.03%)</title><rect x="44.3963%" y="3493" width="0.0334%" height="15" fill="rgb(244,46,45)" fg:x="1331" fg:w="1"/><text x="44.6463%" y="3503.50"></text></g><g><title>`0x7FFAB89102B2 (1 samples, 0.03%)</title><rect x="44.4296%" y="3493" width="0.0334%" height="15" fill="rgb(206,43,17)" fg:x="1332" fg:w="1"/><text x="44.6796%" y="3503.50"></text></g><g><title>`0x7FFAB8910332 (1 samples, 0.03%)</title><rect x="44.4630%" y="3493" width="0.0334%" height="15" fill="rgb(239,218,39)" fg:x="1333" fg:w="1"/><text x="44.7130%" y="3503.50"></text></g><g><title>`0x7FFAB8913010 (2 samples, 0.07%)</title><rect x="44.4963%" y="3493" width="0.0667%" height="15" fill="rgb(208,169,54)" fg:x="1334" fg:w="2"/><text x="44.7463%" y="3503.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_mut_ptr (3 samples, 0.10%)</title><rect x="44.5630%" y="3493" width="0.1001%" height="15" fill="rgb(247,25,42)" fg:x="1336" fg:w="3"/><text x="44.8130%" y="3503.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::ptr (2 samples, 0.07%)</title><rect x="44.5964%" y="3477" width="0.0667%" height="15" fill="rgb(226,23,31)" fg:x="1337" fg:w="2"/><text x="44.8464%" y="3487.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (2 samples, 0.07%)</title><rect x="44.5964%" y="3461" width="0.0667%" height="15" fill="rgb(247,16,28)" fg:x="1337" fg:w="2"/><text x="44.8464%" y="3471.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (2 samples, 0.07%)</title><rect x="44.5964%" y="3445" width="0.0667%" height="15" fill="rgb(231,147,38)" fg:x="1337" fg:w="2"/><text x="44.8464%" y="3455.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::reserve (1 samples, 0.03%)</title><rect x="44.6631%" y="3493" width="0.0334%" height="15" fill="rgb(253,81,48)" fg:x="1339" fg:w="1"/><text x="44.9131%" y="3503.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::reserve (1 samples, 0.03%)</title><rect x="44.6631%" y="3477" width="0.0334%" height="15" fill="rgb(249,222,43)" fg:x="1339" fg:w="1"/><text x="44.9131%" y="3487.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::reserve (1 samples, 0.03%)</title><rect x="44.6631%" y="3461" width="0.0334%" height="15" fill="rgb(221,3,27)" fg:x="1339" fg:w="1"/><text x="44.9131%" y="3471.50"></text></g><g><title>boggle.exe`alloc::string::impl$24::add(alloc::string::String, ref$ (55 samples, 1.83%)</title><rect x="42.8953%" y="3573" width="1.8346%" height="15" fill="rgb(228,180,5)" fg:x="1286" fg:w="55"/><text x="43.1453%" y="3583.50">b..</text></g><g><title>boggle.exe`alloc::string::String::push_str(ref$ (11 samples, 0.37%)</title><rect x="44.3629%" y="3557" width="0.3669%" height="15" fill="rgb(227,131,42)" fg:x="1330" fg:w="11"/><text x="44.6129%" y="3567.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::extend_from_slice(ref$&lt;slice2$ (11 samples, 0.37%)</title><rect x="44.3629%" y="3541" width="0.3669%" height="15" fill="rgb(212,3,39)" fg:x="1330" fg:w="11"/><text x="44.6129%" y="3551.50"></text></g><g><title>boggle.exe`alloc::vec::spec_extend::impl$4::spec_extend(alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;*, core::slice::iter::Iter (11 samples, 0.37%)</title><rect x="44.3629%" y="3525" width="0.3669%" height="15" fill="rgb(226,45,5)" fg:x="1330" fg:w="11"/><text x="44.6129%" y="3535.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::append_elements(ptr_const$&lt;slice2$ (11 samples, 0.37%)</title><rect x="44.3629%" y="3509" width="0.3669%" height="15" fill="rgb(215,167,45)" fg:x="1330" fg:w="11"/><text x="44.6129%" y="3519.50"></text></g><g><title>boggle.exe`memcpy (1 samples, 0.03%)</title><rect x="44.6965%" y="3493" width="0.0334%" height="15" fill="rgb(250,218,53)" fg:x="1340" fg:w="1"/><text x="44.9465%" y="3503.50"></text></g><g><title>boggle.exe`alloc::string::String::new (1 samples, 0.03%)</title><rect x="44.8632%" y="3541" width="0.0334%" height="15" fill="rgb(207,140,0)" fg:x="1345" fg:w="1"/><text x="45.1132%" y="3551.50"></text></g><g><title>boggle.exe`alloc::raw_vec::layout_array (1 samples, 0.03%)</title><rect x="44.9300%" y="3493" width="0.0334%" height="15" fill="rgb(238,133,51)" fg:x="1347" fg:w="1"/><text x="45.1800%" y="3503.50"></text></g><g><title>boggle.exe`core::alloc::layout::Layout::repeat (1 samples, 0.03%)</title><rect x="44.9300%" y="3477" width="0.0334%" height="15" fill="rgb(218,203,53)" fg:x="1347" fg:w="1"/><text x="45.1800%" y="3487.50"></text></g><g><title>boggle.exe`core::num::impl$11::checked_mul (1 samples, 0.03%)</title><rect x="44.9300%" y="3461" width="0.0334%" height="15" fill="rgb(226,184,25)" fg:x="1347" fg:w="1"/><text x="45.1800%" y="3471.50"></text></g><g><title>`0x7FFAC12C6C9B (2 samples, 0.07%)</title><rect x="44.9633%" y="3413" width="0.0667%" height="15" fill="rgb(231,121,21)" fg:x="1348" fg:w="2"/><text x="45.2133%" y="3423.50"></text></g><g><title>`0x7FFAC12C77E7 (1 samples, 0.03%)</title><rect x="45.0300%" y="3397" width="0.0334%" height="15" fill="rgb(251,14,34)" fg:x="1350" fg:w="1"/><text x="45.2800%" y="3407.50"></text></g><g><title>`0x7FFAC12C780A (1 samples, 0.03%)</title><rect x="45.0634%" y="3397" width="0.0334%" height="15" fill="rgb(249,193,11)" fg:x="1351" fg:w="1"/><text x="45.3134%" y="3407.50"></text></g><g><title>`0x7FFAC12C782F (1 samples, 0.03%)</title><rect x="45.0967%" y="3397" width="0.0334%" height="15" fill="rgb(220,172,37)" fg:x="1352" fg:w="1"/><text x="45.3467%" y="3407.50"></text></g><g><title>`0x7FFAC12C78AB (1 samples, 0.03%)</title><rect x="45.1301%" y="3397" width="0.0334%" height="15" fill="rgb(231,229,43)" fg:x="1353" fg:w="1"/><text x="45.3801%" y="3407.50"></text></g><g><title>`0x7FFAC12C7E80 (1 samples, 0.03%)</title><rect x="45.1634%" y="3381" width="0.0334%" height="15" fill="rgb(250,161,5)" fg:x="1354" fg:w="1"/><text x="45.4134%" y="3391.50"></text></g><g><title>`0x7FFAC12C7EDC (1 samples, 0.03%)</title><rect x="45.1968%" y="3381" width="0.0334%" height="15" fill="rgb(218,225,18)" fg:x="1355" fg:w="1"/><text x="45.4468%" y="3391.50"></text></g><g><title>`0x7FFAC12C7F6D (1 samples, 0.03%)</title><rect x="45.2302%" y="3381" width="0.0334%" height="15" fill="rgb(245,45,42)" fg:x="1356" fg:w="1"/><text x="45.4802%" y="3391.50"></text></g><g><title>`0x7FFAC12C7FF0 (1 samples, 0.03%)</title><rect x="45.2635%" y="3381" width="0.0334%" height="15" fill="rgb(211,115,1)" fg:x="1357" fg:w="1"/><text x="45.5135%" y="3391.50"></text></g><g><title>`0x7FFAC12C7FF3 (1 samples, 0.03%)</title><rect x="45.2969%" y="3381" width="0.0334%" height="15" fill="rgb(248,133,52)" fg:x="1358" fg:w="1"/><text x="45.5469%" y="3391.50"></text></g><g><title>`0x7FFAC12C801A (1 samples, 0.03%)</title><rect x="45.3302%" y="3381" width="0.0334%" height="15" fill="rgb(238,100,21)" fg:x="1359" fg:w="1"/><text x="45.5802%" y="3391.50"></text></g><g><title>`0x7FFAC12C803A (1 samples, 0.03%)</title><rect x="45.3636%" y="3381" width="0.0334%" height="15" fill="rgb(247,144,11)" fg:x="1360" fg:w="1"/><text x="45.6136%" y="3391.50"></text></g><g><title>`0x7FFAC12C8047 (12 samples, 0.40%)</title><rect x="45.3969%" y="3381" width="0.4003%" height="15" fill="rgb(206,164,16)" fg:x="1361" fg:w="12"/><text x="45.6469%" y="3391.50"></text></g><g><title>`0x7FFAC12C8060 (2 samples, 0.07%)</title><rect x="45.7972%" y="3381" width="0.0667%" height="15" fill="rgb(222,34,3)" fg:x="1373" fg:w="2"/><text x="46.0472%" y="3391.50"></text></g><g><title>`0x7FFAC12C80CE (1 samples, 0.03%)</title><rect x="45.8639%" y="3381" width="0.0334%" height="15" fill="rgb(248,82,4)" fg:x="1375" fg:w="1"/><text x="46.1139%" y="3391.50"></text></g><g><title>`0x7FFAC12C8131 (1 samples, 0.03%)</title><rect x="45.8973%" y="3381" width="0.0334%" height="15" fill="rgb(228,81,46)" fg:x="1376" fg:w="1"/><text x="46.1473%" y="3391.50"></text></g><g><title>`0x7FFAC12C817A (1 samples, 0.03%)</title><rect x="45.9306%" y="3381" width="0.0334%" height="15" fill="rgb(227,67,47)" fg:x="1377" fg:w="1"/><text x="46.1806%" y="3391.50"></text></g><g><title>`0x7FFAC12C8197 (1 samples, 0.03%)</title><rect x="45.9640%" y="3381" width="0.0334%" height="15" fill="rgb(215,93,53)" fg:x="1378" fg:w="1"/><text x="46.2140%" y="3391.50"></text></g><g><title>`0x7FFAC12C852D (1 samples, 0.03%)</title><rect x="45.9973%" y="3381" width="0.0334%" height="15" fill="rgb(248,194,39)" fg:x="1379" fg:w="1"/><text x="46.2473%" y="3391.50"></text></g><g><title>`0x7FFAC12C8558 (1 samples, 0.03%)</title><rect x="46.0307%" y="3381" width="0.0334%" height="15" fill="rgb(215,5,19)" fg:x="1380" fg:w="1"/><text x="46.2807%" y="3391.50"></text></g><g><title>`0x7FFAC12C78B4 (28 samples, 0.93%)</title><rect x="45.1634%" y="3397" width="0.9340%" height="15" fill="rgb(226,215,51)" fg:x="1354" fg:w="28"/><text x="45.4134%" y="3407.50"></text></g><g><title>`0x7FFAC12C8602 (1 samples, 0.03%)</title><rect x="46.0640%" y="3381" width="0.0334%" height="15" fill="rgb(225,56,26)" fg:x="1381" fg:w="1"/><text x="46.3140%" y="3391.50"></text></g><g><title>`0x7FFAC12C7776 (34 samples, 1.13%)</title><rect x="45.0300%" y="3413" width="1.1341%" height="15" fill="rgb(222,75,29)" fg:x="1350" fg:w="34"/><text x="45.2800%" y="3423.50"></text></g><g><title>`0x7FFAC12C796B (2 samples, 0.07%)</title><rect x="46.0974%" y="3397" width="0.0667%" height="15" fill="rgb(236,139,6)" fg:x="1382" fg:w="2"/><text x="46.3474%" y="3407.50"></text></g><g><title>boggle.exe`alloc::raw_vec::impl$5::reserve::do_reserve_and_handle&lt;alloc::alloc::Global&gt;(alloc::raw_vec::RawVecInner (39 samples, 1.30%)</title><rect x="44.8966%" y="3525" width="1.3009%" height="15" fill="rgb(223,137,36)" fg:x="1346" fg:w="39"/><text x="45.1466%" y="3535.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (39 samples, 1.30%)</title><rect x="44.8966%" y="3509" width="1.3009%" height="15" fill="rgb(226,99,2)" fg:x="1346" fg:w="39"/><text x="45.1466%" y="3519.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (37 samples, 1.23%)</title><rect x="44.9633%" y="3493" width="1.2342%" height="15" fill="rgb(206,133,23)" fg:x="1348" fg:w="37"/><text x="45.2133%" y="3503.50"></text></g><g><title>boggle.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (37 samples, 1.23%)</title><rect x="44.9633%" y="3477" width="1.2342%" height="15" fill="rgb(243,173,15)" fg:x="1348" fg:w="37"/><text x="45.2133%" y="3487.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (37 samples, 1.23%)</title><rect x="44.9633%" y="3461" width="1.2342%" height="15" fill="rgb(228,69,28)" fg:x="1348" fg:w="37"/><text x="45.2133%" y="3471.50"></text></g><g><title>boggle.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (37 samples, 1.23%)</title><rect x="44.9633%" y="3445" width="1.2342%" height="15" fill="rgb(212,51,22)" fg:x="1348" fg:w="37"/><text x="45.2133%" y="3455.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (37 samples, 1.23%)</title><rect x="44.9633%" y="3429" width="1.2342%" height="15" fill="rgb(227,113,0)" fg:x="1348" fg:w="37"/><text x="45.2133%" y="3439.50"></text></g><g><title>`0x7FFAC12C7779 (1 samples, 0.03%)</title><rect x="46.1641%" y="3413" width="0.0334%" height="15" fill="rgb(252,84,27)" fg:x="1384" fg:w="1"/><text x="46.4141%" y="3423.50"></text></g><g><title>boggle.exe`alloc::string::impl$13::extend (41 samples, 1.37%)</title><rect x="44.8966%" y="3541" width="1.3676%" height="15" fill="rgb(223,145,39)" fg:x="1346" fg:w="41"/><text x="45.1466%" y="3551.50"></text></g><g><title>boggle.exe`core::char::impl$34::size_hint (2 samples, 0.07%)</title><rect x="46.1975%" y="3525" width="0.0667%" height="15" fill="rgb(239,219,30)" fg:x="1385" fg:w="2"/><text x="46.4475%" y="3535.50"></text></g><g><title>boggle.exe`core::ops::index_range::impl$1::next (2 samples, 0.07%)</title><rect x="46.3976%" y="3461" width="0.0667%" height="15" fill="rgb(224,196,39)" fg:x="1391" fg:w="2"/><text x="46.6476%" y="3471.50"></text></g><g><title>boggle.exe`alloc::string::impl$7::from_iter (53 samples, 1.77%)</title><rect x="44.7298%" y="3557" width="1.7678%" height="15" fill="rgb(205,35,43)" fg:x="1341" fg:w="53"/><text x="44.9798%" y="3567.50"></text></g><g><title>boggle.exe`core::char::impl$44::fold&lt;tuple$&lt;&gt;,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;char,alloc::string::impl$13::extend::closure_env$0&lt;core::char::ToUppercase&gt; &gt; &gt;(core::char::ToUppercase, tuple$&lt;&gt;, core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;char,alloc::string::impl$13::extend::closure_env$0 (7 samples, 0.23%)</title><rect x="46.2642%" y="3541" width="0.2335%" height="15" fill="rgb(228,201,21)" fg:x="1387" fg:w="7"/><text x="46.5142%" y="3551.50"></text></g><g><title>boggle.exe`core::char::impl$16::fold(core::char::CaseMappingIter, tuple$&lt;&gt;, core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;char,alloc::string::impl$13::extend::closure_env$0 (3 samples, 0.10%)</title><rect x="46.3976%" y="3525" width="0.1001%" height="15" fill="rgb(237,118,16)" fg:x="1391" fg:w="3"/><text x="46.6476%" y="3535.50"></text></g><g><title>boggle.exe`core::array::iter::impl$2::fold(core::array::iter::IntoIter&lt;char,3&gt;, tuple$&lt;&gt;, core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;char,alloc::string::impl$13::extend::closure_env$0 (3 samples, 0.10%)</title><rect x="46.3976%" y="3509" width="0.1001%" height="15" fill="rgb(241,17,19)" fg:x="1391" fg:w="3"/><text x="46.6476%" y="3519.50"></text></g><g><title>boggle.exe`core::iter::adapters::by_ref_sized::impl$0::fold(core::iter::adapters::by_ref_sized::ByRefSized&lt;core::ops::index_range::IndexRange&gt;, tuple$&lt;&gt;, core::array::iter::impl$2::fold::closure_env$0&lt;char,3,tuple$&lt;&gt;,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;char,alloc::string::impl$13::extend::closure_env$0 (3 samples, 0.10%)</title><rect x="46.3976%" y="3493" width="0.1001%" height="15" fill="rgb(214,10,25)" fg:x="1391" fg:w="3"/><text x="46.6476%" y="3503.50"></text></g><g><title>boggle.exe`core::iter::traits::iterator::Iterator::try_fold(core::ops::index_range::IndexRange*, tuple$&lt;&gt;, core::ops::try_trait::impl$0::wrap_mut_2::closure_env$0&lt;tuple$&lt;&gt;,tuple$&lt;&gt;,usize,core::array::iter::impl$2::fold::closure_env$0&lt;char,3,tuple$&lt;&gt;,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;char,alloc::string::impl$13::extend::closure_env$0 (3 samples, 0.10%)</title><rect x="46.3976%" y="3477" width="0.1001%" height="15" fill="rgb(238,37,29)" fg:x="1391" fg:w="3"/><text x="46.6476%" y="3487.50"></text></g><g><title>boggle.exe`core::ops::try_trait::impl$0::wrap_mut_2::closure$0(core::ops::try_trait::impl$0::wrap_mut_2::closure_env$0&lt;tuple$&lt;&gt;,tuple$&lt;&gt;,usize,core::array::iter::impl$2::fold::closure_env$0&lt;char,3,tuple$&lt;&gt;,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;char,alloc::string::impl$13::extend::closure_env$0&lt;core::char::ToUppercase&gt; &gt; &gt; &gt;*, tuple$ (1 samples, 0.03%)</title><rect x="46.4643%" y="3461" width="0.0334%" height="15" fill="rgb(253,83,25)" fg:x="1393" fg:w="1"/><text x="46.7143%" y="3471.50"></text></g><g><title>boggle.exe`core::array::iter::impl$2::fold::closure$0(core::array::iter::impl$2::fold::closure_env$0&lt;char,3,tuple$&lt;&gt;,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;char,alloc::string::impl$13::extend::closure_env$0&lt;core::char::ToUppercase&gt; &gt; &gt;*, tuple$ (1 samples, 0.03%)</title><rect x="46.4643%" y="3445" width="0.0334%" height="15" fill="rgb(234,192,12)" fg:x="1393" fg:w="1"/><text x="46.7143%" y="3455.50"></text></g><g><title>boggle.exe`core::iter::traits::iterator::Iterator::for_each::call::closure$0(core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;char,alloc::string::impl$13::extend::closure_env$0&lt;core::char::ToUppercase&gt; &gt;*, tuple$ (1 samples, 0.03%)</title><rect x="46.4643%" y="3429" width="0.0334%" height="15" fill="rgb(241,216,45)" fg:x="1393" fg:w="1"/><text x="46.7143%" y="3439.50"></text></g><g><title>boggle.exe`alloc::string::impl$13::extend::closure$0(alloc::string::impl$13::extend::closure_env$0 (1 samples, 0.03%)</title><rect x="46.4643%" y="3413" width="0.0334%" height="15" fill="rgb(242,22,33)" fg:x="1393" fg:w="1"/><text x="46.7143%" y="3423.50"></text></g><g><title>boggle.exe`alloc::string::String::push (1 samples, 0.03%)</title><rect x="46.4643%" y="3397" width="0.0334%" height="15" fill="rgb(231,105,49)" fg:x="1393" fg:w="1"/><text x="46.7143%" y="3407.50"></text></g><g><title>boggle.exe`core::char::methods::impl$0::len_utf8 (1 samples, 0.03%)</title><rect x="46.4643%" y="3381" width="0.0334%" height="15" fill="rgb(218,204,15)" fg:x="1393" fg:w="1"/><text x="46.7143%" y="3391.50"></text></g><g><title>boggle.exe`core::char::methods::len_utf8 (1 samples, 0.03%)</title><rect x="46.4643%" y="3365" width="0.0334%" height="15" fill="rgb(235,138,41)" fg:x="1393" fg:w="1"/><text x="46.7143%" y="3375.50"></text></g><g><title>boggle.exe`core::char::methods::impl$0::to_uppercase (58 samples, 1.93%)</title><rect x="44.7298%" y="3573" width="1.9346%" height="15" fill="rgb(246,0,9)" fg:x="1341" fg:w="58"/><text x="44.9798%" y="3583.50">b..</text></g><g><title>boggle.exe`core::char::CaseMappingIter::new (5 samples, 0.17%)</title><rect x="46.4977%" y="3557" width="0.1668%" height="15" fill="rgb(210,74,4)" fg:x="1394" fg:w="5"/><text x="46.7477%" y="3567.50"></text></g><g><title>boggle.exe`core::unicode::unicode_data::conversions::to_upper (1 samples, 0.03%)</title><rect x="46.6311%" y="3541" width="0.0334%" height="15" fill="rgb(250,60,41)" fg:x="1398" fg:w="1"/><text x="46.8811%" y="3551.50"></text></g><g><title>`0x7FFAC12D22C0 (1 samples, 0.03%)</title><rect x="46.6644%" y="3461" width="0.0334%" height="15" fill="rgb(220,115,12)" fg:x="1399" fg:w="1"/><text x="46.9144%" y="3471.50"></text></g><g><title>`0x7FFAC12D230F (1 samples, 0.03%)</title><rect x="46.6978%" y="3461" width="0.0334%" height="15" fill="rgb(237,100,13)" fg:x="1400" fg:w="1"/><text x="46.9478%" y="3471.50"></text></g><g><title>`0x7FFAC12D2313 (1 samples, 0.03%)</title><rect x="46.7312%" y="3461" width="0.0334%" height="15" fill="rgb(213,55,26)" fg:x="1401" fg:w="1"/><text x="46.9812%" y="3471.50"></text></g><g><title>`0x7FFAC12D2329 (1 samples, 0.03%)</title><rect x="46.7645%" y="3461" width="0.0334%" height="15" fill="rgb(216,17,4)" fg:x="1402" fg:w="1"/><text x="47.0145%" y="3471.50"></text></g><g><title>`0x7FFAC12D2373 (1 samples, 0.03%)</title><rect x="46.7979%" y="3461" width="0.0334%" height="15" fill="rgb(220,153,47)" fg:x="1403" fg:w="1"/><text x="47.0479%" y="3471.50"></text></g><g><title>`0x7FFAC12D23A7 (4 samples, 0.13%)</title><rect x="46.8312%" y="3461" width="0.1334%" height="15" fill="rgb(215,131,9)" fg:x="1404" fg:w="4"/><text x="47.0812%" y="3471.50"></text></g><g><title>`0x7FFAC12D23E7 (1 samples, 0.03%)</title><rect x="46.9646%" y="3461" width="0.0334%" height="15" fill="rgb(233,46,42)" fg:x="1408" fg:w="1"/><text x="47.2146%" y="3471.50"></text></g><g><title>`0x7FFAC12D243D (2 samples, 0.07%)</title><rect x="46.9980%" y="3461" width="0.0667%" height="15" fill="rgb(226,86,7)" fg:x="1409" fg:w="2"/><text x="47.2480%" y="3471.50"></text></g><g><title>`0x7FFAC12D26AB (2 samples, 0.07%)</title><rect x="47.0647%" y="3461" width="0.0667%" height="15" fill="rgb(239,226,21)" fg:x="1411" fg:w="2"/><text x="47.3147%" y="3471.50"></text></g><g><title>`0x7FFAC12D292C (1 samples, 0.03%)</title><rect x="47.1314%" y="3461" width="0.0334%" height="15" fill="rgb(244,137,22)" fg:x="1413" fg:w="1"/><text x="47.3814%" y="3471.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place (16 samples, 0.53%)</title><rect x="46.6644%" y="3573" width="0.5337%" height="15" fill="rgb(211,139,35)" fg:x="1399" fg:w="16"/><text x="46.9144%" y="3583.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(alloc::vec::Vec (16 samples, 0.53%)</title><rect x="46.6644%" y="3557" width="0.5337%" height="15" fill="rgb(214,62,50)" fg:x="1399" fg:w="16"/><text x="46.9144%" y="3567.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (16 samples, 0.53%)</title><rect x="46.6644%" y="3541" width="0.5337%" height="15" fill="rgb(212,113,44)" fg:x="1399" fg:w="16"/><text x="46.9144%" y="3551.50"></text></g><g><title>boggle.exe`alloc::raw_vec::impl$4::drop(alloc::raw_vec::RawVec (16 samples, 0.53%)</title><rect x="46.6644%" y="3525" width="0.5337%" height="15" fill="rgb(226,150,43)" fg:x="1399" fg:w="16"/><text x="46.9144%" y="3535.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::deallocate (16 samples, 0.53%)</title><rect x="46.6644%" y="3509" width="0.5337%" height="15" fill="rgb(250,71,37)" fg:x="1399" fg:w="16"/><text x="46.9144%" y="3519.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (16 samples, 0.53%)</title><rect x="46.6644%" y="3493" width="0.5337%" height="15" fill="rgb(219,76,19)" fg:x="1399" fg:w="16"/><text x="46.9144%" y="3503.50"></text></g><g><title>boggle.exe`alloc::alloc::dealloc (16 samples, 0.53%)</title><rect x="46.6644%" y="3477" width="0.5337%" height="15" fill="rgb(250,39,11)" fg:x="1399" fg:w="16"/><text x="46.9144%" y="3487.50"></text></g><g><title>boggle.exe`__rust_dealloc (1 samples, 0.03%)</title><rect x="47.1648%" y="3461" width="0.0334%" height="15" fill="rgb(230,64,31)" fg:x="1414" fg:w="1"/><text x="47.4148%" y="3471.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;::as_mut_ptr (644 samples, 21.48%)</title><rect x="25.8506%" y="3813" width="21.4810%" height="15" fill="rgb(208,222,23)" fg:x="775" fg:w="644"/><text x="26.1006%" y="3823.50">boggle.exe`alloc::vec::Vec&lt;alloc::..</text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;alloc::string::String,alloc::alloc::Global&gt;::ptr (644 samples, 21.48%)</title><rect x="25.8506%" y="3797" width="21.4810%" height="15" fill="rgb(227,125,18)" fg:x="775" fg:w="644"/><text x="26.1006%" y="3807.50">boggle.exe`alloc::raw_vec::RawVec&lt;..</text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (644 samples, 21.48%)</title><rect x="25.8506%" y="3781" width="21.4810%" height="15" fill="rgb(234,210,9)" fg:x="775" fg:w="644"/><text x="26.1006%" y="3791.50">boggle.exe`alloc::raw_vec::RawVecI..</text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (644 samples, 21.48%)</title><rect x="25.8506%" y="3765" width="21.4810%" height="15" fill="rgb(217,127,24)" fg:x="775" fg:w="644"/><text x="26.1006%" y="3775.50">boggle.exe`alloc::raw_vec::RawVecI..</text></g><g><title>boggle.exe`boggle::utils::dict_trie::DictTrie::extend_word (644 samples, 21.48%)</title><rect x="25.8506%" y="3749" width="21.4810%" height="15" fill="rgb(239,141,48)" fg:x="775" fg:w="644"/><text x="26.1006%" y="3759.50">boggle.exe`boggle::utils::dict_tri..</text></g><g><title>boggle.exe`core::ptr::drop_in_place (133 samples, 4.44%)</title><rect x="42.8953%" y="3733" width="4.4363%" height="15" fill="rgb(227,109,8)" fg:x="1286" fg:w="133"/><text x="43.1453%" y="3743.50">boggl..</text></g><g><title>boggle.exe`core::ptr::drop_in_place(alloc::vec::Vec (133 samples, 4.44%)</title><rect x="42.8953%" y="3717" width="4.4363%" height="15" fill="rgb(235,184,23)" fg:x="1286" fg:w="133"/><text x="43.1453%" y="3727.50">boggl..</text></g><g><title>boggle.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (133 samples, 4.44%)</title><rect x="42.8953%" y="3701" width="4.4363%" height="15" fill="rgb(227,226,48)" fg:x="1286" fg:w="133"/><text x="43.1453%" y="3711.50">boggl..</text></g><g><title>boggle.exe`alloc::raw_vec::impl$4::drop(alloc::raw_vec::RawVec (133 samples, 4.44%)</title><rect x="42.8953%" y="3685" width="4.4363%" height="15" fill="rgb(206,150,11)" fg:x="1286" fg:w="133"/><text x="43.1453%" y="3695.50">boggl..</text></g><g><title>boggle.exe`alloc::vec::in_place_collect::from_iter_in_place&lt;core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter&lt;alloc::string::String,alloc::alloc::Global&gt;,boggle::utils::dict_trie::impl$1::extend_word::closure_env$0&gt;,alloc::string::String&gt;(core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter (133 samples, 4.44%)</title><rect x="42.8953%" y="3669" width="4.4363%" height="15" fill="rgb(254,2,33)" fg:x="1286" fg:w="133"/><text x="43.1453%" y="3679.50">boggl..</text></g><g><title>boggle.exe`alloc::vec::into_iter::IntoIter&lt;alloc::string::String,alloc::alloc::Global&gt;::forget_allocation_drop_remaining (133 samples, 4.44%)</title><rect x="42.8953%" y="3653" width="4.4363%" height="15" fill="rgb(243,160,20)" fg:x="1286" fg:w="133"/><text x="43.1453%" y="3663.50">boggl..</text></g><g><title>boggle.exe`alloc::vec::into_iter::IntoIter&lt;alloc::string::String,alloc::alloc::Global&gt;::as_raw_mut_slice (133 samples, 4.44%)</title><rect x="42.8953%" y="3637" width="4.4363%" height="15" fill="rgb(218,208,30)" fg:x="1286" fg:w="133"/><text x="43.1453%" y="3647.50">boggl..</text></g><g><title>boggle.exe`alloc::vec::into_iter::impl$5::try_fold&lt;alloc::string::String,alloc::alloc::Global,alloc::vec::in_place_drop::InPlaceDrop&lt;alloc::string::String&gt;,core::iter::adapters::map::map_try_fold::closure_env$0&lt;alloc::string::String,alloc::string::String,alloc::vec::in_place_drop::InPlaceDrop&lt;alloc::string::String&gt;,enum2$&lt;core::result::Result&lt;alloc::vec::in_place_drop::InPlaceDrop&lt;alloc::string::String&gt;,never$&gt; &gt;,boggle::utils::dict_trie::impl$1::extend_word::closure_env$0,alloc::vec::in_place_collect::write_in_place_with_drop::closure_env$0&lt;alloc::string::String&gt; &gt;,enum2$&lt;core::result::Result&lt;alloc::vec::in_place_drop::InPlaceDrop&lt;alloc::string::String&gt;,never$&gt; &gt; &gt;(alloc::vec::into_iter::IntoIter&lt;alloc::string::String,alloc::alloc::Global&gt;*, alloc::vec::in_place_drop::InPlaceDrop&lt;alloc::string::String&gt;, core::iter::adapters::map::map_try_fold::closure_env$0&lt;alloc::string::String,alloc::string::String,alloc::vec::in_place_drop::InPlaceDrop&lt;alloc::string::String&gt;,enum2$&lt;core::result::Result&lt;alloc::vec::in_place_drop::InPlaceDrop&lt;alloc::string::String&gt;,never$&gt; &gt;,boggle::utils::dict_trie::impl$1::extend_word::closure_env$0,alloc::vec::in_place_collect::write_in_place_with_drop::closure_env$0 (133 samples, 4.44%)</title><rect x="42.8953%" y="3621" width="4.4363%" height="15" fill="rgb(224,120,49)" fg:x="1286" fg:w="133"/><text x="43.1453%" y="3631.50">boggl..</text></g><g><title>boggle.exe`core::iter::adapters::map::map_try_fold::closure$0(core::iter::adapters::map::map_try_fold::closure_env$0&lt;alloc::string::String,alloc::string::String,alloc::vec::in_place_drop::InPlaceDrop&lt;alloc::string::String&gt;,enum2$&lt;core::result::Result&lt;alloc::vec::in_place_drop::InPlaceDrop&lt;alloc::string::String&gt;,never$&gt; &gt;,boggle::utils::dict_trie::impl$1::extend_word::closure_env$0,alloc::vec::in_place_collect::write_in_place_with_drop::closure_env$0&lt;alloc::string::String&gt; &gt;*, alloc::vec::in_place_drop::InPlaceDrop (133 samples, 4.44%)</title><rect x="42.8953%" y="3605" width="4.4363%" height="15" fill="rgb(246,12,2)" fg:x="1286" fg:w="133"/><text x="43.1453%" y="3615.50">boggl..</text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::closure$0 (133 samples, 4.44%)</title><rect x="42.8953%" y="3589" width="4.4363%" height="15" fill="rgb(236,117,3)" fg:x="1286" fg:w="133"/><text x="43.1453%" y="3599.50">boggl..</text></g><g><title>boggle.exe`core::str::iter::impl$0::next (4 samples, 0.13%)</title><rect x="47.1981%" y="3573" width="0.1334%" height="15" fill="rgb(216,128,52)" fg:x="1415" fg:w="4"/><text x="47.4481%" y="3583.50"></text></g><g><title>boggle.exe`core::str::validations::next_code_point(core::slice::iter::Iter (4 samples, 0.13%)</title><rect x="47.1981%" y="3557" width="0.1334%" height="15" fill="rgb(246,145,19)" fg:x="1415" fg:w="4"/><text x="47.4481%" y="3567.50"></text></g><g><title>boggle.exe`core::slice::iter::impl$182::next(core::slice::iter::Iter (1 samples, 0.03%)</title><rect x="47.2982%" y="3541" width="0.0334%" height="15" fill="rgb(222,11,46)" fg:x="1418" fg:w="1"/><text x="47.5482%" y="3551.50"></text></g><g><title>`0x7FFAC12D222E (1 samples, 0.03%)</title><rect x="47.3649%" y="3685" width="0.0334%" height="15" fill="rgb(245,82,36)" fg:x="1420" fg:w="1"/><text x="47.6149%" y="3695.50"></text></g><g><title>`0x7FFAC12D2267 (1 samples, 0.03%)</title><rect x="47.3983%" y="3685" width="0.0334%" height="15" fill="rgb(250,73,51)" fg:x="1421" fg:w="1"/><text x="47.6483%" y="3695.50"></text></g><g><title>`0x7FFAC12D2296 (1 samples, 0.03%)</title><rect x="47.4316%" y="3685" width="0.0334%" height="15" fill="rgb(221,189,23)" fg:x="1422" fg:w="1"/><text x="47.6816%" y="3695.50"></text></g><g><title>`0x7FFAC12D238C (1 samples, 0.03%)</title><rect x="47.4650%" y="3685" width="0.0334%" height="15" fill="rgb(210,33,7)" fg:x="1423" fg:w="1"/><text x="47.7150%" y="3695.50"></text></g><g><title>`0x7FFAC12D23A7 (6 samples, 0.20%)</title><rect x="47.4983%" y="3685" width="0.2001%" height="15" fill="rgb(210,107,22)" fg:x="1424" fg:w="6"/><text x="47.7483%" y="3695.50"></text></g><g><title>`0x7FFAC12D23DD (1 samples, 0.03%)</title><rect x="47.6985%" y="3685" width="0.0334%" height="15" fill="rgb(222,116,37)" fg:x="1430" fg:w="1"/><text x="47.9485%" y="3695.50"></text></g><g><title>`0x7FFAC12D23E7 (1 samples, 0.03%)</title><rect x="47.7318%" y="3685" width="0.0334%" height="15" fill="rgb(254,17,48)" fg:x="1431" fg:w="1"/><text x="47.9818%" y="3695.50"></text></g><g><title>`0x7FFAC12D2406 (2 samples, 0.07%)</title><rect x="47.7652%" y="3685" width="0.0667%" height="15" fill="rgb(224,36,32)" fg:x="1432" fg:w="2"/><text x="48.0152%" y="3695.50"></text></g><g><title>boggle.exe`boggle::BoggleSolver::has_extension (660 samples, 22.01%)</title><rect x="25.8506%" y="3861" width="22.0147%" height="15" fill="rgb(232,90,46)" fg:x="775" fg:w="660"/><text x="26.1006%" y="3871.50">boggle.exe`boggle::BoggleSolver::ha..</text></g><g><title>boggle.exe`core::ptr::drop_in_place(alloc::vec::Vec (660 samples, 22.01%)</title><rect x="25.8506%" y="3845" width="22.0147%" height="15" fill="rgb(241,66,40)" fg:x="775" fg:w="660"/><text x="26.1006%" y="3855.50">boggle.exe`core::ptr::drop_in_place..</text></g><g><title>boggle.exe`alloc::vec::impl$25::drop(alloc::vec::Vec (660 samples, 22.01%)</title><rect x="25.8506%" y="3829" width="22.0147%" height="15" fill="rgb(249,184,29)" fg:x="775" fg:w="660"/><text x="26.1006%" y="3839.50">boggle.exe`alloc::vec::impl$25::dro..</text></g><g><title>boggle.exe`core::ptr::drop_in_place(ptr_mut$&lt;slice2$ (16 samples, 0.53%)</title><rect x="47.3316%" y="3813" width="0.5337%" height="15" fill="rgb(231,181,1)" fg:x="1419" fg:w="16"/><text x="47.5816%" y="3823.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place (16 samples, 0.53%)</title><rect x="47.3316%" y="3797" width="0.5337%" height="15" fill="rgb(224,94,2)" fg:x="1419" fg:w="16"/><text x="47.5816%" y="3807.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(alloc::vec::Vec (16 samples, 0.53%)</title><rect x="47.3316%" y="3781" width="0.5337%" height="15" fill="rgb(229,170,15)" fg:x="1419" fg:w="16"/><text x="47.5816%" y="3791.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (16 samples, 0.53%)</title><rect x="47.3316%" y="3765" width="0.5337%" height="15" fill="rgb(240,127,35)" fg:x="1419" fg:w="16"/><text x="47.5816%" y="3775.50"></text></g><g><title>boggle.exe`alloc::raw_vec::impl$4::drop(alloc::raw_vec::RawVec (16 samples, 0.53%)</title><rect x="47.3316%" y="3749" width="0.5337%" height="15" fill="rgb(248,196,34)" fg:x="1419" fg:w="16"/><text x="47.5816%" y="3759.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::deallocate (16 samples, 0.53%)</title><rect x="47.3316%" y="3733" width="0.5337%" height="15" fill="rgb(236,137,7)" fg:x="1419" fg:w="16"/><text x="47.5816%" y="3743.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (16 samples, 0.53%)</title><rect x="47.3316%" y="3717" width="0.5337%" height="15" fill="rgb(235,127,16)" fg:x="1419" fg:w="16"/><text x="47.5816%" y="3727.50"></text></g><g><title>boggle.exe`alloc::alloc::dealloc (16 samples, 0.53%)</title><rect x="47.3316%" y="3701" width="0.5337%" height="15" fill="rgb(250,192,54)" fg:x="1419" fg:w="16"/><text x="47.5816%" y="3711.50"></text></g><g><title>`0x7FFAC12D29E7 (1 samples, 0.03%)</title><rect x="47.8319%" y="3685" width="0.0334%" height="15" fill="rgb(218,98,20)" fg:x="1434" fg:w="1"/><text x="48.0819%" y="3695.50"></text></g><g><title>`0x7FFAC1319A44 (1 samples, 0.03%)</title><rect x="47.8319%" y="3669" width="0.0334%" height="15" fill="rgb(230,176,47)" fg:x="1434" fg:w="1"/><text x="48.0819%" y="3679.50"></text></g><g><title>`0x7FFAC12D2871 (1 samples, 0.03%)</title><rect x="47.8319%" y="3653" width="0.0334%" height="15" fill="rgb(244,2,33)" fg:x="1434" fg:w="1"/><text x="48.0819%" y="3663.50"></text></g><g><title>`0x7FFAC12CB9E9 (1 samples, 0.03%)</title><rect x="47.8319%" y="3637" width="0.0334%" height="15" fill="rgb(231,100,17)" fg:x="1434" fg:w="1"/><text x="48.0819%" y="3647.50"></text></g><g><title>`0x7FFAC12C5585 (1 samples, 0.03%)</title><rect x="47.8319%" y="3621" width="0.0334%" height="15" fill="rgb(245,23,12)" fg:x="1434" fg:w="1"/><text x="48.0819%" y="3631.50"></text></g><g><title>`0x7FFAC12D23A7 (1 samples, 0.03%)</title><rect x="47.8652%" y="3573" width="0.0334%" height="15" fill="rgb(249,55,22)" fg:x="1435" fg:w="1"/><text x="48.1152%" y="3583.50"></text></g><g><title>`0x7FFAC12D2365 (1 samples, 0.03%)</title><rect x="47.8986%" y="3509" width="0.0334%" height="15" fill="rgb(207,134,9)" fg:x="1436" fg:w="1"/><text x="48.1486%" y="3519.50"></text></g><g><title>`0x7FFAC12D23A7 (1 samples, 0.03%)</title><rect x="47.9320%" y="3509" width="0.0334%" height="15" fill="rgb(218,134,0)" fg:x="1437" fg:w="1"/><text x="48.1820%" y="3519.50"></text></g><g><title>`0x7FFAC12D2240 (1 samples, 0.03%)</title><rect x="47.9653%" y="3445" width="0.0334%" height="15" fill="rgb(213,212,33)" fg:x="1438" fg:w="1"/><text x="48.2153%" y="3455.50"></text></g><g><title>`0x7FFAC12D23DD (1 samples, 0.03%)</title><rect x="47.9987%" y="3445" width="0.0334%" height="15" fill="rgb(252,106,18)" fg:x="1439" fg:w="1"/><text x="48.2487%" y="3455.50"></text></g><g><title>`0x7FFAC12D23A7 (1 samples, 0.03%)</title><rect x="48.0320%" y="3381" width="0.0334%" height="15" fill="rgb(208,126,42)" fg:x="1440" fg:w="1"/><text x="48.2820%" y="3391.50"></text></g><g><title>`0x7FFAC12D2406 (1 samples, 0.03%)</title><rect x="48.0654%" y="3381" width="0.0334%" height="15" fill="rgb(246,175,29)" fg:x="1441" fg:w="1"/><text x="48.3154%" y="3391.50"></text></g><g><title>`0x7FFAC12D238C (1 samples, 0.03%)</title><rect x="48.1654%" y="3317" width="0.0334%" height="15" fill="rgb(215,13,50)" fg:x="1444" fg:w="1"/><text x="48.4154%" y="3327.50"></text></g><g><title>`0x7FFAC12D23A7 (4 samples, 0.13%)</title><rect x="48.1988%" y="3317" width="0.1334%" height="15" fill="rgb(216,172,15)" fg:x="1445" fg:w="4"/><text x="48.4488%" y="3327.50"></text></g><g><title>`0x7FFAC12D2DFB (1 samples, 0.03%)</title><rect x="48.3322%" y="3317" width="0.0334%" height="15" fill="rgb(212,103,13)" fg:x="1449" fg:w="1"/><text x="48.5822%" y="3327.50"></text></g><g><title>`0x7FFAC12D23A7 (1 samples, 0.03%)</title><rect x="48.3656%" y="3253" width="0.0334%" height="15" fill="rgb(231,171,36)" fg:x="1450" fg:w="1"/><text x="48.6156%" y="3263.50"></text></g><g><title>`0x7FFAC12D22F8 (1 samples, 0.03%)</title><rect x="48.3989%" y="3189" width="0.0334%" height="15" fill="rgb(250,123,20)" fg:x="1451" fg:w="1"/><text x="48.6489%" y="3199.50"></text></g><g><title>`0x7FFAC12D2296 (1 samples, 0.03%)</title><rect x="48.4656%" y="3125" width="0.0334%" height="15" fill="rgb(212,53,50)" fg:x="1453" fg:w="1"/><text x="48.7156%" y="3135.50"></text></g><g><title>`0x7FFAC12D2316 (1 samples, 0.03%)</title><rect x="48.5324%" y="2997" width="0.0334%" height="15" fill="rgb(243,54,12)" fg:x="1455" fg:w="1"/><text x="48.7824%" y="3007.50"></text></g><g><title>`0x7FFAC12D22C0 (1 samples, 0.03%)</title><rect x="48.5657%" y="2933" width="0.0334%" height="15" fill="rgb(234,101,34)" fg:x="1456" fg:w="1"/><text x="48.8157%" y="2943.50"></text></g><g><title>boggle.exe`alloc::string::String::push (1 samples, 0.03%)</title><rect x="48.5991%" y="2805" width="0.0334%" height="15" fill="rgb(254,67,22)" fg:x="1457" fg:w="1"/><text x="48.8491%" y="2815.50"></text></g><g><title>boggle.exe`core::char::methods::impl$0::len_utf8 (1 samples, 0.03%)</title><rect x="48.5991%" y="2789" width="0.0334%" height="15" fill="rgb(250,35,47)" fg:x="1457" fg:w="1"/><text x="48.8491%" y="2799.50"></text></g><g><title>boggle.exe`core::char::methods::len_utf8 (1 samples, 0.03%)</title><rect x="48.5991%" y="2773" width="0.0334%" height="15" fill="rgb(226,126,38)" fg:x="1457" fg:w="1"/><text x="48.8491%" y="2783.50"></text></g><g><title>boggle.exe`alloc::string::String::pop (2 samples, 0.07%)</title><rect x="48.5991%" y="2869" width="0.0667%" height="15" fill="rgb(216,138,53)" fg:x="1457" fg:w="2"/><text x="48.8491%" y="2879.50"></text></g><g><title>boggle.exe`alloc::string::impl$28::deref (2 samples, 0.07%)</title><rect x="48.5991%" y="2853" width="0.0667%" height="15" fill="rgb(246,199,43)" fg:x="1457" fg:w="2"/><text x="48.8491%" y="2863.50"></text></g><g><title>boggle.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (2 samples, 0.07%)</title><rect x="48.5991%" y="2837" width="0.0667%" height="15" fill="rgb(232,125,11)" fg:x="1457" fg:w="2"/><text x="48.8491%" y="2847.50"></text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::collect_words(boggle::utils::dict_trie::DictTrieNode*, ref$&lt;str$&gt;, alloc::vec::Vec (2 samples, 0.07%)</title><rect x="48.5991%" y="2821" width="0.0667%" height="15" fill="rgb(218,219,45)" fg:x="1457" fg:w="2"/><text x="48.8491%" y="2831.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;::push (1 samples, 0.03%)</title><rect x="48.6324%" y="2805" width="0.0334%" height="15" fill="rgb(216,102,54)" fg:x="1458" fg:w="1"/><text x="48.8824%" y="2815.50"></text></g><g><title>boggle.exe`alloc::string::impl$6::clone (1 samples, 0.03%)</title><rect x="48.6324%" y="2789" width="0.0334%" height="15" fill="rgb(250,228,7)" fg:x="1458" fg:w="1"/><text x="48.8824%" y="2799.50"></text></g><g><title>boggle.exe`alloc::vec::impl$11::clone (1 samples, 0.03%)</title><rect x="48.6324%" y="2773" width="0.0334%" height="15" fill="rgb(226,125,25)" fg:x="1458" fg:w="1"/><text x="48.8824%" y="2783.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec_in (1 samples, 0.03%)</title><rect x="48.6324%" y="2757" width="0.0334%" height="15" fill="rgb(224,165,27)" fg:x="1458" fg:w="1"/><text x="48.8824%" y="2767.50"></text></g><g><title>boggle.exe`alloc::slice::hack::to_vec (1 samples, 0.03%)</title><rect x="48.6324%" y="2741" width="0.0334%" height="15" fill="rgb(233,86,3)" fg:x="1458" fg:w="1"/><text x="48.8824%" y="2751.50"></text></g><g><title>boggle.exe`alloc::slice::hack::impl$1::to_vec (1 samples, 0.03%)</title><rect x="48.6324%" y="2725" width="0.0334%" height="15" fill="rgb(228,116,20)" fg:x="1458" fg:w="1"/><text x="48.8824%" y="2735.50"></text></g><g><title>boggle.exe`alloc::vec::Vec::with_capacity_in (1 samples, 0.03%)</title><rect x="48.6324%" y="2709" width="0.0334%" height="15" fill="rgb(209,192,17)" fg:x="1458" fg:w="1"/><text x="48.8824%" y="2719.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec::with_capacity_in (1 samples, 0.03%)</title><rect x="48.6324%" y="2693" width="0.0334%" height="15" fill="rgb(224,88,34)" fg:x="1458" fg:w="1"/><text x="48.8824%" y="2703.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner::with_capacity_in (1 samples, 0.03%)</title><rect x="48.6324%" y="2677" width="0.0334%" height="15" fill="rgb(233,38,6)" fg:x="1458" fg:w="1"/><text x="48.8824%" y="2687.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner::try_allocate_in (1 samples, 0.03%)</title><rect x="48.6324%" y="2661" width="0.0334%" height="15" fill="rgb(212,59,30)" fg:x="1458" fg:w="1"/><text x="48.8824%" y="2671.50"></text></g><g><title>`0x7FFAC12C7776 (1 samples, 0.03%)</title><rect x="48.6324%" y="2645" width="0.0334%" height="15" fill="rgb(213,80,3)" fg:x="1458" fg:w="1"/><text x="48.8824%" y="2655.50"></text></g><g><title>`0x7FFAC12C78B4 (1 samples, 0.03%)</title><rect x="48.6324%" y="2629" width="0.0334%" height="15" fill="rgb(251,178,7)" fg:x="1458" fg:w="1"/><text x="48.8824%" y="2639.50"></text></g><g><title>`0x7FFAC12C809C (1 samples, 0.03%)</title><rect x="48.6324%" y="2613" width="0.0334%" height="15" fill="rgb(213,154,26)" fg:x="1458" fg:w="1"/><text x="48.8824%" y="2623.50"></text></g><g><title>boggle.exe`alloc::string::String::push (1 samples, 0.03%)</title><rect x="48.6658%" y="2869" width="0.0334%" height="15" fill="rgb(238,165,49)" fg:x="1459" fg:w="1"/><text x="48.9158%" y="2879.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::push (1 samples, 0.03%)</title><rect x="48.6658%" y="2853" width="0.0334%" height="15" fill="rgb(248,91,46)" fg:x="1459" fg:w="1"/><text x="48.9158%" y="2863.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_mut_ptr (1 samples, 0.03%)</title><rect x="48.6658%" y="2837" width="0.0334%" height="15" fill="rgb(244,21,52)" fg:x="1459" fg:w="1"/><text x="48.9158%" y="2847.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::ptr (1 samples, 0.03%)</title><rect x="48.6658%" y="2821" width="0.0334%" height="15" fill="rgb(247,122,20)" fg:x="1459" fg:w="1"/><text x="48.9158%" y="2831.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (1 samples, 0.03%)</title><rect x="48.6658%" y="2805" width="0.0334%" height="15" fill="rgb(218,27,9)" fg:x="1459" fg:w="1"/><text x="48.9158%" y="2815.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (1 samples, 0.03%)</title><rect x="48.6658%" y="2789" width="0.0334%" height="15" fill="rgb(246,7,6)" fg:x="1459" fg:w="1"/><text x="48.9158%" y="2799.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::grow_one&lt;u8,alloc::alloc::Global&gt; (1 samples, 0.03%)</title><rect x="48.6658%" y="2773" width="0.0334%" height="15" fill="rgb(227,135,54)" fg:x="1459" fg:w="1"/><text x="48.9158%" y="2783.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_one (1 samples, 0.03%)</title><rect x="48.6658%" y="2757" width="0.0334%" height="15" fill="rgb(247,14,11)" fg:x="1459" fg:w="1"/><text x="48.9158%" y="2767.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (1 samples, 0.03%)</title><rect x="48.6658%" y="2741" width="0.0334%" height="15" fill="rgb(206,149,34)" fg:x="1459" fg:w="1"/><text x="48.9158%" y="2751.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (1 samples, 0.03%)</title><rect x="48.6658%" y="2725" width="0.0334%" height="15" fill="rgb(227,228,4)" fg:x="1459" fg:w="1"/><text x="48.9158%" y="2735.50"></text></g><g><title>boggle.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="48.6658%" y="2709" width="0.0334%" height="15" fill="rgb(238,218,28)" fg:x="1459" fg:w="1"/><text x="48.9158%" y="2719.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="48.6658%" y="2693" width="0.0334%" height="15" fill="rgb(252,86,40)" fg:x="1459" fg:w="1"/><text x="48.9158%" y="2703.50"></text></g><g><title>boggle.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="48.6658%" y="2677" width="0.0334%" height="15" fill="rgb(251,225,11)" fg:x="1459" fg:w="1"/><text x="48.9158%" y="2687.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="48.6658%" y="2661" width="0.0334%" height="15" fill="rgb(206,46,49)" fg:x="1459" fg:w="1"/><text x="48.9158%" y="2671.50"></text></g><g><title>`0x7FFAC12D5376 (1 samples, 0.03%)</title><rect x="48.6658%" y="2645" width="0.0334%" height="15" fill="rgb(245,128,24)" fg:x="1459" fg:w="1"/><text x="48.9158%" y="2655.50"></text></g><g><title>`0x7FFAC12D54B5 (1 samples, 0.03%)</title><rect x="48.6658%" y="2629" width="0.0334%" height="15" fill="rgb(219,177,34)" fg:x="1459" fg:w="1"/><text x="48.9158%" y="2639.50"></text></g><g><title>`0x7FFAC12D5DAA (1 samples, 0.03%)</title><rect x="48.6658%" y="2613" width="0.0334%" height="15" fill="rgb(218,60,48)" fg:x="1459" fg:w="1"/><text x="48.9158%" y="2623.50"></text></g><g><title>`0x7FFAC12C7776 (1 samples, 0.03%)</title><rect x="48.6658%" y="2597" width="0.0334%" height="15" fill="rgb(221,11,5)" fg:x="1459" fg:w="1"/><text x="48.9158%" y="2607.50"></text></g><g><title>`0x7FFAC12C78B4 (1 samples, 0.03%)</title><rect x="48.6658%" y="2581" width="0.0334%" height="15" fill="rgb(220,148,13)" fg:x="1459" fg:w="1"/><text x="48.9158%" y="2591.50"></text></g><g><title>`0x7FFAC12C7F57 (1 samples, 0.03%)</title><rect x="48.6658%" y="2565" width="0.0334%" height="15" fill="rgb(210,16,3)" fg:x="1459" fg:w="1"/><text x="48.9158%" y="2575.50"></text></g><g><title>boggle.exe`alloc::string::impl$102::to_string(ref$ (1 samples, 0.03%)</title><rect x="48.6991%" y="2869" width="0.0334%" height="15" fill="rgb(236,80,2)" fg:x="1460" fg:w="1"/><text x="48.9491%" y="2879.50"></text></g><g><title>boggle.exe`alloc::string::impl$44::from(ref$ (1 samples, 0.03%)</title><rect x="48.6991%" y="2853" width="0.0334%" height="15" fill="rgb(239,129,19)" fg:x="1460" fg:w="1"/><text x="48.9491%" y="2863.50"></text></g><g><title>boggle.exe`alloc::str::impl$4::to_owned(ref$ (1 samples, 0.03%)</title><rect x="48.6991%" y="2837" width="0.0334%" height="15" fill="rgb(220,106,35)" fg:x="1460" fg:w="1"/><text x="48.9491%" y="2847.50"></text></g><g><title>boggle.exe`alloc::slice::impl$9::to_owned(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="48.6991%" y="2821" width="0.0334%" height="15" fill="rgb(252,139,45)" fg:x="1460" fg:w="1"/><text x="48.9491%" y="2831.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="48.6991%" y="2805" width="0.0334%" height="15" fill="rgb(229,8,36)" fg:x="1460" fg:w="1"/><text x="48.9491%" y="2815.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec_in(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="48.6991%" y="2789" width="0.0334%" height="15" fill="rgb(230,126,33)" fg:x="1460" fg:w="1"/><text x="48.9491%" y="2799.50"></text></g><g><title>boggle.exe`alloc::slice::hack::to_vec(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="48.6991%" y="2773" width="0.0334%" height="15" fill="rgb(239,140,21)" fg:x="1460" fg:w="1"/><text x="48.9491%" y="2783.50"></text></g><g><title>boggle.exe`alloc::slice::hack::impl$1::to_vec(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="48.6991%" y="2757" width="0.0334%" height="15" fill="rgb(254,104,9)" fg:x="1460" fg:w="1"/><text x="48.9491%" y="2767.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="48.6991%" y="2741" width="0.0334%" height="15" fill="rgb(239,52,14)" fg:x="1460" fg:w="1"/><text x="48.9491%" y="2751.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="48.6991%" y="2725" width="0.0334%" height="15" fill="rgb(208,227,44)" fg:x="1460" fg:w="1"/><text x="48.9491%" y="2735.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="48.6991%" y="2709" width="0.0334%" height="15" fill="rgb(246,18,19)" fg:x="1460" fg:w="1"/><text x="48.9491%" y="2719.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (1 samples, 0.03%)</title><rect x="48.6991%" y="2693" width="0.0334%" height="15" fill="rgb(235,228,25)" fg:x="1460" fg:w="1"/><text x="48.9491%" y="2703.50"></text></g><g><title>`0x7FFAC12C7776 (1 samples, 0.03%)</title><rect x="48.6991%" y="2677" width="0.0334%" height="15" fill="rgb(240,156,20)" fg:x="1460" fg:w="1"/><text x="48.9491%" y="2687.50"></text></g><g><title>`0x7FFAC12C78B4 (1 samples, 0.03%)</title><rect x="48.6991%" y="2661" width="0.0334%" height="15" fill="rgb(224,8,20)" fg:x="1460" fg:w="1"/><text x="48.9491%" y="2671.50"></text></g><g><title>`0x7FFAC12C8047 (1 samples, 0.03%)</title><rect x="48.6991%" y="2645" width="0.0334%" height="15" fill="rgb(214,12,52)" fg:x="1460" fg:w="1"/><text x="48.9491%" y="2655.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;::push (1 samples, 0.03%)</title><rect x="48.7325%" y="2869" width="0.0334%" height="15" fill="rgb(211,220,47)" fg:x="1461" fg:w="1"/><text x="48.9825%" y="2879.50"></text></g><g><title>boggle.exe`alloc::string::impl$6::clone (1 samples, 0.03%)</title><rect x="48.7325%" y="2853" width="0.0334%" height="15" fill="rgb(250,173,5)" fg:x="1461" fg:w="1"/><text x="48.9825%" y="2863.50"></text></g><g><title>boggle.exe`alloc::vec::impl$11::clone (1 samples, 0.03%)</title><rect x="48.7325%" y="2837" width="0.0334%" height="15" fill="rgb(250,125,52)" fg:x="1461" fg:w="1"/><text x="48.9825%" y="2847.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec_in (1 samples, 0.03%)</title><rect x="48.7325%" y="2821" width="0.0334%" height="15" fill="rgb(209,133,18)" fg:x="1461" fg:w="1"/><text x="48.9825%" y="2831.50"></text></g><g><title>boggle.exe`alloc::slice::hack::to_vec (1 samples, 0.03%)</title><rect x="48.7325%" y="2805" width="0.0334%" height="15" fill="rgb(216,173,22)" fg:x="1461" fg:w="1"/><text x="48.9825%" y="2815.50"></text></g><g><title>boggle.exe`alloc::slice::hack::impl$1::to_vec (1 samples, 0.03%)</title><rect x="48.7325%" y="2789" width="0.0334%" height="15" fill="rgb(205,3,22)" fg:x="1461" fg:w="1"/><text x="48.9825%" y="2799.50"></text></g><g><title>boggle.exe`alloc::vec::Vec::with_capacity_in (1 samples, 0.03%)</title><rect x="48.7325%" y="2773" width="0.0334%" height="15" fill="rgb(248,22,20)" fg:x="1461" fg:w="1"/><text x="48.9825%" y="2783.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec::with_capacity_in (1 samples, 0.03%)</title><rect x="48.7325%" y="2757" width="0.0334%" height="15" fill="rgb(233,6,29)" fg:x="1461" fg:w="1"/><text x="48.9825%" y="2767.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner::with_capacity_in (1 samples, 0.03%)</title><rect x="48.7325%" y="2741" width="0.0334%" height="15" fill="rgb(240,22,54)" fg:x="1461" fg:w="1"/><text x="48.9825%" y="2751.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner::try_allocate_in (1 samples, 0.03%)</title><rect x="48.7325%" y="2725" width="0.0334%" height="15" fill="rgb(231,133,32)" fg:x="1461" fg:w="1"/><text x="48.9825%" y="2735.50"></text></g><g><title>`0x7FFAC12C7776 (1 samples, 0.03%)</title><rect x="48.7325%" y="2709" width="0.0334%" height="15" fill="rgb(248,193,4)" fg:x="1461" fg:w="1"/><text x="48.9825%" y="2719.50"></text></g><g><title>`0x7FFAC12C78B4 (1 samples, 0.03%)</title><rect x="48.7325%" y="2693" width="0.0334%" height="15" fill="rgb(211,178,46)" fg:x="1461" fg:w="1"/><text x="48.9825%" y="2703.50"></text></g><g><title>`0x7FFAC12C81D6 (1 samples, 0.03%)</title><rect x="48.7325%" y="2677" width="0.0334%" height="15" fill="rgb(224,5,42)" fg:x="1461" fg:w="1"/><text x="48.9825%" y="2687.50"></text></g><g><title>boggle.exe`alloc::string::String::pop (6 samples, 0.20%)</title><rect x="48.5991%" y="2933" width="0.2001%" height="15" fill="rgb(239,176,25)" fg:x="1457" fg:w="6"/><text x="48.8491%" y="2943.50"></text></g><g><title>boggle.exe`alloc::string::impl$28::deref (6 samples, 0.20%)</title><rect x="48.5991%" y="2917" width="0.2001%" height="15" fill="rgb(245,187,50)" fg:x="1457" fg:w="6"/><text x="48.8491%" y="2927.50"></text></g><g><title>boggle.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (6 samples, 0.20%)</title><rect x="48.5991%" y="2901" width="0.2001%" height="15" fill="rgb(248,24,15)" fg:x="1457" fg:w="6"/><text x="48.8491%" y="2911.50"></text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::collect_words(boggle::utils::dict_trie::DictTrieNode*, ref$&lt;str$&gt;, alloc::vec::Vec (6 samples, 0.20%)</title><rect x="48.5991%" y="2885" width="0.2001%" height="15" fill="rgb(205,166,13)" fg:x="1457" fg:w="6"/><text x="48.8491%" y="2895.50"></text></g><g><title>boggle.exe`std::collections::hash::map::impl$36::into_iter(std::collections::hash::map::HashMap (1 samples, 0.03%)</title><rect x="48.7658%" y="2869" width="0.0334%" height="15" fill="rgb(208,114,23)" fg:x="1462" fg:w="1"/><text x="49.0158%" y="2879.50"></text></g><g><title>boggle.exe`std::collections::hash::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;::iter (1 samples, 0.03%)</title><rect x="48.7658%" y="2853" width="0.0334%" height="15" fill="rgb(239,127,18)" fg:x="1462" fg:w="1"/><text x="49.0158%" y="2863.50"></text></g><g><title>boggle.exe`hashbrown::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt;::iter (1 samples, 0.03%)</title><rect x="48.7658%" y="2837" width="0.0334%" height="15" fill="rgb(219,154,28)" fg:x="1462" fg:w="1"/><text x="49.0158%" y="2847.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTable&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;::iter (1 samples, 0.03%)</title><rect x="48.7658%" y="2821" width="0.0334%" height="15" fill="rgb(225,157,23)" fg:x="1462" fg:w="1"/><text x="49.0158%" y="2831.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::iter (1 samples, 0.03%)</title><rect x="48.7658%" y="2805" width="0.0334%" height="15" fill="rgb(219,8,6)" fg:x="1462" fg:w="1"/><text x="49.0158%" y="2815.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawIterRange&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::new(unsigned char*, hashbrown::raw::Bucket&lt;tuple$ (1 samples, 0.03%)</title><rect x="48.7658%" y="2789" width="0.0334%" height="15" fill="rgb(212,47,6)" fg:x="1462" fg:w="1"/><text x="49.0158%" y="2799.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::load_aligned (1 samples, 0.03%)</title><rect x="48.7658%" y="2773" width="0.0334%" height="15" fill="rgb(224,190,4)" fg:x="1462" fg:w="1"/><text x="49.0158%" y="2783.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::match_empty_or_deleted (1 samples, 0.03%)</title><rect x="48.7658%" y="2757" width="0.0334%" height="15" fill="rgb(239,183,29)" fg:x="1462" fg:w="1"/><text x="49.0158%" y="2767.50"></text></g><g><title>boggle.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.03%)</title><rect x="48.7658%" y="2741" width="0.0334%" height="15" fill="rgb(213,57,7)" fg:x="1462" fg:w="1"/><text x="49.0158%" y="2751.50"></text></g><g><title>boggle.exe`alloc::string::String::pop (8 samples, 0.27%)</title><rect x="48.5657%" y="2997" width="0.2668%" height="15" fill="rgb(216,148,1)" fg:x="1456" fg:w="8"/><text x="48.8157%" y="3007.50"></text></g><g><title>boggle.exe`alloc::string::impl$28::deref (8 samples, 0.27%)</title><rect x="48.5657%" y="2981" width="0.2668%" height="15" fill="rgb(236,182,29)" fg:x="1456" fg:w="8"/><text x="48.8157%" y="2991.50"></text></g><g><title>boggle.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (8 samples, 0.27%)</title><rect x="48.5657%" y="2965" width="0.2668%" height="15" fill="rgb(244,120,48)" fg:x="1456" fg:w="8"/><text x="48.8157%" y="2975.50"></text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::collect_words(boggle::utils::dict_trie::DictTrieNode*, ref$&lt;str$&gt;, alloc::vec::Vec (8 samples, 0.27%)</title><rect x="48.5657%" y="2949" width="0.2668%" height="15" fill="rgb(206,71,34)" fg:x="1456" fg:w="8"/><text x="48.8157%" y="2959.50"></text></g><g><title>boggle.exe`alloc::string::impl$102::to_string(ref$ (1 samples, 0.03%)</title><rect x="48.7992%" y="2933" width="0.0334%" height="15" fill="rgb(242,32,6)" fg:x="1463" fg:w="1"/><text x="49.0492%" y="2943.50"></text></g><g><title>boggle.exe`alloc::string::impl$44::from(ref$ (1 samples, 0.03%)</title><rect x="48.7992%" y="2917" width="0.0334%" height="15" fill="rgb(241,35,3)" fg:x="1463" fg:w="1"/><text x="49.0492%" y="2927.50"></text></g><g><title>boggle.exe`alloc::str::impl$4::to_owned(ref$ (1 samples, 0.03%)</title><rect x="48.7992%" y="2901" width="0.0334%" height="15" fill="rgb(222,62,19)" fg:x="1463" fg:w="1"/><text x="49.0492%" y="2911.50"></text></g><g><title>boggle.exe`alloc::slice::impl$9::to_owned(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="48.7992%" y="2885" width="0.0334%" height="15" fill="rgb(223,110,41)" fg:x="1463" fg:w="1"/><text x="49.0492%" y="2895.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="48.7992%" y="2869" width="0.0334%" height="15" fill="rgb(208,224,4)" fg:x="1463" fg:w="1"/><text x="49.0492%" y="2879.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec_in(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="48.7992%" y="2853" width="0.0334%" height="15" fill="rgb(241,137,19)" fg:x="1463" fg:w="1"/><text x="49.0492%" y="2863.50"></text></g><g><title>boggle.exe`alloc::slice::hack::to_vec(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="48.7992%" y="2837" width="0.0334%" height="15" fill="rgb(244,24,17)" fg:x="1463" fg:w="1"/><text x="49.0492%" y="2847.50"></text></g><g><title>boggle.exe`alloc::slice::hack::impl$1::to_vec(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="48.7992%" y="2821" width="0.0334%" height="15" fill="rgb(245,178,49)" fg:x="1463" fg:w="1"/><text x="49.0492%" y="2831.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="48.7992%" y="2805" width="0.0334%" height="15" fill="rgb(219,160,38)" fg:x="1463" fg:w="1"/><text x="49.0492%" y="2815.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="48.7992%" y="2789" width="0.0334%" height="15" fill="rgb(228,137,14)" fg:x="1463" fg:w="1"/><text x="49.0492%" y="2799.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="48.7992%" y="2773" width="0.0334%" height="15" fill="rgb(237,134,11)" fg:x="1463" fg:w="1"/><text x="49.0492%" y="2783.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (1 samples, 0.03%)</title><rect x="48.7992%" y="2757" width="0.0334%" height="15" fill="rgb(211,126,44)" fg:x="1463" fg:w="1"/><text x="49.0492%" y="2767.50"></text></g><g><title>`0x7FFAC12C7776 (1 samples, 0.03%)</title><rect x="48.7992%" y="2741" width="0.0334%" height="15" fill="rgb(226,171,33)" fg:x="1463" fg:w="1"/><text x="49.0492%" y="2751.50"></text></g><g><title>`0x7FFAC12C78B4 (1 samples, 0.03%)</title><rect x="48.7992%" y="2725" width="0.0334%" height="15" fill="rgb(253,99,13)" fg:x="1463" fg:w="1"/><text x="49.0492%" y="2735.50"></text></g><g><title>`0x7FFAC12C8047 (1 samples, 0.03%)</title><rect x="48.7992%" y="2709" width="0.0334%" height="15" fill="rgb(244,48,7)" fg:x="1463" fg:w="1"/><text x="49.0492%" y="2719.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;::push (1 samples, 0.03%)</title><rect x="48.8326%" y="2997" width="0.0334%" height="15" fill="rgb(244,217,54)" fg:x="1464" fg:w="1"/><text x="49.0826%" y="3007.50"></text></g><g><title>boggle.exe`alloc::string::impl$6::clone (1 samples, 0.03%)</title><rect x="48.8326%" y="2981" width="0.0334%" height="15" fill="rgb(224,15,18)" fg:x="1464" fg:w="1"/><text x="49.0826%" y="2991.50"></text></g><g><title>boggle.exe`alloc::vec::impl$11::clone (1 samples, 0.03%)</title><rect x="48.8326%" y="2965" width="0.0334%" height="15" fill="rgb(244,99,12)" fg:x="1464" fg:w="1"/><text x="49.0826%" y="2975.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec_in (1 samples, 0.03%)</title><rect x="48.8326%" y="2949" width="0.0334%" height="15" fill="rgb(233,226,8)" fg:x="1464" fg:w="1"/><text x="49.0826%" y="2959.50"></text></g><g><title>boggle.exe`alloc::slice::hack::to_vec (1 samples, 0.03%)</title><rect x="48.8326%" y="2933" width="0.0334%" height="15" fill="rgb(229,211,3)" fg:x="1464" fg:w="1"/><text x="49.0826%" y="2943.50"></text></g><g><title>boggle.exe`alloc::slice::hack::impl$1::to_vec (1 samples, 0.03%)</title><rect x="48.8326%" y="2917" width="0.0334%" height="15" fill="rgb(216,140,21)" fg:x="1464" fg:w="1"/><text x="49.0826%" y="2927.50"></text></g><g><title>boggle.exe`alloc::vec::Vec::with_capacity_in (1 samples, 0.03%)</title><rect x="48.8326%" y="2901" width="0.0334%" height="15" fill="rgb(234,122,30)" fg:x="1464" fg:w="1"/><text x="49.0826%" y="2911.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec::with_capacity_in (1 samples, 0.03%)</title><rect x="48.8326%" y="2885" width="0.0334%" height="15" fill="rgb(236,25,46)" fg:x="1464" fg:w="1"/><text x="49.0826%" y="2895.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner::with_capacity_in (1 samples, 0.03%)</title><rect x="48.8326%" y="2869" width="0.0334%" height="15" fill="rgb(217,52,54)" fg:x="1464" fg:w="1"/><text x="49.0826%" y="2879.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner::try_allocate_in (1 samples, 0.03%)</title><rect x="48.8326%" y="2853" width="0.0334%" height="15" fill="rgb(222,29,26)" fg:x="1464" fg:w="1"/><text x="49.0826%" y="2863.50"></text></g><g><title>`0x7FFAC12C7776 (1 samples, 0.03%)</title><rect x="48.8326%" y="2837" width="0.0334%" height="15" fill="rgb(216,177,29)" fg:x="1464" fg:w="1"/><text x="49.0826%" y="2847.50"></text></g><g><title>`0x7FFAC12C78B4 (1 samples, 0.03%)</title><rect x="48.8326%" y="2821" width="0.0334%" height="15" fill="rgb(247,136,51)" fg:x="1464" fg:w="1"/><text x="49.0826%" y="2831.50"></text></g><g><title>`0x7FFAC12C7F69 (1 samples, 0.03%)</title><rect x="48.8326%" y="2805" width="0.0334%" height="15" fill="rgb(231,47,47)" fg:x="1464" fg:w="1"/><text x="49.0826%" y="2815.50"></text></g><g><title>boggle.exe`std::alloc::__default_lib_allocator::__rdl_dealloc (1 samples, 0.03%)</title><rect x="48.8659%" y="2997" width="0.0334%" height="15" fill="rgb(211,192,36)" fg:x="1465" fg:w="1"/><text x="49.1159%" y="3007.50"></text></g><g><title>boggle.exe`std::sys::alloc::windows::impl$0::dealloc (1 samples, 0.03%)</title><rect x="48.8659%" y="2981" width="0.0334%" height="15" fill="rgb(229,156,32)" fg:x="1465" fg:w="1"/><text x="49.1159%" y="2991.50"></text></g><g><title>boggle.exe`alloc::string::String::pop (13 samples, 0.43%)</title><rect x="48.4990%" y="3061" width="0.4336%" height="15" fill="rgb(248,213,20)" fg:x="1454" fg:w="13"/><text x="48.7490%" y="3071.50"></text></g><g><title>boggle.exe`alloc::string::impl$28::deref (13 samples, 0.43%)</title><rect x="48.4990%" y="3045" width="0.4336%" height="15" fill="rgb(217,64,7)" fg:x="1454" fg:w="13"/><text x="48.7490%" y="3055.50"></text></g><g><title>boggle.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (13 samples, 0.43%)</title><rect x="48.4990%" y="3029" width="0.4336%" height="15" fill="rgb(232,142,8)" fg:x="1454" fg:w="13"/><text x="48.7490%" y="3039.50"></text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::collect_words(boggle::utils::dict_trie::DictTrieNode*, ref$&lt;str$&gt;, alloc::vec::Vec (13 samples, 0.43%)</title><rect x="48.4990%" y="3013" width="0.4336%" height="15" fill="rgb(224,92,44)" fg:x="1454" fg:w="13"/><text x="48.7490%" y="3023.50"></text></g><g><title>boggle.exe`std::collections::hash::map::impl$36::into_iter(std::collections::hash::map::HashMap (1 samples, 0.03%)</title><rect x="48.8993%" y="2997" width="0.0334%" height="15" fill="rgb(214,169,17)" fg:x="1466" fg:w="1"/><text x="49.1493%" y="3007.50"></text></g><g><title>boggle.exe`std::collections::hash::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;::iter (1 samples, 0.03%)</title><rect x="48.8993%" y="2981" width="0.0334%" height="15" fill="rgb(210,59,37)" fg:x="1466" fg:w="1"/><text x="49.1493%" y="2991.50"></text></g><g><title>boggle.exe`hashbrown::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt;::iter (1 samples, 0.03%)</title><rect x="48.8993%" y="2965" width="0.0334%" height="15" fill="rgb(214,116,48)" fg:x="1466" fg:w="1"/><text x="49.1493%" y="2975.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTable&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;::iter (1 samples, 0.03%)</title><rect x="48.8993%" y="2949" width="0.0334%" height="15" fill="rgb(244,191,6)" fg:x="1466" fg:w="1"/><text x="49.1493%" y="2959.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::iter (1 samples, 0.03%)</title><rect x="48.8993%" y="2933" width="0.0334%" height="15" fill="rgb(241,50,52)" fg:x="1466" fg:w="1"/><text x="49.1493%" y="2943.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawIterRange&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::new(unsigned char*, hashbrown::raw::Bucket&lt;tuple$ (1 samples, 0.03%)</title><rect x="48.8993%" y="2917" width="0.0334%" height="15" fill="rgb(236,75,39)" fg:x="1466" fg:w="1"/><text x="49.1493%" y="2927.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::load_aligned (1 samples, 0.03%)</title><rect x="48.8993%" y="2901" width="0.0334%" height="15" fill="rgb(236,99,0)" fg:x="1466" fg:w="1"/><text x="49.1493%" y="2911.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::match_empty_or_deleted (1 samples, 0.03%)</title><rect x="48.8993%" y="2885" width="0.0334%" height="15" fill="rgb(207,202,15)" fg:x="1466" fg:w="1"/><text x="49.1493%" y="2895.50"></text></g><g><title>boggle.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.03%)</title><rect x="48.8993%" y="2869" width="0.0334%" height="15" fill="rgb(233,207,14)" fg:x="1466" fg:w="1"/><text x="49.1493%" y="2879.50"></text></g><g><title>`0x7FFAC12D54B5 (1 samples, 0.03%)</title><rect x="48.9326%" y="2821" width="0.0334%" height="15" fill="rgb(226,27,51)" fg:x="1467" fg:w="1"/><text x="49.1826%" y="2831.50"></text></g><g><title>`0x7FFAC12D5D7A (1 samples, 0.03%)</title><rect x="48.9326%" y="2805" width="0.0334%" height="15" fill="rgb(206,104,42)" fg:x="1467" fg:w="1"/><text x="49.1826%" y="2815.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::push (2 samples, 0.07%)</title><rect x="48.9326%" y="3045" width="0.0667%" height="15" fill="rgb(212,225,4)" fg:x="1467" fg:w="2"/><text x="49.1826%" y="3055.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_mut_ptr (2 samples, 0.07%)</title><rect x="48.9326%" y="3029" width="0.0667%" height="15" fill="rgb(233,96,42)" fg:x="1467" fg:w="2"/><text x="49.1826%" y="3039.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::ptr (2 samples, 0.07%)</title><rect x="48.9326%" y="3013" width="0.0667%" height="15" fill="rgb(229,21,32)" fg:x="1467" fg:w="2"/><text x="49.1826%" y="3023.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (2 samples, 0.07%)</title><rect x="48.9326%" y="2997" width="0.0667%" height="15" fill="rgb(226,216,24)" fg:x="1467" fg:w="2"/><text x="49.1826%" y="3007.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (2 samples, 0.07%)</title><rect x="48.9326%" y="2981" width="0.0667%" height="15" fill="rgb(221,163,17)" fg:x="1467" fg:w="2"/><text x="49.1826%" y="2991.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::grow_one&lt;u8,alloc::alloc::Global&gt; (2 samples, 0.07%)</title><rect x="48.9326%" y="2965" width="0.0667%" height="15" fill="rgb(216,216,42)" fg:x="1467" fg:w="2"/><text x="49.1826%" y="2975.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_one (2 samples, 0.07%)</title><rect x="48.9326%" y="2949" width="0.0667%" height="15" fill="rgb(240,118,7)" fg:x="1467" fg:w="2"/><text x="49.1826%" y="2959.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (2 samples, 0.07%)</title><rect x="48.9326%" y="2933" width="0.0667%" height="15" fill="rgb(221,67,37)" fg:x="1467" fg:w="2"/><text x="49.1826%" y="2943.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (2 samples, 0.07%)</title><rect x="48.9326%" y="2917" width="0.0667%" height="15" fill="rgb(241,32,44)" fg:x="1467" fg:w="2"/><text x="49.1826%" y="2927.50"></text></g><g><title>boggle.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (2 samples, 0.07%)</title><rect x="48.9326%" y="2901" width="0.0667%" height="15" fill="rgb(235,204,43)" fg:x="1467" fg:w="2"/><text x="49.1826%" y="2911.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (2 samples, 0.07%)</title><rect x="48.9326%" y="2885" width="0.0667%" height="15" fill="rgb(213,116,10)" fg:x="1467" fg:w="2"/><text x="49.1826%" y="2895.50"></text></g><g><title>boggle.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (2 samples, 0.07%)</title><rect x="48.9326%" y="2869" width="0.0667%" height="15" fill="rgb(239,15,48)" fg:x="1467" fg:w="2"/><text x="49.1826%" y="2879.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (2 samples, 0.07%)</title><rect x="48.9326%" y="2853" width="0.0667%" height="15" fill="rgb(207,123,36)" fg:x="1467" fg:w="2"/><text x="49.1826%" y="2863.50"></text></g><g><title>`0x7FFAC12D5376 (2 samples, 0.07%)</title><rect x="48.9326%" y="2837" width="0.0667%" height="15" fill="rgb(209,103,30)" fg:x="1467" fg:w="2"/><text x="49.1826%" y="2847.50"></text></g><g><title>`0x7FFAC12D54FB (1 samples, 0.03%)</title><rect x="48.9660%" y="2821" width="0.0334%" height="15" fill="rgb(238,100,19)" fg:x="1468" fg:w="1"/><text x="49.2160%" y="2831.50"></text></g><g><title>boggle.exe`alloc::string::String::push (3 samples, 0.10%)</title><rect x="48.9326%" y="3061" width="0.1001%" height="15" fill="rgb(244,30,14)" fg:x="1467" fg:w="3"/><text x="49.1826%" y="3071.50"></text></g><g><title>boggle.exe`core::char::methods::impl$0::len_utf8 (1 samples, 0.03%)</title><rect x="48.9993%" y="3045" width="0.0334%" height="15" fill="rgb(249,174,6)" fg:x="1469" fg:w="1"/><text x="49.2493%" y="3055.50"></text></g><g><title>boggle.exe`core::char::methods::len_utf8 (1 samples, 0.03%)</title><rect x="48.9993%" y="3029" width="0.0334%" height="15" fill="rgb(235,213,41)" fg:x="1469" fg:w="1"/><text x="49.2493%" y="3039.50"></text></g><g><title>boggle.exe`alloc::string::impl$102::to_string(ref$ (1 samples, 0.03%)</title><rect x="49.0327%" y="3061" width="0.0334%" height="15" fill="rgb(213,118,6)" fg:x="1470" fg:w="1"/><text x="49.2827%" y="3071.50"></text></g><g><title>boggle.exe`alloc::string::impl$44::from(ref$ (1 samples, 0.03%)</title><rect x="49.0327%" y="3045" width="0.0334%" height="15" fill="rgb(235,44,51)" fg:x="1470" fg:w="1"/><text x="49.2827%" y="3055.50"></text></g><g><title>boggle.exe`alloc::str::impl$4::to_owned(ref$ (1 samples, 0.03%)</title><rect x="49.0327%" y="3029" width="0.0334%" height="15" fill="rgb(217,9,53)" fg:x="1470" fg:w="1"/><text x="49.2827%" y="3039.50"></text></g><g><title>boggle.exe`alloc::slice::impl$9::to_owned(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="49.0327%" y="3013" width="0.0334%" height="15" fill="rgb(237,172,34)" fg:x="1470" fg:w="1"/><text x="49.2827%" y="3023.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="49.0327%" y="2997" width="0.0334%" height="15" fill="rgb(206,206,11)" fg:x="1470" fg:w="1"/><text x="49.2827%" y="3007.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec_in(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="49.0327%" y="2981" width="0.0334%" height="15" fill="rgb(214,149,29)" fg:x="1470" fg:w="1"/><text x="49.2827%" y="2991.50"></text></g><g><title>boggle.exe`alloc::slice::hack::to_vec(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="49.0327%" y="2965" width="0.0334%" height="15" fill="rgb(208,123,3)" fg:x="1470" fg:w="1"/><text x="49.2827%" y="2975.50"></text></g><g><title>boggle.exe`alloc::slice::hack::impl$1::to_vec(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="49.0327%" y="2949" width="0.0334%" height="15" fill="rgb(229,126,4)" fg:x="1470" fg:w="1"/><text x="49.2827%" y="2959.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="49.0327%" y="2933" width="0.0334%" height="15" fill="rgb(222,92,36)" fg:x="1470" fg:w="1"/><text x="49.2827%" y="2943.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="49.0327%" y="2917" width="0.0334%" height="15" fill="rgb(216,39,41)" fg:x="1470" fg:w="1"/><text x="49.2827%" y="2927.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="49.0327%" y="2901" width="0.0334%" height="15" fill="rgb(253,127,28)" fg:x="1470" fg:w="1"/><text x="49.2827%" y="2911.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (1 samples, 0.03%)</title><rect x="49.0327%" y="2885" width="0.0334%" height="15" fill="rgb(249,152,51)" fg:x="1470" fg:w="1"/><text x="49.2827%" y="2895.50"></text></g><g><title>`0x7FFAC12C7776 (1 samples, 0.03%)</title><rect x="49.0327%" y="2869" width="0.0334%" height="15" fill="rgb(209,123,42)" fg:x="1470" fg:w="1"/><text x="49.2827%" y="2879.50"></text></g><g><title>`0x7FFAC12C780A (1 samples, 0.03%)</title><rect x="49.0327%" y="2853" width="0.0334%" height="15" fill="rgb(241,118,22)" fg:x="1470" fg:w="1"/><text x="49.2827%" y="2863.50"></text></g><g><title>boggle.exe`alloc::string::String::pop (18 samples, 0.60%)</title><rect x="48.4990%" y="3125" width="0.6004%" height="15" fill="rgb(208,25,7)" fg:x="1454" fg:w="18"/><text x="48.7490%" y="3135.50"></text></g><g><title>boggle.exe`alloc::string::impl$28::deref (18 samples, 0.60%)</title><rect x="48.4990%" y="3109" width="0.6004%" height="15" fill="rgb(243,144,39)" fg:x="1454" fg:w="18"/><text x="48.7490%" y="3119.50"></text></g><g><title>boggle.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (18 samples, 0.60%)</title><rect x="48.4990%" y="3093" width="0.6004%" height="15" fill="rgb(250,50,5)" fg:x="1454" fg:w="18"/><text x="48.7490%" y="3103.50"></text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::collect_words(boggle::utils::dict_trie::DictTrieNode*, ref$&lt;str$&gt;, alloc::vec::Vec (18 samples, 0.60%)</title><rect x="48.4990%" y="3077" width="0.6004%" height="15" fill="rgb(207,67,11)" fg:x="1454" fg:w="18"/><text x="48.7490%" y="3087.50"></text></g><g><title>boggle.exe`std::collections::hash::map::impl$36::into_iter(std::collections::hash::map::HashMap (1 samples, 0.03%)</title><rect x="49.0660%" y="3061" width="0.0334%" height="15" fill="rgb(245,204,40)" fg:x="1471" fg:w="1"/><text x="49.3160%" y="3071.50"></text></g><g><title>boggle.exe`std::collections::hash::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;::iter (1 samples, 0.03%)</title><rect x="49.0660%" y="3045" width="0.0334%" height="15" fill="rgb(238,228,24)" fg:x="1471" fg:w="1"/><text x="49.3160%" y="3055.50"></text></g><g><title>boggle.exe`hashbrown::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt;::iter (1 samples, 0.03%)</title><rect x="49.0660%" y="3029" width="0.0334%" height="15" fill="rgb(217,116,22)" fg:x="1471" fg:w="1"/><text x="49.3160%" y="3039.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTable&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;::iter (1 samples, 0.03%)</title><rect x="49.0660%" y="3013" width="0.0334%" height="15" fill="rgb(234,98,12)" fg:x="1471" fg:w="1"/><text x="49.3160%" y="3023.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::iter (1 samples, 0.03%)</title><rect x="49.0660%" y="2997" width="0.0334%" height="15" fill="rgb(242,170,50)" fg:x="1471" fg:w="1"/><text x="49.3160%" y="3007.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawIterRange&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::new(unsigned char*, hashbrown::raw::Bucket&lt;tuple$ (1 samples, 0.03%)</title><rect x="49.0660%" y="2981" width="0.0334%" height="15" fill="rgb(235,7,5)" fg:x="1471" fg:w="1"/><text x="49.3160%" y="2991.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::load_aligned (1 samples, 0.03%)</title><rect x="49.0660%" y="2965" width="0.0334%" height="15" fill="rgb(241,114,28)" fg:x="1471" fg:w="1"/><text x="49.3160%" y="2975.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::match_empty_or_deleted (1 samples, 0.03%)</title><rect x="49.0660%" y="2949" width="0.0334%" height="15" fill="rgb(246,112,42)" fg:x="1471" fg:w="1"/><text x="49.3160%" y="2959.50"></text></g><g><title>boggle.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.03%)</title><rect x="49.0660%" y="2933" width="0.0334%" height="15" fill="rgb(248,228,14)" fg:x="1471" fg:w="1"/><text x="49.3160%" y="2943.50"></text></g><g><title>`0x7FFAC12C821A (1 samples, 0.03%)</title><rect x="49.0994%" y="2821" width="0.0334%" height="15" fill="rgb(208,133,18)" fg:x="1472" fg:w="1"/><text x="49.3494%" y="2831.50"></text></g><g><title>`0x7FFAC14034B2 (1 samples, 0.03%)</title><rect x="49.0994%" y="2805" width="0.0334%" height="15" fill="rgb(207,35,49)" fg:x="1472" fg:w="1"/><text x="49.3494%" y="2815.50"></text></g><g><title>`0x7FFAC12D5DAA (2 samples, 0.07%)</title><rect x="49.0994%" y="2869" width="0.0667%" height="15" fill="rgb(205,68,36)" fg:x="1472" fg:w="2"/><text x="49.3494%" y="2879.50"></text></g><g><title>`0x7FFAC12C7776 (2 samples, 0.07%)</title><rect x="49.0994%" y="2853" width="0.0667%" height="15" fill="rgb(245,62,40)" fg:x="1472" fg:w="2"/><text x="49.3494%" y="2863.50"></text></g><g><title>`0x7FFAC12C78B4 (2 samples, 0.07%)</title><rect x="49.0994%" y="2837" width="0.0667%" height="15" fill="rgb(228,27,24)" fg:x="1472" fg:w="2"/><text x="49.3494%" y="2847.50"></text></g><g><title>`0x7FFAC12C8A44 (1 samples, 0.03%)</title><rect x="49.1328%" y="2821" width="0.0334%" height="15" fill="rgb(253,19,12)" fg:x="1473" fg:w="1"/><text x="49.3828%" y="2831.50"></text></g><g><title>`0x7FFAC13714FE (1 samples, 0.03%)</title><rect x="49.1328%" y="2805" width="0.0334%" height="15" fill="rgb(232,28,20)" fg:x="1473" fg:w="1"/><text x="49.3828%" y="2815.50"></text></g><g><title>boggle.exe`alloc::string::String::push (4 samples, 0.13%)</title><rect x="49.0994%" y="3125" width="0.1334%" height="15" fill="rgb(218,35,51)" fg:x="1472" fg:w="4"/><text x="49.3494%" y="3135.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::push (4 samples, 0.13%)</title><rect x="49.0994%" y="3109" width="0.1334%" height="15" fill="rgb(212,90,40)" fg:x="1472" fg:w="4"/><text x="49.3494%" y="3119.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_mut_ptr (4 samples, 0.13%)</title><rect x="49.0994%" y="3093" width="0.1334%" height="15" fill="rgb(220,172,12)" fg:x="1472" fg:w="4"/><text x="49.3494%" y="3103.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::ptr (4 samples, 0.13%)</title><rect x="49.0994%" y="3077" width="0.1334%" height="15" fill="rgb(226,159,20)" fg:x="1472" fg:w="4"/><text x="49.3494%" y="3087.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (4 samples, 0.13%)</title><rect x="49.0994%" y="3061" width="0.1334%" height="15" fill="rgb(234,205,16)" fg:x="1472" fg:w="4"/><text x="49.3494%" y="3071.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (4 samples, 0.13%)</title><rect x="49.0994%" y="3045" width="0.1334%" height="15" fill="rgb(207,9,39)" fg:x="1472" fg:w="4"/><text x="49.3494%" y="3055.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::grow_one&lt;u8,alloc::alloc::Global&gt; (4 samples, 0.13%)</title><rect x="49.0994%" y="3029" width="0.1334%" height="15" fill="rgb(249,143,15)" fg:x="1472" fg:w="4"/><text x="49.3494%" y="3039.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_one (4 samples, 0.13%)</title><rect x="49.0994%" y="3013" width="0.1334%" height="15" fill="rgb(253,133,29)" fg:x="1472" fg:w="4"/><text x="49.3494%" y="3023.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (4 samples, 0.13%)</title><rect x="49.0994%" y="2997" width="0.1334%" height="15" fill="rgb(221,187,0)" fg:x="1472" fg:w="4"/><text x="49.3494%" y="3007.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (4 samples, 0.13%)</title><rect x="49.0994%" y="2981" width="0.1334%" height="15" fill="rgb(205,204,26)" fg:x="1472" fg:w="4"/><text x="49.3494%" y="2991.50"></text></g><g><title>boggle.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (4 samples, 0.13%)</title><rect x="49.0994%" y="2965" width="0.1334%" height="15" fill="rgb(224,68,54)" fg:x="1472" fg:w="4"/><text x="49.3494%" y="2975.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (4 samples, 0.13%)</title><rect x="49.0994%" y="2949" width="0.1334%" height="15" fill="rgb(209,67,4)" fg:x="1472" fg:w="4"/><text x="49.3494%" y="2959.50"></text></g><g><title>boggle.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (4 samples, 0.13%)</title><rect x="49.0994%" y="2933" width="0.1334%" height="15" fill="rgb(228,229,18)" fg:x="1472" fg:w="4"/><text x="49.3494%" y="2943.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (4 samples, 0.13%)</title><rect x="49.0994%" y="2917" width="0.1334%" height="15" fill="rgb(231,89,13)" fg:x="1472" fg:w="4"/><text x="49.3494%" y="2927.50"></text></g><g><title>`0x7FFAC12D5376 (4 samples, 0.13%)</title><rect x="49.0994%" y="2901" width="0.1334%" height="15" fill="rgb(210,182,18)" fg:x="1472" fg:w="4"/><text x="49.3494%" y="2911.50"></text></g><g><title>`0x7FFAC12D54B5 (4 samples, 0.13%)</title><rect x="49.0994%" y="2885" width="0.1334%" height="15" fill="rgb(240,105,2)" fg:x="1472" fg:w="4"/><text x="49.3494%" y="2895.50"></text></g><g><title>`0x7FFAC12D5E0B (2 samples, 0.07%)</title><rect x="49.1661%" y="2869" width="0.0667%" height="15" fill="rgb(207,170,50)" fg:x="1474" fg:w="2"/><text x="49.4161%" y="2879.50"></text></g><g><title>`0x7FFAC12D23A7 (2 samples, 0.07%)</title><rect x="49.1661%" y="2853" width="0.0667%" height="15" fill="rgb(232,133,24)" fg:x="1474" fg:w="2"/><text x="49.4161%" y="2863.50"></text></g><g><title>boggle.exe`alloc::string::impl$102::to_string(ref$ (1 samples, 0.03%)</title><rect x="49.2328%" y="3125" width="0.0334%" height="15" fill="rgb(235,166,27)" fg:x="1476" fg:w="1"/><text x="49.4828%" y="3135.50"></text></g><g><title>boggle.exe`alloc::string::impl$44::from(ref$ (1 samples, 0.03%)</title><rect x="49.2328%" y="3109" width="0.0334%" height="15" fill="rgb(209,19,13)" fg:x="1476" fg:w="1"/><text x="49.4828%" y="3119.50"></text></g><g><title>boggle.exe`alloc::str::impl$4::to_owned(ref$ (1 samples, 0.03%)</title><rect x="49.2328%" y="3093" width="0.0334%" height="15" fill="rgb(226,79,39)" fg:x="1476" fg:w="1"/><text x="49.4828%" y="3103.50"></text></g><g><title>boggle.exe`alloc::slice::impl$9::to_owned(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="49.2328%" y="3077" width="0.0334%" height="15" fill="rgb(222,163,10)" fg:x="1476" fg:w="1"/><text x="49.4828%" y="3087.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="49.2328%" y="3061" width="0.0334%" height="15" fill="rgb(214,44,19)" fg:x="1476" fg:w="1"/><text x="49.4828%" y="3071.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec_in(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="49.2328%" y="3045" width="0.0334%" height="15" fill="rgb(210,217,13)" fg:x="1476" fg:w="1"/><text x="49.4828%" y="3055.50"></text></g><g><title>boggle.exe`alloc::slice::hack::to_vec(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="49.2328%" y="3029" width="0.0334%" height="15" fill="rgb(237,61,54)" fg:x="1476" fg:w="1"/><text x="49.4828%" y="3039.50"></text></g><g><title>boggle.exe`alloc::slice::hack::impl$1::to_vec(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="49.2328%" y="3013" width="0.0334%" height="15" fill="rgb(226,184,24)" fg:x="1476" fg:w="1"/><text x="49.4828%" y="3023.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="49.2328%" y="2997" width="0.0334%" height="15" fill="rgb(223,226,4)" fg:x="1476" fg:w="1"/><text x="49.4828%" y="3007.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="49.2328%" y="2981" width="0.0334%" height="15" fill="rgb(210,26,41)" fg:x="1476" fg:w="1"/><text x="49.4828%" y="2991.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="49.2328%" y="2965" width="0.0334%" height="15" fill="rgb(220,221,6)" fg:x="1476" fg:w="1"/><text x="49.4828%" y="2975.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (1 samples, 0.03%)</title><rect x="49.2328%" y="2949" width="0.0334%" height="15" fill="rgb(225,89,49)" fg:x="1476" fg:w="1"/><text x="49.4828%" y="2959.50"></text></g><g><title>`0x7FFAC12C7776 (1 samples, 0.03%)</title><rect x="49.2328%" y="2933" width="0.0334%" height="15" fill="rgb(218,70,45)" fg:x="1476" fg:w="1"/><text x="49.4828%" y="2943.50"></text></g><g><title>`0x7FFAC12C78B4 (1 samples, 0.03%)</title><rect x="49.2328%" y="2917" width="0.0334%" height="15" fill="rgb(238,166,21)" fg:x="1476" fg:w="1"/><text x="49.4828%" y="2927.50"></text></g><g><title>`0x7FFAC12C8047 (1 samples, 0.03%)</title><rect x="49.2328%" y="2901" width="0.0334%" height="15" fill="rgb(224,141,44)" fg:x="1476" fg:w="1"/><text x="49.4828%" y="2911.50"></text></g><g><title>`0x7FFAC12C7FE4 (1 samples, 0.03%)</title><rect x="49.2662%" y="2933" width="0.0334%" height="15" fill="rgb(230,12,49)" fg:x="1477" fg:w="1"/><text x="49.5162%" y="2943.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;::push (2 samples, 0.07%)</title><rect x="49.2662%" y="3125" width="0.0667%" height="15" fill="rgb(212,174,12)" fg:x="1477" fg:w="2"/><text x="49.5162%" y="3135.50"></text></g><g><title>boggle.exe`alloc::string::impl$6::clone (2 samples, 0.07%)</title><rect x="49.2662%" y="3109" width="0.0667%" height="15" fill="rgb(246,67,9)" fg:x="1477" fg:w="2"/><text x="49.5162%" y="3119.50"></text></g><g><title>boggle.exe`alloc::vec::impl$11::clone (2 samples, 0.07%)</title><rect x="49.2662%" y="3093" width="0.0667%" height="15" fill="rgb(239,35,23)" fg:x="1477" fg:w="2"/><text x="49.5162%" y="3103.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec_in (2 samples, 0.07%)</title><rect x="49.2662%" y="3077" width="0.0667%" height="15" fill="rgb(211,167,0)" fg:x="1477" fg:w="2"/><text x="49.5162%" y="3087.50"></text></g><g><title>boggle.exe`alloc::slice::hack::to_vec (2 samples, 0.07%)</title><rect x="49.2662%" y="3061" width="0.0667%" height="15" fill="rgb(225,119,45)" fg:x="1477" fg:w="2"/><text x="49.5162%" y="3071.50"></text></g><g><title>boggle.exe`alloc::slice::hack::impl$1::to_vec (2 samples, 0.07%)</title><rect x="49.2662%" y="3045" width="0.0667%" height="15" fill="rgb(210,162,6)" fg:x="1477" fg:w="2"/><text x="49.5162%" y="3055.50"></text></g><g><title>boggle.exe`alloc::vec::Vec::with_capacity_in (2 samples, 0.07%)</title><rect x="49.2662%" y="3029" width="0.0667%" height="15" fill="rgb(208,118,35)" fg:x="1477" fg:w="2"/><text x="49.5162%" y="3039.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec::with_capacity_in (2 samples, 0.07%)</title><rect x="49.2662%" y="3013" width="0.0667%" height="15" fill="rgb(239,4,53)" fg:x="1477" fg:w="2"/><text x="49.5162%" y="3023.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner::with_capacity_in (2 samples, 0.07%)</title><rect x="49.2662%" y="2997" width="0.0667%" height="15" fill="rgb(213,130,21)" fg:x="1477" fg:w="2"/><text x="49.5162%" y="3007.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner::try_allocate_in (2 samples, 0.07%)</title><rect x="49.2662%" y="2981" width="0.0667%" height="15" fill="rgb(235,148,0)" fg:x="1477" fg:w="2"/><text x="49.5162%" y="2991.50"></text></g><g><title>`0x7FFAC12C7776 (2 samples, 0.07%)</title><rect x="49.2662%" y="2965" width="0.0667%" height="15" fill="rgb(244,224,18)" fg:x="1477" fg:w="2"/><text x="49.5162%" y="2975.50"></text></g><g><title>`0x7FFAC12C78B4 (2 samples, 0.07%)</title><rect x="49.2662%" y="2949" width="0.0667%" height="15" fill="rgb(211,214,4)" fg:x="1477" fg:w="2"/><text x="49.5162%" y="2959.50"></text></g><g><title>`0x7FFAC12C8A44 (1 samples, 0.03%)</title><rect x="49.2995%" y="2933" width="0.0334%" height="15" fill="rgb(206,119,25)" fg:x="1478" fg:w="1"/><text x="49.5495%" y="2943.50"></text></g><g><title>`0x7FFAC1371342 (1 samples, 0.03%)</title><rect x="49.2995%" y="2917" width="0.0334%" height="15" fill="rgb(243,93,47)" fg:x="1478" fg:w="1"/><text x="49.5495%" y="2927.50"></text></g><g><title>boggle.exe`std::collections::hash::map::impl$36::into_iter(std::collections::hash::map::HashMap (1 samples, 0.03%)</title><rect x="49.3329%" y="3125" width="0.0334%" height="15" fill="rgb(224,194,6)" fg:x="1479" fg:w="1"/><text x="49.5829%" y="3135.50"></text></g><g><title>boggle.exe`std::collections::hash::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;::iter (1 samples, 0.03%)</title><rect x="49.3329%" y="3109" width="0.0334%" height="15" fill="rgb(243,229,6)" fg:x="1479" fg:w="1"/><text x="49.5829%" y="3119.50"></text></g><g><title>boggle.exe`hashbrown::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt;::iter (1 samples, 0.03%)</title><rect x="49.3329%" y="3093" width="0.0334%" height="15" fill="rgb(207,23,50)" fg:x="1479" fg:w="1"/><text x="49.5829%" y="3103.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTable&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;::iter (1 samples, 0.03%)</title><rect x="49.3329%" y="3077" width="0.0334%" height="15" fill="rgb(253,192,32)" fg:x="1479" fg:w="1"/><text x="49.5829%" y="3087.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::iter (1 samples, 0.03%)</title><rect x="49.3329%" y="3061" width="0.0334%" height="15" fill="rgb(213,21,6)" fg:x="1479" fg:w="1"/><text x="49.5829%" y="3071.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawIterRange&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::new(unsigned char*, hashbrown::raw::Bucket&lt;tuple$ (1 samples, 0.03%)</title><rect x="49.3329%" y="3045" width="0.0334%" height="15" fill="rgb(243,151,13)" fg:x="1479" fg:w="1"/><text x="49.5829%" y="3055.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::load_aligned (1 samples, 0.03%)</title><rect x="49.3329%" y="3029" width="0.0334%" height="15" fill="rgb(233,165,41)" fg:x="1479" fg:w="1"/><text x="49.5829%" y="3039.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::match_empty_or_deleted (1 samples, 0.03%)</title><rect x="49.3329%" y="3013" width="0.0334%" height="15" fill="rgb(246,176,45)" fg:x="1479" fg:w="1"/><text x="49.5829%" y="3023.50"></text></g><g><title>boggle.exe`alloc::string::String::pop (29 samples, 0.97%)</title><rect x="48.4323%" y="3189" width="0.9673%" height="15" fill="rgb(217,170,52)" fg:x="1452" fg:w="29"/><text x="48.6823%" y="3199.50"></text></g><g><title>boggle.exe`alloc::string::impl$28::deref (29 samples, 0.97%)</title><rect x="48.4323%" y="3173" width="0.9673%" height="15" fill="rgb(214,203,54)" fg:x="1452" fg:w="29"/><text x="48.6823%" y="3183.50"></text></g><g><title>boggle.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (29 samples, 0.97%)</title><rect x="48.4323%" y="3157" width="0.9673%" height="15" fill="rgb(248,215,49)" fg:x="1452" fg:w="29"/><text x="48.6823%" y="3167.50"></text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::collect_words(boggle::utils::dict_trie::DictTrieNode*, ref$&lt;str$&gt;, alloc::vec::Vec (29 samples, 0.97%)</title><rect x="48.4323%" y="3141" width="0.9673%" height="15" fill="rgb(208,46,10)" fg:x="1452" fg:w="29"/><text x="48.6823%" y="3151.50"></text></g><g><title>boggle.exe`std::collections::hash::map::impl$39::next(std::collections::hash::map::Iter (1 samples, 0.03%)</title><rect x="49.3662%" y="3125" width="0.0334%" height="15" fill="rgb(254,5,31)" fg:x="1480" fg:w="1"/><text x="49.6162%" y="3135.50"></text></g><g><title>boggle.exe`hashbrown::map::impl$60::next(hashbrown::map::Iter (1 samples, 0.03%)</title><rect x="49.3662%" y="3109" width="0.0334%" height="15" fill="rgb(222,104,33)" fg:x="1480" fg:w="1"/><text x="49.6162%" y="3119.50"></text></g><g><title>boggle.exe`hashbrown::raw::impl$28::next(hashbrown::raw::RawIter&lt;tuple$ (1 samples, 0.03%)</title><rect x="49.3662%" y="3093" width="0.0334%" height="15" fill="rgb(248,49,16)" fg:x="1480" fg:w="1"/><text x="49.6162%" y="3103.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawIterRange&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::next_impl (1 samples, 0.03%)</title><rect x="49.3662%" y="3077" width="0.0334%" height="15" fill="rgb(232,198,41)" fg:x="1480" fg:w="1"/><text x="49.6162%" y="3087.50"></text></g><g><title>boggle.exe`hashbrown::raw::bitmask::impl$3::next (1 samples, 0.03%)</title><rect x="49.3662%" y="3061" width="0.0334%" height="15" fill="rgb(214,125,3)" fg:x="1480" fg:w="1"/><text x="49.6162%" y="3071.50"></text></g><g><title>boggle.exe`hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.03%)</title><rect x="49.3662%" y="3045" width="0.0334%" height="15" fill="rgb(229,220,28)" fg:x="1480" fg:w="1"/><text x="49.6162%" y="3055.50"></text></g><g><title>boggle.exe`hashbrown::raw::bitmask::BitMask::nonzero_trailing_zeros(core::num::nonzero::NonZero (1 samples, 0.03%)</title><rect x="49.3662%" y="3029" width="0.0334%" height="15" fill="rgb(222,64,37)" fg:x="1480" fg:w="1"/><text x="49.6162%" y="3039.50"></text></g><g><title>boggle.exe`core::num::nonzero::NonZero&lt;u16&gt;::trailing_zeros(core::num::nonzero::NonZero (1 samples, 0.03%)</title><rect x="49.3662%" y="3013" width="0.0334%" height="15" fill="rgb(249,184,13)" fg:x="1480" fg:w="1"/><text x="49.6162%" y="3023.50"></text></g><g><title>`0x7FFAC12C7762 (1 samples, 0.03%)</title><rect x="49.3996%" y="2917" width="0.0334%" height="15" fill="rgb(252,176,6)" fg:x="1481" fg:w="1"/><text x="49.6496%" y="2927.50"></text></g><g><title>`0x7FFAC12C7E80 (1 samples, 0.03%)</title><rect x="49.4330%" y="2885" width="0.0334%" height="15" fill="rgb(228,153,7)" fg:x="1482" fg:w="1"/><text x="49.6830%" y="2895.50"></text></g><g><title>`0x7FFAC12C809C (1 samples, 0.03%)</title><rect x="49.4663%" y="2885" width="0.0334%" height="15" fill="rgb(242,193,5)" fg:x="1483" fg:w="1"/><text x="49.7163%" y="2895.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::push (4 samples, 0.13%)</title><rect x="49.3996%" y="3173" width="0.1334%" height="15" fill="rgb(232,140,9)" fg:x="1481" fg:w="4"/><text x="49.6496%" y="3183.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_mut_ptr (4 samples, 0.13%)</title><rect x="49.3996%" y="3157" width="0.1334%" height="15" fill="rgb(213,222,16)" fg:x="1481" fg:w="4"/><text x="49.6496%" y="3167.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::ptr (4 samples, 0.13%)</title><rect x="49.3996%" y="3141" width="0.1334%" height="15" fill="rgb(222,75,50)" fg:x="1481" fg:w="4"/><text x="49.6496%" y="3151.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (4 samples, 0.13%)</title><rect x="49.3996%" y="3125" width="0.1334%" height="15" fill="rgb(205,180,2)" fg:x="1481" fg:w="4"/><text x="49.6496%" y="3135.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (4 samples, 0.13%)</title><rect x="49.3996%" y="3109" width="0.1334%" height="15" fill="rgb(216,34,7)" fg:x="1481" fg:w="4"/><text x="49.6496%" y="3119.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::grow_one&lt;u8,alloc::alloc::Global&gt; (4 samples, 0.13%)</title><rect x="49.3996%" y="3093" width="0.1334%" height="15" fill="rgb(253,16,32)" fg:x="1481" fg:w="4"/><text x="49.6496%" y="3103.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_one (4 samples, 0.13%)</title><rect x="49.3996%" y="3077" width="0.1334%" height="15" fill="rgb(208,97,28)" fg:x="1481" fg:w="4"/><text x="49.6496%" y="3087.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (4 samples, 0.13%)</title><rect x="49.3996%" y="3061" width="0.1334%" height="15" fill="rgb(225,92,11)" fg:x="1481" fg:w="4"/><text x="49.6496%" y="3071.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (4 samples, 0.13%)</title><rect x="49.3996%" y="3045" width="0.1334%" height="15" fill="rgb(243,38,12)" fg:x="1481" fg:w="4"/><text x="49.6496%" y="3055.50"></text></g><g><title>boggle.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (4 samples, 0.13%)</title><rect x="49.3996%" y="3029" width="0.1334%" height="15" fill="rgb(208,139,16)" fg:x="1481" fg:w="4"/><text x="49.6496%" y="3039.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (4 samples, 0.13%)</title><rect x="49.3996%" y="3013" width="0.1334%" height="15" fill="rgb(227,24,9)" fg:x="1481" fg:w="4"/><text x="49.6496%" y="3023.50"></text></g><g><title>boggle.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (4 samples, 0.13%)</title><rect x="49.3996%" y="2997" width="0.1334%" height="15" fill="rgb(206,62,11)" fg:x="1481" fg:w="4"/><text x="49.6496%" y="3007.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (4 samples, 0.13%)</title><rect x="49.3996%" y="2981" width="0.1334%" height="15" fill="rgb(228,134,27)" fg:x="1481" fg:w="4"/><text x="49.6496%" y="2991.50"></text></g><g><title>`0x7FFAC12D5376 (4 samples, 0.13%)</title><rect x="49.3996%" y="2965" width="0.1334%" height="15" fill="rgb(205,55,33)" fg:x="1481" fg:w="4"/><text x="49.6496%" y="2975.50"></text></g><g><title>`0x7FFAC12D54B5 (4 samples, 0.13%)</title><rect x="49.3996%" y="2949" width="0.1334%" height="15" fill="rgb(243,75,43)" fg:x="1481" fg:w="4"/><text x="49.6496%" y="2959.50"></text></g><g><title>`0x7FFAC12D5DAA (4 samples, 0.13%)</title><rect x="49.3996%" y="2933" width="0.1334%" height="15" fill="rgb(223,27,42)" fg:x="1481" fg:w="4"/><text x="49.6496%" y="2943.50"></text></g><g><title>`0x7FFAC12C7776 (3 samples, 0.10%)</title><rect x="49.4330%" y="2917" width="0.1001%" height="15" fill="rgb(232,189,33)" fg:x="1482" fg:w="3"/><text x="49.6830%" y="2927.50"></text></g><g><title>`0x7FFAC12C78B4 (3 samples, 0.10%)</title><rect x="49.4330%" y="2901" width="0.1001%" height="15" fill="rgb(210,9,39)" fg:x="1482" fg:w="3"/><text x="49.6830%" y="2911.50"></text></g><g><title>`0x7FFAC12C815D (1 samples, 0.03%)</title><rect x="49.4997%" y="2885" width="0.0334%" height="15" fill="rgb(242,85,26)" fg:x="1484" fg:w="1"/><text x="49.7497%" y="2895.50"></text></g><g><title>boggle.exe`alloc::string::String::push (8 samples, 0.27%)</title><rect x="49.3996%" y="3189" width="0.2668%" height="15" fill="rgb(248,44,4)" fg:x="1481" fg:w="8"/><text x="49.6496%" y="3199.50"></text></g><g><title>boggle.exe`core::char::methods::impl$0::len_utf8 (4 samples, 0.13%)</title><rect x="49.5330%" y="3173" width="0.1334%" height="15" fill="rgb(250,96,46)" fg:x="1485" fg:w="4"/><text x="49.7830%" y="3183.50"></text></g><g><title>boggle.exe`core::char::methods::len_utf8 (4 samples, 0.13%)</title><rect x="49.5330%" y="3157" width="0.1334%" height="15" fill="rgb(229,116,26)" fg:x="1485" fg:w="4"/><text x="49.7830%" y="3167.50"></text></g><g><title>`0x7FFAC12C6C9B (1 samples, 0.03%)</title><rect x="49.6664%" y="2997" width="0.0334%" height="15" fill="rgb(246,94,34)" fg:x="1489" fg:w="1"/><text x="49.9164%" y="3007.50"></text></g><g><title>`0x7FFAC12C7FE4 (1 samples, 0.03%)</title><rect x="49.6998%" y="2965" width="0.0334%" height="15" fill="rgb(251,73,21)" fg:x="1490" fg:w="1"/><text x="49.9498%" y="2975.50"></text></g><g><title>`0x7FFAC12C801A (1 samples, 0.03%)</title><rect x="49.7332%" y="2965" width="0.0334%" height="15" fill="rgb(254,121,25)" fg:x="1491" fg:w="1"/><text x="49.9832%" y="2975.50"></text></g><g><title>`0x7FFAC12C78B4 (3 samples, 0.10%)</title><rect x="49.6998%" y="2981" width="0.1001%" height="15" fill="rgb(215,161,49)" fg:x="1490" fg:w="3"/><text x="49.9498%" y="2991.50"></text></g><g><title>`0x7FFAC12C8047 (1 samples, 0.03%)</title><rect x="49.7665%" y="2965" width="0.0334%" height="15" fill="rgb(221,43,13)" fg:x="1492" fg:w="1"/><text x="50.0165%" y="2975.50"></text></g><g><title>boggle.exe`alloc::string::impl$102::to_string(ref$ (5 samples, 0.17%)</title><rect x="49.6664%" y="3189" width="0.1668%" height="15" fill="rgb(249,5,37)" fg:x="1489" fg:w="5"/><text x="49.9164%" y="3199.50"></text></g><g><title>boggle.exe`alloc::string::impl$44::from(ref$ (5 samples, 0.17%)</title><rect x="49.6664%" y="3173" width="0.1668%" height="15" fill="rgb(226,25,44)" fg:x="1489" fg:w="5"/><text x="49.9164%" y="3183.50"></text></g><g><title>boggle.exe`alloc::str::impl$4::to_owned(ref$ (5 samples, 0.17%)</title><rect x="49.6664%" y="3157" width="0.1668%" height="15" fill="rgb(238,189,16)" fg:x="1489" fg:w="5"/><text x="49.9164%" y="3167.50"></text></g><g><title>boggle.exe`alloc::slice::impl$9::to_owned(ref$&lt;slice2$ (5 samples, 0.17%)</title><rect x="49.6664%" y="3141" width="0.1668%" height="15" fill="rgb(251,186,8)" fg:x="1489" fg:w="5"/><text x="49.9164%" y="3151.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec(ref$&lt;slice2$ (5 samples, 0.17%)</title><rect x="49.6664%" y="3125" width="0.1668%" height="15" fill="rgb(254,34,31)" fg:x="1489" fg:w="5"/><text x="49.9164%" y="3135.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec_in(ref$&lt;slice2$ (5 samples, 0.17%)</title><rect x="49.6664%" y="3109" width="0.1668%" height="15" fill="rgb(225,215,27)" fg:x="1489" fg:w="5"/><text x="49.9164%" y="3119.50"></text></g><g><title>boggle.exe`alloc::slice::hack::to_vec(ref$&lt;slice2$ (5 samples, 0.17%)</title><rect x="49.6664%" y="3093" width="0.1668%" height="15" fill="rgb(221,192,48)" fg:x="1489" fg:w="5"/><text x="49.9164%" y="3103.50"></text></g><g><title>boggle.exe`alloc::slice::hack::impl$1::to_vec(ref$&lt;slice2$ (5 samples, 0.17%)</title><rect x="49.6664%" y="3077" width="0.1668%" height="15" fill="rgb(219,137,20)" fg:x="1489" fg:w="5"/><text x="49.9164%" y="3087.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (5 samples, 0.17%)</title><rect x="49.6664%" y="3061" width="0.1668%" height="15" fill="rgb(219,84,11)" fg:x="1489" fg:w="5"/><text x="49.9164%" y="3071.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (5 samples, 0.17%)</title><rect x="49.6664%" y="3045" width="0.1668%" height="15" fill="rgb(224,10,23)" fg:x="1489" fg:w="5"/><text x="49.9164%" y="3055.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (5 samples, 0.17%)</title><rect x="49.6664%" y="3029" width="0.1668%" height="15" fill="rgb(248,22,39)" fg:x="1489" fg:w="5"/><text x="49.9164%" y="3039.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (5 samples, 0.17%)</title><rect x="49.6664%" y="3013" width="0.1668%" height="15" fill="rgb(212,154,20)" fg:x="1489" fg:w="5"/><text x="49.9164%" y="3023.50"></text></g><g><title>`0x7FFAC12C7776 (4 samples, 0.13%)</title><rect x="49.6998%" y="2997" width="0.1334%" height="15" fill="rgb(236,199,50)" fg:x="1490" fg:w="4"/><text x="49.9498%" y="3007.50"></text></g><g><title>`0x7FFAC12C79A7 (1 samples, 0.03%)</title><rect x="49.7999%" y="2981" width="0.0334%" height="15" fill="rgb(211,9,17)" fg:x="1493" fg:w="1"/><text x="50.0499%" y="2991.50"></text></g><g><title>`0x7FFAC12C8047 (1 samples, 0.03%)</title><rect x="49.8332%" y="2997" width="0.0334%" height="15" fill="rgb(243,216,36)" fg:x="1494" fg:w="1"/><text x="50.0832%" y="3007.50"></text></g><g><title>`0x7FFAC12C89BD (1 samples, 0.03%)</title><rect x="49.8666%" y="2997" width="0.0334%" height="15" fill="rgb(250,2,10)" fg:x="1495" fg:w="1"/><text x="50.1166%" y="3007.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;::push (3 samples, 0.10%)</title><rect x="49.8332%" y="3189" width="0.1001%" height="15" fill="rgb(226,50,48)" fg:x="1494" fg:w="3"/><text x="50.0832%" y="3199.50"></text></g><g><title>boggle.exe`alloc::string::impl$6::clone (3 samples, 0.10%)</title><rect x="49.8332%" y="3173" width="0.1001%" height="15" fill="rgb(243,81,16)" fg:x="1494" fg:w="3"/><text x="50.0832%" y="3183.50"></text></g><g><title>boggle.exe`alloc::vec::impl$11::clone (3 samples, 0.10%)</title><rect x="49.8332%" y="3157" width="0.1001%" height="15" fill="rgb(250,14,2)" fg:x="1494" fg:w="3"/><text x="50.0832%" y="3167.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec_in (3 samples, 0.10%)</title><rect x="49.8332%" y="3141" width="0.1001%" height="15" fill="rgb(233,135,29)" fg:x="1494" fg:w="3"/><text x="50.0832%" y="3151.50"></text></g><g><title>boggle.exe`alloc::slice::hack::to_vec (3 samples, 0.10%)</title><rect x="49.8332%" y="3125" width="0.1001%" height="15" fill="rgb(224,64,43)" fg:x="1494" fg:w="3"/><text x="50.0832%" y="3135.50"></text></g><g><title>boggle.exe`alloc::slice::hack::impl$1::to_vec (3 samples, 0.10%)</title><rect x="49.8332%" y="3109" width="0.1001%" height="15" fill="rgb(238,84,13)" fg:x="1494" fg:w="3"/><text x="50.0832%" y="3119.50"></text></g><g><title>boggle.exe`alloc::vec::Vec::with_capacity_in (3 samples, 0.10%)</title><rect x="49.8332%" y="3093" width="0.1001%" height="15" fill="rgb(253,48,26)" fg:x="1494" fg:w="3"/><text x="50.0832%" y="3103.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec::with_capacity_in (3 samples, 0.10%)</title><rect x="49.8332%" y="3077" width="0.1001%" height="15" fill="rgb(205,223,31)" fg:x="1494" fg:w="3"/><text x="50.0832%" y="3087.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner::with_capacity_in (3 samples, 0.10%)</title><rect x="49.8332%" y="3061" width="0.1001%" height="15" fill="rgb(221,41,32)" fg:x="1494" fg:w="3"/><text x="50.0832%" y="3071.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner::try_allocate_in (3 samples, 0.10%)</title><rect x="49.8332%" y="3045" width="0.1001%" height="15" fill="rgb(213,158,31)" fg:x="1494" fg:w="3"/><text x="50.0832%" y="3055.50"></text></g><g><title>`0x7FFAC12C7776 (3 samples, 0.10%)</title><rect x="49.8332%" y="3029" width="0.1001%" height="15" fill="rgb(245,126,43)" fg:x="1494" fg:w="3"/><text x="50.0832%" y="3039.50"></text></g><g><title>`0x7FFAC12C78B4 (3 samples, 0.10%)</title><rect x="49.8332%" y="3013" width="0.1001%" height="15" fill="rgb(227,7,22)" fg:x="1494" fg:w="3"/><text x="50.0832%" y="3023.50"></text></g><g><title>`0x7FFAC12C8A61 (1 samples, 0.03%)</title><rect x="49.8999%" y="2997" width="0.0334%" height="15" fill="rgb(252,90,44)" fg:x="1496" fg:w="1"/><text x="50.1499%" y="3007.50"></text></g><g><title>boggle.exe`alloc::string::String::pop (48 samples, 1.60%)</title><rect x="48.3989%" y="3253" width="1.6011%" height="15" fill="rgb(253,91,0)" fg:x="1451" fg:w="48"/><text x="48.6489%" y="3263.50"></text></g><g><title>boggle.exe`alloc::string::impl$28::deref (48 samples, 1.60%)</title><rect x="48.3989%" y="3237" width="1.6011%" height="15" fill="rgb(252,175,49)" fg:x="1451" fg:w="48"/><text x="48.6489%" y="3247.50"></text></g><g><title>boggle.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (48 samples, 1.60%)</title><rect x="48.3989%" y="3221" width="1.6011%" height="15" fill="rgb(246,150,1)" fg:x="1451" fg:w="48"/><text x="48.6489%" y="3231.50"></text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::collect_words(boggle::utils::dict_trie::DictTrieNode*, ref$&lt;str$&gt;, alloc::vec::Vec (48 samples, 1.60%)</title><rect x="48.3989%" y="3205" width="1.6011%" height="15" fill="rgb(241,192,25)" fg:x="1451" fg:w="48"/><text x="48.6489%" y="3215.50"></text></g><g><title>boggle.exe`std::collections::hash::map::impl$36::into_iter(std::collections::hash::map::HashMap (2 samples, 0.07%)</title><rect x="49.9333%" y="3189" width="0.0667%" height="15" fill="rgb(239,187,11)" fg:x="1497" fg:w="2"/><text x="50.1833%" y="3199.50"></text></g><g><title>boggle.exe`std::collections::hash::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;::iter (2 samples, 0.07%)</title><rect x="49.9333%" y="3173" width="0.0667%" height="15" fill="rgb(218,202,51)" fg:x="1497" fg:w="2"/><text x="50.1833%" y="3183.50"></text></g><g><title>boggle.exe`hashbrown::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt;::iter (2 samples, 0.07%)</title><rect x="49.9333%" y="3157" width="0.0667%" height="15" fill="rgb(225,176,8)" fg:x="1497" fg:w="2"/><text x="50.1833%" y="3167.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTable&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;::iter (2 samples, 0.07%)</title><rect x="49.9333%" y="3141" width="0.0667%" height="15" fill="rgb(219,122,41)" fg:x="1497" fg:w="2"/><text x="50.1833%" y="3151.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::iter (2 samples, 0.07%)</title><rect x="49.9333%" y="3125" width="0.0667%" height="15" fill="rgb(248,140,20)" fg:x="1497" fg:w="2"/><text x="50.1833%" y="3135.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawIterRange&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::new(unsigned char*, hashbrown::raw::Bucket&lt;tuple$ (2 samples, 0.07%)</title><rect x="49.9333%" y="3109" width="0.0667%" height="15" fill="rgb(245,41,37)" fg:x="1497" fg:w="2"/><text x="50.1833%" y="3119.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::load_aligned (2 samples, 0.07%)</title><rect x="49.9333%" y="3093" width="0.0667%" height="15" fill="rgb(235,82,39)" fg:x="1497" fg:w="2"/><text x="50.1833%" y="3103.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::match_empty_or_deleted (2 samples, 0.07%)</title><rect x="49.9333%" y="3077" width="0.0667%" height="15" fill="rgb(230,108,42)" fg:x="1497" fg:w="2"/><text x="50.1833%" y="3087.50"></text></g><g><title>boggle.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (2 samples, 0.07%)</title><rect x="49.9333%" y="3061" width="0.0667%" height="15" fill="rgb(215,150,50)" fg:x="1497" fg:w="2"/><text x="50.1833%" y="3071.50"></text></g><g><title>`0x7FFAC12C7762 (1 samples, 0.03%)</title><rect x="50.0000%" y="2981" width="0.0334%" height="15" fill="rgb(233,212,5)" fg:x="1499" fg:w="1"/><text x="50.2500%" y="2991.50"></text></g><g><title>`0x7FFAC12C852D (1 samples, 0.03%)</title><rect x="50.0334%" y="2949" width="0.0334%" height="15" fill="rgb(245,80,22)" fg:x="1500" fg:w="1"/><text x="50.2834%" y="2959.50"></text></g><g><title>`0x7FFAC12D5DAA (3 samples, 0.10%)</title><rect x="50.0000%" y="2997" width="0.1001%" height="15" fill="rgb(238,129,16)" fg:x="1499" fg:w="3"/><text x="50.2500%" y="3007.50"></text></g><g><title>`0x7FFAC12C7776 (2 samples, 0.07%)</title><rect x="50.0334%" y="2981" width="0.0667%" height="15" fill="rgb(240,19,0)" fg:x="1500" fg:w="2"/><text x="50.2834%" y="2991.50"></text></g><g><title>`0x7FFAC12C78B4 (2 samples, 0.07%)</title><rect x="50.0334%" y="2965" width="0.0667%" height="15" fill="rgb(232,42,35)" fg:x="1500" fg:w="2"/><text x="50.2834%" y="2975.50"></text></g><g><title>`0x7FFAC12C8667 (1 samples, 0.03%)</title><rect x="50.0667%" y="2949" width="0.0334%" height="15" fill="rgb(223,130,24)" fg:x="1501" fg:w="1"/><text x="50.3167%" y="2959.50"></text></g><g><title>`0x7FFAC12D54B5 (5 samples, 0.17%)</title><rect x="50.0000%" y="3013" width="0.1668%" height="15" fill="rgb(237,16,22)" fg:x="1499" fg:w="5"/><text x="50.2500%" y="3023.50"></text></g><g><title>`0x7FFAC12D5E0B (2 samples, 0.07%)</title><rect x="50.1001%" y="2997" width="0.0667%" height="15" fill="rgb(248,192,20)" fg:x="1502" fg:w="2"/><text x="50.3501%" y="3007.50"></text></g><g><title>`0x7FFAC12D23A7 (2 samples, 0.07%)</title><rect x="50.1001%" y="2981" width="0.0667%" height="15" fill="rgb(233,167,2)" fg:x="1502" fg:w="2"/><text x="50.3501%" y="2991.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::push (6 samples, 0.20%)</title><rect x="50.0000%" y="3237" width="0.2001%" height="15" fill="rgb(252,71,44)" fg:x="1499" fg:w="6"/><text x="50.2500%" y="3247.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_mut_ptr (6 samples, 0.20%)</title><rect x="50.0000%" y="3221" width="0.2001%" height="15" fill="rgb(238,37,47)" fg:x="1499" fg:w="6"/><text x="50.2500%" y="3231.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::ptr (6 samples, 0.20%)</title><rect x="50.0000%" y="3205" width="0.2001%" height="15" fill="rgb(214,202,54)" fg:x="1499" fg:w="6"/><text x="50.2500%" y="3215.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (6 samples, 0.20%)</title><rect x="50.0000%" y="3189" width="0.2001%" height="15" fill="rgb(254,165,40)" fg:x="1499" fg:w="6"/><text x="50.2500%" y="3199.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (6 samples, 0.20%)</title><rect x="50.0000%" y="3173" width="0.2001%" height="15" fill="rgb(246,173,38)" fg:x="1499" fg:w="6"/><text x="50.2500%" y="3183.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::grow_one&lt;u8,alloc::alloc::Global&gt; (6 samples, 0.20%)</title><rect x="50.0000%" y="3157" width="0.2001%" height="15" fill="rgb(215,3,27)" fg:x="1499" fg:w="6"/><text x="50.2500%" y="3167.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_one (6 samples, 0.20%)</title><rect x="50.0000%" y="3141" width="0.2001%" height="15" fill="rgb(239,169,51)" fg:x="1499" fg:w="6"/><text x="50.2500%" y="3151.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (6 samples, 0.20%)</title><rect x="50.0000%" y="3125" width="0.2001%" height="15" fill="rgb(212,5,25)" fg:x="1499" fg:w="6"/><text x="50.2500%" y="3135.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (6 samples, 0.20%)</title><rect x="50.0000%" y="3109" width="0.2001%" height="15" fill="rgb(243,45,17)" fg:x="1499" fg:w="6"/><text x="50.2500%" y="3119.50"></text></g><g><title>boggle.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (6 samples, 0.20%)</title><rect x="50.0000%" y="3093" width="0.2001%" height="15" fill="rgb(242,97,9)" fg:x="1499" fg:w="6"/><text x="50.2500%" y="3103.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (6 samples, 0.20%)</title><rect x="50.0000%" y="3077" width="0.2001%" height="15" fill="rgb(228,71,31)" fg:x="1499" fg:w="6"/><text x="50.2500%" y="3087.50"></text></g><g><title>boggle.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (6 samples, 0.20%)</title><rect x="50.0000%" y="3061" width="0.2001%" height="15" fill="rgb(252,184,16)" fg:x="1499" fg:w="6"/><text x="50.2500%" y="3071.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (6 samples, 0.20%)</title><rect x="50.0000%" y="3045" width="0.2001%" height="15" fill="rgb(236,169,46)" fg:x="1499" fg:w="6"/><text x="50.2500%" y="3055.50"></text></g><g><title>`0x7FFAC12D5376 (6 samples, 0.20%)</title><rect x="50.0000%" y="3029" width="0.2001%" height="15" fill="rgb(207,17,47)" fg:x="1499" fg:w="6"/><text x="50.2500%" y="3039.50"></text></g><g><title>`0x7FFAC12D54F2 (1 samples, 0.03%)</title><rect x="50.1668%" y="3013" width="0.0334%" height="15" fill="rgb(206,201,28)" fg:x="1504" fg:w="1"/><text x="50.4168%" y="3023.50"></text></g><g><title>`0x7FFAC1403440 (1 samples, 0.03%)</title><rect x="50.1668%" y="2997" width="0.0334%" height="15" fill="rgb(224,184,23)" fg:x="1504" fg:w="1"/><text x="50.4168%" y="3007.50"></text></g><g><title>boggle.exe`alloc::string::String::push (7 samples, 0.23%)</title><rect x="50.0000%" y="3253" width="0.2335%" height="15" fill="rgb(208,139,48)" fg:x="1499" fg:w="7"/><text x="50.2500%" y="3263.50"></text></g><g><title>boggle.exe`core::char::methods::impl$0::len_utf8 (1 samples, 0.03%)</title><rect x="50.2001%" y="3237" width="0.0334%" height="15" fill="rgb(208,130,10)" fg:x="1505" fg:w="1"/><text x="50.4501%" y="3247.50"></text></g><g><title>boggle.exe`core::char::methods::len_utf8 (1 samples, 0.03%)</title><rect x="50.2001%" y="3221" width="0.0334%" height="15" fill="rgb(211,213,45)" fg:x="1505" fg:w="1"/><text x="50.4501%" y="3231.50"></text></g><g><title>`0x7FFAC12C78AB (1 samples, 0.03%)</title><rect x="50.2335%" y="3045" width="0.0334%" height="15" fill="rgb(235,100,30)" fg:x="1506" fg:w="1"/><text x="50.4835%" y="3055.50"></text></g><g><title>`0x7FFAC12C8047 (1 samples, 0.03%)</title><rect x="50.2668%" y="3029" width="0.0334%" height="15" fill="rgb(206,144,31)" fg:x="1507" fg:w="1"/><text x="50.5168%" y="3039.50"></text></g><g><title>`0x7FFAC12C8119 (1 samples, 0.03%)</title><rect x="50.3002%" y="3029" width="0.0334%" height="15" fill="rgb(224,200,26)" fg:x="1508" fg:w="1"/><text x="50.5502%" y="3039.50"></text></g><g><title>`0x7FFAC12C818A (1 samples, 0.03%)</title><rect x="50.3336%" y="3029" width="0.0334%" height="15" fill="rgb(247,104,53)" fg:x="1509" fg:w="1"/><text x="50.5836%" y="3039.50"></text></g><g><title>boggle.exe`alloc::string::impl$102::to_string(ref$ (5 samples, 0.17%)</title><rect x="50.2335%" y="3253" width="0.1668%" height="15" fill="rgb(220,14,17)" fg:x="1506" fg:w="5"/><text x="50.4835%" y="3263.50"></text></g><g><title>boggle.exe`alloc::string::impl$44::from(ref$ (5 samples, 0.17%)</title><rect x="50.2335%" y="3237" width="0.1668%" height="15" fill="rgb(230,140,40)" fg:x="1506" fg:w="5"/><text x="50.4835%" y="3247.50"></text></g><g><title>boggle.exe`alloc::str::impl$4::to_owned(ref$ (5 samples, 0.17%)</title><rect x="50.2335%" y="3221" width="0.1668%" height="15" fill="rgb(229,2,41)" fg:x="1506" fg:w="5"/><text x="50.4835%" y="3231.50"></text></g><g><title>boggle.exe`alloc::slice::impl$9::to_owned(ref$&lt;slice2$ (5 samples, 0.17%)</title><rect x="50.2335%" y="3205" width="0.1668%" height="15" fill="rgb(232,89,16)" fg:x="1506" fg:w="5"/><text x="50.4835%" y="3215.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec(ref$&lt;slice2$ (5 samples, 0.17%)</title><rect x="50.2335%" y="3189" width="0.1668%" height="15" fill="rgb(247,59,52)" fg:x="1506" fg:w="5"/><text x="50.4835%" y="3199.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec_in(ref$&lt;slice2$ (5 samples, 0.17%)</title><rect x="50.2335%" y="3173" width="0.1668%" height="15" fill="rgb(226,110,21)" fg:x="1506" fg:w="5"/><text x="50.4835%" y="3183.50"></text></g><g><title>boggle.exe`alloc::slice::hack::to_vec(ref$&lt;slice2$ (5 samples, 0.17%)</title><rect x="50.2335%" y="3157" width="0.1668%" height="15" fill="rgb(224,176,43)" fg:x="1506" fg:w="5"/><text x="50.4835%" y="3167.50"></text></g><g><title>boggle.exe`alloc::slice::hack::impl$1::to_vec(ref$&lt;slice2$ (5 samples, 0.17%)</title><rect x="50.2335%" y="3141" width="0.1668%" height="15" fill="rgb(221,73,6)" fg:x="1506" fg:w="5"/><text x="50.4835%" y="3151.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (5 samples, 0.17%)</title><rect x="50.2335%" y="3125" width="0.1668%" height="15" fill="rgb(232,78,19)" fg:x="1506" fg:w="5"/><text x="50.4835%" y="3135.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (5 samples, 0.17%)</title><rect x="50.2335%" y="3109" width="0.1668%" height="15" fill="rgb(233,112,48)" fg:x="1506" fg:w="5"/><text x="50.4835%" y="3119.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (5 samples, 0.17%)</title><rect x="50.2335%" y="3093" width="0.1668%" height="15" fill="rgb(243,131,47)" fg:x="1506" fg:w="5"/><text x="50.4835%" y="3103.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (5 samples, 0.17%)</title><rect x="50.2335%" y="3077" width="0.1668%" height="15" fill="rgb(226,51,1)" fg:x="1506" fg:w="5"/><text x="50.4835%" y="3087.50"></text></g><g><title>`0x7FFAC12C7776 (5 samples, 0.17%)</title><rect x="50.2335%" y="3061" width="0.1668%" height="15" fill="rgb(247,58,7)" fg:x="1506" fg:w="5"/><text x="50.4835%" y="3071.50"></text></g><g><title>`0x7FFAC12C78B4 (4 samples, 0.13%)</title><rect x="50.2668%" y="3045" width="0.1334%" height="15" fill="rgb(209,7,32)" fg:x="1507" fg:w="4"/><text x="50.5168%" y="3055.50"></text></g><g><title>`0x7FFAC12C85ED (1 samples, 0.03%)</title><rect x="50.3669%" y="3029" width="0.0334%" height="15" fill="rgb(209,39,41)" fg:x="1510" fg:w="1"/><text x="50.6169%" y="3039.50"></text></g><g><title>boggle.exe`alloc::string::impl$28::deref (1 samples, 0.03%)</title><rect x="50.4003%" y="3253" width="0.0334%" height="15" fill="rgb(226,182,46)" fg:x="1511" fg:w="1"/><text x="50.6503%" y="3263.50"></text></g><g><title>boggle.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (1 samples, 0.03%)</title><rect x="50.4003%" y="3237" width="0.0334%" height="15" fill="rgb(230,219,10)" fg:x="1511" fg:w="1"/><text x="50.6503%" y="3247.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_ptr (1 samples, 0.03%)</title><rect x="50.4003%" y="3221" width="0.0334%" height="15" fill="rgb(227,175,30)" fg:x="1511" fg:w="1"/><text x="50.6503%" y="3231.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::ptr (1 samples, 0.03%)</title><rect x="50.4003%" y="3205" width="0.0334%" height="15" fill="rgb(217,2,50)" fg:x="1511" fg:w="1"/><text x="50.6503%" y="3215.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (1 samples, 0.03%)</title><rect x="50.4003%" y="3189" width="0.0334%" height="15" fill="rgb(229,160,0)" fg:x="1511" fg:w="1"/><text x="50.6503%" y="3199.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (1 samples, 0.03%)</title><rect x="50.4003%" y="3173" width="0.0334%" height="15" fill="rgb(207,78,37)" fg:x="1511" fg:w="1"/><text x="50.6503%" y="3183.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;::push (1 samples, 0.03%)</title><rect x="50.4336%" y="3253" width="0.0334%" height="15" fill="rgb(225,57,0)" fg:x="1512" fg:w="1"/><text x="50.6836%" y="3263.50"></text></g><g><title>boggle.exe`core::ptr::write (1 samples, 0.03%)</title><rect x="50.4336%" y="3237" width="0.0334%" height="15" fill="rgb(232,154,2)" fg:x="1512" fg:w="1"/><text x="50.6836%" y="3247.50"></text></g><g><title>boggle.exe`alloc::string::String::pop (68 samples, 2.27%)</title><rect x="48.3656%" y="3317" width="2.2682%" height="15" fill="rgb(241,212,25)" fg:x="1450" fg:w="68"/><text x="48.6156%" y="3327.50">b..</text></g><g><title>boggle.exe`alloc::string::impl$28::deref (68 samples, 2.27%)</title><rect x="48.3656%" y="3301" width="2.2682%" height="15" fill="rgb(226,69,20)" fg:x="1450" fg:w="68"/><text x="48.6156%" y="3311.50">b..</text></g><g><title>boggle.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (68 samples, 2.27%)</title><rect x="48.3656%" y="3285" width="2.2682%" height="15" fill="rgb(247,184,54)" fg:x="1450" fg:w="68"/><text x="48.6156%" y="3295.50">b..</text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::collect_words(boggle::utils::dict_trie::DictTrieNode*, ref$&lt;str$&gt;, alloc::vec::Vec (68 samples, 2.27%)</title><rect x="48.3656%" y="3269" width="2.2682%" height="15" fill="rgb(210,145,0)" fg:x="1450" fg:w="68"/><text x="48.6156%" y="3279.50">b..</text></g><g><title>boggle.exe`std::collections::hash::map::impl$36::into_iter(std::collections::hash::map::HashMap (5 samples, 0.17%)</title><rect x="50.4670%" y="3253" width="0.1668%" height="15" fill="rgb(253,82,12)" fg:x="1513" fg:w="5"/><text x="50.7170%" y="3263.50"></text></g><g><title>boggle.exe`std::collections::hash::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;::iter (5 samples, 0.17%)</title><rect x="50.4670%" y="3237" width="0.1668%" height="15" fill="rgb(245,42,11)" fg:x="1513" fg:w="5"/><text x="50.7170%" y="3247.50"></text></g><g><title>boggle.exe`hashbrown::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt;::iter (5 samples, 0.17%)</title><rect x="50.4670%" y="3221" width="0.1668%" height="15" fill="rgb(219,147,32)" fg:x="1513" fg:w="5"/><text x="50.7170%" y="3231.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTable&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;::iter (5 samples, 0.17%)</title><rect x="50.4670%" y="3205" width="0.1668%" height="15" fill="rgb(246,12,7)" fg:x="1513" fg:w="5"/><text x="50.7170%" y="3215.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::iter (5 samples, 0.17%)</title><rect x="50.4670%" y="3189" width="0.1668%" height="15" fill="rgb(243,50,9)" fg:x="1513" fg:w="5"/><text x="50.7170%" y="3199.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawIterRange&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::new(unsigned char*, hashbrown::raw::Bucket&lt;tuple$ (5 samples, 0.17%)</title><rect x="50.4670%" y="3173" width="0.1668%" height="15" fill="rgb(219,149,6)" fg:x="1513" fg:w="5"/><text x="50.7170%" y="3183.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::load_aligned (5 samples, 0.17%)</title><rect x="50.4670%" y="3157" width="0.1668%" height="15" fill="rgb(241,51,42)" fg:x="1513" fg:w="5"/><text x="50.7170%" y="3167.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::match_empty_or_deleted (5 samples, 0.17%)</title><rect x="50.4670%" y="3141" width="0.1668%" height="15" fill="rgb(226,128,27)" fg:x="1513" fg:w="5"/><text x="50.7170%" y="3151.50"></text></g><g><title>boggle.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (5 samples, 0.17%)</title><rect x="50.4670%" y="3125" width="0.1668%" height="15" fill="rgb(244,144,4)" fg:x="1513" fg:w="5"/><text x="50.7170%" y="3135.50"></text></g><g><title>`0x7FFAC12C7FF0 (1 samples, 0.03%)</title><rect x="50.6671%" y="3013" width="0.0334%" height="15" fill="rgb(221,4,13)" fg:x="1519" fg:w="1"/><text x="50.9171%" y="3023.50"></text></g><g><title>`0x7FFAC12C801A (1 samples, 0.03%)</title><rect x="50.7005%" y="3013" width="0.0334%" height="15" fill="rgb(208,170,28)" fg:x="1520" fg:w="1"/><text x="50.9505%" y="3023.50"></text></g><g><title>`0x7FFAC12C8060 (1 samples, 0.03%)</title><rect x="50.7338%" y="3013" width="0.0334%" height="15" fill="rgb(226,131,13)" fg:x="1521" fg:w="1"/><text x="50.9838%" y="3023.50"></text></g><g><title>`0x7FFAC12C809C (1 samples, 0.03%)</title><rect x="50.7672%" y="3013" width="0.0334%" height="15" fill="rgb(215,72,41)" fg:x="1522" fg:w="1"/><text x="51.0172%" y="3023.50"></text></g><g><title>`0x7FFAC12C78B4 (5 samples, 0.17%)</title><rect x="50.6671%" y="3029" width="0.1668%" height="15" fill="rgb(243,108,20)" fg:x="1519" fg:w="5"/><text x="50.9171%" y="3039.50"></text></g><g><title>`0x7FFAC12C8165 (1 samples, 0.03%)</title><rect x="50.8005%" y="3013" width="0.0334%" height="15" fill="rgb(230,189,17)" fg:x="1523" fg:w="1"/><text x="51.0505%" y="3023.50"></text></g><g><title>`0x7FFAC12D5DAA (6 samples, 0.20%)</title><rect x="50.6671%" y="3061" width="0.2001%" height="15" fill="rgb(220,50,17)" fg:x="1519" fg:w="6"/><text x="50.9171%" y="3071.50"></text></g><g><title>`0x7FFAC12C7776 (6 samples, 0.20%)</title><rect x="50.6671%" y="3045" width="0.2001%" height="15" fill="rgb(248,152,48)" fg:x="1519" fg:w="6"/><text x="50.9171%" y="3055.50"></text></g><g><title>`0x7FFAC12C7966 (1 samples, 0.03%)</title><rect x="50.8339%" y="3029" width="0.0334%" height="15" fill="rgb(244,91,11)" fg:x="1524" fg:w="1"/><text x="51.0839%" y="3039.50"></text></g><g><title>`0x7FFAC12D5E0B (3 samples, 0.10%)</title><rect x="50.8672%" y="3061" width="0.1001%" height="15" fill="rgb(220,157,5)" fg:x="1525" fg:w="3"/><text x="51.1172%" y="3071.50"></text></g><g><title>`0x7FFAC12D23A7 (3 samples, 0.10%)</title><rect x="50.8672%" y="3045" width="0.1001%" height="15" fill="rgb(253,137,8)" fg:x="1525" fg:w="3"/><text x="51.1172%" y="3055.50"></text></g><g><title>`0x7FFAC12D5376 (10 samples, 0.33%)</title><rect x="50.6671%" y="3093" width="0.3336%" height="15" fill="rgb(217,137,51)" fg:x="1519" fg:w="10"/><text x="50.9171%" y="3103.50"></text></g><g><title>`0x7FFAC12D54B5 (10 samples, 0.33%)</title><rect x="50.6671%" y="3077" width="0.3336%" height="15" fill="rgb(218,209,53)" fg:x="1519" fg:w="10"/><text x="50.9171%" y="3087.50"></text></g><g><title>`0x7FFAC12D6C14 (1 samples, 0.03%)</title><rect x="50.9673%" y="3061" width="0.0334%" height="15" fill="rgb(249,137,25)" fg:x="1528" fg:w="1"/><text x="51.2173%" y="3071.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::push (12 samples, 0.40%)</title><rect x="50.6338%" y="3301" width="0.4003%" height="15" fill="rgb(239,155,26)" fg:x="1518" fg:w="12"/><text x="50.8838%" y="3311.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_mut_ptr (12 samples, 0.40%)</title><rect x="50.6338%" y="3285" width="0.4003%" height="15" fill="rgb(227,85,46)" fg:x="1518" fg:w="12"/><text x="50.8838%" y="3295.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::ptr (12 samples, 0.40%)</title><rect x="50.6338%" y="3269" width="0.4003%" height="15" fill="rgb(251,107,43)" fg:x="1518" fg:w="12"/><text x="50.8838%" y="3279.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (12 samples, 0.40%)</title><rect x="50.6338%" y="3253" width="0.4003%" height="15" fill="rgb(234,170,33)" fg:x="1518" fg:w="12"/><text x="50.8838%" y="3263.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (12 samples, 0.40%)</title><rect x="50.6338%" y="3237" width="0.4003%" height="15" fill="rgb(206,29,35)" fg:x="1518" fg:w="12"/><text x="50.8838%" y="3247.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::grow_one&lt;u8,alloc::alloc::Global&gt; (12 samples, 0.40%)</title><rect x="50.6338%" y="3221" width="0.4003%" height="15" fill="rgb(227,138,25)" fg:x="1518" fg:w="12"/><text x="50.8838%" y="3231.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_one (11 samples, 0.37%)</title><rect x="50.6671%" y="3205" width="0.3669%" height="15" fill="rgb(249,131,35)" fg:x="1519" fg:w="11"/><text x="50.9171%" y="3215.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (11 samples, 0.37%)</title><rect x="50.6671%" y="3189" width="0.3669%" height="15" fill="rgb(239,6,40)" fg:x="1519" fg:w="11"/><text x="50.9171%" y="3199.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (11 samples, 0.37%)</title><rect x="50.6671%" y="3173" width="0.3669%" height="15" fill="rgb(246,136,47)" fg:x="1519" fg:w="11"/><text x="50.9171%" y="3183.50"></text></g><g><title>boggle.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (11 samples, 0.37%)</title><rect x="50.6671%" y="3157" width="0.3669%" height="15" fill="rgb(253,58,26)" fg:x="1519" fg:w="11"/><text x="50.9171%" y="3167.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (11 samples, 0.37%)</title><rect x="50.6671%" y="3141" width="0.3669%" height="15" fill="rgb(237,141,10)" fg:x="1519" fg:w="11"/><text x="50.9171%" y="3151.50"></text></g><g><title>boggle.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (11 samples, 0.37%)</title><rect x="50.6671%" y="3125" width="0.3669%" height="15" fill="rgb(234,156,12)" fg:x="1519" fg:w="11"/><text x="50.9171%" y="3135.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (11 samples, 0.37%)</title><rect x="50.6671%" y="3109" width="0.3669%" height="15" fill="rgb(243,224,36)" fg:x="1519" fg:w="11"/><text x="50.9171%" y="3119.50"></text></g><g><title>boggle.exe`__rust_realloc (1 samples, 0.03%)</title><rect x="51.0007%" y="3093" width="0.0334%" height="15" fill="rgb(205,229,51)" fg:x="1529" fg:w="1"/><text x="51.2507%" y="3103.50"></text></g><g><title>boggle.exe`alloc::string::String::push (16 samples, 0.53%)</title><rect x="50.6338%" y="3317" width="0.5337%" height="15" fill="rgb(223,189,4)" fg:x="1518" fg:w="16"/><text x="50.8838%" y="3327.50"></text></g><g><title>boggle.exe`core::char::methods::impl$0::len_utf8 (4 samples, 0.13%)</title><rect x="51.0340%" y="3301" width="0.1334%" height="15" fill="rgb(249,167,54)" fg:x="1530" fg:w="4"/><text x="51.2840%" y="3311.50"></text></g><g><title>boggle.exe`core::char::methods::len_utf8 (4 samples, 0.13%)</title><rect x="51.0340%" y="3285" width="0.1334%" height="15" fill="rgb(218,34,28)" fg:x="1530" fg:w="4"/><text x="51.2840%" y="3295.50"></text></g><g><title>`0x7FFAB8910268 (1 samples, 0.03%)</title><rect x="51.1674%" y="3253" width="0.0334%" height="15" fill="rgb(232,109,42)" fg:x="1534" fg:w="1"/><text x="51.4174%" y="3263.50"></text></g><g><title>`0x7FFAC12C7EDC (2 samples, 0.07%)</title><rect x="51.2008%" y="3093" width="0.0667%" height="15" fill="rgb(248,214,46)" fg:x="1535" fg:w="2"/><text x="51.4508%" y="3103.50"></text></g><g><title>`0x7FFAC12C7776 (5 samples, 0.17%)</title><rect x="51.2008%" y="3125" width="0.1668%" height="15" fill="rgb(244,216,40)" fg:x="1535" fg:w="5"/><text x="51.4508%" y="3135.50"></text></g><g><title>`0x7FFAC12C78B4 (5 samples, 0.17%)</title><rect x="51.2008%" y="3109" width="0.1668%" height="15" fill="rgb(231,226,31)" fg:x="1535" fg:w="5"/><text x="51.4508%" y="3119.50"></text></g><g><title>`0x7FFAC12C8047 (3 samples, 0.10%)</title><rect x="51.2675%" y="3093" width="0.1001%" height="15" fill="rgb(238,38,43)" fg:x="1537" fg:w="3"/><text x="51.5175%" y="3103.50"></text></g><g><title>boggle.exe`alloc::string::impl$102::to_string(ref$ (7 samples, 0.23%)</title><rect x="51.1674%" y="3317" width="0.2335%" height="15" fill="rgb(208,88,43)" fg:x="1534" fg:w="7"/><text x="51.4174%" y="3327.50"></text></g><g><title>boggle.exe`alloc::string::impl$44::from(ref$ (7 samples, 0.23%)</title><rect x="51.1674%" y="3301" width="0.2335%" height="15" fill="rgb(205,136,37)" fg:x="1534" fg:w="7"/><text x="51.4174%" y="3311.50"></text></g><g><title>boggle.exe`alloc::str::impl$4::to_owned(ref$ (7 samples, 0.23%)</title><rect x="51.1674%" y="3285" width="0.2335%" height="15" fill="rgb(237,34,14)" fg:x="1534" fg:w="7"/><text x="51.4174%" y="3295.50"></text></g><g><title>boggle.exe`alloc::slice::impl$9::to_owned(ref$&lt;slice2$ (7 samples, 0.23%)</title><rect x="51.1674%" y="3269" width="0.2335%" height="15" fill="rgb(236,193,44)" fg:x="1534" fg:w="7"/><text x="51.4174%" y="3279.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec(ref$&lt;slice2$ (6 samples, 0.20%)</title><rect x="51.2008%" y="3253" width="0.2001%" height="15" fill="rgb(231,48,10)" fg:x="1535" fg:w="6"/><text x="51.4508%" y="3263.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec_in(ref$&lt;slice2$ (6 samples, 0.20%)</title><rect x="51.2008%" y="3237" width="0.2001%" height="15" fill="rgb(213,141,34)" fg:x="1535" fg:w="6"/><text x="51.4508%" y="3247.50"></text></g><g><title>boggle.exe`alloc::slice::hack::to_vec(ref$&lt;slice2$ (6 samples, 0.20%)</title><rect x="51.2008%" y="3221" width="0.2001%" height="15" fill="rgb(249,130,34)" fg:x="1535" fg:w="6"/><text x="51.4508%" y="3231.50"></text></g><g><title>boggle.exe`alloc::slice::hack::impl$1::to_vec(ref$&lt;slice2$ (6 samples, 0.20%)</title><rect x="51.2008%" y="3205" width="0.2001%" height="15" fill="rgb(219,42,41)" fg:x="1535" fg:w="6"/><text x="51.4508%" y="3215.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (6 samples, 0.20%)</title><rect x="51.2008%" y="3189" width="0.2001%" height="15" fill="rgb(224,100,54)" fg:x="1535" fg:w="6"/><text x="51.4508%" y="3199.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (6 samples, 0.20%)</title><rect x="51.2008%" y="3173" width="0.2001%" height="15" fill="rgb(229,200,27)" fg:x="1535" fg:w="6"/><text x="51.4508%" y="3183.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (6 samples, 0.20%)</title><rect x="51.2008%" y="3157" width="0.2001%" height="15" fill="rgb(217,118,10)" fg:x="1535" fg:w="6"/><text x="51.4508%" y="3167.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (6 samples, 0.20%)</title><rect x="51.2008%" y="3141" width="0.2001%" height="15" fill="rgb(206,22,3)" fg:x="1535" fg:w="6"/><text x="51.4508%" y="3151.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::allocate (1 samples, 0.03%)</title><rect x="51.3676%" y="3125" width="0.0334%" height="15" fill="rgb(232,163,46)" fg:x="1540" fg:w="1"/><text x="51.6176%" y="3135.50"></text></g><g><title>boggle.exe`alloc::alloc::Global::alloc_impl (1 samples, 0.03%)</title><rect x="51.3676%" y="3109" width="0.0334%" height="15" fill="rgb(206,95,13)" fg:x="1540" fg:w="1"/><text x="51.6176%" y="3119.50"></text></g><g><title>boggle.exe`alloc::alloc::alloc (1 samples, 0.03%)</title><rect x="51.3676%" y="3093" width="0.0334%" height="15" fill="rgb(253,154,18)" fg:x="1540" fg:w="1"/><text x="51.6176%" y="3103.50"></text></g><g><title>boggle.exe`core::ptr::read_volatile (1 samples, 0.03%)</title><rect x="51.3676%" y="3077" width="0.0334%" height="15" fill="rgb(219,32,23)" fg:x="1540" fg:w="1"/><text x="51.6176%" y="3087.50"></text></g><g><title>boggle.exe`alloc::string::impl$28::deref (1 samples, 0.03%)</title><rect x="51.4009%" y="3317" width="0.0334%" height="15" fill="rgb(230,191,45)" fg:x="1541" fg:w="1"/><text x="51.6509%" y="3327.50"></text></g><g><title>boggle.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (1 samples, 0.03%)</title><rect x="51.4009%" y="3301" width="0.0334%" height="15" fill="rgb(229,64,36)" fg:x="1541" fg:w="1"/><text x="51.6509%" y="3311.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_ptr (1 samples, 0.03%)</title><rect x="51.4009%" y="3285" width="0.0334%" height="15" fill="rgb(205,129,25)" fg:x="1541" fg:w="1"/><text x="51.6509%" y="3295.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::ptr (1 samples, 0.03%)</title><rect x="51.4009%" y="3269" width="0.0334%" height="15" fill="rgb(254,112,7)" fg:x="1541" fg:w="1"/><text x="51.6509%" y="3279.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (1 samples, 0.03%)</title><rect x="51.4009%" y="3253" width="0.0334%" height="15" fill="rgb(226,53,48)" fg:x="1541" fg:w="1"/><text x="51.6509%" y="3263.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (1 samples, 0.03%)</title><rect x="51.4009%" y="3237" width="0.0334%" height="15" fill="rgb(214,153,38)" fg:x="1541" fg:w="1"/><text x="51.6509%" y="3247.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;::push (1 samples, 0.03%)</title><rect x="51.4343%" y="3317" width="0.0334%" height="15" fill="rgb(243,101,7)" fg:x="1542" fg:w="1"/><text x="51.6843%" y="3327.50"></text></g><g><title>boggle.exe`alloc::string::impl$6::clone (1 samples, 0.03%)</title><rect x="51.4343%" y="3301" width="0.0334%" height="15" fill="rgb(240,140,22)" fg:x="1542" fg:w="1"/><text x="51.6843%" y="3311.50"></text></g><g><title>boggle.exe`alloc::vec::impl$11::clone (1 samples, 0.03%)</title><rect x="51.4343%" y="3285" width="0.0334%" height="15" fill="rgb(235,114,2)" fg:x="1542" fg:w="1"/><text x="51.6843%" y="3295.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec_in (1 samples, 0.03%)</title><rect x="51.4343%" y="3269" width="0.0334%" height="15" fill="rgb(242,59,12)" fg:x="1542" fg:w="1"/><text x="51.6843%" y="3279.50"></text></g><g><title>boggle.exe`alloc::slice::hack::to_vec (1 samples, 0.03%)</title><rect x="51.4343%" y="3253" width="0.0334%" height="15" fill="rgb(252,134,9)" fg:x="1542" fg:w="1"/><text x="51.6843%" y="3263.50"></text></g><g><title>boggle.exe`alloc::slice::hack::impl$1::to_vec (1 samples, 0.03%)</title><rect x="51.4343%" y="3237" width="0.0334%" height="15" fill="rgb(236,4,44)" fg:x="1542" fg:w="1"/><text x="51.6843%" y="3247.50"></text></g><g><title>boggle.exe`alloc::vec::Vec::with_capacity_in (1 samples, 0.03%)</title><rect x="51.4343%" y="3221" width="0.0334%" height="15" fill="rgb(254,172,41)" fg:x="1542" fg:w="1"/><text x="51.6843%" y="3231.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec::with_capacity_in (1 samples, 0.03%)</title><rect x="51.4343%" y="3205" width="0.0334%" height="15" fill="rgb(244,63,20)" fg:x="1542" fg:w="1"/><text x="51.6843%" y="3215.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner::with_capacity_in (1 samples, 0.03%)</title><rect x="51.4343%" y="3189" width="0.0334%" height="15" fill="rgb(250,73,31)" fg:x="1542" fg:w="1"/><text x="51.6843%" y="3199.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner::try_allocate_in (1 samples, 0.03%)</title><rect x="51.4343%" y="3173" width="0.0334%" height="15" fill="rgb(241,38,36)" fg:x="1542" fg:w="1"/><text x="51.6843%" y="3183.50"></text></g><g><title>`0x7FFAC12C7776 (1 samples, 0.03%)</title><rect x="51.4343%" y="3157" width="0.0334%" height="15" fill="rgb(245,211,2)" fg:x="1542" fg:w="1"/><text x="51.6843%" y="3167.50"></text></g><g><title>`0x7FFAC12C788C (1 samples, 0.03%)</title><rect x="51.4343%" y="3141" width="0.0334%" height="15" fill="rgb(206,120,28)" fg:x="1542" fg:w="1"/><text x="51.6843%" y="3151.50"></text></g><g><title>boggle.exe`alloc::string::String::pop (103 samples, 3.44%)</title><rect x="48.0987%" y="3381" width="3.4356%" height="15" fill="rgb(211,59,34)" fg:x="1442" fg:w="103"/><text x="48.3487%" y="3391.50">bog..</text></g><g><title>boggle.exe`alloc::string::impl$28::deref (103 samples, 3.44%)</title><rect x="48.0987%" y="3365" width="3.4356%" height="15" fill="rgb(233,168,5)" fg:x="1442" fg:w="103"/><text x="48.3487%" y="3375.50">bog..</text></g><g><title>boggle.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (103 samples, 3.44%)</title><rect x="48.0987%" y="3349" width="3.4356%" height="15" fill="rgb(234,33,13)" fg:x="1442" fg:w="103"/><text x="48.3487%" y="3359.50">bog..</text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::collect_words(boggle::utils::dict_trie::DictTrieNode*, ref$&lt;str$&gt;, alloc::vec::Vec (103 samples, 3.44%)</title><rect x="48.0987%" y="3333" width="3.4356%" height="15" fill="rgb(231,150,26)" fg:x="1442" fg:w="103"/><text x="48.3487%" y="3343.50">bog..</text></g><g><title>boggle.exe`std::collections::hash::map::impl$36::into_iter(std::collections::hash::map::HashMap (2 samples, 0.07%)</title><rect x="51.4676%" y="3317" width="0.0667%" height="15" fill="rgb(217,191,4)" fg:x="1543" fg:w="2"/><text x="51.7176%" y="3327.50"></text></g><g><title>boggle.exe`std::collections::hash::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;::iter (2 samples, 0.07%)</title><rect x="51.4676%" y="3301" width="0.0667%" height="15" fill="rgb(246,198,38)" fg:x="1543" fg:w="2"/><text x="51.7176%" y="3311.50"></text></g><g><title>boggle.exe`hashbrown::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt;::iter (2 samples, 0.07%)</title><rect x="51.4676%" y="3285" width="0.0667%" height="15" fill="rgb(245,64,37)" fg:x="1543" fg:w="2"/><text x="51.7176%" y="3295.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTable&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;::iter (2 samples, 0.07%)</title><rect x="51.4676%" y="3269" width="0.0667%" height="15" fill="rgb(250,30,36)" fg:x="1543" fg:w="2"/><text x="51.7176%" y="3279.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::iter (2 samples, 0.07%)</title><rect x="51.4676%" y="3253" width="0.0667%" height="15" fill="rgb(217,86,53)" fg:x="1543" fg:w="2"/><text x="51.7176%" y="3263.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawIterRange&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::new(unsigned char*, hashbrown::raw::Bucket&lt;tuple$ (2 samples, 0.07%)</title><rect x="51.4676%" y="3237" width="0.0667%" height="15" fill="rgb(228,157,16)" fg:x="1543" fg:w="2"/><text x="51.7176%" y="3247.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::load_aligned (2 samples, 0.07%)</title><rect x="51.4676%" y="3221" width="0.0667%" height="15" fill="rgb(217,59,31)" fg:x="1543" fg:w="2"/><text x="51.7176%" y="3231.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::match_empty_or_deleted (2 samples, 0.07%)</title><rect x="51.4676%" y="3205" width="0.0667%" height="15" fill="rgb(237,138,41)" fg:x="1543" fg:w="2"/><text x="51.7176%" y="3215.50"></text></g><g><title>boggle.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (2 samples, 0.07%)</title><rect x="51.4676%" y="3189" width="0.0667%" height="15" fill="rgb(227,91,49)" fg:x="1543" fg:w="2"/><text x="51.7176%" y="3199.50"></text></g><g><title>`0x7FFAC12D5335 (1 samples, 0.03%)</title><rect x="51.6011%" y="3157" width="0.0334%" height="15" fill="rgb(247,21,44)" fg:x="1547" fg:w="1"/><text x="51.8511%" y="3167.50"></text></g><g><title>`0x7FFAC12D5448 (1 samples, 0.03%)</title><rect x="51.6344%" y="3141" width="0.0334%" height="15" fill="rgb(219,210,51)" fg:x="1548" fg:w="1"/><text x="51.8844%" y="3151.50"></text></g><g><title>`0x7FFAC12C7FE4 (1 samples, 0.03%)</title><rect x="51.6678%" y="3077" width="0.0334%" height="15" fill="rgb(209,140,6)" fg:x="1549" fg:w="1"/><text x="51.9178%" y="3087.50"></text></g><g><title>`0x7FFAC12C78B4 (3 samples, 0.10%)</title><rect x="51.6678%" y="3093" width="0.1001%" height="15" fill="rgb(221,188,24)" fg:x="1549" fg:w="3"/><text x="51.9178%" y="3103.50"></text></g><g><title>`0x7FFAC12C8047 (2 samples, 0.07%)</title><rect x="51.7011%" y="3077" width="0.0667%" height="15" fill="rgb(232,154,20)" fg:x="1550" fg:w="2"/><text x="51.9511%" y="3087.50"></text></g><g><title>`0x7FFAC12C78B7 (1 samples, 0.03%)</title><rect x="51.7678%" y="3093" width="0.0334%" height="15" fill="rgb(244,137,50)" fg:x="1552" fg:w="1"/><text x="52.0178%" y="3103.50"></text></g><g><title>`0x7FFAC12D5DAA (5 samples, 0.17%)</title><rect x="51.6678%" y="3125" width="0.1668%" height="15" fill="rgb(225,185,43)" fg:x="1549" fg:w="5"/><text x="51.9178%" y="3135.50"></text></g><g><title>`0x7FFAC12C7776 (5 samples, 0.17%)</title><rect x="51.6678%" y="3109" width="0.1668%" height="15" fill="rgb(213,205,38)" fg:x="1549" fg:w="5"/><text x="51.9178%" y="3119.50"></text></g><g><title>`0x7FFAC12C78C0 (1 samples, 0.03%)</title><rect x="51.8012%" y="3093" width="0.0334%" height="15" fill="rgb(236,73,12)" fg:x="1553" fg:w="1"/><text x="52.0512%" y="3103.50"></text></g><g><title>`0x7FFAC12D23A7 (3 samples, 0.10%)</title><rect x="51.8346%" y="3109" width="0.1001%" height="15" fill="rgb(235,219,13)" fg:x="1554" fg:w="3"/><text x="52.0846%" y="3119.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::push (13 samples, 0.43%)</title><rect x="51.5344%" y="3365" width="0.4336%" height="15" fill="rgb(218,59,36)" fg:x="1545" fg:w="13"/><text x="51.7844%" y="3375.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_mut_ptr (12 samples, 0.40%)</title><rect x="51.5677%" y="3349" width="0.4003%" height="15" fill="rgb(205,110,39)" fg:x="1546" fg:w="12"/><text x="51.8177%" y="3359.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::ptr (12 samples, 0.40%)</title><rect x="51.5677%" y="3333" width="0.4003%" height="15" fill="rgb(218,206,42)" fg:x="1546" fg:w="12"/><text x="51.8177%" y="3343.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (12 samples, 0.40%)</title><rect x="51.5677%" y="3317" width="0.4003%" height="15" fill="rgb(248,125,24)" fg:x="1546" fg:w="12"/><text x="51.8177%" y="3327.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (12 samples, 0.40%)</title><rect x="51.5677%" y="3301" width="0.4003%" height="15" fill="rgb(242,28,27)" fg:x="1546" fg:w="12"/><text x="51.8177%" y="3311.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::grow_one&lt;u8,alloc::alloc::Global&gt; (12 samples, 0.40%)</title><rect x="51.5677%" y="3285" width="0.4003%" height="15" fill="rgb(216,228,15)" fg:x="1546" fg:w="12"/><text x="51.8177%" y="3295.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_one (11 samples, 0.37%)</title><rect x="51.6011%" y="3269" width="0.3669%" height="15" fill="rgb(235,116,46)" fg:x="1547" fg:w="11"/><text x="51.8511%" y="3279.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (11 samples, 0.37%)</title><rect x="51.6011%" y="3253" width="0.3669%" height="15" fill="rgb(224,18,32)" fg:x="1547" fg:w="11"/><text x="51.8511%" y="3263.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (11 samples, 0.37%)</title><rect x="51.6011%" y="3237" width="0.3669%" height="15" fill="rgb(252,5,12)" fg:x="1547" fg:w="11"/><text x="51.8511%" y="3247.50"></text></g><g><title>boggle.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (11 samples, 0.37%)</title><rect x="51.6011%" y="3221" width="0.3669%" height="15" fill="rgb(251,36,5)" fg:x="1547" fg:w="11"/><text x="51.8511%" y="3231.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (11 samples, 0.37%)</title><rect x="51.6011%" y="3205" width="0.3669%" height="15" fill="rgb(217,53,14)" fg:x="1547" fg:w="11"/><text x="51.8511%" y="3215.50"></text></g><g><title>boggle.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (11 samples, 0.37%)</title><rect x="51.6011%" y="3189" width="0.3669%" height="15" fill="rgb(215,86,45)" fg:x="1547" fg:w="11"/><text x="51.8511%" y="3199.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (11 samples, 0.37%)</title><rect x="51.6011%" y="3173" width="0.3669%" height="15" fill="rgb(242,169,11)" fg:x="1547" fg:w="11"/><text x="51.8511%" y="3183.50"></text></g><g><title>`0x7FFAC12D5376 (10 samples, 0.33%)</title><rect x="51.6344%" y="3157" width="0.3336%" height="15" fill="rgb(211,213,45)" fg:x="1548" fg:w="10"/><text x="51.8844%" y="3167.50"></text></g><g><title>`0x7FFAC12D54B5 (9 samples, 0.30%)</title><rect x="51.6678%" y="3141" width="0.3002%" height="15" fill="rgb(205,88,11)" fg:x="1549" fg:w="9"/><text x="51.9178%" y="3151.50"></text></g><g><title>`0x7FFAC12D5E0B (4 samples, 0.13%)</title><rect x="51.8346%" y="3125" width="0.1334%" height="15" fill="rgb(252,69,26)" fg:x="1554" fg:w="4"/><text x="52.0846%" y="3135.50"></text></g><g><title>`0x7FFAC12D23C2 (1 samples, 0.03%)</title><rect x="51.9346%" y="3109" width="0.0334%" height="15" fill="rgb(246,123,37)" fg:x="1557" fg:w="1"/><text x="52.1846%" y="3119.50"></text></g><g><title>boggle.exe`alloc::string::String::push (15 samples, 0.50%)</title><rect x="51.5344%" y="3381" width="0.5003%" height="15" fill="rgb(212,205,5)" fg:x="1545" fg:w="15"/><text x="51.7844%" y="3391.50"></text></g><g><title>boggle.exe`core::char::methods::impl$0::len_utf8 (2 samples, 0.07%)</title><rect x="51.9680%" y="3365" width="0.0667%" height="15" fill="rgb(253,148,0)" fg:x="1558" fg:w="2"/><text x="52.2180%" y="3375.50"></text></g><g><title>boggle.exe`core::char::methods::len_utf8 (2 samples, 0.07%)</title><rect x="51.9680%" y="3349" width="0.0667%" height="15" fill="rgb(239,22,4)" fg:x="1558" fg:w="2"/><text x="52.2180%" y="3359.50"></text></g><g><title>`0x7FFAC12C8047 (5 samples, 0.17%)</title><rect x="52.0347%" y="3157" width="0.1668%" height="15" fill="rgb(226,26,53)" fg:x="1560" fg:w="5"/><text x="52.2847%" y="3167.50"></text></g><g><title>boggle.exe`alloc::string::impl$102::to_string(ref$ (6 samples, 0.20%)</title><rect x="52.0347%" y="3381" width="0.2001%" height="15" fill="rgb(225,229,45)" fg:x="1560" fg:w="6"/><text x="52.2847%" y="3391.50"></text></g><g><title>boggle.exe`alloc::string::impl$44::from(ref$ (6 samples, 0.20%)</title><rect x="52.0347%" y="3365" width="0.2001%" height="15" fill="rgb(220,60,37)" fg:x="1560" fg:w="6"/><text x="52.2847%" y="3375.50"></text></g><g><title>boggle.exe`alloc::str::impl$4::to_owned(ref$ (6 samples, 0.20%)</title><rect x="52.0347%" y="3349" width="0.2001%" height="15" fill="rgb(217,180,35)" fg:x="1560" fg:w="6"/><text x="52.2847%" y="3359.50"></text></g><g><title>boggle.exe`alloc::slice::impl$9::to_owned(ref$&lt;slice2$ (6 samples, 0.20%)</title><rect x="52.0347%" y="3333" width="0.2001%" height="15" fill="rgb(229,7,53)" fg:x="1560" fg:w="6"/><text x="52.2847%" y="3343.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec(ref$&lt;slice2$ (6 samples, 0.20%)</title><rect x="52.0347%" y="3317" width="0.2001%" height="15" fill="rgb(254,137,3)" fg:x="1560" fg:w="6"/><text x="52.2847%" y="3327.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec_in(ref$&lt;slice2$ (6 samples, 0.20%)</title><rect x="52.0347%" y="3301" width="0.2001%" height="15" fill="rgb(215,140,41)" fg:x="1560" fg:w="6"/><text x="52.2847%" y="3311.50"></text></g><g><title>boggle.exe`alloc::slice::hack::to_vec(ref$&lt;slice2$ (6 samples, 0.20%)</title><rect x="52.0347%" y="3285" width="0.2001%" height="15" fill="rgb(250,80,15)" fg:x="1560" fg:w="6"/><text x="52.2847%" y="3295.50"></text></g><g><title>boggle.exe`alloc::slice::hack::impl$1::to_vec(ref$&lt;slice2$ (6 samples, 0.20%)</title><rect x="52.0347%" y="3269" width="0.2001%" height="15" fill="rgb(252,191,6)" fg:x="1560" fg:w="6"/><text x="52.2847%" y="3279.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (6 samples, 0.20%)</title><rect x="52.0347%" y="3253" width="0.2001%" height="15" fill="rgb(246,217,18)" fg:x="1560" fg:w="6"/><text x="52.2847%" y="3263.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (6 samples, 0.20%)</title><rect x="52.0347%" y="3237" width="0.2001%" height="15" fill="rgb(223,93,7)" fg:x="1560" fg:w="6"/><text x="52.2847%" y="3247.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (6 samples, 0.20%)</title><rect x="52.0347%" y="3221" width="0.2001%" height="15" fill="rgb(225,55,52)" fg:x="1560" fg:w="6"/><text x="52.2847%" y="3231.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (6 samples, 0.20%)</title><rect x="52.0347%" y="3205" width="0.2001%" height="15" fill="rgb(240,31,24)" fg:x="1560" fg:w="6"/><text x="52.2847%" y="3215.50"></text></g><g><title>`0x7FFAC12C7776 (6 samples, 0.20%)</title><rect x="52.0347%" y="3189" width="0.2001%" height="15" fill="rgb(205,56,52)" fg:x="1560" fg:w="6"/><text x="52.2847%" y="3199.50"></text></g><g><title>`0x7FFAC12C78B4 (6 samples, 0.20%)</title><rect x="52.0347%" y="3173" width="0.2001%" height="15" fill="rgb(246,146,12)" fg:x="1560" fg:w="6"/><text x="52.2847%" y="3183.50"></text></g><g><title>`0x7FFAC12C8172 (1 samples, 0.03%)</title><rect x="52.2015%" y="3157" width="0.0334%" height="15" fill="rgb(239,84,36)" fg:x="1565" fg:w="1"/><text x="52.4515%" y="3167.50"></text></g><g><title>`0x7FFAC12C78B4 (1 samples, 0.03%)</title><rect x="52.2348%" y="3205" width="0.0334%" height="15" fill="rgb(207,41,40)" fg:x="1566" fg:w="1"/><text x="52.4848%" y="3215.50"></text></g><g><title>`0x7FFAC12C848E (1 samples, 0.03%)</title><rect x="52.2348%" y="3189" width="0.0334%" height="15" fill="rgb(241,179,25)" fg:x="1566" fg:w="1"/><text x="52.4848%" y="3199.50"></text></g><g><title>boggle.exe`alloc::string::impl$6::clone (2 samples, 0.07%)</title><rect x="52.2348%" y="3365" width="0.0667%" height="15" fill="rgb(210,0,34)" fg:x="1566" fg:w="2"/><text x="52.4848%" y="3375.50"></text></g><g><title>boggle.exe`alloc::vec::impl$11::clone (2 samples, 0.07%)</title><rect x="52.2348%" y="3349" width="0.0667%" height="15" fill="rgb(225,217,29)" fg:x="1566" fg:w="2"/><text x="52.4848%" y="3359.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec_in (2 samples, 0.07%)</title><rect x="52.2348%" y="3333" width="0.0667%" height="15" fill="rgb(216,191,38)" fg:x="1566" fg:w="2"/><text x="52.4848%" y="3343.50"></text></g><g><title>boggle.exe`alloc::slice::hack::to_vec (2 samples, 0.07%)</title><rect x="52.2348%" y="3317" width="0.0667%" height="15" fill="rgb(232,140,52)" fg:x="1566" fg:w="2"/><text x="52.4848%" y="3327.50"></text></g><g><title>boggle.exe`alloc::slice::hack::impl$1::to_vec (2 samples, 0.07%)</title><rect x="52.2348%" y="3301" width="0.0667%" height="15" fill="rgb(223,158,51)" fg:x="1566" fg:w="2"/><text x="52.4848%" y="3311.50"></text></g><g><title>boggle.exe`alloc::vec::Vec::with_capacity_in (2 samples, 0.07%)</title><rect x="52.2348%" y="3285" width="0.0667%" height="15" fill="rgb(235,29,51)" fg:x="1566" fg:w="2"/><text x="52.4848%" y="3295.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec::with_capacity_in (2 samples, 0.07%)</title><rect x="52.2348%" y="3269" width="0.0667%" height="15" fill="rgb(215,181,18)" fg:x="1566" fg:w="2"/><text x="52.4848%" y="3279.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner::with_capacity_in (2 samples, 0.07%)</title><rect x="52.2348%" y="3253" width="0.0667%" height="15" fill="rgb(227,125,34)" fg:x="1566" fg:w="2"/><text x="52.4848%" y="3263.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner::try_allocate_in (2 samples, 0.07%)</title><rect x="52.2348%" y="3237" width="0.0667%" height="15" fill="rgb(230,197,49)" fg:x="1566" fg:w="2"/><text x="52.4848%" y="3247.50"></text></g><g><title>`0x7FFAC12C7776 (2 samples, 0.07%)</title><rect x="52.2348%" y="3221" width="0.0667%" height="15" fill="rgb(239,141,16)" fg:x="1566" fg:w="2"/><text x="52.4848%" y="3231.50"></text></g><g><title>`0x7FFAC12C795C (1 samples, 0.03%)</title><rect x="52.2682%" y="3205" width="0.0334%" height="15" fill="rgb(225,105,43)" fg:x="1567" fg:w="1"/><text x="52.5182%" y="3215.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;::as_mut_ptr (1 samples, 0.03%)</title><rect x="52.3015%" y="3365" width="0.0334%" height="15" fill="rgb(214,131,14)" fg:x="1568" fg:w="1"/><text x="52.5515%" y="3375.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;alloc::string::String,alloc::alloc::Global&gt;::ptr (1 samples, 0.03%)</title><rect x="52.3015%" y="3349" width="0.0334%" height="15" fill="rgb(229,177,11)" fg:x="1568" fg:w="1"/><text x="52.5515%" y="3359.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (1 samples, 0.03%)</title><rect x="52.3015%" y="3333" width="0.0334%" height="15" fill="rgb(231,180,14)" fg:x="1568" fg:w="1"/><text x="52.5515%" y="3343.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (1 samples, 0.03%)</title><rect x="52.3015%" y="3317" width="0.0334%" height="15" fill="rgb(232,88,2)" fg:x="1568" fg:w="1"/><text x="52.5515%" y="3327.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;std::ffi::os_str::OsString,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;::grow_one&lt;alloc::vec::Vec&lt;std::ffi::os_str::OsString,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; (1 samples, 0.03%)</title><rect x="52.3015%" y="3301" width="0.0334%" height="15" fill="rgb(205,220,8)" fg:x="1568" fg:w="1"/><text x="52.5515%" y="3311.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_one (1 samples, 0.03%)</title><rect x="52.3015%" y="3285" width="0.0334%" height="15" fill="rgb(225,23,53)" fg:x="1568" fg:w="1"/><text x="52.5515%" y="3295.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (1 samples, 0.03%)</title><rect x="52.3015%" y="3269" width="0.0334%" height="15" fill="rgb(213,62,29)" fg:x="1568" fg:w="1"/><text x="52.5515%" y="3279.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;::push (4 samples, 0.13%)</title><rect x="52.2348%" y="3381" width="0.1334%" height="15" fill="rgb(227,75,7)" fg:x="1566" fg:w="4"/><text x="52.4848%" y="3391.50"></text></g><g><title>boggle.exe`core::ptr::write (1 samples, 0.03%)</title><rect x="52.3349%" y="3365" width="0.0334%" height="15" fill="rgb(207,105,14)" fg:x="1569" fg:w="1"/><text x="52.5849%" y="3375.50"></text></g><g><title>boggle.exe`alloc::string::String::pop (138 samples, 4.60%)</title><rect x="48.0320%" y="3445" width="4.6031%" height="15" fill="rgb(245,62,29)" fg:x="1440" fg:w="138"/><text x="48.2820%" y="3455.50">boggl..</text></g><g><title>boggle.exe`alloc::string::impl$28::deref (138 samples, 4.60%)</title><rect x="48.0320%" y="3429" width="4.6031%" height="15" fill="rgb(236,202,4)" fg:x="1440" fg:w="138"/><text x="48.2820%" y="3439.50">boggl..</text></g><g><title>boggle.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (138 samples, 4.60%)</title><rect x="48.0320%" y="3413" width="4.6031%" height="15" fill="rgb(250,67,1)" fg:x="1440" fg:w="138"/><text x="48.2820%" y="3423.50">boggl..</text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::collect_words(boggle::utils::dict_trie::DictTrieNode*, ref$&lt;str$&gt;, alloc::vec::Vec (138 samples, 4.60%)</title><rect x="48.0320%" y="3397" width="4.6031%" height="15" fill="rgb(253,115,44)" fg:x="1440" fg:w="138"/><text x="48.2820%" y="3407.50">boggl..</text></g><g><title>boggle.exe`std::collections::hash::map::impl$36::into_iter(std::collections::hash::map::HashMap (8 samples, 0.27%)</title><rect x="52.3682%" y="3381" width="0.2668%" height="15" fill="rgb(251,139,18)" fg:x="1570" fg:w="8"/><text x="52.6182%" y="3391.50"></text></g><g><title>boggle.exe`std::collections::hash::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;::iter (8 samples, 0.27%)</title><rect x="52.3682%" y="3365" width="0.2668%" height="15" fill="rgb(218,22,32)" fg:x="1570" fg:w="8"/><text x="52.6182%" y="3375.50"></text></g><g><title>boggle.exe`hashbrown::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt;::iter (8 samples, 0.27%)</title><rect x="52.3682%" y="3349" width="0.2668%" height="15" fill="rgb(243,53,5)" fg:x="1570" fg:w="8"/><text x="52.6182%" y="3359.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTable&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;::iter (8 samples, 0.27%)</title><rect x="52.3682%" y="3333" width="0.2668%" height="15" fill="rgb(227,56,16)" fg:x="1570" fg:w="8"/><text x="52.6182%" y="3343.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::iter (8 samples, 0.27%)</title><rect x="52.3682%" y="3317" width="0.2668%" height="15" fill="rgb(245,53,0)" fg:x="1570" fg:w="8"/><text x="52.6182%" y="3327.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawIterRange&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::new(unsigned char*, hashbrown::raw::Bucket&lt;tuple$ (8 samples, 0.27%)</title><rect x="52.3682%" y="3301" width="0.2668%" height="15" fill="rgb(216,170,35)" fg:x="1570" fg:w="8"/><text x="52.6182%" y="3311.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::load_aligned (8 samples, 0.27%)</title><rect x="52.3682%" y="3285" width="0.2668%" height="15" fill="rgb(211,200,8)" fg:x="1570" fg:w="8"/><text x="52.6182%" y="3295.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::match_empty_or_deleted (8 samples, 0.27%)</title><rect x="52.3682%" y="3269" width="0.2668%" height="15" fill="rgb(228,204,44)" fg:x="1570" fg:w="8"/><text x="52.6182%" y="3279.50"></text></g><g><title>boggle.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (8 samples, 0.27%)</title><rect x="52.3682%" y="3253" width="0.2668%" height="15" fill="rgb(214,121,17)" fg:x="1570" fg:w="8"/><text x="52.6182%" y="3263.50"></text></g><g><title>`0x7FFAC12D5D40 (1 samples, 0.03%)</title><rect x="52.6351%" y="3189" width="0.0334%" height="15" fill="rgb(233,64,38)" fg:x="1578" fg:w="1"/><text x="52.8851%" y="3199.50"></text></g><g><title>`0x7FFAC12C6CAA (1 samples, 0.03%)</title><rect x="52.6684%" y="3173" width="0.0334%" height="15" fill="rgb(253,54,19)" fg:x="1579" fg:w="1"/><text x="52.9184%" y="3183.50"></text></g><g><title>`0x7FFAC12C787B (1 samples, 0.03%)</title><rect x="52.7018%" y="3157" width="0.0334%" height="15" fill="rgb(253,94,18)" fg:x="1580" fg:w="1"/><text x="52.9518%" y="3167.50"></text></g><g><title>`0x7FFAC12C8047 (2 samples, 0.07%)</title><rect x="52.7352%" y="3141" width="0.0667%" height="15" fill="rgb(227,57,52)" fg:x="1581" fg:w="2"/><text x="52.9852%" y="3151.50"></text></g><g><title>`0x7FFAC12D5DAA (5 samples, 0.17%)</title><rect x="52.6684%" y="3189" width="0.1668%" height="15" fill="rgb(230,228,50)" fg:x="1579" fg:w="5"/><text x="52.9184%" y="3199.50"></text></g><g><title>`0x7FFAC12C7776 (4 samples, 0.13%)</title><rect x="52.7018%" y="3173" width="0.1334%" height="15" fill="rgb(217,205,27)" fg:x="1580" fg:w="4"/><text x="52.9518%" y="3183.50"></text></g><g><title>`0x7FFAC12C78B4 (3 samples, 0.10%)</title><rect x="52.7352%" y="3157" width="0.1001%" height="15" fill="rgb(252,71,50)" fg:x="1581" fg:w="3"/><text x="52.9852%" y="3167.50"></text></g><g><title>`0x7FFAC12C80F8 (1 samples, 0.03%)</title><rect x="52.8019%" y="3141" width="0.0334%" height="15" fill="rgb(209,86,4)" fg:x="1583" fg:w="1"/><text x="53.0519%" y="3151.50"></text></g><g><title>`0x7FFAC12D5E0B (2 samples, 0.07%)</title><rect x="52.8352%" y="3189" width="0.0667%" height="15" fill="rgb(229,94,0)" fg:x="1584" fg:w="2"/><text x="53.0852%" y="3199.50"></text></g><g><title>`0x7FFAC12D23A7 (2 samples, 0.07%)</title><rect x="52.8352%" y="3173" width="0.0667%" height="15" fill="rgb(252,223,21)" fg:x="1584" fg:w="2"/><text x="53.0852%" y="3183.50"></text></g><g><title>`0x7FFAC12D54B5 (9 samples, 0.30%)</title><rect x="52.6351%" y="3205" width="0.3002%" height="15" fill="rgb(230,210,4)" fg:x="1578" fg:w="9"/><text x="52.8851%" y="3215.50"></text></g><g><title>`0x7FFAC12D6C14 (1 samples, 0.03%)</title><rect x="52.9019%" y="3189" width="0.0334%" height="15" fill="rgb(240,149,38)" fg:x="1586" fg:w="1"/><text x="53.1519%" y="3199.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::push (10 samples, 0.33%)</title><rect x="52.6351%" y="3429" width="0.3336%" height="15" fill="rgb(254,105,20)" fg:x="1578" fg:w="10"/><text x="52.8851%" y="3439.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_mut_ptr (10 samples, 0.33%)</title><rect x="52.6351%" y="3413" width="0.3336%" height="15" fill="rgb(253,87,46)" fg:x="1578" fg:w="10"/><text x="52.8851%" y="3423.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::ptr (10 samples, 0.33%)</title><rect x="52.6351%" y="3397" width="0.3336%" height="15" fill="rgb(253,116,33)" fg:x="1578" fg:w="10"/><text x="52.8851%" y="3407.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (10 samples, 0.33%)</title><rect x="52.6351%" y="3381" width="0.3336%" height="15" fill="rgb(229,198,5)" fg:x="1578" fg:w="10"/><text x="52.8851%" y="3391.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (10 samples, 0.33%)</title><rect x="52.6351%" y="3365" width="0.3336%" height="15" fill="rgb(242,38,37)" fg:x="1578" fg:w="10"/><text x="52.8851%" y="3375.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::grow_one&lt;u8,alloc::alloc::Global&gt; (10 samples, 0.33%)</title><rect x="52.6351%" y="3349" width="0.3336%" height="15" fill="rgb(242,69,53)" fg:x="1578" fg:w="10"/><text x="52.8851%" y="3359.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_one (10 samples, 0.33%)</title><rect x="52.6351%" y="3333" width="0.3336%" height="15" fill="rgb(249,80,16)" fg:x="1578" fg:w="10"/><text x="52.8851%" y="3343.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (10 samples, 0.33%)</title><rect x="52.6351%" y="3317" width="0.3336%" height="15" fill="rgb(206,128,11)" fg:x="1578" fg:w="10"/><text x="52.8851%" y="3327.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (10 samples, 0.33%)</title><rect x="52.6351%" y="3301" width="0.3336%" height="15" fill="rgb(212,35,20)" fg:x="1578" fg:w="10"/><text x="52.8851%" y="3311.50"></text></g><g><title>boggle.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (10 samples, 0.33%)</title><rect x="52.6351%" y="3285" width="0.3336%" height="15" fill="rgb(236,79,13)" fg:x="1578" fg:w="10"/><text x="52.8851%" y="3295.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (10 samples, 0.33%)</title><rect x="52.6351%" y="3269" width="0.3336%" height="15" fill="rgb(233,123,3)" fg:x="1578" fg:w="10"/><text x="52.8851%" y="3279.50"></text></g><g><title>boggle.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (10 samples, 0.33%)</title><rect x="52.6351%" y="3253" width="0.3336%" height="15" fill="rgb(214,93,52)" fg:x="1578" fg:w="10"/><text x="52.8851%" y="3263.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (10 samples, 0.33%)</title><rect x="52.6351%" y="3237" width="0.3336%" height="15" fill="rgb(251,37,40)" fg:x="1578" fg:w="10"/><text x="52.8851%" y="3247.50"></text></g><g><title>`0x7FFAC12D5376 (10 samples, 0.33%)</title><rect x="52.6351%" y="3221" width="0.3336%" height="15" fill="rgb(227,80,54)" fg:x="1578" fg:w="10"/><text x="52.8851%" y="3231.50"></text></g><g><title>`0x7FFAC12D54F2 (1 samples, 0.03%)</title><rect x="52.9353%" y="3205" width="0.0334%" height="15" fill="rgb(254,48,11)" fg:x="1587" fg:w="1"/><text x="53.1853%" y="3215.50"></text></g><g><title>`0x7FFAC1403440 (1 samples, 0.03%)</title><rect x="52.9353%" y="3189" width="0.0334%" height="15" fill="rgb(235,193,26)" fg:x="1587" fg:w="1"/><text x="53.1853%" y="3199.50"></text></g><g><title>boggle.exe`alloc::string::String::push (16 samples, 0.53%)</title><rect x="52.6351%" y="3445" width="0.5337%" height="15" fill="rgb(229,99,21)" fg:x="1578" fg:w="16"/><text x="52.8851%" y="3455.50"></text></g><g><title>boggle.exe`core::char::methods::impl$0::len_utf8 (6 samples, 0.20%)</title><rect x="52.9686%" y="3429" width="0.2001%" height="15" fill="rgb(211,140,41)" fg:x="1588" fg:w="6"/><text x="53.2186%" y="3439.50"></text></g><g><title>boggle.exe`core::char::methods::len_utf8 (6 samples, 0.20%)</title><rect x="52.9686%" y="3413" width="0.2001%" height="15" fill="rgb(240,227,30)" fg:x="1588" fg:w="6"/><text x="53.2186%" y="3423.50"></text></g><g><title>`0x7FFAC12C776F (1 samples, 0.03%)</title><rect x="53.1688%" y="3253" width="0.0334%" height="15" fill="rgb(215,224,45)" fg:x="1594" fg:w="1"/><text x="53.4188%" y="3263.50"></text></g><g><title>`0x7FFAC12C787B (1 samples, 0.03%)</title><rect x="53.2021%" y="3237" width="0.0334%" height="15" fill="rgb(206,123,31)" fg:x="1595" fg:w="1"/><text x="53.4521%" y="3247.50"></text></g><g><title>`0x7FFAC12C8137 (1 samples, 0.03%)</title><rect x="53.2355%" y="3221" width="0.0334%" height="15" fill="rgb(210,138,16)" fg:x="1596" fg:w="1"/><text x="53.4855%" y="3231.50"></text></g><g><title>`0x7FFAC12C8194 (1 samples, 0.03%)</title><rect x="53.2688%" y="3221" width="0.0334%" height="15" fill="rgb(228,57,28)" fg:x="1597" fg:w="1"/><text x="53.5188%" y="3231.50"></text></g><g><title>boggle.exe`alloc::string::impl$102::to_string(ref$ (5 samples, 0.17%)</title><rect x="53.1688%" y="3445" width="0.1668%" height="15" fill="rgb(242,170,10)" fg:x="1594" fg:w="5"/><text x="53.4188%" y="3455.50"></text></g><g><title>boggle.exe`alloc::string::impl$44::from(ref$ (5 samples, 0.17%)</title><rect x="53.1688%" y="3429" width="0.1668%" height="15" fill="rgb(228,214,39)" fg:x="1594" fg:w="5"/><text x="53.4188%" y="3439.50"></text></g><g><title>boggle.exe`alloc::str::impl$4::to_owned(ref$ (5 samples, 0.17%)</title><rect x="53.1688%" y="3413" width="0.1668%" height="15" fill="rgb(218,179,33)" fg:x="1594" fg:w="5"/><text x="53.4188%" y="3423.50"></text></g><g><title>boggle.exe`alloc::slice::impl$9::to_owned(ref$&lt;slice2$ (5 samples, 0.17%)</title><rect x="53.1688%" y="3397" width="0.1668%" height="15" fill="rgb(235,193,39)" fg:x="1594" fg:w="5"/><text x="53.4188%" y="3407.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec(ref$&lt;slice2$ (5 samples, 0.17%)</title><rect x="53.1688%" y="3381" width="0.1668%" height="15" fill="rgb(219,221,36)" fg:x="1594" fg:w="5"/><text x="53.4188%" y="3391.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec_in(ref$&lt;slice2$ (5 samples, 0.17%)</title><rect x="53.1688%" y="3365" width="0.1668%" height="15" fill="rgb(248,218,19)" fg:x="1594" fg:w="5"/><text x="53.4188%" y="3375.50"></text></g><g><title>boggle.exe`alloc::slice::hack::to_vec(ref$&lt;slice2$ (5 samples, 0.17%)</title><rect x="53.1688%" y="3349" width="0.1668%" height="15" fill="rgb(205,50,9)" fg:x="1594" fg:w="5"/><text x="53.4188%" y="3359.50"></text></g><g><title>boggle.exe`alloc::slice::hack::impl$1::to_vec(ref$&lt;slice2$ (5 samples, 0.17%)</title><rect x="53.1688%" y="3333" width="0.1668%" height="15" fill="rgb(238,81,28)" fg:x="1594" fg:w="5"/><text x="53.4188%" y="3343.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (5 samples, 0.17%)</title><rect x="53.1688%" y="3317" width="0.1668%" height="15" fill="rgb(235,110,19)" fg:x="1594" fg:w="5"/><text x="53.4188%" y="3327.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (5 samples, 0.17%)</title><rect x="53.1688%" y="3301" width="0.1668%" height="15" fill="rgb(214,7,14)" fg:x="1594" fg:w="5"/><text x="53.4188%" y="3311.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (5 samples, 0.17%)</title><rect x="53.1688%" y="3285" width="0.1668%" height="15" fill="rgb(211,77,3)" fg:x="1594" fg:w="5"/><text x="53.4188%" y="3295.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (5 samples, 0.17%)</title><rect x="53.1688%" y="3269" width="0.1668%" height="15" fill="rgb(229,5,9)" fg:x="1594" fg:w="5"/><text x="53.4188%" y="3279.50"></text></g><g><title>`0x7FFAC12C7776 (4 samples, 0.13%)</title><rect x="53.2021%" y="3253" width="0.1334%" height="15" fill="rgb(225,90,11)" fg:x="1595" fg:w="4"/><text x="53.4521%" y="3263.50"></text></g><g><title>`0x7FFAC12C78B4 (3 samples, 0.10%)</title><rect x="53.2355%" y="3237" width="0.1001%" height="15" fill="rgb(242,56,8)" fg:x="1596" fg:w="3"/><text x="53.4855%" y="3247.50"></text></g><g><title>`0x7FFAC12C8235 (1 samples, 0.03%)</title><rect x="53.3022%" y="3221" width="0.0334%" height="15" fill="rgb(249,212,39)" fg:x="1598" fg:w="1"/><text x="53.5522%" y="3231.50"></text></g><g><title>`0x7FFAC12C77D0 (1 samples, 0.03%)</title><rect x="53.3689%" y="3269" width="0.0334%" height="15" fill="rgb(236,90,9)" fg:x="1600" fg:w="1"/><text x="53.6189%" y="3279.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;::push (3 samples, 0.10%)</title><rect x="53.3356%" y="3445" width="0.1001%" height="15" fill="rgb(206,88,35)" fg:x="1599" fg:w="3"/><text x="53.5856%" y="3455.50"></text></g><g><title>boggle.exe`alloc::string::impl$6::clone (3 samples, 0.10%)</title><rect x="53.3356%" y="3429" width="0.1001%" height="15" fill="rgb(205,126,30)" fg:x="1599" fg:w="3"/><text x="53.5856%" y="3439.50"></text></g><g><title>boggle.exe`alloc::vec::impl$11::clone (2 samples, 0.07%)</title><rect x="53.3689%" y="3413" width="0.0667%" height="15" fill="rgb(230,176,12)" fg:x="1600" fg:w="2"/><text x="53.6189%" y="3423.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec_in (2 samples, 0.07%)</title><rect x="53.3689%" y="3397" width="0.0667%" height="15" fill="rgb(243,19,9)" fg:x="1600" fg:w="2"/><text x="53.6189%" y="3407.50"></text></g><g><title>boggle.exe`alloc::slice::hack::to_vec (2 samples, 0.07%)</title><rect x="53.3689%" y="3381" width="0.0667%" height="15" fill="rgb(245,171,17)" fg:x="1600" fg:w="2"/><text x="53.6189%" y="3391.50"></text></g><g><title>boggle.exe`alloc::slice::hack::impl$1::to_vec (2 samples, 0.07%)</title><rect x="53.3689%" y="3365" width="0.0667%" height="15" fill="rgb(227,52,21)" fg:x="1600" fg:w="2"/><text x="53.6189%" y="3375.50"></text></g><g><title>boggle.exe`alloc::vec::Vec::with_capacity_in (2 samples, 0.07%)</title><rect x="53.3689%" y="3349" width="0.0667%" height="15" fill="rgb(238,69,14)" fg:x="1600" fg:w="2"/><text x="53.6189%" y="3359.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec::with_capacity_in (2 samples, 0.07%)</title><rect x="53.3689%" y="3333" width="0.0667%" height="15" fill="rgb(241,156,39)" fg:x="1600" fg:w="2"/><text x="53.6189%" y="3343.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner::with_capacity_in (2 samples, 0.07%)</title><rect x="53.3689%" y="3317" width="0.0667%" height="15" fill="rgb(212,227,28)" fg:x="1600" fg:w="2"/><text x="53.6189%" y="3327.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner::try_allocate_in (2 samples, 0.07%)</title><rect x="53.3689%" y="3301" width="0.0667%" height="15" fill="rgb(209,118,27)" fg:x="1600" fg:w="2"/><text x="53.6189%" y="3311.50"></text></g><g><title>`0x7FFAC12C7776 (2 samples, 0.07%)</title><rect x="53.3689%" y="3285" width="0.0667%" height="15" fill="rgb(226,102,5)" fg:x="1600" fg:w="2"/><text x="53.6189%" y="3295.50"></text></g><g><title>`0x7FFAC12C78B4 (1 samples, 0.03%)</title><rect x="53.4023%" y="3269" width="0.0334%" height="15" fill="rgb(223,34,3)" fg:x="1601" fg:w="1"/><text x="53.6523%" y="3279.50"></text></g><g><title>`0x7FFAC12C8047 (1 samples, 0.03%)</title><rect x="53.4023%" y="3253" width="0.0334%" height="15" fill="rgb(221,81,38)" fg:x="1601" fg:w="1"/><text x="53.6523%" y="3263.50"></text></g><g><title>boggle.exe`alloc::string::String::pop (168 samples, 5.60%)</title><rect x="47.9653%" y="3509" width="5.6037%" height="15" fill="rgb(236,219,28)" fg:x="1438" fg:w="168"/><text x="48.2153%" y="3519.50">boggle...</text></g><g><title>boggle.exe`alloc::string::impl$28::deref (168 samples, 5.60%)</title><rect x="47.9653%" y="3493" width="5.6037%" height="15" fill="rgb(213,200,14)" fg:x="1438" fg:w="168"/><text x="48.2153%" y="3503.50">boggle...</text></g><g><title>boggle.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (168 samples, 5.60%)</title><rect x="47.9653%" y="3477" width="5.6037%" height="15" fill="rgb(240,33,19)" fg:x="1438" fg:w="168"/><text x="48.2153%" y="3487.50">boggle...</text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::collect_words(boggle::utils::dict_trie::DictTrieNode*, ref$&lt;str$&gt;, alloc::vec::Vec (168 samples, 5.60%)</title><rect x="47.9653%" y="3461" width="5.6037%" height="15" fill="rgb(233,113,27)" fg:x="1438" fg:w="168"/><text x="48.2153%" y="3471.50">boggle...</text></g><g><title>boggle.exe`std::collections::hash::map::impl$36::into_iter(std::collections::hash::map::HashMap (4 samples, 0.13%)</title><rect x="53.4356%" y="3445" width="0.1334%" height="15" fill="rgb(220,221,18)" fg:x="1602" fg:w="4"/><text x="53.6856%" y="3455.50"></text></g><g><title>boggle.exe`std::collections::hash::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;::iter (4 samples, 0.13%)</title><rect x="53.4356%" y="3429" width="0.1334%" height="15" fill="rgb(238,92,8)" fg:x="1602" fg:w="4"/><text x="53.6856%" y="3439.50"></text></g><g><title>boggle.exe`hashbrown::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt;::iter (4 samples, 0.13%)</title><rect x="53.4356%" y="3413" width="0.1334%" height="15" fill="rgb(222,164,16)" fg:x="1602" fg:w="4"/><text x="53.6856%" y="3423.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTable&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;::iter (4 samples, 0.13%)</title><rect x="53.4356%" y="3397" width="0.1334%" height="15" fill="rgb(241,119,3)" fg:x="1602" fg:w="4"/><text x="53.6856%" y="3407.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::iter (4 samples, 0.13%)</title><rect x="53.4356%" y="3381" width="0.1334%" height="15" fill="rgb(241,44,8)" fg:x="1602" fg:w="4"/><text x="53.6856%" y="3391.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawIterRange&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::new(unsigned char*, hashbrown::raw::Bucket&lt;tuple$ (4 samples, 0.13%)</title><rect x="53.4356%" y="3365" width="0.1334%" height="15" fill="rgb(230,36,40)" fg:x="1602" fg:w="4"/><text x="53.6856%" y="3375.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::load_aligned (4 samples, 0.13%)</title><rect x="53.4356%" y="3349" width="0.1334%" height="15" fill="rgb(243,16,36)" fg:x="1602" fg:w="4"/><text x="53.6856%" y="3359.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::match_empty_or_deleted (4 samples, 0.13%)</title><rect x="53.4356%" y="3333" width="0.1334%" height="15" fill="rgb(231,4,26)" fg:x="1602" fg:w="4"/><text x="53.6856%" y="3343.50"></text></g><g><title>boggle.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (4 samples, 0.13%)</title><rect x="53.4356%" y="3317" width="0.1334%" height="15" fill="rgb(240,9,31)" fg:x="1602" fg:w="4"/><text x="53.6856%" y="3327.50"></text></g><g><title>`0x7FFAC12D5402 (1 samples, 0.03%)</title><rect x="53.6024%" y="3269" width="0.0334%" height="15" fill="rgb(207,173,15)" fg:x="1607" fg:w="1"/><text x="53.8524%" y="3279.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_mut_ptr (3 samples, 0.10%)</title><rect x="53.5690%" y="3477" width="0.1001%" height="15" fill="rgb(224,192,53)" fg:x="1606" fg:w="3"/><text x="53.8190%" y="3487.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::ptr (3 samples, 0.10%)</title><rect x="53.5690%" y="3461" width="0.1001%" height="15" fill="rgb(223,67,28)" fg:x="1606" fg:w="3"/><text x="53.8190%" y="3471.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (3 samples, 0.10%)</title><rect x="53.5690%" y="3445" width="0.1001%" height="15" fill="rgb(211,20,47)" fg:x="1606" fg:w="3"/><text x="53.8190%" y="3455.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (3 samples, 0.10%)</title><rect x="53.5690%" y="3429" width="0.1001%" height="15" fill="rgb(240,228,2)" fg:x="1606" fg:w="3"/><text x="53.8190%" y="3439.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::grow_one&lt;u8,alloc::alloc::Global&gt; (3 samples, 0.10%)</title><rect x="53.5690%" y="3413" width="0.1001%" height="15" fill="rgb(248,151,12)" fg:x="1606" fg:w="3"/><text x="53.8190%" y="3423.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_one (3 samples, 0.10%)</title><rect x="53.5690%" y="3397" width="0.1001%" height="15" fill="rgb(244,8,39)" fg:x="1606" fg:w="3"/><text x="53.8190%" y="3407.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (3 samples, 0.10%)</title><rect x="53.5690%" y="3381" width="0.1001%" height="15" fill="rgb(222,26,8)" fg:x="1606" fg:w="3"/><text x="53.8190%" y="3391.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (2 samples, 0.07%)</title><rect x="53.6024%" y="3365" width="0.0667%" height="15" fill="rgb(213,106,44)" fg:x="1607" fg:w="2"/><text x="53.8524%" y="3375.50"></text></g><g><title>boggle.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (2 samples, 0.07%)</title><rect x="53.6024%" y="3349" width="0.0667%" height="15" fill="rgb(214,129,20)" fg:x="1607" fg:w="2"/><text x="53.8524%" y="3359.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (2 samples, 0.07%)</title><rect x="53.6024%" y="3333" width="0.0667%" height="15" fill="rgb(212,32,13)" fg:x="1607" fg:w="2"/><text x="53.8524%" y="3343.50"></text></g><g><title>boggle.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (2 samples, 0.07%)</title><rect x="53.6024%" y="3317" width="0.0667%" height="15" fill="rgb(208,168,33)" fg:x="1607" fg:w="2"/><text x="53.8524%" y="3327.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (2 samples, 0.07%)</title><rect x="53.6024%" y="3301" width="0.0667%" height="15" fill="rgb(231,207,8)" fg:x="1607" fg:w="2"/><text x="53.8524%" y="3311.50"></text></g><g><title>`0x7FFAC12D5376 (2 samples, 0.07%)</title><rect x="53.6024%" y="3285" width="0.0667%" height="15" fill="rgb(235,219,23)" fg:x="1607" fg:w="2"/><text x="53.8524%" y="3295.50"></text></g><g><title>`0x7FFAC12D54B5 (1 samples, 0.03%)</title><rect x="53.6358%" y="3269" width="0.0334%" height="15" fill="rgb(226,216,26)" fg:x="1608" fg:w="1"/><text x="53.8858%" y="3279.50"></text></g><g><title>`0x7FFAC12D5DAA (1 samples, 0.03%)</title><rect x="53.6358%" y="3253" width="0.0334%" height="15" fill="rgb(239,137,16)" fg:x="1608" fg:w="1"/><text x="53.8858%" y="3263.50"></text></g><g><title>`0x7FFAC12C7776 (1 samples, 0.03%)</title><rect x="53.6358%" y="3237" width="0.0334%" height="15" fill="rgb(207,12,36)" fg:x="1608" fg:w="1"/><text x="53.8858%" y="3247.50"></text></g><g><title>`0x7FFAC12C785E (1 samples, 0.03%)</title><rect x="53.6358%" y="3221" width="0.0334%" height="15" fill="rgb(210,214,24)" fg:x="1608" fg:w="1"/><text x="53.8858%" y="3231.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::push (4 samples, 0.13%)</title><rect x="53.5690%" y="3493" width="0.1334%" height="15" fill="rgb(206,56,30)" fg:x="1606" fg:w="4"/><text x="53.8190%" y="3503.50"></text></g><g><title>boggle.exe`core::ptr::write (1 samples, 0.03%)</title><rect x="53.6691%" y="3477" width="0.0334%" height="15" fill="rgb(228,143,26)" fg:x="1609" fg:w="1"/><text x="53.9191%" y="3487.50"></text></g><g><title>boggle.exe`alloc::string::String::push (7 samples, 0.23%)</title><rect x="53.5690%" y="3509" width="0.2335%" height="15" fill="rgb(216,218,46)" fg:x="1606" fg:w="7"/><text x="53.8190%" y="3519.50"></text></g><g><title>boggle.exe`core::char::methods::impl$0::len_utf8 (3 samples, 0.10%)</title><rect x="53.7025%" y="3493" width="0.1001%" height="15" fill="rgb(206,6,19)" fg:x="1610" fg:w="3"/><text x="53.9525%" y="3503.50"></text></g><g><title>boggle.exe`core::char::methods::len_utf8 (3 samples, 0.10%)</title><rect x="53.7025%" y="3477" width="0.1001%" height="15" fill="rgb(239,177,51)" fg:x="1610" fg:w="3"/><text x="53.9525%" y="3487.50"></text></g><g><title>boggle.exe`alloc::string::impl$102::to_string(ref$ (1 samples, 0.03%)</title><rect x="53.8025%" y="3509" width="0.0334%" height="15" fill="rgb(216,55,25)" fg:x="1613" fg:w="1"/><text x="54.0525%" y="3519.50"></text></g><g><title>boggle.exe`alloc::string::impl$44::from(ref$ (1 samples, 0.03%)</title><rect x="53.8025%" y="3493" width="0.0334%" height="15" fill="rgb(231,163,29)" fg:x="1613" fg:w="1"/><text x="54.0525%" y="3503.50"></text></g><g><title>boggle.exe`alloc::str::impl$4::to_owned(ref$ (1 samples, 0.03%)</title><rect x="53.8025%" y="3477" width="0.0334%" height="15" fill="rgb(232,149,50)" fg:x="1613" fg:w="1"/><text x="54.0525%" y="3487.50"></text></g><g><title>boggle.exe`alloc::slice::impl$9::to_owned(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="53.8025%" y="3461" width="0.0334%" height="15" fill="rgb(223,142,48)" fg:x="1613" fg:w="1"/><text x="54.0525%" y="3471.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="53.8025%" y="3445" width="0.0334%" height="15" fill="rgb(245,83,23)" fg:x="1613" fg:w="1"/><text x="54.0525%" y="3455.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec_in(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="53.8025%" y="3429" width="0.0334%" height="15" fill="rgb(224,63,2)" fg:x="1613" fg:w="1"/><text x="54.0525%" y="3439.50"></text></g><g><title>boggle.exe`alloc::slice::hack::to_vec(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="53.8025%" y="3413" width="0.0334%" height="15" fill="rgb(218,65,53)" fg:x="1613" fg:w="1"/><text x="54.0525%" y="3423.50"></text></g><g><title>boggle.exe`alloc::slice::hack::impl$1::to_vec(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="53.8025%" y="3397" width="0.0334%" height="15" fill="rgb(221,84,29)" fg:x="1613" fg:w="1"/><text x="54.0525%" y="3407.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="53.8025%" y="3381" width="0.0334%" height="15" fill="rgb(234,0,32)" fg:x="1613" fg:w="1"/><text x="54.0525%" y="3391.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="53.8025%" y="3365" width="0.0334%" height="15" fill="rgb(206,20,16)" fg:x="1613" fg:w="1"/><text x="54.0525%" y="3375.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="53.8025%" y="3349" width="0.0334%" height="15" fill="rgb(244,172,18)" fg:x="1613" fg:w="1"/><text x="54.0525%" y="3359.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (1 samples, 0.03%)</title><rect x="53.8025%" y="3333" width="0.0334%" height="15" fill="rgb(254,133,1)" fg:x="1613" fg:w="1"/><text x="54.0525%" y="3343.50"></text></g><g><title>`0x7FFAC12C7776 (1 samples, 0.03%)</title><rect x="53.8025%" y="3317" width="0.0334%" height="15" fill="rgb(222,206,41)" fg:x="1613" fg:w="1"/><text x="54.0525%" y="3327.50"></text></g><g><title>`0x7FFAC12C78B4 (1 samples, 0.03%)</title><rect x="53.8025%" y="3301" width="0.0334%" height="15" fill="rgb(212,3,42)" fg:x="1613" fg:w="1"/><text x="54.0525%" y="3311.50"></text></g><g><title>`0x7FFAC12C8613 (1 samples, 0.03%)</title><rect x="53.8025%" y="3285" width="0.0334%" height="15" fill="rgb(241,11,4)" fg:x="1613" fg:w="1"/><text x="54.0525%" y="3295.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;::push (1 samples, 0.03%)</title><rect x="53.8359%" y="3509" width="0.0334%" height="15" fill="rgb(205,19,26)" fg:x="1614" fg:w="1"/><text x="54.0859%" y="3519.50"></text></g><g><title>boggle.exe`alloc::string::impl$6::clone (1 samples, 0.03%)</title><rect x="53.8359%" y="3493" width="0.0334%" height="15" fill="rgb(210,179,32)" fg:x="1614" fg:w="1"/><text x="54.0859%" y="3503.50"></text></g><g><title>boggle.exe`alloc::vec::impl$11::clone (1 samples, 0.03%)</title><rect x="53.8359%" y="3477" width="0.0334%" height="15" fill="rgb(227,116,49)" fg:x="1614" fg:w="1"/><text x="54.0859%" y="3487.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec_in (1 samples, 0.03%)</title><rect x="53.8359%" y="3461" width="0.0334%" height="15" fill="rgb(211,146,6)" fg:x="1614" fg:w="1"/><text x="54.0859%" y="3471.50"></text></g><g><title>boggle.exe`alloc::slice::hack::to_vec (1 samples, 0.03%)</title><rect x="53.8359%" y="3445" width="0.0334%" height="15" fill="rgb(219,44,39)" fg:x="1614" fg:w="1"/><text x="54.0859%" y="3455.50"></text></g><g><title>boggle.exe`alloc::slice::hack::impl$1::to_vec (1 samples, 0.03%)</title><rect x="53.8359%" y="3429" width="0.0334%" height="15" fill="rgb(234,128,11)" fg:x="1614" fg:w="1"/><text x="54.0859%" y="3439.50"></text></g><g><title>boggle.exe`alloc::vec::Vec::with_capacity_in (1 samples, 0.03%)</title><rect x="53.8359%" y="3413" width="0.0334%" height="15" fill="rgb(220,183,53)" fg:x="1614" fg:w="1"/><text x="54.0859%" y="3423.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec::with_capacity_in (1 samples, 0.03%)</title><rect x="53.8359%" y="3397" width="0.0334%" height="15" fill="rgb(213,219,32)" fg:x="1614" fg:w="1"/><text x="54.0859%" y="3407.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner::with_capacity_in (1 samples, 0.03%)</title><rect x="53.8359%" y="3381" width="0.0334%" height="15" fill="rgb(232,156,16)" fg:x="1614" fg:w="1"/><text x="54.0859%" y="3391.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner::try_allocate_in (1 samples, 0.03%)</title><rect x="53.8359%" y="3365" width="0.0334%" height="15" fill="rgb(246,135,34)" fg:x="1614" fg:w="1"/><text x="54.0859%" y="3375.50"></text></g><g><title>`0x7FFAC12C7776 (1 samples, 0.03%)</title><rect x="53.8359%" y="3349" width="0.0334%" height="15" fill="rgb(241,99,0)" fg:x="1614" fg:w="1"/><text x="54.0859%" y="3359.50"></text></g><g><title>`0x7FFAC12C78B4 (1 samples, 0.03%)</title><rect x="53.8359%" y="3333" width="0.0334%" height="15" fill="rgb(222,103,45)" fg:x="1614" fg:w="1"/><text x="54.0859%" y="3343.50"></text></g><g><title>`0x7FFAC12C7F71 (1 samples, 0.03%)</title><rect x="53.8359%" y="3317" width="0.0334%" height="15" fill="rgb(212,57,4)" fg:x="1614" fg:w="1"/><text x="54.0859%" y="3327.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place (1 samples, 0.03%)</title><rect x="53.8692%" y="3509" width="0.0334%" height="15" fill="rgb(215,68,47)" fg:x="1615" fg:w="1"/><text x="54.1192%" y="3519.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(alloc::vec::Vec (1 samples, 0.03%)</title><rect x="53.8692%" y="3493" width="0.0334%" height="15" fill="rgb(230,84,2)" fg:x="1615" fg:w="1"/><text x="54.1192%" y="3503.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (1 samples, 0.03%)</title><rect x="53.8692%" y="3477" width="0.0334%" height="15" fill="rgb(220,102,14)" fg:x="1615" fg:w="1"/><text x="54.1192%" y="3487.50"></text></g><g><title>boggle.exe`alloc::raw_vec::impl$4::drop(alloc::raw_vec::RawVec (1 samples, 0.03%)</title><rect x="53.8692%" y="3461" width="0.0334%" height="15" fill="rgb(240,10,32)" fg:x="1615" fg:w="1"/><text x="54.1192%" y="3471.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::deallocate (1 samples, 0.03%)</title><rect x="53.8692%" y="3445" width="0.0334%" height="15" fill="rgb(215,47,27)" fg:x="1615" fg:w="1"/><text x="54.1192%" y="3455.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="53.8692%" y="3429" width="0.0334%" height="15" fill="rgb(233,188,43)" fg:x="1615" fg:w="1"/><text x="54.1192%" y="3439.50"></text></g><g><title>boggle.exe`alloc::alloc::dealloc (1 samples, 0.03%)</title><rect x="53.8692%" y="3413" width="0.0334%" height="15" fill="rgb(253,190,1)" fg:x="1615" fg:w="1"/><text x="54.1192%" y="3423.50"></text></g><g><title>boggle.exe`alloc::string::String::pop (182 samples, 6.07%)</title><rect x="47.8986%" y="3573" width="6.0707%" height="15" fill="rgb(206,114,52)" fg:x="1436" fg:w="182"/><text x="48.1486%" y="3583.50">boggle.e..</text></g><g><title>boggle.exe`alloc::string::impl$28::deref (182 samples, 6.07%)</title><rect x="47.8986%" y="3557" width="6.0707%" height="15" fill="rgb(233,120,37)" fg:x="1436" fg:w="182"/><text x="48.1486%" y="3567.50">boggle.e..</text></g><g><title>boggle.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (182 samples, 6.07%)</title><rect x="47.8986%" y="3541" width="6.0707%" height="15" fill="rgb(214,52,39)" fg:x="1436" fg:w="182"/><text x="48.1486%" y="3551.50">boggle.e..</text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::collect_words(boggle::utils::dict_trie::DictTrieNode*, ref$&lt;str$&gt;, alloc::vec::Vec (182 samples, 6.07%)</title><rect x="47.8986%" y="3525" width="6.0707%" height="15" fill="rgb(223,80,29)" fg:x="1436" fg:w="182"/><text x="48.1486%" y="3535.50">boggle.e..</text></g><g><title>boggle.exe`std::collections::hash::map::impl$36::into_iter(std::collections::hash::map::HashMap (2 samples, 0.07%)</title><rect x="53.9026%" y="3509" width="0.0667%" height="15" fill="rgb(230,101,40)" fg:x="1616" fg:w="2"/><text x="54.1526%" y="3519.50"></text></g><g><title>boggle.exe`std::collections::hash::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;::iter (2 samples, 0.07%)</title><rect x="53.9026%" y="3493" width="0.0667%" height="15" fill="rgb(219,211,8)" fg:x="1616" fg:w="2"/><text x="54.1526%" y="3503.50"></text></g><g><title>boggle.exe`hashbrown::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt;::iter (2 samples, 0.07%)</title><rect x="53.9026%" y="3477" width="0.0667%" height="15" fill="rgb(252,126,28)" fg:x="1616" fg:w="2"/><text x="54.1526%" y="3487.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTable&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;::iter (2 samples, 0.07%)</title><rect x="53.9026%" y="3461" width="0.0667%" height="15" fill="rgb(215,56,38)" fg:x="1616" fg:w="2"/><text x="54.1526%" y="3471.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::iter (2 samples, 0.07%)</title><rect x="53.9026%" y="3445" width="0.0667%" height="15" fill="rgb(249,55,44)" fg:x="1616" fg:w="2"/><text x="54.1526%" y="3455.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawIterRange&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::new(unsigned char*, hashbrown::raw::Bucket&lt;tuple$ (2 samples, 0.07%)</title><rect x="53.9026%" y="3429" width="0.0667%" height="15" fill="rgb(220,221,32)" fg:x="1616" fg:w="2"/><text x="54.1526%" y="3439.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::load_aligned (2 samples, 0.07%)</title><rect x="53.9026%" y="3413" width="0.0667%" height="15" fill="rgb(212,216,41)" fg:x="1616" fg:w="2"/><text x="54.1526%" y="3423.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::match_empty_or_deleted (2 samples, 0.07%)</title><rect x="53.9026%" y="3397" width="0.0667%" height="15" fill="rgb(228,213,43)" fg:x="1616" fg:w="2"/><text x="54.1526%" y="3407.50"></text></g><g><title>boggle.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (2 samples, 0.07%)</title><rect x="53.9026%" y="3381" width="0.0667%" height="15" fill="rgb(211,31,26)" fg:x="1616" fg:w="2"/><text x="54.1526%" y="3391.50"></text></g><g><title>`0x7FFAC12D5448 (1 samples, 0.03%)</title><rect x="53.9693%" y="3333" width="0.0334%" height="15" fill="rgb(229,202,19)" fg:x="1618" fg:w="1"/><text x="54.2193%" y="3343.50"></text></g><g><title>`0x7FFAC12D5DF9 (1 samples, 0.03%)</title><rect x="54.0027%" y="3317" width="0.0334%" height="15" fill="rgb(229,105,46)" fg:x="1619" fg:w="1"/><text x="54.2527%" y="3327.50"></text></g><g><title>`0x7FFAC1404EEE (1 samples, 0.03%)</title><rect x="54.0027%" y="3301" width="0.0334%" height="15" fill="rgb(235,108,1)" fg:x="1619" fg:w="1"/><text x="54.2527%" y="3311.50"></text></g><g><title>boggle.exe`alloc::string::String::push (3 samples, 0.10%)</title><rect x="53.9693%" y="3573" width="0.1001%" height="15" fill="rgb(245,111,35)" fg:x="1618" fg:w="3"/><text x="54.2193%" y="3583.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::push (3 samples, 0.10%)</title><rect x="53.9693%" y="3557" width="0.1001%" height="15" fill="rgb(219,185,31)" fg:x="1618" fg:w="3"/><text x="54.2193%" y="3567.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_mut_ptr (3 samples, 0.10%)</title><rect x="53.9693%" y="3541" width="0.1001%" height="15" fill="rgb(214,4,43)" fg:x="1618" fg:w="3"/><text x="54.2193%" y="3551.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::ptr (3 samples, 0.10%)</title><rect x="53.9693%" y="3525" width="0.1001%" height="15" fill="rgb(235,227,40)" fg:x="1618" fg:w="3"/><text x="54.2193%" y="3535.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (3 samples, 0.10%)</title><rect x="53.9693%" y="3509" width="0.1001%" height="15" fill="rgb(230,88,30)" fg:x="1618" fg:w="3"/><text x="54.2193%" y="3519.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (3 samples, 0.10%)</title><rect x="53.9693%" y="3493" width="0.1001%" height="15" fill="rgb(216,217,1)" fg:x="1618" fg:w="3"/><text x="54.2193%" y="3503.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::grow_one&lt;u8,alloc::alloc::Global&gt; (3 samples, 0.10%)</title><rect x="53.9693%" y="3477" width="0.1001%" height="15" fill="rgb(248,139,50)" fg:x="1618" fg:w="3"/><text x="54.2193%" y="3487.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_one (3 samples, 0.10%)</title><rect x="53.9693%" y="3461" width="0.1001%" height="15" fill="rgb(233,1,21)" fg:x="1618" fg:w="3"/><text x="54.2193%" y="3471.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (3 samples, 0.10%)</title><rect x="53.9693%" y="3445" width="0.1001%" height="15" fill="rgb(215,183,12)" fg:x="1618" fg:w="3"/><text x="54.2193%" y="3455.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (3 samples, 0.10%)</title><rect x="53.9693%" y="3429" width="0.1001%" height="15" fill="rgb(229,104,42)" fg:x="1618" fg:w="3"/><text x="54.2193%" y="3439.50"></text></g><g><title>boggle.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (3 samples, 0.10%)</title><rect x="53.9693%" y="3413" width="0.1001%" height="15" fill="rgb(243,34,48)" fg:x="1618" fg:w="3"/><text x="54.2193%" y="3423.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (3 samples, 0.10%)</title><rect x="53.9693%" y="3397" width="0.1001%" height="15" fill="rgb(239,11,44)" fg:x="1618" fg:w="3"/><text x="54.2193%" y="3407.50"></text></g><g><title>boggle.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (3 samples, 0.10%)</title><rect x="53.9693%" y="3381" width="0.1001%" height="15" fill="rgb(231,98,35)" fg:x="1618" fg:w="3"/><text x="54.2193%" y="3391.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (3 samples, 0.10%)</title><rect x="53.9693%" y="3365" width="0.1001%" height="15" fill="rgb(233,28,25)" fg:x="1618" fg:w="3"/><text x="54.2193%" y="3375.50"></text></g><g><title>`0x7FFAC12D5376 (3 samples, 0.10%)</title><rect x="53.9693%" y="3349" width="0.1001%" height="15" fill="rgb(234,123,11)" fg:x="1618" fg:w="3"/><text x="54.2193%" y="3359.50"></text></g><g><title>`0x7FFAC12D54B5 (2 samples, 0.07%)</title><rect x="54.0027%" y="3333" width="0.0667%" height="15" fill="rgb(220,69,3)" fg:x="1619" fg:w="2"/><text x="54.2527%" y="3343.50"></text></g><g><title>`0x7FFAC12D5E0B (1 samples, 0.03%)</title><rect x="54.0360%" y="3317" width="0.0334%" height="15" fill="rgb(214,64,36)" fg:x="1620" fg:w="1"/><text x="54.2860%" y="3327.50"></text></g><g><title>`0x7FFAC12D2313 (1 samples, 0.03%)</title><rect x="54.0360%" y="3301" width="0.0334%" height="15" fill="rgb(211,138,32)" fg:x="1620" fg:w="1"/><text x="54.2860%" y="3311.50"></text></g><g><title>boggle.exe`alloc::string::String::pop (187 samples, 6.24%)</title><rect x="47.8652%" y="3637" width="6.2375%" height="15" fill="rgb(213,118,47)" fg:x="1435" fg:w="187"/><text x="48.1152%" y="3647.50">boggle.e..</text></g><g><title>boggle.exe`alloc::string::impl$28::deref (187 samples, 6.24%)</title><rect x="47.8652%" y="3621" width="6.2375%" height="15" fill="rgb(243,124,49)" fg:x="1435" fg:w="187"/><text x="48.1152%" y="3631.50">boggle.e..</text></g><g><title>boggle.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (187 samples, 6.24%)</title><rect x="47.8652%" y="3605" width="6.2375%" height="15" fill="rgb(221,30,28)" fg:x="1435" fg:w="187"/><text x="48.1152%" y="3615.50">boggle.e..</text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::collect_words(boggle::utils::dict_trie::DictTrieNode*, ref$&lt;str$&gt;, alloc::vec::Vec (187 samples, 6.24%)</title><rect x="47.8652%" y="3589" width="6.2375%" height="15" fill="rgb(246,37,13)" fg:x="1435" fg:w="187"/><text x="48.1152%" y="3599.50">boggle.e..</text></g><g><title>boggle.exe`core::ptr::drop_in_place (1 samples, 0.03%)</title><rect x="54.0694%" y="3573" width="0.0334%" height="15" fill="rgb(249,66,14)" fg:x="1621" fg:w="1"/><text x="54.3194%" y="3583.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(alloc::vec::Vec (1 samples, 0.03%)</title><rect x="54.0694%" y="3557" width="0.0334%" height="15" fill="rgb(213,166,5)" fg:x="1621" fg:w="1"/><text x="54.3194%" y="3567.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (1 samples, 0.03%)</title><rect x="54.0694%" y="3541" width="0.0334%" height="15" fill="rgb(221,66,24)" fg:x="1621" fg:w="1"/><text x="54.3194%" y="3551.50"></text></g><g><title>boggle.exe`alloc::raw_vec::impl$4::drop(alloc::raw_vec::RawVec (1 samples, 0.03%)</title><rect x="54.0694%" y="3525" width="0.0334%" height="15" fill="rgb(210,132,17)" fg:x="1621" fg:w="1"/><text x="54.3194%" y="3535.50"></text></g><g><title>boggle.exe`alloc::string::String::push (1 samples, 0.03%)</title><rect x="54.1027%" y="3637" width="0.0334%" height="15" fill="rgb(243,202,5)" fg:x="1622" fg:w="1"/><text x="54.3527%" y="3647.50"></text></g><g><title>boggle.exe`core::char::methods::impl$0::len_utf8 (1 samples, 0.03%)</title><rect x="54.1027%" y="3621" width="0.0334%" height="15" fill="rgb(233,70,48)" fg:x="1622" fg:w="1"/><text x="54.3527%" y="3631.50"></text></g><g><title>boggle.exe`core::char::methods::len_utf8 (1 samples, 0.03%)</title><rect x="54.1027%" y="3605" width="0.0334%" height="15" fill="rgb(238,41,26)" fg:x="1622" fg:w="1"/><text x="54.3527%" y="3615.50"></text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::collect_words(boggle::utils::dict_trie::DictTrieNode*, ref$&lt;str$&gt;, alloc::vec::Vec (189 samples, 6.30%)</title><rect x="47.8652%" y="3717" width="6.3042%" height="15" fill="rgb(241,19,31)" fg:x="1435" fg:w="189"/><text x="48.1152%" y="3727.50">boggle.e..</text></g><g><title>boggle.exe`alloc::string::String::pop (189 samples, 6.30%)</title><rect x="47.8652%" y="3701" width="6.3042%" height="15" fill="rgb(214,76,10)" fg:x="1435" fg:w="189"/><text x="48.1152%" y="3711.50">boggle.e..</text></g><g><title>boggle.exe`alloc::string::impl$28::deref (189 samples, 6.30%)</title><rect x="47.8652%" y="3685" width="6.3042%" height="15" fill="rgb(254,202,22)" fg:x="1435" fg:w="189"/><text x="48.1152%" y="3695.50">boggle.e..</text></g><g><title>boggle.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (189 samples, 6.30%)</title><rect x="47.8652%" y="3669" width="6.3042%" height="15" fill="rgb(214,72,24)" fg:x="1435" fg:w="189"/><text x="48.1152%" y="3679.50">boggle.e..</text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::collect_words(boggle::utils::dict_trie::DictTrieNode*, ref$&lt;str$&gt;, alloc::vec::Vec (189 samples, 6.30%)</title><rect x="47.8652%" y="3653" width="6.3042%" height="15" fill="rgb(221,92,46)" fg:x="1435" fg:w="189"/><text x="48.1152%" y="3663.50">boggle.e..</text></g><g><title>boggle.exe`alloc::string::impl$102::to_string(ref$ (1 samples, 0.03%)</title><rect x="54.1361%" y="3637" width="0.0334%" height="15" fill="rgb(246,13,50)" fg:x="1623" fg:w="1"/><text x="54.3861%" y="3647.50"></text></g><g><title>boggle.exe`alloc::string::impl$44::from(ref$ (1 samples, 0.03%)</title><rect x="54.1361%" y="3621" width="0.0334%" height="15" fill="rgb(240,165,38)" fg:x="1623" fg:w="1"/><text x="54.3861%" y="3631.50"></text></g><g><title>boggle.exe`alloc::str::impl$4::to_owned(ref$ (1 samples, 0.03%)</title><rect x="54.1361%" y="3605" width="0.0334%" height="15" fill="rgb(241,24,51)" fg:x="1623" fg:w="1"/><text x="54.3861%" y="3615.50"></text></g><g><title>boggle.exe`alloc::slice::impl$9::to_owned(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="54.1361%" y="3589" width="0.0334%" height="15" fill="rgb(227,51,44)" fg:x="1623" fg:w="1"/><text x="54.3861%" y="3599.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="54.1361%" y="3573" width="0.0334%" height="15" fill="rgb(231,121,3)" fg:x="1623" fg:w="1"/><text x="54.3861%" y="3583.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec_in(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="54.1361%" y="3557" width="0.0334%" height="15" fill="rgb(245,3,41)" fg:x="1623" fg:w="1"/><text x="54.3861%" y="3567.50"></text></g><g><title>boggle.exe`alloc::slice::hack::to_vec(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="54.1361%" y="3541" width="0.0334%" height="15" fill="rgb(214,13,26)" fg:x="1623" fg:w="1"/><text x="54.3861%" y="3551.50"></text></g><g><title>boggle.exe`alloc::slice::hack::impl$1::to_vec(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="54.1361%" y="3525" width="0.0334%" height="15" fill="rgb(252,75,11)" fg:x="1623" fg:w="1"/><text x="54.3861%" y="3535.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="54.1361%" y="3509" width="0.0334%" height="15" fill="rgb(218,226,17)" fg:x="1623" fg:w="1"/><text x="54.3861%" y="3519.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="54.1361%" y="3493" width="0.0334%" height="15" fill="rgb(248,89,38)" fg:x="1623" fg:w="1"/><text x="54.3861%" y="3503.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="54.1361%" y="3477" width="0.0334%" height="15" fill="rgb(237,73,46)" fg:x="1623" fg:w="1"/><text x="54.3861%" y="3487.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (1 samples, 0.03%)</title><rect x="54.1361%" y="3461" width="0.0334%" height="15" fill="rgb(242,78,33)" fg:x="1623" fg:w="1"/><text x="54.3861%" y="3471.50"></text></g><g><title>`0x7FFAC12C7776 (1 samples, 0.03%)</title><rect x="54.1361%" y="3445" width="0.0334%" height="15" fill="rgb(235,60,3)" fg:x="1623" fg:w="1"/><text x="54.3861%" y="3455.50"></text></g><g><title>`0x7FFAC12C78B4 (1 samples, 0.03%)</title><rect x="54.1361%" y="3429" width="0.0334%" height="15" fill="rgb(216,172,19)" fg:x="1623" fg:w="1"/><text x="54.3861%" y="3439.50"></text></g><g><title>`0x7FFAC12C80CE (1 samples, 0.03%)</title><rect x="54.1361%" y="3413" width="0.0334%" height="15" fill="rgb(227,6,42)" fg:x="1623" fg:w="1"/><text x="54.3861%" y="3423.50"></text></g><g><title>boggle.exe`alloc::raw_vec::layout_array (1 samples, 0.03%)</title><rect x="54.1694%" y="3509" width="0.0334%" height="15" fill="rgb(223,207,42)" fg:x="1624" fg:w="1"/><text x="54.4194%" y="3519.50"></text></g><g><title>boggle.exe`core::alloc::layout::Layout::repeat (1 samples, 0.03%)</title><rect x="54.1694%" y="3493" width="0.0334%" height="15" fill="rgb(246,138,30)" fg:x="1624" fg:w="1"/><text x="54.4194%" y="3503.50"></text></g><g><title>boggle.exe`core::alloc::layout::Layout::padding_needed_for (1 samples, 0.03%)</title><rect x="54.1694%" y="3477" width="0.0334%" height="15" fill="rgb(251,199,47)" fg:x="1624" fg:w="1"/><text x="54.4194%" y="3487.50"></text></g><g><title>boggle.exe`core::num::impl$11::wrapping_sub (1 samples, 0.03%)</title><rect x="54.1694%" y="3461" width="0.0334%" height="15" fill="rgb(228,218,44)" fg:x="1624" fg:w="1"/><text x="54.4194%" y="3471.50"></text></g><g><title>boggle.exe`alloc::raw_vec::min_non_zero_cap (1 samples, 0.03%)</title><rect x="54.2028%" y="3509" width="0.0334%" height="15" fill="rgb(220,68,6)" fg:x="1625" fg:w="1"/><text x="54.4528%" y="3519.50"></text></g><g><title>`0x7FFAC12D5C95 (1 samples, 0.03%)</title><rect x="54.2362%" y="3397" width="0.0334%" height="15" fill="rgb(240,60,26)" fg:x="1626" fg:w="1"/><text x="54.4862%" y="3407.50"></text></g><g><title>`0x7FFAC12C77E7 (1 samples, 0.03%)</title><rect x="54.2695%" y="3365" width="0.0334%" height="15" fill="rgb(211,200,19)" fg:x="1627" fg:w="1"/><text x="54.5195%" y="3375.50"></text></g><g><title>`0x7FFAC12C780A (2 samples, 0.07%)</title><rect x="54.3029%" y="3365" width="0.0667%" height="15" fill="rgb(242,145,30)" fg:x="1628" fg:w="2"/><text x="54.5529%" y="3375.50"></text></g><g><title>`0x7FFAC12C8033 (1 samples, 0.03%)</title><rect x="54.3696%" y="3349" width="0.0334%" height="15" fill="rgb(225,64,13)" fg:x="1630" fg:w="1"/><text x="54.6196%" y="3359.50"></text></g><g><title>`0x7FFAC12C8047 (6 samples, 0.20%)</title><rect x="54.4029%" y="3349" width="0.2001%" height="15" fill="rgb(218,103,35)" fg:x="1631" fg:w="6"/><text x="54.6529%" y="3359.50"></text></g><g><title>`0x7FFAC12C813F (1 samples, 0.03%)</title><rect x="54.6031%" y="3349" width="0.0334%" height="15" fill="rgb(216,93,46)" fg:x="1637" fg:w="1"/><text x="54.8531%" y="3359.50"></text></g><g><title>`0x7FFAC12D5DAA (12 samples, 0.40%)</title><rect x="54.2695%" y="3397" width="0.4003%" height="15" fill="rgb(225,159,27)" fg:x="1627" fg:w="12"/><text x="54.5195%" y="3407.50"></text></g><g><title>`0x7FFAC12C7776 (12 samples, 0.40%)</title><rect x="54.2695%" y="3381" width="0.4003%" height="15" fill="rgb(225,204,11)" fg:x="1627" fg:w="12"/><text x="54.5195%" y="3391.50"></text></g><g><title>`0x7FFAC12C78B4 (9 samples, 0.30%)</title><rect x="54.3696%" y="3365" width="0.3002%" height="15" fill="rgb(205,56,4)" fg:x="1630" fg:w="9"/><text x="54.6196%" y="3375.50"></text></g><g><title>`0x7FFAC12C81CA (1 samples, 0.03%)</title><rect x="54.6364%" y="3349" width="0.0334%" height="15" fill="rgb(206,6,35)" fg:x="1638" fg:w="1"/><text x="54.8864%" y="3359.50"></text></g><g><title>boggle.exe`alloc::raw_vec::impl$5::reserve::do_reserve_and_handle&lt;alloc::alloc::Global&gt;(alloc::raw_vec::RawVecInner (16 samples, 0.53%)</title><rect x="54.1694%" y="3541" width="0.5337%" height="15" fill="rgb(247,73,52)" fg:x="1624" fg:w="16"/><text x="54.4194%" y="3551.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (16 samples, 0.53%)</title><rect x="54.1694%" y="3525" width="0.5337%" height="15" fill="rgb(246,97,4)" fg:x="1624" fg:w="16"/><text x="54.4194%" y="3535.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (14 samples, 0.47%)</title><rect x="54.2362%" y="3509" width="0.4670%" height="15" fill="rgb(212,37,15)" fg:x="1626" fg:w="14"/><text x="54.4862%" y="3519.50"></text></g><g><title>boggle.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (14 samples, 0.47%)</title><rect x="54.2362%" y="3493" width="0.4670%" height="15" fill="rgb(208,130,40)" fg:x="1626" fg:w="14"/><text x="54.4862%" y="3503.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (14 samples, 0.47%)</title><rect x="54.2362%" y="3477" width="0.4670%" height="15" fill="rgb(236,55,29)" fg:x="1626" fg:w="14"/><text x="54.4862%" y="3487.50"></text></g><g><title>boggle.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (14 samples, 0.47%)</title><rect x="54.2362%" y="3461" width="0.4670%" height="15" fill="rgb(209,156,45)" fg:x="1626" fg:w="14"/><text x="54.4862%" y="3471.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (14 samples, 0.47%)</title><rect x="54.2362%" y="3445" width="0.4670%" height="15" fill="rgb(249,107,4)" fg:x="1626" fg:w="14"/><text x="54.4862%" y="3455.50"></text></g><g><title>`0x7FFAC12D5376 (14 samples, 0.47%)</title><rect x="54.2362%" y="3429" width="0.4670%" height="15" fill="rgb(227,7,13)" fg:x="1626" fg:w="14"/><text x="54.4862%" y="3439.50"></text></g><g><title>`0x7FFAC12D54B5 (14 samples, 0.47%)</title><rect x="54.2362%" y="3413" width="0.4670%" height="15" fill="rgb(250,129,14)" fg:x="1626" fg:w="14"/><text x="54.4862%" y="3423.50"></text></g><g><title>`0x7FFAC12D5E32 (1 samples, 0.03%)</title><rect x="54.6698%" y="3397" width="0.0334%" height="15" fill="rgb(229,92,13)" fg:x="1639" fg:w="1"/><text x="54.9198%" y="3407.50"></text></g><g><title>`0x7FFAB8910260 (1 samples, 0.03%)</title><rect x="54.7031%" y="3477" width="0.0334%" height="15" fill="rgb(245,98,39)" fg:x="1640" fg:w="1"/><text x="54.9531%" y="3487.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_mut_ptr (1 samples, 0.03%)</title><rect x="54.7365%" y="3477" width="0.0334%" height="15" fill="rgb(234,135,48)" fg:x="1641" fg:w="1"/><text x="54.9865%" y="3487.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::ptr (1 samples, 0.03%)</title><rect x="54.7365%" y="3461" width="0.0334%" height="15" fill="rgb(230,98,28)" fg:x="1641" fg:w="1"/><text x="54.9865%" y="3471.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (1 samples, 0.03%)</title><rect x="54.7365%" y="3445" width="0.0334%" height="15" fill="rgb(223,121,0)" fg:x="1641" fg:w="1"/><text x="54.9865%" y="3455.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (1 samples, 0.03%)</title><rect x="54.7365%" y="3429" width="0.0334%" height="15" fill="rgb(234,173,33)" fg:x="1641" fg:w="1"/><text x="54.9865%" y="3439.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::reserve (2 samples, 0.07%)</title><rect x="54.7698%" y="3477" width="0.0667%" height="15" fill="rgb(245,47,8)" fg:x="1642" fg:w="2"/><text x="55.0198%" y="3487.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::reserve (2 samples, 0.07%)</title><rect x="54.7698%" y="3461" width="0.0667%" height="15" fill="rgb(205,17,20)" fg:x="1642" fg:w="2"/><text x="55.0198%" y="3471.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::reserve (2 samples, 0.07%)</title><rect x="54.7698%" y="3445" width="0.0667%" height="15" fill="rgb(232,151,16)" fg:x="1642" fg:w="2"/><text x="55.0198%" y="3455.50"></text></g><g><title>boggle.exe`alloc::string::impl$24::add(alloc::string::String, ref$ (21 samples, 0.70%)</title><rect x="54.1694%" y="3557" width="0.7005%" height="15" fill="rgb(208,30,32)" fg:x="1624" fg:w="21"/><text x="54.4194%" y="3567.50"></text></g><g><title>boggle.exe`alloc::string::String::push_str(ref$ (5 samples, 0.17%)</title><rect x="54.7031%" y="3541" width="0.1668%" height="15" fill="rgb(254,26,3)" fg:x="1640" fg:w="5"/><text x="54.9531%" y="3551.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::extend_from_slice(ref$&lt;slice2$ (5 samples, 0.17%)</title><rect x="54.7031%" y="3525" width="0.1668%" height="15" fill="rgb(240,177,30)" fg:x="1640" fg:w="5"/><text x="54.9531%" y="3535.50"></text></g><g><title>boggle.exe`alloc::vec::spec_extend::impl$4::spec_extend(alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;*, core::slice::iter::Iter (5 samples, 0.17%)</title><rect x="54.7031%" y="3509" width="0.1668%" height="15" fill="rgb(248,76,44)" fg:x="1640" fg:w="5"/><text x="54.9531%" y="3519.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::append_elements(ptr_const$&lt;slice2$ (5 samples, 0.17%)</title><rect x="54.7031%" y="3493" width="0.1668%" height="15" fill="rgb(241,186,54)" fg:x="1640" fg:w="5"/><text x="54.9531%" y="3503.50"></text></g><g><title>boggle.exe`memcpy (1 samples, 0.03%)</title><rect x="54.8366%" y="3477" width="0.0334%" height="15" fill="rgb(249,171,29)" fg:x="1644" fg:w="1"/><text x="55.0866%" y="3487.50"></text></g><g><title>`0x7FFAC12C780A (1 samples, 0.03%)</title><rect x="54.9700%" y="3381" width="0.0334%" height="15" fill="rgb(237,151,44)" fg:x="1648" fg:w="1"/><text x="55.2200%" y="3391.50"></text></g><g><title>`0x7FFAC12C787B (1 samples, 0.03%)</title><rect x="55.0033%" y="3381" width="0.0334%" height="15" fill="rgb(228,174,30)" fg:x="1649" fg:w="1"/><text x="55.2533%" y="3391.50"></text></g><g><title>`0x7FFAC12C8047 (4 samples, 0.13%)</title><rect x="55.0367%" y="3365" width="0.1334%" height="15" fill="rgb(252,14,37)" fg:x="1650" fg:w="4"/><text x="55.2867%" y="3375.50"></text></g><g><title>`0x7FFAC12C8134 (1 samples, 0.03%)</title><rect x="55.1701%" y="3365" width="0.0334%" height="15" fill="rgb(207,111,40)" fg:x="1654" fg:w="1"/><text x="55.4201%" y="3375.50"></text></g><g><title>`0x7FFAC12C78B4 (6 samples, 0.20%)</title><rect x="55.0367%" y="3381" width="0.2001%" height="15" fill="rgb(248,171,54)" fg:x="1650" fg:w="6"/><text x="55.2867%" y="3391.50"></text></g><g><title>`0x7FFAC12C8142 (1 samples, 0.03%)</title><rect x="55.2035%" y="3365" width="0.0334%" height="15" fill="rgb(211,127,2)" fg:x="1655" fg:w="1"/><text x="55.4535%" y="3375.50"></text></g><g><title>boggle.exe`alloc::raw_vec::impl$5::reserve::do_reserve_and_handle&lt;alloc::alloc::Global&gt;(alloc::raw_vec::RawVecInner (9 samples, 0.30%)</title><rect x="54.9700%" y="3509" width="0.3002%" height="15" fill="rgb(236,87,47)" fg:x="1648" fg:w="9"/><text x="55.2200%" y="3519.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (9 samples, 0.30%)</title><rect x="54.9700%" y="3493" width="0.3002%" height="15" fill="rgb(223,190,45)" fg:x="1648" fg:w="9"/><text x="55.2200%" y="3503.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (9 samples, 0.30%)</title><rect x="54.9700%" y="3477" width="0.3002%" height="15" fill="rgb(215,5,16)" fg:x="1648" fg:w="9"/><text x="55.2200%" y="3487.50"></text></g><g><title>boggle.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (9 samples, 0.30%)</title><rect x="54.9700%" y="3461" width="0.3002%" height="15" fill="rgb(252,82,33)" fg:x="1648" fg:w="9"/><text x="55.2200%" y="3471.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (9 samples, 0.30%)</title><rect x="54.9700%" y="3445" width="0.3002%" height="15" fill="rgb(247,213,44)" fg:x="1648" fg:w="9"/><text x="55.2200%" y="3455.50"></text></g><g><title>boggle.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (9 samples, 0.30%)</title><rect x="54.9700%" y="3429" width="0.3002%" height="15" fill="rgb(205,196,44)" fg:x="1648" fg:w="9"/><text x="55.2200%" y="3439.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (9 samples, 0.30%)</title><rect x="54.9700%" y="3413" width="0.3002%" height="15" fill="rgb(237,96,54)" fg:x="1648" fg:w="9"/><text x="55.2200%" y="3423.50"></text></g><g><title>`0x7FFAC12C7776 (9 samples, 0.30%)</title><rect x="54.9700%" y="3397" width="0.3002%" height="15" fill="rgb(230,113,34)" fg:x="1648" fg:w="9"/><text x="55.2200%" y="3407.50"></text></g><g><title>`0x7FFAC12C78C0 (1 samples, 0.03%)</title><rect x="55.2368%" y="3381" width="0.0334%" height="15" fill="rgb(221,224,12)" fg:x="1656" fg:w="1"/><text x="55.4868%" y="3391.50"></text></g><g><title>boggle.exe`alloc::string::impl$13::extend (12 samples, 0.40%)</title><rect x="54.9366%" y="3525" width="0.4003%" height="15" fill="rgb(219,112,44)" fg:x="1647" fg:w="12"/><text x="55.1866%" y="3535.50"></text></g><g><title>boggle.exe`core::char::impl$34::size_hint (2 samples, 0.07%)</title><rect x="55.2702%" y="3509" width="0.0667%" height="15" fill="rgb(210,31,13)" fg:x="1657" fg:w="2"/><text x="55.5202%" y="3519.50"></text></g><g><title>boggle.exe`alloc::string::impl$7::from_iter (15 samples, 0.50%)</title><rect x="54.8699%" y="3541" width="0.5003%" height="15" fill="rgb(230,25,16)" fg:x="1645" fg:w="15"/><text x="55.1199%" y="3551.50"></text></g><g><title>boggle.exe`core::char::impl$44::fold&lt;tuple$&lt;&gt;,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;char,alloc::string::impl$13::extend::closure_env$0&lt;core::char::ToUppercase&gt; &gt; &gt;(core::char::ToUppercase, tuple$&lt;&gt;, core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;char,alloc::string::impl$13::extend::closure_env$0 (1 samples, 0.03%)</title><rect x="55.3369%" y="3525" width="0.0334%" height="15" fill="rgb(246,108,53)" fg:x="1659" fg:w="1"/><text x="55.5869%" y="3535.50"></text></g><g><title>boggle.exe`core::char::impl$16::fold(core::char::CaseMappingIter, tuple$&lt;&gt;, core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;char,alloc::string::impl$13::extend::closure_env$0 (1 samples, 0.03%)</title><rect x="55.3369%" y="3509" width="0.0334%" height="15" fill="rgb(241,172,50)" fg:x="1659" fg:w="1"/><text x="55.5869%" y="3519.50"></text></g><g><title>boggle.exe`core::array::iter::impl$2::fold(core::array::iter::IntoIter&lt;char,3&gt;, tuple$&lt;&gt;, core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;char,alloc::string::impl$13::extend::closure_env$0 (1 samples, 0.03%)</title><rect x="55.3369%" y="3493" width="0.0334%" height="15" fill="rgb(235,141,10)" fg:x="1659" fg:w="1"/><text x="55.5869%" y="3503.50"></text></g><g><title>boggle.exe`core::iter::adapters::by_ref_sized::impl$0::fold(core::iter::adapters::by_ref_sized::ByRefSized&lt;core::ops::index_range::IndexRange&gt;, tuple$&lt;&gt;, core::array::iter::impl$2::fold::closure_env$0&lt;char,3,tuple$&lt;&gt;,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;char,alloc::string::impl$13::extend::closure_env$0 (1 samples, 0.03%)</title><rect x="55.3369%" y="3477" width="0.0334%" height="15" fill="rgb(220,174,43)" fg:x="1659" fg:w="1"/><text x="55.5869%" y="3487.50"></text></g><g><title>boggle.exe`core::iter::traits::iterator::Iterator::try_fold(core::ops::index_range::IndexRange*, tuple$&lt;&gt;, core::ops::try_trait::impl$0::wrap_mut_2::closure_env$0&lt;tuple$&lt;&gt;,tuple$&lt;&gt;,usize,core::array::iter::impl$2::fold::closure_env$0&lt;char,3,tuple$&lt;&gt;,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;char,alloc::string::impl$13::extend::closure_env$0 (1 samples, 0.03%)</title><rect x="55.3369%" y="3461" width="0.0334%" height="15" fill="rgb(215,181,40)" fg:x="1659" fg:w="1"/><text x="55.5869%" y="3471.50"></text></g><g><title>boggle.exe`core::ops::try_trait::impl$0::wrap_mut_2::closure$0(core::ops::try_trait::impl$0::wrap_mut_2::closure_env$0&lt;tuple$&lt;&gt;,tuple$&lt;&gt;,usize,core::array::iter::impl$2::fold::closure_env$0&lt;char,3,tuple$&lt;&gt;,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;char,alloc::string::impl$13::extend::closure_env$0&lt;core::char::ToUppercase&gt; &gt; &gt; &gt;*, tuple$ (1 samples, 0.03%)</title><rect x="55.3369%" y="3445" width="0.0334%" height="15" fill="rgb(230,97,2)" fg:x="1659" fg:w="1"/><text x="55.5869%" y="3455.50"></text></g><g><title>boggle.exe`core::array::iter::impl$2::fold::closure$0(core::array::iter::impl$2::fold::closure_env$0&lt;char,3,tuple$&lt;&gt;,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;char,alloc::string::impl$13::extend::closure_env$0&lt;core::char::ToUppercase&gt; &gt; &gt;*, tuple$ (1 samples, 0.03%)</title><rect x="55.3369%" y="3429" width="0.0334%" height="15" fill="rgb(211,25,27)" fg:x="1659" fg:w="1"/><text x="55.5869%" y="3439.50"></text></g><g><title>boggle.exe`core::iter::traits::iterator::Iterator::for_each::call::closure$0(core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;char,alloc::string::impl$13::extend::closure_env$0&lt;core::char::ToUppercase&gt; &gt;*, tuple$ (1 samples, 0.03%)</title><rect x="55.3369%" y="3413" width="0.0334%" height="15" fill="rgb(230,87,26)" fg:x="1659" fg:w="1"/><text x="55.5869%" y="3423.50"></text></g><g><title>boggle.exe`alloc::string::impl$13::extend::closure$0(alloc::string::impl$13::extend::closure_env$0 (1 samples, 0.03%)</title><rect x="55.3369%" y="3397" width="0.0334%" height="15" fill="rgb(227,160,17)" fg:x="1659" fg:w="1"/><text x="55.5869%" y="3407.50"></text></g><g><title>boggle.exe`alloc::string::String::push (1 samples, 0.03%)</title><rect x="55.3369%" y="3381" width="0.0334%" height="15" fill="rgb(244,85,34)" fg:x="1659" fg:w="1"/><text x="55.5869%" y="3391.50"></text></g><g><title>boggle.exe`core::char::methods::impl$0::len_utf8 (1 samples, 0.03%)</title><rect x="55.3369%" y="3365" width="0.0334%" height="15" fill="rgb(207,70,0)" fg:x="1659" fg:w="1"/><text x="55.5869%" y="3375.50"></text></g><g><title>boggle.exe`core::char::methods::len_utf8 (1 samples, 0.03%)</title><rect x="55.3369%" y="3349" width="0.0334%" height="15" fill="rgb(223,129,7)" fg:x="1659" fg:w="1"/><text x="55.5869%" y="3359.50"></text></g><g><title>boggle.exe`core::char::methods::impl$0::to_uppercase (17 samples, 0.57%)</title><rect x="54.8699%" y="3557" width="0.5670%" height="15" fill="rgb(246,105,7)" fg:x="1645" fg:w="17"/><text x="55.1199%" y="3567.50"></text></g><g><title>boggle.exe`core::char::CaseMappingIter::new (2 samples, 0.07%)</title><rect x="55.3702%" y="3541" width="0.0667%" height="15" fill="rgb(215,154,42)" fg:x="1660" fg:w="2"/><text x="55.6202%" y="3551.50"></text></g><g><title>boggle.exe`core::unicode::unicode_data::conversions::to_upper (1 samples, 0.03%)</title><rect x="55.4036%" y="3525" width="0.0334%" height="15" fill="rgb(220,215,30)" fg:x="1661" fg:w="1"/><text x="55.6536%" y="3535.50"></text></g><g><title>`0x7FFAC12D22F8 (1 samples, 0.03%)</title><rect x="55.4370%" y="3445" width="0.0334%" height="15" fill="rgb(228,81,51)" fg:x="1662" fg:w="1"/><text x="55.6870%" y="3455.50"></text></g><g><title>`0x7FFAC12D232F (1 samples, 0.03%)</title><rect x="55.4703%" y="3445" width="0.0334%" height="15" fill="rgb(247,71,54)" fg:x="1663" fg:w="1"/><text x="55.7203%" y="3455.50"></text></g><g><title>`0x7FFAC12D23A7 (1 samples, 0.03%)</title><rect x="55.5037%" y="3445" width="0.0334%" height="15" fill="rgb(234,176,34)" fg:x="1664" fg:w="1"/><text x="55.7537%" y="3455.50"></text></g><g><title>`0x7FFAC12D23DD (1 samples, 0.03%)</title><rect x="55.5370%" y="3445" width="0.0334%" height="15" fill="rgb(241,103,54)" fg:x="1665" fg:w="1"/><text x="55.7870%" y="3455.50"></text></g><g><title>`0x7FFAC12D2406 (1 samples, 0.03%)</title><rect x="55.5704%" y="3445" width="0.0334%" height="15" fill="rgb(228,22,34)" fg:x="1666" fg:w="1"/><text x="55.8204%" y="3455.50"></text></g><g><title>`0x7FFAC12D243D (2 samples, 0.07%)</title><rect x="55.6037%" y="3445" width="0.0667%" height="15" fill="rgb(241,179,48)" fg:x="1667" fg:w="2"/><text x="55.8537%" y="3455.50"></text></g><g><title>`0x7FFAC12D244F (1 samples, 0.03%)</title><rect x="55.6704%" y="3445" width="0.0334%" height="15" fill="rgb(235,167,37)" fg:x="1669" fg:w="1"/><text x="55.9204%" y="3455.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;::as_mut_ptr (237 samples, 7.91%)</title><rect x="47.8652%" y="3797" width="7.9053%" height="15" fill="rgb(213,109,30)" fg:x="1435" fg:w="237"/><text x="48.1152%" y="3807.50">boggle.exe`..</text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;alloc::string::String,alloc::alloc::Global&gt;::ptr (237 samples, 7.91%)</title><rect x="47.8652%" y="3781" width="7.9053%" height="15" fill="rgb(222,172,16)" fg:x="1435" fg:w="237"/><text x="48.1152%" y="3791.50">boggle.exe`..</text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (237 samples, 7.91%)</title><rect x="47.8652%" y="3765" width="7.9053%" height="15" fill="rgb(233,192,5)" fg:x="1435" fg:w="237"/><text x="48.1152%" y="3775.50">boggle.exe`..</text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (237 samples, 7.91%)</title><rect x="47.8652%" y="3749" width="7.9053%" height="15" fill="rgb(247,189,41)" fg:x="1435" fg:w="237"/><text x="48.1152%" y="3759.50">boggle.exe`..</text></g><g><title>boggle.exe`boggle::utils::dict_trie::DictTrie::extend_word (237 samples, 7.91%)</title><rect x="47.8652%" y="3733" width="7.9053%" height="15" fill="rgb(218,134,47)" fg:x="1435" fg:w="237"/><text x="48.1152%" y="3743.50">boggle.exe`..</text></g><g><title>boggle.exe`core::ptr::drop_in_place (48 samples, 1.60%)</title><rect x="54.1694%" y="3717" width="1.6011%" height="15" fill="rgb(216,29,3)" fg:x="1624" fg:w="48"/><text x="54.4194%" y="3727.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(alloc::vec::Vec (48 samples, 1.60%)</title><rect x="54.1694%" y="3701" width="1.6011%" height="15" fill="rgb(246,140,12)" fg:x="1624" fg:w="48"/><text x="54.4194%" y="3711.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (48 samples, 1.60%)</title><rect x="54.1694%" y="3685" width="1.6011%" height="15" fill="rgb(230,136,11)" fg:x="1624" fg:w="48"/><text x="54.4194%" y="3695.50"></text></g><g><title>boggle.exe`alloc::raw_vec::impl$4::drop(alloc::raw_vec::RawVec (48 samples, 1.60%)</title><rect x="54.1694%" y="3669" width="1.6011%" height="15" fill="rgb(247,22,47)" fg:x="1624" fg:w="48"/><text x="54.4194%" y="3679.50"></text></g><g><title>boggle.exe`alloc::vec::in_place_collect::from_iter_in_place&lt;core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter&lt;alloc::string::String,alloc::alloc::Global&gt;,boggle::utils::dict_trie::impl$1::extend_word::closure_env$0&gt;,alloc::string::String&gt;(core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter (48 samples, 1.60%)</title><rect x="54.1694%" y="3653" width="1.6011%" height="15" fill="rgb(218,84,22)" fg:x="1624" fg:w="48"/><text x="54.4194%" y="3663.50"></text></g><g><title>boggle.exe`alloc::vec::into_iter::IntoIter&lt;alloc::string::String,alloc::alloc::Global&gt;::forget_allocation_drop_remaining (48 samples, 1.60%)</title><rect x="54.1694%" y="3637" width="1.6011%" height="15" fill="rgb(216,87,39)" fg:x="1624" fg:w="48"/><text x="54.4194%" y="3647.50"></text></g><g><title>boggle.exe`alloc::vec::into_iter::IntoIter&lt;alloc::string::String,alloc::alloc::Global&gt;::as_raw_mut_slice (48 samples, 1.60%)</title><rect x="54.1694%" y="3621" width="1.6011%" height="15" fill="rgb(221,178,8)" fg:x="1624" fg:w="48"/><text x="54.4194%" y="3631.50"></text></g><g><title>boggle.exe`alloc::vec::into_iter::impl$5::try_fold&lt;alloc::string::String,alloc::alloc::Global,alloc::vec::in_place_drop::InPlaceDrop&lt;alloc::string::String&gt;,core::iter::adapters::map::map_try_fold::closure_env$0&lt;alloc::string::String,alloc::string::String,alloc::vec::in_place_drop::InPlaceDrop&lt;alloc::string::String&gt;,enum2$&lt;core::result::Result&lt;alloc::vec::in_place_drop::InPlaceDrop&lt;alloc::string::String&gt;,never$&gt; &gt;,boggle::utils::dict_trie::impl$1::extend_word::closure_env$0,alloc::vec::in_place_collect::write_in_place_with_drop::closure_env$0&lt;alloc::string::String&gt; &gt;,enum2$&lt;core::result::Result&lt;alloc::vec::in_place_drop::InPlaceDrop&lt;alloc::string::String&gt;,never$&gt; &gt; &gt;(alloc::vec::into_iter::IntoIter&lt;alloc::string::String,alloc::alloc::Global&gt;*, alloc::vec::in_place_drop::InPlaceDrop&lt;alloc::string::String&gt;, core::iter::adapters::map::map_try_fold::closure_env$0&lt;alloc::string::String,alloc::string::String,alloc::vec::in_place_drop::InPlaceDrop&lt;alloc::string::String&gt;,enum2$&lt;core::result::Result&lt;alloc::vec::in_place_drop::InPlaceDrop&lt;alloc::string::String&gt;,never$&gt; &gt;,boggle::utils::dict_trie::impl$1::extend_word::closure_env$0,alloc::vec::in_place_collect::write_in_place_with_drop::closure_env$0 (48 samples, 1.60%)</title><rect x="54.1694%" y="3605" width="1.6011%" height="15" fill="rgb(230,42,11)" fg:x="1624" fg:w="48"/><text x="54.4194%" y="3615.50"></text></g><g><title>boggle.exe`core::iter::adapters::map::map_try_fold::closure$0(core::iter::adapters::map::map_try_fold::closure_env$0&lt;alloc::string::String,alloc::string::String,alloc::vec::in_place_drop::InPlaceDrop&lt;alloc::string::String&gt;,enum2$&lt;core::result::Result&lt;alloc::vec::in_place_drop::InPlaceDrop&lt;alloc::string::String&gt;,never$&gt; &gt;,boggle::utils::dict_trie::impl$1::extend_word::closure_env$0,alloc::vec::in_place_collect::write_in_place_with_drop::closure_env$0&lt;alloc::string::String&gt; &gt;*, alloc::vec::in_place_drop::InPlaceDrop (48 samples, 1.60%)</title><rect x="54.1694%" y="3589" width="1.6011%" height="15" fill="rgb(237,229,4)" fg:x="1624" fg:w="48"/><text x="54.4194%" y="3599.50"></text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::closure$0 (48 samples, 1.60%)</title><rect x="54.1694%" y="3573" width="1.6011%" height="15" fill="rgb(222,31,33)" fg:x="1624" fg:w="48"/><text x="54.4194%" y="3583.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place (10 samples, 0.33%)</title><rect x="55.4370%" y="3557" width="0.3336%" height="15" fill="rgb(210,17,39)" fg:x="1662" fg:w="10"/><text x="55.6870%" y="3567.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(alloc::vec::Vec (10 samples, 0.33%)</title><rect x="55.4370%" y="3541" width="0.3336%" height="15" fill="rgb(244,93,20)" fg:x="1662" fg:w="10"/><text x="55.6870%" y="3551.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (10 samples, 0.33%)</title><rect x="55.4370%" y="3525" width="0.3336%" height="15" fill="rgb(210,40,47)" fg:x="1662" fg:w="10"/><text x="55.6870%" y="3535.50"></text></g><g><title>boggle.exe`alloc::raw_vec::impl$4::drop(alloc::raw_vec::RawVec (10 samples, 0.33%)</title><rect x="55.4370%" y="3509" width="0.3336%" height="15" fill="rgb(239,211,47)" fg:x="1662" fg:w="10"/><text x="55.6870%" y="3519.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::deallocate (10 samples, 0.33%)</title><rect x="55.4370%" y="3493" width="0.3336%" height="15" fill="rgb(251,223,49)" fg:x="1662" fg:w="10"/><text x="55.6870%" y="3503.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (10 samples, 0.33%)</title><rect x="55.4370%" y="3477" width="0.3336%" height="15" fill="rgb(221,149,5)" fg:x="1662" fg:w="10"/><text x="55.6870%" y="3487.50"></text></g><g><title>boggle.exe`alloc::alloc::dealloc (10 samples, 0.33%)</title><rect x="55.4370%" y="3461" width="0.3336%" height="15" fill="rgb(219,224,51)" fg:x="1662" fg:w="10"/><text x="55.6870%" y="3471.50"></text></g><g><title>`0x7FFAC12D26AB (2 samples, 0.07%)</title><rect x="55.7038%" y="3445" width="0.0667%" height="15" fill="rgb(223,7,8)" fg:x="1670" fg:w="2"/><text x="55.9538%" y="3455.50"></text></g><g><title>`0x7FFAC12D2316 (1 samples, 0.03%)</title><rect x="55.7705%" y="3669" width="0.0334%" height="15" fill="rgb(241,217,22)" fg:x="1672" fg:w="1"/><text x="56.0205%" y="3679.50"></text></g><g><title>`0x7FFAC12D2329 (1 samples, 0.03%)</title><rect x="55.8039%" y="3669" width="0.0334%" height="15" fill="rgb(248,209,0)" fg:x="1673" fg:w="1"/><text x="56.0539%" y="3679.50"></text></g><g><title>`0x7FFAC12D23A7 (3 samples, 0.10%)</title><rect x="55.8372%" y="3669" width="0.1001%" height="15" fill="rgb(217,205,4)" fg:x="1674" fg:w="3"/><text x="56.0872%" y="3679.50"></text></g><g><title>`0x7FFAC12D23E7 (1 samples, 0.03%)</title><rect x="55.9373%" y="3669" width="0.0334%" height="15" fill="rgb(228,124,39)" fg:x="1677" fg:w="1"/><text x="56.1873%" y="3679.50"></text></g><g><title>`0x7FFAC12D2406 (1 samples, 0.03%)</title><rect x="55.9706%" y="3669" width="0.0334%" height="15" fill="rgb(250,116,42)" fg:x="1678" fg:w="1"/><text x="56.2206%" y="3679.50"></text></g><g><title>`0x7FFAC12D29E7 (1 samples, 0.03%)</title><rect x="56.0040%" y="3669" width="0.0334%" height="15" fill="rgb(223,202,9)" fg:x="1679" fg:w="1"/><text x="56.2540%" y="3679.50"></text></g><g><title>`0x7FFAC1319A44 (1 samples, 0.03%)</title><rect x="56.0040%" y="3653" width="0.0334%" height="15" fill="rgb(242,222,40)" fg:x="1679" fg:w="1"/><text x="56.2540%" y="3663.50"></text></g><g><title>`0x7FFAC12D2871 (1 samples, 0.03%)</title><rect x="56.0040%" y="3637" width="0.0334%" height="15" fill="rgb(229,99,46)" fg:x="1679" fg:w="1"/><text x="56.2540%" y="3647.50"></text></g><g><title>`0x7FFAC12CAC3D (1 samples, 0.03%)</title><rect x="56.0040%" y="3621" width="0.0334%" height="15" fill="rgb(225,56,46)" fg:x="1679" fg:w="1"/><text x="56.2540%" y="3631.50"></text></g><g><title>boggle.exe`boggle::BoggleSolver::has_extension (246 samples, 8.21%)</title><rect x="47.8652%" y="3845" width="8.2055%" height="15" fill="rgb(227,94,5)" fg:x="1435" fg:w="246"/><text x="48.1152%" y="3855.50">boggle.exe`..</text></g><g><title>boggle.exe`core::ptr::drop_in_place(alloc::vec::Vec (246 samples, 8.21%)</title><rect x="47.8652%" y="3829" width="8.2055%" height="15" fill="rgb(205,112,38)" fg:x="1435" fg:w="246"/><text x="48.1152%" y="3839.50">boggle.exe`..</text></g><g><title>boggle.exe`alloc::vec::impl$25::drop(alloc::vec::Vec (246 samples, 8.21%)</title><rect x="47.8652%" y="3813" width="8.2055%" height="15" fill="rgb(231,133,46)" fg:x="1435" fg:w="246"/><text x="48.1152%" y="3823.50">boggle.exe`..</text></g><g><title>boggle.exe`core::ptr::drop_in_place(ptr_mut$&lt;slice2$ (9 samples, 0.30%)</title><rect x="55.7705%" y="3797" width="0.3002%" height="15" fill="rgb(217,16,9)" fg:x="1672" fg:w="9"/><text x="56.0205%" y="3807.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place (9 samples, 0.30%)</title><rect x="55.7705%" y="3781" width="0.3002%" height="15" fill="rgb(249,173,9)" fg:x="1672" fg:w="9"/><text x="56.0205%" y="3791.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(alloc::vec::Vec (9 samples, 0.30%)</title><rect x="55.7705%" y="3765" width="0.3002%" height="15" fill="rgb(205,163,53)" fg:x="1672" fg:w="9"/><text x="56.0205%" y="3775.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (9 samples, 0.30%)</title><rect x="55.7705%" y="3749" width="0.3002%" height="15" fill="rgb(217,54,41)" fg:x="1672" fg:w="9"/><text x="56.0205%" y="3759.50"></text></g><g><title>boggle.exe`alloc::raw_vec::impl$4::drop(alloc::raw_vec::RawVec (9 samples, 0.30%)</title><rect x="55.7705%" y="3733" width="0.3002%" height="15" fill="rgb(228,216,12)" fg:x="1672" fg:w="9"/><text x="56.0205%" y="3743.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::deallocate (9 samples, 0.30%)</title><rect x="55.7705%" y="3717" width="0.3002%" height="15" fill="rgb(244,228,15)" fg:x="1672" fg:w="9"/><text x="56.0205%" y="3727.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (9 samples, 0.30%)</title><rect x="55.7705%" y="3701" width="0.3002%" height="15" fill="rgb(221,176,53)" fg:x="1672" fg:w="9"/><text x="56.0205%" y="3711.50"></text></g><g><title>boggle.exe`alloc::alloc::dealloc (9 samples, 0.30%)</title><rect x="55.7705%" y="3685" width="0.3002%" height="15" fill="rgb(205,94,34)" fg:x="1672" fg:w="9"/><text x="56.0205%" y="3695.50"></text></g><g><title>boggle.exe`__rust_dealloc (1 samples, 0.03%)</title><rect x="56.0374%" y="3669" width="0.0334%" height="15" fill="rgb(213,110,48)" fg:x="1680" fg:w="1"/><text x="56.2874%" y="3679.50"></text></g><g><title>`0x7FFAC12D23DD (1 samples, 0.03%)</title><rect x="56.0707%" y="3701" width="0.0334%" height="15" fill="rgb(236,142,28)" fg:x="1681" fg:w="1"/><text x="56.3207%" y="3711.50"></text></g><g><title>`0x7FFAC12D2329 (1 samples, 0.03%)</title><rect x="56.1041%" y="3429" width="0.0334%" height="15" fill="rgb(225,135,29)" fg:x="1682" fg:w="1"/><text x="56.3541%" y="3439.50"></text></g><g><title>`0x7FFAC12D232F (1 samples, 0.03%)</title><rect x="56.1374%" y="3429" width="0.0334%" height="15" fill="rgb(252,45,31)" fg:x="1683" fg:w="1"/><text x="56.3874%" y="3439.50"></text></g><g><title>`0x7FFAC12D23A7 (1 samples, 0.03%)</title><rect x="56.2041%" y="3301" width="0.0334%" height="15" fill="rgb(211,187,50)" fg:x="1685" fg:w="1"/><text x="56.4541%" y="3311.50"></text></g><g><title>`0x7FFAC12D23C2 (1 samples, 0.03%)</title><rect x="56.2375%" y="3173" width="0.0334%" height="15" fill="rgb(229,109,7)" fg:x="1686" fg:w="1"/><text x="56.4875%" y="3183.50"></text></g><g><title>`0x7FFAC12D23DD (1 samples, 0.03%)</title><rect x="56.2708%" y="2981" width="0.0334%" height="15" fill="rgb(251,131,51)" fg:x="1687" fg:w="1"/><text x="56.5208%" y="2991.50"></text></g><g><title>boggle.exe`alloc::string::String::pop (2 samples, 0.07%)</title><rect x="56.2708%" y="3045" width="0.0667%" height="15" fill="rgb(251,180,35)" fg:x="1687" fg:w="2"/><text x="56.5208%" y="3055.50"></text></g><g><title>boggle.exe`alloc::string::impl$28::deref (2 samples, 0.07%)</title><rect x="56.2708%" y="3029" width="0.0667%" height="15" fill="rgb(211,46,32)" fg:x="1687" fg:w="2"/><text x="56.5208%" y="3039.50"></text></g><g><title>boggle.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (2 samples, 0.07%)</title><rect x="56.2708%" y="3013" width="0.0667%" height="15" fill="rgb(248,123,17)" fg:x="1687" fg:w="2"/><text x="56.5208%" y="3023.50"></text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::collect_words(boggle::utils::dict_trie::DictTrieNode*, ref$&lt;str$&gt;, alloc::vec::Vec (2 samples, 0.07%)</title><rect x="56.2708%" y="2997" width="0.0667%" height="15" fill="rgb(227,141,18)" fg:x="1687" fg:w="2"/><text x="56.5208%" y="3007.50"></text></g><g><title>boggle.exe`alloc::string::String::pop (1 samples, 0.03%)</title><rect x="56.3042%" y="2981" width="0.0334%" height="15" fill="rgb(216,102,9)" fg:x="1688" fg:w="1"/><text x="56.5542%" y="2991.50"></text></g><g><title>boggle.exe`alloc::string::impl$28::deref (1 samples, 0.03%)</title><rect x="56.3042%" y="2965" width="0.0334%" height="15" fill="rgb(253,47,13)" fg:x="1688" fg:w="1"/><text x="56.5542%" y="2975.50"></text></g><g><title>boggle.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (1 samples, 0.03%)</title><rect x="56.3042%" y="2949" width="0.0334%" height="15" fill="rgb(226,93,23)" fg:x="1688" fg:w="1"/><text x="56.5542%" y="2959.50"></text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::collect_words(boggle::utils::dict_trie::DictTrieNode*, ref$&lt;str$&gt;, alloc::vec::Vec (1 samples, 0.03%)</title><rect x="56.3042%" y="2933" width="0.0334%" height="15" fill="rgb(247,104,17)" fg:x="1688" fg:w="1"/><text x="56.5542%" y="2943.50"></text></g><g><title>boggle.exe`alloc::string::String::pop (1 samples, 0.03%)</title><rect x="56.3042%" y="2917" width="0.0334%" height="15" fill="rgb(233,203,26)" fg:x="1688" fg:w="1"/><text x="56.5542%" y="2927.50"></text></g><g><title>boggle.exe`alloc::string::impl$28::deref (1 samples, 0.03%)</title><rect x="56.3042%" y="2901" width="0.0334%" height="15" fill="rgb(244,98,49)" fg:x="1688" fg:w="1"/><text x="56.5542%" y="2911.50"></text></g><g><title>boggle.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (1 samples, 0.03%)</title><rect x="56.3042%" y="2885" width="0.0334%" height="15" fill="rgb(235,134,22)" fg:x="1688" fg:w="1"/><text x="56.5542%" y="2895.50"></text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::collect_words(boggle::utils::dict_trie::DictTrieNode*, ref$&lt;str$&gt;, alloc::vec::Vec (1 samples, 0.03%)</title><rect x="56.3042%" y="2869" width="0.0334%" height="15" fill="rgb(221,70,32)" fg:x="1688" fg:w="1"/><text x="56.5542%" y="2879.50"></text></g><g><title>boggle.exe`alloc::string::impl$102::to_string(ref$ (1 samples, 0.03%)</title><rect x="56.3042%" y="2853" width="0.0334%" height="15" fill="rgb(238,15,50)" fg:x="1688" fg:w="1"/><text x="56.5542%" y="2863.50"></text></g><g><title>boggle.exe`alloc::string::impl$44::from(ref$ (1 samples, 0.03%)</title><rect x="56.3042%" y="2837" width="0.0334%" height="15" fill="rgb(215,221,48)" fg:x="1688" fg:w="1"/><text x="56.5542%" y="2847.50"></text></g><g><title>boggle.exe`alloc::str::impl$4::to_owned(ref$ (1 samples, 0.03%)</title><rect x="56.3042%" y="2821" width="0.0334%" height="15" fill="rgb(236,73,3)" fg:x="1688" fg:w="1"/><text x="56.5542%" y="2831.50"></text></g><g><title>boggle.exe`alloc::slice::impl$9::to_owned(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="56.3042%" y="2805" width="0.0334%" height="15" fill="rgb(250,107,11)" fg:x="1688" fg:w="1"/><text x="56.5542%" y="2815.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="56.3042%" y="2789" width="0.0334%" height="15" fill="rgb(242,39,14)" fg:x="1688" fg:w="1"/><text x="56.5542%" y="2799.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec_in(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="56.3042%" y="2773" width="0.0334%" height="15" fill="rgb(248,164,37)" fg:x="1688" fg:w="1"/><text x="56.5542%" y="2783.50"></text></g><g><title>boggle.exe`alloc::slice::hack::to_vec(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="56.3042%" y="2757" width="0.0334%" height="15" fill="rgb(217,60,12)" fg:x="1688" fg:w="1"/><text x="56.5542%" y="2767.50"></text></g><g><title>boggle.exe`alloc::slice::hack::impl$1::to_vec(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="56.3042%" y="2741" width="0.0334%" height="15" fill="rgb(240,125,29)" fg:x="1688" fg:w="1"/><text x="56.5542%" y="2751.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="56.3042%" y="2725" width="0.0334%" height="15" fill="rgb(208,207,28)" fg:x="1688" fg:w="1"/><text x="56.5542%" y="2735.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="56.3042%" y="2709" width="0.0334%" height="15" fill="rgb(209,159,27)" fg:x="1688" fg:w="1"/><text x="56.5542%" y="2719.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="56.3042%" y="2693" width="0.0334%" height="15" fill="rgb(251,176,53)" fg:x="1688" fg:w="1"/><text x="56.5542%" y="2703.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (1 samples, 0.03%)</title><rect x="56.3042%" y="2677" width="0.0334%" height="15" fill="rgb(211,85,7)" fg:x="1688" fg:w="1"/><text x="56.5542%" y="2687.50"></text></g><g><title>`0x7FFAC12C7776 (1 samples, 0.03%)</title><rect x="56.3042%" y="2661" width="0.0334%" height="15" fill="rgb(216,64,54)" fg:x="1688" fg:w="1"/><text x="56.5542%" y="2671.50"></text></g><g><title>`0x7FFAC12C78B4 (1 samples, 0.03%)</title><rect x="56.3042%" y="2645" width="0.0334%" height="15" fill="rgb(217,54,24)" fg:x="1688" fg:w="1"/><text x="56.5542%" y="2655.50"></text></g><g><title>`0x7FFAC12C815D (1 samples, 0.03%)</title><rect x="56.3042%" y="2629" width="0.0334%" height="15" fill="rgb(208,206,53)" fg:x="1688" fg:w="1"/><text x="56.5542%" y="2639.50"></text></g><g><title>boggle.exe`alloc::string::String::pop (3 samples, 0.10%)</title><rect x="56.2708%" y="3109" width="0.1001%" height="15" fill="rgb(251,74,39)" fg:x="1687" fg:w="3"/><text x="56.5208%" y="3119.50"></text></g><g><title>boggle.exe`alloc::string::impl$28::deref (3 samples, 0.10%)</title><rect x="56.2708%" y="3093" width="0.1001%" height="15" fill="rgb(226,47,5)" fg:x="1687" fg:w="3"/><text x="56.5208%" y="3103.50"></text></g><g><title>boggle.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (3 samples, 0.10%)</title><rect x="56.2708%" y="3077" width="0.1001%" height="15" fill="rgb(234,111,33)" fg:x="1687" fg:w="3"/><text x="56.5208%" y="3087.50"></text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::collect_words(boggle::utils::dict_trie::DictTrieNode*, ref$&lt;str$&gt;, alloc::vec::Vec (3 samples, 0.10%)</title><rect x="56.2708%" y="3061" width="0.1001%" height="15" fill="rgb(251,14,10)" fg:x="1687" fg:w="3"/><text x="56.5208%" y="3071.50"></text></g><g><title>boggle.exe`alloc::string::String::push (1 samples, 0.03%)</title><rect x="56.3376%" y="3045" width="0.0334%" height="15" fill="rgb(232,43,0)" fg:x="1689" fg:w="1"/><text x="56.5876%" y="3055.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::push (1 samples, 0.03%)</title><rect x="56.3376%" y="3029" width="0.0334%" height="15" fill="rgb(222,68,43)" fg:x="1689" fg:w="1"/><text x="56.5876%" y="3039.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_mut_ptr (1 samples, 0.03%)</title><rect x="56.3376%" y="3013" width="0.0334%" height="15" fill="rgb(217,24,23)" fg:x="1689" fg:w="1"/><text x="56.5876%" y="3023.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::ptr (1 samples, 0.03%)</title><rect x="56.3376%" y="2997" width="0.0334%" height="15" fill="rgb(229,209,14)" fg:x="1689" fg:w="1"/><text x="56.5876%" y="3007.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (1 samples, 0.03%)</title><rect x="56.3376%" y="2981" width="0.0334%" height="15" fill="rgb(250,149,48)" fg:x="1689" fg:w="1"/><text x="56.5876%" y="2991.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (1 samples, 0.03%)</title><rect x="56.3376%" y="2965" width="0.0334%" height="15" fill="rgb(210,120,37)" fg:x="1689" fg:w="1"/><text x="56.5876%" y="2975.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::grow_one&lt;u8,alloc::alloc::Global&gt; (1 samples, 0.03%)</title><rect x="56.3376%" y="2949" width="0.0334%" height="15" fill="rgb(210,21,8)" fg:x="1689" fg:w="1"/><text x="56.5876%" y="2959.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_one (1 samples, 0.03%)</title><rect x="56.3376%" y="2933" width="0.0334%" height="15" fill="rgb(243,145,7)" fg:x="1689" fg:w="1"/><text x="56.5876%" y="2943.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (1 samples, 0.03%)</title><rect x="56.3376%" y="2917" width="0.0334%" height="15" fill="rgb(238,178,32)" fg:x="1689" fg:w="1"/><text x="56.5876%" y="2927.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (1 samples, 0.03%)</title><rect x="56.3376%" y="2901" width="0.0334%" height="15" fill="rgb(222,4,10)" fg:x="1689" fg:w="1"/><text x="56.5876%" y="2911.50"></text></g><g><title>boggle.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="56.3376%" y="2885" width="0.0334%" height="15" fill="rgb(239,7,37)" fg:x="1689" fg:w="1"/><text x="56.5876%" y="2895.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="56.3376%" y="2869" width="0.0334%" height="15" fill="rgb(215,31,37)" fg:x="1689" fg:w="1"/><text x="56.5876%" y="2879.50"></text></g><g><title>boggle.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="56.3376%" y="2853" width="0.0334%" height="15" fill="rgb(224,83,33)" fg:x="1689" fg:w="1"/><text x="56.5876%" y="2863.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="56.3376%" y="2837" width="0.0334%" height="15" fill="rgb(239,55,3)" fg:x="1689" fg:w="1"/><text x="56.5876%" y="2847.50"></text></g><g><title>`0x7FFAC12D5376 (1 samples, 0.03%)</title><rect x="56.3376%" y="2821" width="0.0334%" height="15" fill="rgb(247,92,11)" fg:x="1689" fg:w="1"/><text x="56.5876%" y="2831.50"></text></g><g><title>`0x7FFAC12D54B5 (1 samples, 0.03%)</title><rect x="56.3376%" y="2805" width="0.0334%" height="15" fill="rgb(239,200,7)" fg:x="1689" fg:w="1"/><text x="56.5876%" y="2815.50"></text></g><g><title>`0x7FFAC12D5DAA (1 samples, 0.03%)</title><rect x="56.3376%" y="2789" width="0.0334%" height="15" fill="rgb(227,115,8)" fg:x="1689" fg:w="1"/><text x="56.5876%" y="2799.50"></text></g><g><title>`0x7FFAC12C7776 (1 samples, 0.03%)</title><rect x="56.3376%" y="2773" width="0.0334%" height="15" fill="rgb(215,189,27)" fg:x="1689" fg:w="1"/><text x="56.5876%" y="2783.50"></text></g><g><title>`0x7FFAC12C78B4 (1 samples, 0.03%)</title><rect x="56.3376%" y="2757" width="0.0334%" height="15" fill="rgb(251,216,39)" fg:x="1689" fg:w="1"/><text x="56.5876%" y="2767.50"></text></g><g><title>`0x7FFAC12C8047 (1 samples, 0.03%)</title><rect x="56.3376%" y="2741" width="0.0334%" height="15" fill="rgb(207,29,47)" fg:x="1689" fg:w="1"/><text x="56.5876%" y="2751.50"></text></g><g><title>boggle.exe`alloc::string::String::push (1 samples, 0.03%)</title><rect x="56.3709%" y="3109" width="0.0334%" height="15" fill="rgb(210,71,34)" fg:x="1690" fg:w="1"/><text x="56.6209%" y="3119.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::push (1 samples, 0.03%)</title><rect x="56.3709%" y="3093" width="0.0334%" height="15" fill="rgb(253,217,51)" fg:x="1690" fg:w="1"/><text x="56.6209%" y="3103.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_mut_ptr (1 samples, 0.03%)</title><rect x="56.3709%" y="3077" width="0.0334%" height="15" fill="rgb(222,117,46)" fg:x="1690" fg:w="1"/><text x="56.6209%" y="3087.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::ptr (1 samples, 0.03%)</title><rect x="56.3709%" y="3061" width="0.0334%" height="15" fill="rgb(226,132,6)" fg:x="1690" fg:w="1"/><text x="56.6209%" y="3071.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (1 samples, 0.03%)</title><rect x="56.3709%" y="3045" width="0.0334%" height="15" fill="rgb(254,145,51)" fg:x="1690" fg:w="1"/><text x="56.6209%" y="3055.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (1 samples, 0.03%)</title><rect x="56.3709%" y="3029" width="0.0334%" height="15" fill="rgb(231,199,27)" fg:x="1690" fg:w="1"/><text x="56.6209%" y="3039.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::grow_one&lt;u8,alloc::alloc::Global&gt; (1 samples, 0.03%)</title><rect x="56.3709%" y="3013" width="0.0334%" height="15" fill="rgb(245,158,14)" fg:x="1690" fg:w="1"/><text x="56.6209%" y="3023.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_one (1 samples, 0.03%)</title><rect x="56.3709%" y="2997" width="0.0334%" height="15" fill="rgb(240,113,14)" fg:x="1690" fg:w="1"/><text x="56.6209%" y="3007.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (1 samples, 0.03%)</title><rect x="56.3709%" y="2981" width="0.0334%" height="15" fill="rgb(210,20,13)" fg:x="1690" fg:w="1"/><text x="56.6209%" y="2991.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (1 samples, 0.03%)</title><rect x="56.3709%" y="2965" width="0.0334%" height="15" fill="rgb(241,144,13)" fg:x="1690" fg:w="1"/><text x="56.6209%" y="2975.50"></text></g><g><title>boggle.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="56.3709%" y="2949" width="0.0334%" height="15" fill="rgb(235,43,34)" fg:x="1690" fg:w="1"/><text x="56.6209%" y="2959.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="56.3709%" y="2933" width="0.0334%" height="15" fill="rgb(208,36,20)" fg:x="1690" fg:w="1"/><text x="56.6209%" y="2943.50"></text></g><g><title>boggle.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="56.3709%" y="2917" width="0.0334%" height="15" fill="rgb(239,204,10)" fg:x="1690" fg:w="1"/><text x="56.6209%" y="2927.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="56.3709%" y="2901" width="0.0334%" height="15" fill="rgb(217,84,43)" fg:x="1690" fg:w="1"/><text x="56.6209%" y="2911.50"></text></g><g><title>`0x7FFAC12D5376 (1 samples, 0.03%)</title><rect x="56.3709%" y="2885" width="0.0334%" height="15" fill="rgb(241,170,50)" fg:x="1690" fg:w="1"/><text x="56.6209%" y="2895.50"></text></g><g><title>`0x7FFAC12D5477 (1 samples, 0.03%)</title><rect x="56.3709%" y="2869" width="0.0334%" height="15" fill="rgb(226,205,29)" fg:x="1690" fg:w="1"/><text x="56.6209%" y="2879.50"></text></g><g><title>boggle.exe`alloc::string::impl$102::to_string(ref$ (1 samples, 0.03%)</title><rect x="56.4043%" y="3109" width="0.0334%" height="15" fill="rgb(233,113,1)" fg:x="1691" fg:w="1"/><text x="56.6543%" y="3119.50"></text></g><g><title>boggle.exe`alloc::string::impl$44::from(ref$ (1 samples, 0.03%)</title><rect x="56.4043%" y="3093" width="0.0334%" height="15" fill="rgb(253,98,13)" fg:x="1691" fg:w="1"/><text x="56.6543%" y="3103.50"></text></g><g><title>boggle.exe`alloc::str::impl$4::to_owned(ref$ (1 samples, 0.03%)</title><rect x="56.4043%" y="3077" width="0.0334%" height="15" fill="rgb(211,115,12)" fg:x="1691" fg:w="1"/><text x="56.6543%" y="3087.50"></text></g><g><title>boggle.exe`alloc::slice::impl$9::to_owned(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="56.4043%" y="3061" width="0.0334%" height="15" fill="rgb(208,12,16)" fg:x="1691" fg:w="1"/><text x="56.6543%" y="3071.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="56.4043%" y="3045" width="0.0334%" height="15" fill="rgb(237,193,54)" fg:x="1691" fg:w="1"/><text x="56.6543%" y="3055.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec_in(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="56.4043%" y="3029" width="0.0334%" height="15" fill="rgb(243,22,42)" fg:x="1691" fg:w="1"/><text x="56.6543%" y="3039.50"></text></g><g><title>boggle.exe`alloc::slice::hack::to_vec(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="56.4043%" y="3013" width="0.0334%" height="15" fill="rgb(233,151,36)" fg:x="1691" fg:w="1"/><text x="56.6543%" y="3023.50"></text></g><g><title>boggle.exe`alloc::slice::hack::impl$1::to_vec(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="56.4043%" y="2997" width="0.0334%" height="15" fill="rgb(237,57,45)" fg:x="1691" fg:w="1"/><text x="56.6543%" y="3007.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="56.4043%" y="2981" width="0.0334%" height="15" fill="rgb(221,88,17)" fg:x="1691" fg:w="1"/><text x="56.6543%" y="2991.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="56.4043%" y="2965" width="0.0334%" height="15" fill="rgb(230,79,15)" fg:x="1691" fg:w="1"/><text x="56.6543%" y="2975.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="56.4043%" y="2949" width="0.0334%" height="15" fill="rgb(213,57,13)" fg:x="1691" fg:w="1"/><text x="56.6543%" y="2959.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (1 samples, 0.03%)</title><rect x="56.4043%" y="2933" width="0.0334%" height="15" fill="rgb(222,116,39)" fg:x="1691" fg:w="1"/><text x="56.6543%" y="2943.50"></text></g><g><title>`0x7FFAC12C7776 (1 samples, 0.03%)</title><rect x="56.4043%" y="2917" width="0.0334%" height="15" fill="rgb(245,107,2)" fg:x="1691" fg:w="1"/><text x="56.6543%" y="2927.50"></text></g><g><title>`0x7FFAC12C78B4 (1 samples, 0.03%)</title><rect x="56.4043%" y="2901" width="0.0334%" height="15" fill="rgb(238,1,10)" fg:x="1691" fg:w="1"/><text x="56.6543%" y="2911.50"></text></g><g><title>`0x7FFAC12C7EE2 (1 samples, 0.03%)</title><rect x="56.4043%" y="2885" width="0.0334%" height="15" fill="rgb(249,4,48)" fg:x="1691" fg:w="1"/><text x="56.6543%" y="2895.50"></text></g><g><title>`0x7FFAC12C7FF0 (1 samples, 0.03%)</title><rect x="56.4376%" y="2917" width="0.0334%" height="15" fill="rgb(223,151,18)" fg:x="1692" fg:w="1"/><text x="56.6876%" y="2927.50"></text></g><g><title>boggle.exe`alloc::string::String::pop (7 samples, 0.23%)</title><rect x="56.2708%" y="3173" width="0.2335%" height="15" fill="rgb(227,65,43)" fg:x="1687" fg:w="7"/><text x="56.5208%" y="3183.50"></text></g><g><title>boggle.exe`alloc::string::impl$28::deref (7 samples, 0.23%)</title><rect x="56.2708%" y="3157" width="0.2335%" height="15" fill="rgb(218,40,45)" fg:x="1687" fg:w="7"/><text x="56.5208%" y="3167.50"></text></g><g><title>boggle.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (7 samples, 0.23%)</title><rect x="56.2708%" y="3141" width="0.2335%" height="15" fill="rgb(252,121,31)" fg:x="1687" fg:w="7"/><text x="56.5208%" y="3151.50"></text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::collect_words(boggle::utils::dict_trie::DictTrieNode*, ref$&lt;str$&gt;, alloc::vec::Vec (7 samples, 0.23%)</title><rect x="56.2708%" y="3125" width="0.2335%" height="15" fill="rgb(219,158,43)" fg:x="1687" fg:w="7"/><text x="56.5208%" y="3135.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;::push (2 samples, 0.07%)</title><rect x="56.4376%" y="3109" width="0.0667%" height="15" fill="rgb(231,162,42)" fg:x="1692" fg:w="2"/><text x="56.6876%" y="3119.50"></text></g><g><title>boggle.exe`alloc::string::impl$6::clone (2 samples, 0.07%)</title><rect x="56.4376%" y="3093" width="0.0667%" height="15" fill="rgb(217,179,25)" fg:x="1692" fg:w="2"/><text x="56.6876%" y="3103.50"></text></g><g><title>boggle.exe`alloc::vec::impl$11::clone (2 samples, 0.07%)</title><rect x="56.4376%" y="3077" width="0.0667%" height="15" fill="rgb(206,212,31)" fg:x="1692" fg:w="2"/><text x="56.6876%" y="3087.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec_in (2 samples, 0.07%)</title><rect x="56.4376%" y="3061" width="0.0667%" height="15" fill="rgb(235,144,12)" fg:x="1692" fg:w="2"/><text x="56.6876%" y="3071.50"></text></g><g><title>boggle.exe`alloc::slice::hack::to_vec (2 samples, 0.07%)</title><rect x="56.4376%" y="3045" width="0.0667%" height="15" fill="rgb(213,51,10)" fg:x="1692" fg:w="2"/><text x="56.6876%" y="3055.50"></text></g><g><title>boggle.exe`alloc::slice::hack::impl$1::to_vec (2 samples, 0.07%)</title><rect x="56.4376%" y="3029" width="0.0667%" height="15" fill="rgb(231,145,14)" fg:x="1692" fg:w="2"/><text x="56.6876%" y="3039.50"></text></g><g><title>boggle.exe`alloc::vec::Vec::with_capacity_in (2 samples, 0.07%)</title><rect x="56.4376%" y="3013" width="0.0667%" height="15" fill="rgb(235,15,28)" fg:x="1692" fg:w="2"/><text x="56.6876%" y="3023.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec::with_capacity_in (2 samples, 0.07%)</title><rect x="56.4376%" y="2997" width="0.0667%" height="15" fill="rgb(237,206,10)" fg:x="1692" fg:w="2"/><text x="56.6876%" y="3007.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner::with_capacity_in (2 samples, 0.07%)</title><rect x="56.4376%" y="2981" width="0.0667%" height="15" fill="rgb(236,227,27)" fg:x="1692" fg:w="2"/><text x="56.6876%" y="2991.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner::try_allocate_in (2 samples, 0.07%)</title><rect x="56.4376%" y="2965" width="0.0667%" height="15" fill="rgb(246,83,35)" fg:x="1692" fg:w="2"/><text x="56.6876%" y="2975.50"></text></g><g><title>`0x7FFAC12C7776 (2 samples, 0.07%)</title><rect x="56.4376%" y="2949" width="0.0667%" height="15" fill="rgb(220,136,24)" fg:x="1692" fg:w="2"/><text x="56.6876%" y="2959.50"></text></g><g><title>`0x7FFAC12C78B4 (2 samples, 0.07%)</title><rect x="56.4376%" y="2933" width="0.0667%" height="15" fill="rgb(217,3,25)" fg:x="1692" fg:w="2"/><text x="56.6876%" y="2943.50"></text></g><g><title>`0x7FFAC12C8A44 (1 samples, 0.03%)</title><rect x="56.4710%" y="2917" width="0.0334%" height="15" fill="rgb(239,24,14)" fg:x="1693" fg:w="1"/><text x="56.7210%" y="2927.50"></text></g><g><title>`0x7FFAC137144F (1 samples, 0.03%)</title><rect x="56.4710%" y="2901" width="0.0334%" height="15" fill="rgb(244,16,53)" fg:x="1693" fg:w="1"/><text x="56.7210%" y="2911.50"></text></g><g><title>boggle.exe`alloc::string::String::pop (9 samples, 0.30%)</title><rect x="56.2375%" y="3237" width="0.3002%" height="15" fill="rgb(208,175,44)" fg:x="1686" fg:w="9"/><text x="56.4875%" y="3247.50"></text></g><g><title>boggle.exe`alloc::string::impl$28::deref (9 samples, 0.30%)</title><rect x="56.2375%" y="3221" width="0.3002%" height="15" fill="rgb(252,18,48)" fg:x="1686" fg:w="9"/><text x="56.4875%" y="3231.50"></text></g><g><title>boggle.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (9 samples, 0.30%)</title><rect x="56.2375%" y="3205" width="0.3002%" height="15" fill="rgb(234,199,32)" fg:x="1686" fg:w="9"/><text x="56.4875%" y="3215.50"></text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::collect_words(boggle::utils::dict_trie::DictTrieNode*, ref$&lt;str$&gt;, alloc::vec::Vec (9 samples, 0.30%)</title><rect x="56.2375%" y="3189" width="0.3002%" height="15" fill="rgb(225,77,54)" fg:x="1686" fg:w="9"/><text x="56.4875%" y="3199.50"></text></g><g><title>boggle.exe`alloc::string::String::push (1 samples, 0.03%)</title><rect x="56.5043%" y="3173" width="0.0334%" height="15" fill="rgb(225,42,25)" fg:x="1694" fg:w="1"/><text x="56.7543%" y="3183.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::push (1 samples, 0.03%)</title><rect x="56.5043%" y="3157" width="0.0334%" height="15" fill="rgb(242,227,46)" fg:x="1694" fg:w="1"/><text x="56.7543%" y="3167.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_mut_ptr (1 samples, 0.03%)</title><rect x="56.5043%" y="3141" width="0.0334%" height="15" fill="rgb(246,197,35)" fg:x="1694" fg:w="1"/><text x="56.7543%" y="3151.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::ptr (1 samples, 0.03%)</title><rect x="56.5043%" y="3125" width="0.0334%" height="15" fill="rgb(215,159,26)" fg:x="1694" fg:w="1"/><text x="56.7543%" y="3135.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (1 samples, 0.03%)</title><rect x="56.5043%" y="3109" width="0.0334%" height="15" fill="rgb(212,194,50)" fg:x="1694" fg:w="1"/><text x="56.7543%" y="3119.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (1 samples, 0.03%)</title><rect x="56.5043%" y="3093" width="0.0334%" height="15" fill="rgb(246,132,1)" fg:x="1694" fg:w="1"/><text x="56.7543%" y="3103.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::grow_one&lt;u8,alloc::alloc::Global&gt; (1 samples, 0.03%)</title><rect x="56.5043%" y="3077" width="0.0334%" height="15" fill="rgb(217,71,7)" fg:x="1694" fg:w="1"/><text x="56.7543%" y="3087.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_one (1 samples, 0.03%)</title><rect x="56.5043%" y="3061" width="0.0334%" height="15" fill="rgb(252,59,32)" fg:x="1694" fg:w="1"/><text x="56.7543%" y="3071.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (1 samples, 0.03%)</title><rect x="56.5043%" y="3045" width="0.0334%" height="15" fill="rgb(253,204,25)" fg:x="1694" fg:w="1"/><text x="56.7543%" y="3055.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (1 samples, 0.03%)</title><rect x="56.5043%" y="3029" width="0.0334%" height="15" fill="rgb(232,21,16)" fg:x="1694" fg:w="1"/><text x="56.7543%" y="3039.50"></text></g><g><title>boggle.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="56.5043%" y="3013" width="0.0334%" height="15" fill="rgb(248,90,29)" fg:x="1694" fg:w="1"/><text x="56.7543%" y="3023.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="56.5043%" y="2997" width="0.0334%" height="15" fill="rgb(249,223,7)" fg:x="1694" fg:w="1"/><text x="56.7543%" y="3007.50"></text></g><g><title>boggle.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="56.5043%" y="2981" width="0.0334%" height="15" fill="rgb(231,119,42)" fg:x="1694" fg:w="1"/><text x="56.7543%" y="2991.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="56.5043%" y="2965" width="0.0334%" height="15" fill="rgb(215,41,35)" fg:x="1694" fg:w="1"/><text x="56.7543%" y="2975.50"></text></g><g><title>`0x7FFAC12D5376 (1 samples, 0.03%)</title><rect x="56.5043%" y="2949" width="0.0334%" height="15" fill="rgb(220,44,45)" fg:x="1694" fg:w="1"/><text x="56.7543%" y="2959.50"></text></g><g><title>`0x7FFAC12D54B5 (1 samples, 0.03%)</title><rect x="56.5043%" y="2933" width="0.0334%" height="15" fill="rgb(253,197,36)" fg:x="1694" fg:w="1"/><text x="56.7543%" y="2943.50"></text></g><g><title>`0x7FFAC12D5DAA (1 samples, 0.03%)</title><rect x="56.5043%" y="2917" width="0.0334%" height="15" fill="rgb(245,225,54)" fg:x="1694" fg:w="1"/><text x="56.7543%" y="2927.50"></text></g><g><title>`0x7FFAC12C7776 (1 samples, 0.03%)</title><rect x="56.5043%" y="2901" width="0.0334%" height="15" fill="rgb(239,94,37)" fg:x="1694" fg:w="1"/><text x="56.7543%" y="2911.50"></text></g><g><title>`0x7FFAC12C78B4 (1 samples, 0.03%)</title><rect x="56.5043%" y="2885" width="0.0334%" height="15" fill="rgb(242,217,10)" fg:x="1694" fg:w="1"/><text x="56.7543%" y="2895.50"></text></g><g><title>`0x7FFAC12C8047 (1 samples, 0.03%)</title><rect x="56.5043%" y="2869" width="0.0334%" height="15" fill="rgb(250,193,7)" fg:x="1694" fg:w="1"/><text x="56.7543%" y="2879.50"></text></g><g><title>`0x7FFAC12D5C80 (1 samples, 0.03%)</title><rect x="56.5377%" y="2981" width="0.0334%" height="15" fill="rgb(230,104,19)" fg:x="1695" fg:w="1"/><text x="56.7877%" y="2991.50"></text></g><g><title>`0x7FFAC12C8047 (1 samples, 0.03%)</title><rect x="56.5710%" y="2933" width="0.0334%" height="15" fill="rgb(230,181,4)" fg:x="1696" fg:w="1"/><text x="56.8210%" y="2943.50"></text></g><g><title>`0x7FFAC12D5DAA (2 samples, 0.07%)</title><rect x="56.5710%" y="2981" width="0.0667%" height="15" fill="rgb(216,219,49)" fg:x="1696" fg:w="2"/><text x="56.8210%" y="2991.50"></text></g><g><title>`0x7FFAC12C7776 (2 samples, 0.07%)</title><rect x="56.5710%" y="2965" width="0.0667%" height="15" fill="rgb(254,144,0)" fg:x="1696" fg:w="2"/><text x="56.8210%" y="2975.50"></text></g><g><title>`0x7FFAC12C78B4 (2 samples, 0.07%)</title><rect x="56.5710%" y="2949" width="0.0667%" height="15" fill="rgb(205,209,38)" fg:x="1696" fg:w="2"/><text x="56.8210%" y="2959.50"></text></g><g><title>`0x7FFAC12C85CF (1 samples, 0.03%)</title><rect x="56.6044%" y="2933" width="0.0334%" height="15" fill="rgb(240,21,42)" fg:x="1697" fg:w="1"/><text x="56.8544%" y="2943.50"></text></g><g><title>`0x7FFAC12D5DF9 (1 samples, 0.03%)</title><rect x="56.6378%" y="2981" width="0.0334%" height="15" fill="rgb(241,132,3)" fg:x="1698" fg:w="1"/><text x="56.8878%" y="2991.50"></text></g><g><title>`0x7FFAC1404E92 (1 samples, 0.03%)</title><rect x="56.6378%" y="2965" width="0.0334%" height="15" fill="rgb(225,14,2)" fg:x="1698" fg:w="1"/><text x="56.8878%" y="2975.50"></text></g><g><title>boggle.exe`alloc::string::String::push (5 samples, 0.17%)</title><rect x="56.5377%" y="3237" width="0.1668%" height="15" fill="rgb(210,141,35)" fg:x="1695" fg:w="5"/><text x="56.7877%" y="3247.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::push (5 samples, 0.17%)</title><rect x="56.5377%" y="3221" width="0.1668%" height="15" fill="rgb(251,14,44)" fg:x="1695" fg:w="5"/><text x="56.7877%" y="3231.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_mut_ptr (5 samples, 0.17%)</title><rect x="56.5377%" y="3205" width="0.1668%" height="15" fill="rgb(247,48,18)" fg:x="1695" fg:w="5"/><text x="56.7877%" y="3215.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::ptr (5 samples, 0.17%)</title><rect x="56.5377%" y="3189" width="0.1668%" height="15" fill="rgb(225,0,40)" fg:x="1695" fg:w="5"/><text x="56.7877%" y="3199.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (5 samples, 0.17%)</title><rect x="56.5377%" y="3173" width="0.1668%" height="15" fill="rgb(221,31,33)" fg:x="1695" fg:w="5"/><text x="56.7877%" y="3183.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (5 samples, 0.17%)</title><rect x="56.5377%" y="3157" width="0.1668%" height="15" fill="rgb(237,42,40)" fg:x="1695" fg:w="5"/><text x="56.7877%" y="3167.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::grow_one&lt;u8,alloc::alloc::Global&gt; (5 samples, 0.17%)</title><rect x="56.5377%" y="3141" width="0.1668%" height="15" fill="rgb(233,51,29)" fg:x="1695" fg:w="5"/><text x="56.7877%" y="3151.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_one (5 samples, 0.17%)</title><rect x="56.5377%" y="3125" width="0.1668%" height="15" fill="rgb(226,58,20)" fg:x="1695" fg:w="5"/><text x="56.7877%" y="3135.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (5 samples, 0.17%)</title><rect x="56.5377%" y="3109" width="0.1668%" height="15" fill="rgb(208,98,7)" fg:x="1695" fg:w="5"/><text x="56.7877%" y="3119.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (5 samples, 0.17%)</title><rect x="56.5377%" y="3093" width="0.1668%" height="15" fill="rgb(228,143,44)" fg:x="1695" fg:w="5"/><text x="56.7877%" y="3103.50"></text></g><g><title>boggle.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (5 samples, 0.17%)</title><rect x="56.5377%" y="3077" width="0.1668%" height="15" fill="rgb(246,55,38)" fg:x="1695" fg:w="5"/><text x="56.7877%" y="3087.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (5 samples, 0.17%)</title><rect x="56.5377%" y="3061" width="0.1668%" height="15" fill="rgb(247,87,16)" fg:x="1695" fg:w="5"/><text x="56.7877%" y="3071.50"></text></g><g><title>boggle.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (5 samples, 0.17%)</title><rect x="56.5377%" y="3045" width="0.1668%" height="15" fill="rgb(234,129,42)" fg:x="1695" fg:w="5"/><text x="56.7877%" y="3055.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (5 samples, 0.17%)</title><rect x="56.5377%" y="3029" width="0.1668%" height="15" fill="rgb(220,82,16)" fg:x="1695" fg:w="5"/><text x="56.7877%" y="3039.50"></text></g><g><title>`0x7FFAC12D5376 (5 samples, 0.17%)</title><rect x="56.5377%" y="3013" width="0.1668%" height="15" fill="rgb(211,88,4)" fg:x="1695" fg:w="5"/><text x="56.7877%" y="3023.50"></text></g><g><title>`0x7FFAC12D54B5 (5 samples, 0.17%)</title><rect x="56.5377%" y="2997" width="0.1668%" height="15" fill="rgb(248,151,21)" fg:x="1695" fg:w="5"/><text x="56.7877%" y="3007.50"></text></g><g><title>`0x7FFAC12D5E0B (1 samples, 0.03%)</title><rect x="56.6711%" y="2981" width="0.0334%" height="15" fill="rgb(238,163,6)" fg:x="1699" fg:w="1"/><text x="56.9211%" y="2991.50"></text></g><g><title>`0x7FFAC12D22AD (1 samples, 0.03%)</title><rect x="56.6711%" y="2965" width="0.0334%" height="15" fill="rgb(209,183,11)" fg:x="1699" fg:w="1"/><text x="56.9211%" y="2975.50"></text></g><g><title>boggle.exe`alloc::string::impl$102::to_string(ref$ (1 samples, 0.03%)</title><rect x="56.7045%" y="3237" width="0.0334%" height="15" fill="rgb(219,37,20)" fg:x="1700" fg:w="1"/><text x="56.9545%" y="3247.50"></text></g><g><title>boggle.exe`alloc::string::impl$44::from(ref$ (1 samples, 0.03%)</title><rect x="56.7045%" y="3221" width="0.0334%" height="15" fill="rgb(210,158,4)" fg:x="1700" fg:w="1"/><text x="56.9545%" y="3231.50"></text></g><g><title>boggle.exe`alloc::str::impl$4::to_owned(ref$ (1 samples, 0.03%)</title><rect x="56.7045%" y="3205" width="0.0334%" height="15" fill="rgb(221,167,53)" fg:x="1700" fg:w="1"/><text x="56.9545%" y="3215.50"></text></g><g><title>boggle.exe`alloc::slice::impl$9::to_owned(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="56.7045%" y="3189" width="0.0334%" height="15" fill="rgb(237,151,45)" fg:x="1700" fg:w="1"/><text x="56.9545%" y="3199.50"></text></g><g><title>boggle.exe`memcpy (1 samples, 0.03%)</title><rect x="56.7045%" y="3173" width="0.0334%" height="15" fill="rgb(231,39,3)" fg:x="1700" fg:w="1"/><text x="56.9545%" y="3183.50"></text></g><g><title>boggle.exe`alloc::string::String::pop (16 samples, 0.53%)</title><rect x="56.2375%" y="3301" width="0.5337%" height="15" fill="rgb(212,167,28)" fg:x="1686" fg:w="16"/><text x="56.4875%" y="3311.50"></text></g><g><title>boggle.exe`alloc::string::impl$28::deref (16 samples, 0.53%)</title><rect x="56.2375%" y="3285" width="0.5337%" height="15" fill="rgb(232,178,8)" fg:x="1686" fg:w="16"/><text x="56.4875%" y="3295.50"></text></g><g><title>boggle.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (16 samples, 0.53%)</title><rect x="56.2375%" y="3269" width="0.5337%" height="15" fill="rgb(225,151,20)" fg:x="1686" fg:w="16"/><text x="56.4875%" y="3279.50"></text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::collect_words(boggle::utils::dict_trie::DictTrieNode*, ref$&lt;str$&gt;, alloc::vec::Vec (16 samples, 0.53%)</title><rect x="56.2375%" y="3253" width="0.5337%" height="15" fill="rgb(238,3,37)" fg:x="1686" fg:w="16"/><text x="56.4875%" y="3263.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;::push (1 samples, 0.03%)</title><rect x="56.7378%" y="3237" width="0.0334%" height="15" fill="rgb(251,147,42)" fg:x="1701" fg:w="1"/><text x="56.9878%" y="3247.50"></text></g><g><title>boggle.exe`alloc::string::impl$6::clone (1 samples, 0.03%)</title><rect x="56.7378%" y="3221" width="0.0334%" height="15" fill="rgb(208,173,10)" fg:x="1701" fg:w="1"/><text x="56.9878%" y="3231.50"></text></g><g><title>boggle.exe`alloc::vec::impl$11::clone (1 samples, 0.03%)</title><rect x="56.7378%" y="3205" width="0.0334%" height="15" fill="rgb(246,225,4)" fg:x="1701" fg:w="1"/><text x="56.9878%" y="3215.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec_in (1 samples, 0.03%)</title><rect x="56.7378%" y="3189" width="0.0334%" height="15" fill="rgb(248,102,6)" fg:x="1701" fg:w="1"/><text x="56.9878%" y="3199.50"></text></g><g><title>boggle.exe`alloc::slice::hack::to_vec (1 samples, 0.03%)</title><rect x="56.7378%" y="3173" width="0.0334%" height="15" fill="rgb(232,6,21)" fg:x="1701" fg:w="1"/><text x="56.9878%" y="3183.50"></text></g><g><title>boggle.exe`alloc::slice::hack::impl$1::to_vec (1 samples, 0.03%)</title><rect x="56.7378%" y="3157" width="0.0334%" height="15" fill="rgb(221,179,22)" fg:x="1701" fg:w="1"/><text x="56.9878%" y="3167.50"></text></g><g><title>boggle.exe`alloc::vec::Vec::with_capacity_in (1 samples, 0.03%)</title><rect x="56.7378%" y="3141" width="0.0334%" height="15" fill="rgb(252,50,20)" fg:x="1701" fg:w="1"/><text x="56.9878%" y="3151.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec::with_capacity_in (1 samples, 0.03%)</title><rect x="56.7378%" y="3125" width="0.0334%" height="15" fill="rgb(222,56,38)" fg:x="1701" fg:w="1"/><text x="56.9878%" y="3135.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner::with_capacity_in (1 samples, 0.03%)</title><rect x="56.7378%" y="3109" width="0.0334%" height="15" fill="rgb(206,193,29)" fg:x="1701" fg:w="1"/><text x="56.9878%" y="3119.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner::try_allocate_in (1 samples, 0.03%)</title><rect x="56.7378%" y="3093" width="0.0334%" height="15" fill="rgb(239,192,45)" fg:x="1701" fg:w="1"/><text x="56.9878%" y="3103.50"></text></g><g><title>`0x7FFAC12C7776 (1 samples, 0.03%)</title><rect x="56.7378%" y="3077" width="0.0334%" height="15" fill="rgb(254,18,36)" fg:x="1701" fg:w="1"/><text x="56.9878%" y="3087.50"></text></g><g><title>`0x7FFAC12C78B4 (1 samples, 0.03%)</title><rect x="56.7378%" y="3061" width="0.0334%" height="15" fill="rgb(221,127,11)" fg:x="1701" fg:w="1"/><text x="56.9878%" y="3071.50"></text></g><g><title>`0x7FFAC12C8047 (1 samples, 0.03%)</title><rect x="56.7378%" y="3045" width="0.0334%" height="15" fill="rgb(234,146,35)" fg:x="1701" fg:w="1"/><text x="56.9878%" y="3055.50"></text></g><g><title>boggle.exe`alloc::string::String::push (1 samples, 0.03%)</title><rect x="56.7712%" y="3301" width="0.0334%" height="15" fill="rgb(254,201,37)" fg:x="1702" fg:w="1"/><text x="57.0212%" y="3311.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::push (1 samples, 0.03%)</title><rect x="56.7712%" y="3285" width="0.0334%" height="15" fill="rgb(211,202,23)" fg:x="1702" fg:w="1"/><text x="57.0212%" y="3295.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_mut_ptr (1 samples, 0.03%)</title><rect x="56.7712%" y="3269" width="0.0334%" height="15" fill="rgb(237,91,2)" fg:x="1702" fg:w="1"/><text x="57.0212%" y="3279.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::ptr (1 samples, 0.03%)</title><rect x="56.7712%" y="3253" width="0.0334%" height="15" fill="rgb(226,228,36)" fg:x="1702" fg:w="1"/><text x="57.0212%" y="3263.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (1 samples, 0.03%)</title><rect x="56.7712%" y="3237" width="0.0334%" height="15" fill="rgb(213,63,50)" fg:x="1702" fg:w="1"/><text x="57.0212%" y="3247.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (1 samples, 0.03%)</title><rect x="56.7712%" y="3221" width="0.0334%" height="15" fill="rgb(235,194,19)" fg:x="1702" fg:w="1"/><text x="57.0212%" y="3231.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::grow_one&lt;u8,alloc::alloc::Global&gt; (1 samples, 0.03%)</title><rect x="56.7712%" y="3205" width="0.0334%" height="15" fill="rgb(207,204,18)" fg:x="1702" fg:w="1"/><text x="57.0212%" y="3215.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_one (1 samples, 0.03%)</title><rect x="56.7712%" y="3189" width="0.0334%" height="15" fill="rgb(248,8,7)" fg:x="1702" fg:w="1"/><text x="57.0212%" y="3199.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (1 samples, 0.03%)</title><rect x="56.7712%" y="3173" width="0.0334%" height="15" fill="rgb(223,145,47)" fg:x="1702" fg:w="1"/><text x="57.0212%" y="3183.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (1 samples, 0.03%)</title><rect x="56.7712%" y="3157" width="0.0334%" height="15" fill="rgb(228,84,11)" fg:x="1702" fg:w="1"/><text x="57.0212%" y="3167.50"></text></g><g><title>boggle.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="56.7712%" y="3141" width="0.0334%" height="15" fill="rgb(218,76,45)" fg:x="1702" fg:w="1"/><text x="57.0212%" y="3151.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="56.7712%" y="3125" width="0.0334%" height="15" fill="rgb(223,80,15)" fg:x="1702" fg:w="1"/><text x="57.0212%" y="3135.50"></text></g><g><title>boggle.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="56.7712%" y="3109" width="0.0334%" height="15" fill="rgb(219,218,33)" fg:x="1702" fg:w="1"/><text x="57.0212%" y="3119.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="56.7712%" y="3093" width="0.0334%" height="15" fill="rgb(208,51,11)" fg:x="1702" fg:w="1"/><text x="57.0212%" y="3103.50"></text></g><g><title>`0x7FFAC12D5376 (1 samples, 0.03%)</title><rect x="56.7712%" y="3077" width="0.0334%" height="15" fill="rgb(229,165,39)" fg:x="1702" fg:w="1"/><text x="57.0212%" y="3087.50"></text></g><g><title>`0x7FFAC12D54B5 (1 samples, 0.03%)</title><rect x="56.7712%" y="3061" width="0.0334%" height="15" fill="rgb(241,100,24)" fg:x="1702" fg:w="1"/><text x="57.0212%" y="3071.50"></text></g><g><title>`0x7FFAC12D5DAA (1 samples, 0.03%)</title><rect x="56.7712%" y="3045" width="0.0334%" height="15" fill="rgb(228,14,23)" fg:x="1702" fg:w="1"/><text x="57.0212%" y="3055.50"></text></g><g><title>`0x7FFAC12C7776 (1 samples, 0.03%)</title><rect x="56.7712%" y="3029" width="0.0334%" height="15" fill="rgb(247,116,52)" fg:x="1702" fg:w="1"/><text x="57.0212%" y="3039.50"></text></g><g><title>`0x7FFAC12C78B4 (1 samples, 0.03%)</title><rect x="56.7712%" y="3013" width="0.0334%" height="15" fill="rgb(216,149,33)" fg:x="1702" fg:w="1"/><text x="57.0212%" y="3023.50"></text></g><g><title>`0x7FFAC12C8047 (1 samples, 0.03%)</title><rect x="56.7712%" y="2997" width="0.0334%" height="15" fill="rgb(238,142,29)" fg:x="1702" fg:w="1"/><text x="57.0212%" y="3007.50"></text></g><g><title>`0x7FFAC12C7FF3 (1 samples, 0.03%)</title><rect x="56.8045%" y="3077" width="0.0334%" height="15" fill="rgb(224,83,40)" fg:x="1703" fg:w="1"/><text x="57.0545%" y="3087.50"></text></g><g><title>`0x7FFAC12C8047 (2 samples, 0.07%)</title><rect x="56.8379%" y="3077" width="0.0667%" height="15" fill="rgb(234,165,11)" fg:x="1704" fg:w="2"/><text x="57.0879%" y="3087.50"></text></g><g><title>boggle.exe`alloc::string::impl$102::to_string(ref$ (4 samples, 0.13%)</title><rect x="56.8045%" y="3301" width="0.1334%" height="15" fill="rgb(215,96,23)" fg:x="1703" fg:w="4"/><text x="57.0545%" y="3311.50"></text></g><g><title>boggle.exe`alloc::string::impl$44::from(ref$ (4 samples, 0.13%)</title><rect x="56.8045%" y="3285" width="0.1334%" height="15" fill="rgb(233,179,26)" fg:x="1703" fg:w="4"/><text x="57.0545%" y="3295.50"></text></g><g><title>boggle.exe`alloc::str::impl$4::to_owned(ref$ (4 samples, 0.13%)</title><rect x="56.8045%" y="3269" width="0.1334%" height="15" fill="rgb(225,129,33)" fg:x="1703" fg:w="4"/><text x="57.0545%" y="3279.50"></text></g><g><title>boggle.exe`alloc::slice::impl$9::to_owned(ref$&lt;slice2$ (4 samples, 0.13%)</title><rect x="56.8045%" y="3253" width="0.1334%" height="15" fill="rgb(237,49,13)" fg:x="1703" fg:w="4"/><text x="57.0545%" y="3263.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec(ref$&lt;slice2$ (4 samples, 0.13%)</title><rect x="56.8045%" y="3237" width="0.1334%" height="15" fill="rgb(211,3,31)" fg:x="1703" fg:w="4"/><text x="57.0545%" y="3247.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec_in(ref$&lt;slice2$ (4 samples, 0.13%)</title><rect x="56.8045%" y="3221" width="0.1334%" height="15" fill="rgb(216,152,19)" fg:x="1703" fg:w="4"/><text x="57.0545%" y="3231.50"></text></g><g><title>boggle.exe`alloc::slice::hack::to_vec(ref$&lt;slice2$ (4 samples, 0.13%)</title><rect x="56.8045%" y="3205" width="0.1334%" height="15" fill="rgb(251,121,35)" fg:x="1703" fg:w="4"/><text x="57.0545%" y="3215.50"></text></g><g><title>boggle.exe`alloc::slice::hack::impl$1::to_vec(ref$&lt;slice2$ (4 samples, 0.13%)</title><rect x="56.8045%" y="3189" width="0.1334%" height="15" fill="rgb(210,217,47)" fg:x="1703" fg:w="4"/><text x="57.0545%" y="3199.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (4 samples, 0.13%)</title><rect x="56.8045%" y="3173" width="0.1334%" height="15" fill="rgb(244,116,22)" fg:x="1703" fg:w="4"/><text x="57.0545%" y="3183.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (4 samples, 0.13%)</title><rect x="56.8045%" y="3157" width="0.1334%" height="15" fill="rgb(228,17,21)" fg:x="1703" fg:w="4"/><text x="57.0545%" y="3167.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (4 samples, 0.13%)</title><rect x="56.8045%" y="3141" width="0.1334%" height="15" fill="rgb(240,149,34)" fg:x="1703" fg:w="4"/><text x="57.0545%" y="3151.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (4 samples, 0.13%)</title><rect x="56.8045%" y="3125" width="0.1334%" height="15" fill="rgb(208,125,47)" fg:x="1703" fg:w="4"/><text x="57.0545%" y="3135.50"></text></g><g><title>`0x7FFAC12C7776 (4 samples, 0.13%)</title><rect x="56.8045%" y="3109" width="0.1334%" height="15" fill="rgb(249,186,39)" fg:x="1703" fg:w="4"/><text x="57.0545%" y="3119.50"></text></g><g><title>`0x7FFAC12C78B4 (4 samples, 0.13%)</title><rect x="56.8045%" y="3093" width="0.1334%" height="15" fill="rgb(240,220,33)" fg:x="1703" fg:w="4"/><text x="57.0545%" y="3103.50"></text></g><g><title>`0x7FFAC12C8119 (1 samples, 0.03%)</title><rect x="56.9046%" y="3077" width="0.0334%" height="15" fill="rgb(243,110,23)" fg:x="1706" fg:w="1"/><text x="57.1546%" y="3087.50"></text></g><g><title>boggle.exe`alloc::string::impl$6::clone (1 samples, 0.03%)</title><rect x="56.9380%" y="3285" width="0.0334%" height="15" fill="rgb(219,163,46)" fg:x="1707" fg:w="1"/><text x="57.1880%" y="3295.50"></text></g><g><title>boggle.exe`alloc::vec::impl$11::clone (1 samples, 0.03%)</title><rect x="56.9380%" y="3269" width="0.0334%" height="15" fill="rgb(216,126,30)" fg:x="1707" fg:w="1"/><text x="57.1880%" y="3279.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec_in (1 samples, 0.03%)</title><rect x="56.9380%" y="3253" width="0.0334%" height="15" fill="rgb(208,139,11)" fg:x="1707" fg:w="1"/><text x="57.1880%" y="3263.50"></text></g><g><title>boggle.exe`alloc::slice::hack::to_vec (1 samples, 0.03%)</title><rect x="56.9380%" y="3237" width="0.0334%" height="15" fill="rgb(213,118,36)" fg:x="1707" fg:w="1"/><text x="57.1880%" y="3247.50"></text></g><g><title>boggle.exe`alloc::slice::hack::impl$1::to_vec (1 samples, 0.03%)</title><rect x="56.9380%" y="3221" width="0.0334%" height="15" fill="rgb(226,43,17)" fg:x="1707" fg:w="1"/><text x="57.1880%" y="3231.50"></text></g><g><title>boggle.exe`alloc::vec::Vec::with_capacity_in (1 samples, 0.03%)</title><rect x="56.9380%" y="3205" width="0.0334%" height="15" fill="rgb(254,217,4)" fg:x="1707" fg:w="1"/><text x="57.1880%" y="3215.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec::with_capacity_in (1 samples, 0.03%)</title><rect x="56.9380%" y="3189" width="0.0334%" height="15" fill="rgb(210,134,47)" fg:x="1707" fg:w="1"/><text x="57.1880%" y="3199.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner::with_capacity_in (1 samples, 0.03%)</title><rect x="56.9380%" y="3173" width="0.0334%" height="15" fill="rgb(237,24,49)" fg:x="1707" fg:w="1"/><text x="57.1880%" y="3183.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner::try_allocate_in (1 samples, 0.03%)</title><rect x="56.9380%" y="3157" width="0.0334%" height="15" fill="rgb(251,39,46)" fg:x="1707" fg:w="1"/><text x="57.1880%" y="3167.50"></text></g><g><title>`0x7FFAC12C7776 (1 samples, 0.03%)</title><rect x="56.9380%" y="3141" width="0.0334%" height="15" fill="rgb(251,220,3)" fg:x="1707" fg:w="1"/><text x="57.1880%" y="3151.50"></text></g><g><title>`0x7FFAC12C78B4 (1 samples, 0.03%)</title><rect x="56.9380%" y="3125" width="0.0334%" height="15" fill="rgb(228,105,12)" fg:x="1707" fg:w="1"/><text x="57.1880%" y="3135.50"></text></g><g><title>`0x7FFAC12C809C (1 samples, 0.03%)</title><rect x="56.9380%" y="3109" width="0.0334%" height="15" fill="rgb(215,196,1)" fg:x="1707" fg:w="1"/><text x="57.1880%" y="3119.50"></text></g><g><title>boggle.exe`alloc::string::String::pop (25 samples, 0.83%)</title><rect x="56.1708%" y="3365" width="0.8339%" height="15" fill="rgb(214,33,39)" fg:x="1684" fg:w="25"/><text x="56.4208%" y="3375.50"></text></g><g><title>boggle.exe`alloc::string::impl$28::deref (25 samples, 0.83%)</title><rect x="56.1708%" y="3349" width="0.8339%" height="15" fill="rgb(220,19,52)" fg:x="1684" fg:w="25"/><text x="56.4208%" y="3359.50"></text></g><g><title>boggle.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (25 samples, 0.83%)</title><rect x="56.1708%" y="3333" width="0.8339%" height="15" fill="rgb(221,78,38)" fg:x="1684" fg:w="25"/><text x="56.4208%" y="3343.50"></text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::collect_words(boggle::utils::dict_trie::DictTrieNode*, ref$&lt;str$&gt;, alloc::vec::Vec (25 samples, 0.83%)</title><rect x="56.1708%" y="3317" width="0.8339%" height="15" fill="rgb(253,30,16)" fg:x="1684" fg:w="25"/><text x="56.4208%" y="3327.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;::push (2 samples, 0.07%)</title><rect x="56.9380%" y="3301" width="0.0667%" height="15" fill="rgb(242,65,0)" fg:x="1707" fg:w="2"/><text x="57.1880%" y="3311.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;::as_mut_ptr (1 samples, 0.03%)</title><rect x="56.9713%" y="3285" width="0.0334%" height="15" fill="rgb(235,201,12)" fg:x="1708" fg:w="1"/><text x="57.2213%" y="3295.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;alloc::string::String,alloc::alloc::Global&gt;::ptr (1 samples, 0.03%)</title><rect x="56.9713%" y="3269" width="0.0334%" height="15" fill="rgb(233,161,9)" fg:x="1708" fg:w="1"/><text x="57.2213%" y="3279.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (1 samples, 0.03%)</title><rect x="56.9713%" y="3253" width="0.0334%" height="15" fill="rgb(241,207,41)" fg:x="1708" fg:w="1"/><text x="57.2213%" y="3263.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (1 samples, 0.03%)</title><rect x="56.9713%" y="3237" width="0.0334%" height="15" fill="rgb(212,69,46)" fg:x="1708" fg:w="1"/><text x="57.2213%" y="3247.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;std::ffi::os_str::OsString,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;::grow_one&lt;alloc::vec::Vec&lt;std::ffi::os_str::OsString,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; (1 samples, 0.03%)</title><rect x="56.9713%" y="3221" width="0.0334%" height="15" fill="rgb(239,69,45)" fg:x="1708" fg:w="1"/><text x="57.2213%" y="3231.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_one (1 samples, 0.03%)</title><rect x="56.9713%" y="3205" width="0.0334%" height="15" fill="rgb(242,117,48)" fg:x="1708" fg:w="1"/><text x="57.2213%" y="3215.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (1 samples, 0.03%)</title><rect x="56.9713%" y="3189" width="0.0334%" height="15" fill="rgb(228,41,36)" fg:x="1708" fg:w="1"/><text x="57.2213%" y="3199.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (1 samples, 0.03%)</title><rect x="56.9713%" y="3173" width="0.0334%" height="15" fill="rgb(212,3,32)" fg:x="1708" fg:w="1"/><text x="57.2213%" y="3183.50"></text></g><g><title>boggle.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="56.9713%" y="3157" width="0.0334%" height="15" fill="rgb(233,41,49)" fg:x="1708" fg:w="1"/><text x="57.2213%" y="3167.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="56.9713%" y="3141" width="0.0334%" height="15" fill="rgb(252,170,49)" fg:x="1708" fg:w="1"/><text x="57.2213%" y="3151.50"></text></g><g><title>boggle.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="56.9713%" y="3125" width="0.0334%" height="15" fill="rgb(229,53,26)" fg:x="1708" fg:w="1"/><text x="57.2213%" y="3135.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="56.9713%" y="3109" width="0.0334%" height="15" fill="rgb(217,157,12)" fg:x="1708" fg:w="1"/><text x="57.2213%" y="3119.50"></text></g><g><title>`0x7FFAC12D5376 (1 samples, 0.03%)</title><rect x="56.9713%" y="3093" width="0.0334%" height="15" fill="rgb(227,17,9)" fg:x="1708" fg:w="1"/><text x="57.2213%" y="3103.50"></text></g><g><title>`0x7FFAC12D54B5 (1 samples, 0.03%)</title><rect x="56.9713%" y="3077" width="0.0334%" height="15" fill="rgb(218,84,12)" fg:x="1708" fg:w="1"/><text x="57.2213%" y="3087.50"></text></g><g><title>`0x7FFAC12D5DAA (1 samples, 0.03%)</title><rect x="56.9713%" y="3061" width="0.0334%" height="15" fill="rgb(212,79,24)" fg:x="1708" fg:w="1"/><text x="57.2213%" y="3071.50"></text></g><g><title>`0x7FFAC12C7776 (1 samples, 0.03%)</title><rect x="56.9713%" y="3045" width="0.0334%" height="15" fill="rgb(217,222,37)" fg:x="1708" fg:w="1"/><text x="57.2213%" y="3055.50"></text></g><g><title>`0x7FFAC12C78B4 (1 samples, 0.03%)</title><rect x="56.9713%" y="3029" width="0.0334%" height="15" fill="rgb(246,208,8)" fg:x="1708" fg:w="1"/><text x="57.2213%" y="3039.50"></text></g><g><title>`0x7FFAC12C80F4 (1 samples, 0.03%)</title><rect x="56.9713%" y="3013" width="0.0334%" height="15" fill="rgb(244,133,10)" fg:x="1708" fg:w="1"/><text x="57.2213%" y="3023.50"></text></g><g><title>boggle.exe`alloc::string::impl$102::to_string(ref$ (1 samples, 0.03%)</title><rect x="57.0047%" y="3365" width="0.0334%" height="15" fill="rgb(209,219,41)" fg:x="1709" fg:w="1"/><text x="57.2547%" y="3375.50"></text></g><g><title>boggle.exe`alloc::string::impl$44::from(ref$ (1 samples, 0.03%)</title><rect x="57.0047%" y="3349" width="0.0334%" height="15" fill="rgb(253,175,45)" fg:x="1709" fg:w="1"/><text x="57.2547%" y="3359.50"></text></g><g><title>boggle.exe`alloc::str::impl$4::to_owned(ref$ (1 samples, 0.03%)</title><rect x="57.0047%" y="3333" width="0.0334%" height="15" fill="rgb(235,100,37)" fg:x="1709" fg:w="1"/><text x="57.2547%" y="3343.50"></text></g><g><title>boggle.exe`alloc::slice::impl$9::to_owned(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="57.0047%" y="3317" width="0.0334%" height="15" fill="rgb(225,87,19)" fg:x="1709" fg:w="1"/><text x="57.2547%" y="3327.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="57.0047%" y="3301" width="0.0334%" height="15" fill="rgb(217,152,17)" fg:x="1709" fg:w="1"/><text x="57.2547%" y="3311.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec_in(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="57.0047%" y="3285" width="0.0334%" height="15" fill="rgb(235,72,13)" fg:x="1709" fg:w="1"/><text x="57.2547%" y="3295.50"></text></g><g><title>boggle.exe`alloc::slice::hack::to_vec(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="57.0047%" y="3269" width="0.0334%" height="15" fill="rgb(233,140,18)" fg:x="1709" fg:w="1"/><text x="57.2547%" y="3279.50"></text></g><g><title>boggle.exe`alloc::slice::hack::impl$1::to_vec(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="57.0047%" y="3253" width="0.0334%" height="15" fill="rgb(207,212,28)" fg:x="1709" fg:w="1"/><text x="57.2547%" y="3263.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="57.0047%" y="3237" width="0.0334%" height="15" fill="rgb(220,130,25)" fg:x="1709" fg:w="1"/><text x="57.2547%" y="3247.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="57.0047%" y="3221" width="0.0334%" height="15" fill="rgb(205,55,34)" fg:x="1709" fg:w="1"/><text x="57.2547%" y="3231.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="57.0047%" y="3205" width="0.0334%" height="15" fill="rgb(237,54,35)" fg:x="1709" fg:w="1"/><text x="57.2547%" y="3215.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (1 samples, 0.03%)</title><rect x="57.0047%" y="3189" width="0.0334%" height="15" fill="rgb(208,67,23)" fg:x="1709" fg:w="1"/><text x="57.2547%" y="3199.50"></text></g><g><title>`0x7FFAC12C7776 (1 samples, 0.03%)</title><rect x="57.0047%" y="3173" width="0.0334%" height="15" fill="rgb(206,207,50)" fg:x="1709" fg:w="1"/><text x="57.2547%" y="3183.50"></text></g><g><title>`0x7FFAC12C78B4 (1 samples, 0.03%)</title><rect x="57.0047%" y="3157" width="0.0334%" height="15" fill="rgb(213,211,42)" fg:x="1709" fg:w="1"/><text x="57.2547%" y="3167.50"></text></g><g><title>`0x7FFAC12C8047 (1 samples, 0.03%)</title><rect x="57.0047%" y="3141" width="0.0334%" height="15" fill="rgb(252,197,50)" fg:x="1709" fg:w="1"/><text x="57.2547%" y="3151.50"></text></g><g><title>boggle.exe`alloc::string::String::pop (27 samples, 0.90%)</title><rect x="56.1708%" y="3429" width="0.9006%" height="15" fill="rgb(251,211,41)" fg:x="1684" fg:w="27"/><text x="56.4208%" y="3439.50"></text></g><g><title>boggle.exe`alloc::string::impl$28::deref (27 samples, 0.90%)</title><rect x="56.1708%" y="3413" width="0.9006%" height="15" fill="rgb(229,211,5)" fg:x="1684" fg:w="27"/><text x="56.4208%" y="3423.50"></text></g><g><title>boggle.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (27 samples, 0.90%)</title><rect x="56.1708%" y="3397" width="0.9006%" height="15" fill="rgb(239,36,31)" fg:x="1684" fg:w="27"/><text x="56.4208%" y="3407.50"></text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::collect_words(boggle::utils::dict_trie::DictTrieNode*, ref$&lt;str$&gt;, alloc::vec::Vec (27 samples, 0.90%)</title><rect x="56.1708%" y="3381" width="0.9006%" height="15" fill="rgb(248,67,31)" fg:x="1684" fg:w="27"/><text x="56.4208%" y="3391.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;::push (1 samples, 0.03%)</title><rect x="57.0380%" y="3365" width="0.0334%" height="15" fill="rgb(249,55,44)" fg:x="1710" fg:w="1"/><text x="57.2880%" y="3375.50"></text></g><g><title>boggle.exe`alloc::string::impl$6::clone (1 samples, 0.03%)</title><rect x="57.0380%" y="3349" width="0.0334%" height="15" fill="rgb(216,82,12)" fg:x="1710" fg:w="1"/><text x="57.2880%" y="3359.50"></text></g><g><title>boggle.exe`alloc::vec::impl$11::clone (1 samples, 0.03%)</title><rect x="57.0380%" y="3333" width="0.0334%" height="15" fill="rgb(242,174,1)" fg:x="1710" fg:w="1"/><text x="57.2880%" y="3343.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec_in (1 samples, 0.03%)</title><rect x="57.0380%" y="3317" width="0.0334%" height="15" fill="rgb(208,120,29)" fg:x="1710" fg:w="1"/><text x="57.2880%" y="3327.50"></text></g><g><title>boggle.exe`alloc::slice::hack::to_vec (1 samples, 0.03%)</title><rect x="57.0380%" y="3301" width="0.0334%" height="15" fill="rgb(221,105,43)" fg:x="1710" fg:w="1"/><text x="57.2880%" y="3311.50"></text></g><g><title>boggle.exe`alloc::slice::hack::impl$1::to_vec (1 samples, 0.03%)</title><rect x="57.0380%" y="3285" width="0.0334%" height="15" fill="rgb(234,124,22)" fg:x="1710" fg:w="1"/><text x="57.2880%" y="3295.50"></text></g><g><title>boggle.exe`alloc::vec::Vec::with_capacity_in (1 samples, 0.03%)</title><rect x="57.0380%" y="3269" width="0.0334%" height="15" fill="rgb(212,23,30)" fg:x="1710" fg:w="1"/><text x="57.2880%" y="3279.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec::with_capacity_in (1 samples, 0.03%)</title><rect x="57.0380%" y="3253" width="0.0334%" height="15" fill="rgb(219,122,53)" fg:x="1710" fg:w="1"/><text x="57.2880%" y="3263.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner::with_capacity_in (1 samples, 0.03%)</title><rect x="57.0380%" y="3237" width="0.0334%" height="15" fill="rgb(248,84,24)" fg:x="1710" fg:w="1"/><text x="57.2880%" y="3247.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner::try_allocate_in (1 samples, 0.03%)</title><rect x="57.0380%" y="3221" width="0.0334%" height="15" fill="rgb(245,115,18)" fg:x="1710" fg:w="1"/><text x="57.2880%" y="3231.50"></text></g><g><title>`0x7FFAC12C7776 (1 samples, 0.03%)</title><rect x="57.0380%" y="3205" width="0.0334%" height="15" fill="rgb(227,176,51)" fg:x="1710" fg:w="1"/><text x="57.2880%" y="3215.50"></text></g><g><title>`0x7FFAC12C78B4 (1 samples, 0.03%)</title><rect x="57.0380%" y="3189" width="0.0334%" height="15" fill="rgb(229,63,42)" fg:x="1710" fg:w="1"/><text x="57.2880%" y="3199.50"></text></g><g><title>`0x7FFAC12C89F1 (1 samples, 0.03%)</title><rect x="57.0380%" y="3173" width="0.0334%" height="15" fill="rgb(247,202,24)" fg:x="1710" fg:w="1"/><text x="57.2880%" y="3183.50"></text></g><g><title>`0x7FFAC14034A5 (1 samples, 0.03%)</title><rect x="57.0380%" y="3157" width="0.0334%" height="15" fill="rgb(244,173,20)" fg:x="1710" fg:w="1"/><text x="57.2880%" y="3167.50"></text></g><g><title>`0x7FFAC12D5C95 (1 samples, 0.03%)</title><rect x="57.0714%" y="3173" width="0.0334%" height="15" fill="rgb(242,81,47)" fg:x="1711" fg:w="1"/><text x="57.3214%" y="3183.50"></text></g><g><title>boggle.exe`alloc::string::String::push (3 samples, 0.10%)</title><rect x="57.0714%" y="3429" width="0.1001%" height="15" fill="rgb(231,185,54)" fg:x="1711" fg:w="3"/><text x="57.3214%" y="3439.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::push (3 samples, 0.10%)</title><rect x="57.0714%" y="3413" width="0.1001%" height="15" fill="rgb(243,55,32)" fg:x="1711" fg:w="3"/><text x="57.3214%" y="3423.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_mut_ptr (3 samples, 0.10%)</title><rect x="57.0714%" y="3397" width="0.1001%" height="15" fill="rgb(208,167,19)" fg:x="1711" fg:w="3"/><text x="57.3214%" y="3407.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::ptr (3 samples, 0.10%)</title><rect x="57.0714%" y="3381" width="0.1001%" height="15" fill="rgb(231,72,35)" fg:x="1711" fg:w="3"/><text x="57.3214%" y="3391.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (3 samples, 0.10%)</title><rect x="57.0714%" y="3365" width="0.1001%" height="15" fill="rgb(250,173,51)" fg:x="1711" fg:w="3"/><text x="57.3214%" y="3375.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (3 samples, 0.10%)</title><rect x="57.0714%" y="3349" width="0.1001%" height="15" fill="rgb(209,5,22)" fg:x="1711" fg:w="3"/><text x="57.3214%" y="3359.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::grow_one&lt;u8,alloc::alloc::Global&gt; (3 samples, 0.10%)</title><rect x="57.0714%" y="3333" width="0.1001%" height="15" fill="rgb(250,174,19)" fg:x="1711" fg:w="3"/><text x="57.3214%" y="3343.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_one (3 samples, 0.10%)</title><rect x="57.0714%" y="3317" width="0.1001%" height="15" fill="rgb(217,3,49)" fg:x="1711" fg:w="3"/><text x="57.3214%" y="3327.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (3 samples, 0.10%)</title><rect x="57.0714%" y="3301" width="0.1001%" height="15" fill="rgb(218,225,5)" fg:x="1711" fg:w="3"/><text x="57.3214%" y="3311.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (3 samples, 0.10%)</title><rect x="57.0714%" y="3285" width="0.1001%" height="15" fill="rgb(236,89,11)" fg:x="1711" fg:w="3"/><text x="57.3214%" y="3295.50"></text></g><g><title>boggle.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (3 samples, 0.10%)</title><rect x="57.0714%" y="3269" width="0.1001%" height="15" fill="rgb(206,33,28)" fg:x="1711" fg:w="3"/><text x="57.3214%" y="3279.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (3 samples, 0.10%)</title><rect x="57.0714%" y="3253" width="0.1001%" height="15" fill="rgb(241,56,42)" fg:x="1711" fg:w="3"/><text x="57.3214%" y="3263.50"></text></g><g><title>boggle.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (3 samples, 0.10%)</title><rect x="57.0714%" y="3237" width="0.1001%" height="15" fill="rgb(222,44,11)" fg:x="1711" fg:w="3"/><text x="57.3214%" y="3247.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (3 samples, 0.10%)</title><rect x="57.0714%" y="3221" width="0.1001%" height="15" fill="rgb(234,111,20)" fg:x="1711" fg:w="3"/><text x="57.3214%" y="3231.50"></text></g><g><title>`0x7FFAC12D5376 (3 samples, 0.10%)</title><rect x="57.0714%" y="3205" width="0.1001%" height="15" fill="rgb(237,77,6)" fg:x="1711" fg:w="3"/><text x="57.3214%" y="3215.50"></text></g><g><title>`0x7FFAC12D54B5 (3 samples, 0.10%)</title><rect x="57.0714%" y="3189" width="0.1001%" height="15" fill="rgb(235,111,23)" fg:x="1711" fg:w="3"/><text x="57.3214%" y="3199.50"></text></g><g><title>`0x7FFAC12D5DAA (2 samples, 0.07%)</title><rect x="57.1047%" y="3173" width="0.0667%" height="15" fill="rgb(251,135,29)" fg:x="1712" fg:w="2"/><text x="57.3547%" y="3183.50"></text></g><g><title>`0x7FFAC12C7776 (2 samples, 0.07%)</title><rect x="57.1047%" y="3157" width="0.0667%" height="15" fill="rgb(217,57,1)" fg:x="1712" fg:w="2"/><text x="57.3547%" y="3167.50"></text></g><g><title>`0x7FFAC12C78B4 (2 samples, 0.07%)</title><rect x="57.1047%" y="3141" width="0.0667%" height="15" fill="rgb(249,119,31)" fg:x="1712" fg:w="2"/><text x="57.3547%" y="3151.50"></text></g><g><title>`0x7FFAC12C8047 (2 samples, 0.07%)</title><rect x="57.1047%" y="3125" width="0.0667%" height="15" fill="rgb(233,164,33)" fg:x="1712" fg:w="2"/><text x="57.3547%" y="3135.50"></text></g><g><title>boggle.exe`alloc::string::String::pop (33 samples, 1.10%)</title><rect x="56.1041%" y="3493" width="1.1007%" height="15" fill="rgb(250,217,43)" fg:x="1682" fg:w="33"/><text x="56.3541%" y="3503.50"></text></g><g><title>boggle.exe`alloc::string::impl$28::deref (33 samples, 1.10%)</title><rect x="56.1041%" y="3477" width="1.1007%" height="15" fill="rgb(232,154,50)" fg:x="1682" fg:w="33"/><text x="56.3541%" y="3487.50"></text></g><g><title>boggle.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (33 samples, 1.10%)</title><rect x="56.1041%" y="3461" width="1.1007%" height="15" fill="rgb(227,190,8)" fg:x="1682" fg:w="33"/><text x="56.3541%" y="3471.50"></text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::collect_words(boggle::utils::dict_trie::DictTrieNode*, ref$&lt;str$&gt;, alloc::vec::Vec (33 samples, 1.10%)</title><rect x="56.1041%" y="3445" width="1.1007%" height="15" fill="rgb(209,217,32)" fg:x="1682" fg:w="33"/><text x="56.3541%" y="3455.50"></text></g><g><title>boggle.exe`alloc::string::impl$102::to_string(ref$ (1 samples, 0.03%)</title><rect x="57.1714%" y="3429" width="0.0334%" height="15" fill="rgb(243,203,50)" fg:x="1714" fg:w="1"/><text x="57.4214%" y="3439.50"></text></g><g><title>boggle.exe`alloc::string::impl$44::from(ref$ (1 samples, 0.03%)</title><rect x="57.1714%" y="3413" width="0.0334%" height="15" fill="rgb(232,152,27)" fg:x="1714" fg:w="1"/><text x="57.4214%" y="3423.50"></text></g><g><title>boggle.exe`alloc::str::impl$4::to_owned(ref$ (1 samples, 0.03%)</title><rect x="57.1714%" y="3397" width="0.0334%" height="15" fill="rgb(240,34,29)" fg:x="1714" fg:w="1"/><text x="57.4214%" y="3407.50"></text></g><g><title>boggle.exe`alloc::slice::impl$9::to_owned(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="57.1714%" y="3381" width="0.0334%" height="15" fill="rgb(215,185,52)" fg:x="1714" fg:w="1"/><text x="57.4214%" y="3391.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="57.1714%" y="3365" width="0.0334%" height="15" fill="rgb(240,89,49)" fg:x="1714" fg:w="1"/><text x="57.4214%" y="3375.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec_in(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="57.1714%" y="3349" width="0.0334%" height="15" fill="rgb(225,12,52)" fg:x="1714" fg:w="1"/><text x="57.4214%" y="3359.50"></text></g><g><title>boggle.exe`alloc::slice::hack::to_vec(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="57.1714%" y="3333" width="0.0334%" height="15" fill="rgb(239,128,45)" fg:x="1714" fg:w="1"/><text x="57.4214%" y="3343.50"></text></g><g><title>boggle.exe`alloc::slice::hack::impl$1::to_vec(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="57.1714%" y="3317" width="0.0334%" height="15" fill="rgb(211,78,47)" fg:x="1714" fg:w="1"/><text x="57.4214%" y="3327.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="57.1714%" y="3301" width="0.0334%" height="15" fill="rgb(232,31,21)" fg:x="1714" fg:w="1"/><text x="57.4214%" y="3311.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="57.1714%" y="3285" width="0.0334%" height="15" fill="rgb(222,168,14)" fg:x="1714" fg:w="1"/><text x="57.4214%" y="3295.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="57.1714%" y="3269" width="0.0334%" height="15" fill="rgb(209,128,24)" fg:x="1714" fg:w="1"/><text x="57.4214%" y="3279.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (1 samples, 0.03%)</title><rect x="57.1714%" y="3253" width="0.0334%" height="15" fill="rgb(249,35,13)" fg:x="1714" fg:w="1"/><text x="57.4214%" y="3263.50"></text></g><g><title>`0x7FFAC12C7776 (1 samples, 0.03%)</title><rect x="57.1714%" y="3237" width="0.0334%" height="15" fill="rgb(218,7,2)" fg:x="1714" fg:w="1"/><text x="57.4214%" y="3247.50"></text></g><g><title>`0x7FFAC12C78B4 (1 samples, 0.03%)</title><rect x="57.1714%" y="3221" width="0.0334%" height="15" fill="rgb(238,107,27)" fg:x="1714" fg:w="1"/><text x="57.4214%" y="3231.50"></text></g><g><title>`0x7FFAC12C818E (1 samples, 0.03%)</title><rect x="57.1714%" y="3205" width="0.0334%" height="15" fill="rgb(217,88,38)" fg:x="1714" fg:w="1"/><text x="57.4214%" y="3215.50"></text></g><g><title>`0x7FFAC12D5DAA (1 samples, 0.03%)</title><rect x="57.2048%" y="3237" width="0.0334%" height="15" fill="rgb(230,207,0)" fg:x="1715" fg:w="1"/><text x="57.4548%" y="3247.50"></text></g><g><title>`0x7FFAC12C7776 (1 samples, 0.03%)</title><rect x="57.2048%" y="3221" width="0.0334%" height="15" fill="rgb(249,64,54)" fg:x="1715" fg:w="1"/><text x="57.4548%" y="3231.50"></text></g><g><title>`0x7FFAC12C78B4 (1 samples, 0.03%)</title><rect x="57.2048%" y="3205" width="0.0334%" height="15" fill="rgb(231,7,11)" fg:x="1715" fg:w="1"/><text x="57.4548%" y="3215.50"></text></g><g><title>`0x7FFAC12C7FE4 (1 samples, 0.03%)</title><rect x="57.2048%" y="3189" width="0.0334%" height="15" fill="rgb(205,149,21)" fg:x="1715" fg:w="1"/><text x="57.4548%" y="3199.50"></text></g><g><title>boggle.exe`alloc::string::String::push (3 samples, 0.10%)</title><rect x="57.2048%" y="3493" width="0.1001%" height="15" fill="rgb(215,126,34)" fg:x="1715" fg:w="3"/><text x="57.4548%" y="3503.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::push (3 samples, 0.10%)</title><rect x="57.2048%" y="3477" width="0.1001%" height="15" fill="rgb(241,132,45)" fg:x="1715" fg:w="3"/><text x="57.4548%" y="3487.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_mut_ptr (3 samples, 0.10%)</title><rect x="57.2048%" y="3461" width="0.1001%" height="15" fill="rgb(252,69,32)" fg:x="1715" fg:w="3"/><text x="57.4548%" y="3471.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::ptr (3 samples, 0.10%)</title><rect x="57.2048%" y="3445" width="0.1001%" height="15" fill="rgb(232,204,19)" fg:x="1715" fg:w="3"/><text x="57.4548%" y="3455.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (3 samples, 0.10%)</title><rect x="57.2048%" y="3429" width="0.1001%" height="15" fill="rgb(249,15,47)" fg:x="1715" fg:w="3"/><text x="57.4548%" y="3439.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (3 samples, 0.10%)</title><rect x="57.2048%" y="3413" width="0.1001%" height="15" fill="rgb(209,227,23)" fg:x="1715" fg:w="3"/><text x="57.4548%" y="3423.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::grow_one&lt;u8,alloc::alloc::Global&gt; (3 samples, 0.10%)</title><rect x="57.2048%" y="3397" width="0.1001%" height="15" fill="rgb(248,92,24)" fg:x="1715" fg:w="3"/><text x="57.4548%" y="3407.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_one (3 samples, 0.10%)</title><rect x="57.2048%" y="3381" width="0.1001%" height="15" fill="rgb(247,59,2)" fg:x="1715" fg:w="3"/><text x="57.4548%" y="3391.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (3 samples, 0.10%)</title><rect x="57.2048%" y="3365" width="0.1001%" height="15" fill="rgb(221,30,5)" fg:x="1715" fg:w="3"/><text x="57.4548%" y="3375.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (3 samples, 0.10%)</title><rect x="57.2048%" y="3349" width="0.1001%" height="15" fill="rgb(208,108,53)" fg:x="1715" fg:w="3"/><text x="57.4548%" y="3359.50"></text></g><g><title>boggle.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (3 samples, 0.10%)</title><rect x="57.2048%" y="3333" width="0.1001%" height="15" fill="rgb(211,183,26)" fg:x="1715" fg:w="3"/><text x="57.4548%" y="3343.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (3 samples, 0.10%)</title><rect x="57.2048%" y="3317" width="0.1001%" height="15" fill="rgb(232,132,4)" fg:x="1715" fg:w="3"/><text x="57.4548%" y="3327.50"></text></g><g><title>boggle.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (3 samples, 0.10%)</title><rect x="57.2048%" y="3301" width="0.1001%" height="15" fill="rgb(253,128,37)" fg:x="1715" fg:w="3"/><text x="57.4548%" y="3311.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (3 samples, 0.10%)</title><rect x="57.2048%" y="3285" width="0.1001%" height="15" fill="rgb(221,58,24)" fg:x="1715" fg:w="3"/><text x="57.4548%" y="3295.50"></text></g><g><title>`0x7FFAC12D5376 (3 samples, 0.10%)</title><rect x="57.2048%" y="3269" width="0.1001%" height="15" fill="rgb(230,54,45)" fg:x="1715" fg:w="3"/><text x="57.4548%" y="3279.50"></text></g><g><title>`0x7FFAC12D54B5 (3 samples, 0.10%)</title><rect x="57.2048%" y="3253" width="0.1001%" height="15" fill="rgb(254,21,18)" fg:x="1715" fg:w="3"/><text x="57.4548%" y="3263.50"></text></g><g><title>`0x7FFAC12D5E0B (2 samples, 0.07%)</title><rect x="57.2382%" y="3237" width="0.0667%" height="15" fill="rgb(221,108,0)" fg:x="1716" fg:w="2"/><text x="57.4882%" y="3247.50"></text></g><g><title>`0x7FFAC12D23A7 (2 samples, 0.07%)</title><rect x="57.2382%" y="3221" width="0.0667%" height="15" fill="rgb(206,95,1)" fg:x="1716" fg:w="2"/><text x="57.4882%" y="3231.50"></text></g><g><title>`0x7FFAC12C7EB5 (1 samples, 0.03%)</title><rect x="57.3049%" y="3269" width="0.0334%" height="15" fill="rgb(237,52,5)" fg:x="1718" fg:w="1"/><text x="57.5549%" y="3279.50"></text></g><g><title>boggle.exe`alloc::string::impl$102::to_string(ref$ (2 samples, 0.07%)</title><rect x="57.3049%" y="3493" width="0.0667%" height="15" fill="rgb(218,150,34)" fg:x="1718" fg:w="2"/><text x="57.5549%" y="3503.50"></text></g><g><title>boggle.exe`alloc::string::impl$44::from(ref$ (2 samples, 0.07%)</title><rect x="57.3049%" y="3477" width="0.0667%" height="15" fill="rgb(235,194,28)" fg:x="1718" fg:w="2"/><text x="57.5549%" y="3487.50"></text></g><g><title>boggle.exe`alloc::str::impl$4::to_owned(ref$ (2 samples, 0.07%)</title><rect x="57.3049%" y="3461" width="0.0667%" height="15" fill="rgb(245,92,18)" fg:x="1718" fg:w="2"/><text x="57.5549%" y="3471.50"></text></g><g><title>boggle.exe`alloc::slice::impl$9::to_owned(ref$&lt;slice2$ (2 samples, 0.07%)</title><rect x="57.3049%" y="3445" width="0.0667%" height="15" fill="rgb(253,203,53)" fg:x="1718" fg:w="2"/><text x="57.5549%" y="3455.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec(ref$&lt;slice2$ (2 samples, 0.07%)</title><rect x="57.3049%" y="3429" width="0.0667%" height="15" fill="rgb(249,185,47)" fg:x="1718" fg:w="2"/><text x="57.5549%" y="3439.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec_in(ref$&lt;slice2$ (2 samples, 0.07%)</title><rect x="57.3049%" y="3413" width="0.0667%" height="15" fill="rgb(252,194,52)" fg:x="1718" fg:w="2"/><text x="57.5549%" y="3423.50"></text></g><g><title>boggle.exe`alloc::slice::hack::to_vec(ref$&lt;slice2$ (2 samples, 0.07%)</title><rect x="57.3049%" y="3397" width="0.0667%" height="15" fill="rgb(210,53,36)" fg:x="1718" fg:w="2"/><text x="57.5549%" y="3407.50"></text></g><g><title>boggle.exe`alloc::slice::hack::impl$1::to_vec(ref$&lt;slice2$ (2 samples, 0.07%)</title><rect x="57.3049%" y="3381" width="0.0667%" height="15" fill="rgb(237,37,25)" fg:x="1718" fg:w="2"/><text x="57.5549%" y="3391.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (2 samples, 0.07%)</title><rect x="57.3049%" y="3365" width="0.0667%" height="15" fill="rgb(242,116,27)" fg:x="1718" fg:w="2"/><text x="57.5549%" y="3375.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (2 samples, 0.07%)</title><rect x="57.3049%" y="3349" width="0.0667%" height="15" fill="rgb(213,185,26)" fg:x="1718" fg:w="2"/><text x="57.5549%" y="3359.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (2 samples, 0.07%)</title><rect x="57.3049%" y="3333" width="0.0667%" height="15" fill="rgb(225,204,8)" fg:x="1718" fg:w="2"/><text x="57.5549%" y="3343.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (2 samples, 0.07%)</title><rect x="57.3049%" y="3317" width="0.0667%" height="15" fill="rgb(254,111,37)" fg:x="1718" fg:w="2"/><text x="57.5549%" y="3327.50"></text></g><g><title>`0x7FFAC12C7776 (2 samples, 0.07%)</title><rect x="57.3049%" y="3301" width="0.0667%" height="15" fill="rgb(242,35,9)" fg:x="1718" fg:w="2"/><text x="57.5549%" y="3311.50"></text></g><g><title>`0x7FFAC12C78B4 (2 samples, 0.07%)</title><rect x="57.3049%" y="3285" width="0.0667%" height="15" fill="rgb(232,138,49)" fg:x="1718" fg:w="2"/><text x="57.5549%" y="3295.50"></text></g><g><title>`0x7FFAC12C809C (1 samples, 0.03%)</title><rect x="57.3382%" y="3269" width="0.0334%" height="15" fill="rgb(247,56,4)" fg:x="1719" fg:w="1"/><text x="57.5882%" y="3279.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;::push (1 samples, 0.03%)</title><rect x="57.3716%" y="3493" width="0.0334%" height="15" fill="rgb(226,179,17)" fg:x="1720" fg:w="1"/><text x="57.6216%" y="3503.50"></text></g><g><title>boggle.exe`core::ptr::write (1 samples, 0.03%)</title><rect x="57.3716%" y="3477" width="0.0334%" height="15" fill="rgb(216,163,45)" fg:x="1720" fg:w="1"/><text x="57.6216%" y="3487.50"></text></g><g><title>boggle.exe`alloc::string::String::pop (40 samples, 1.33%)</title><rect x="56.1041%" y="3557" width="1.3342%" height="15" fill="rgb(211,157,3)" fg:x="1682" fg:w="40"/><text x="56.3541%" y="3567.50"></text></g><g><title>boggle.exe`alloc::string::impl$28::deref (40 samples, 1.33%)</title><rect x="56.1041%" y="3541" width="1.3342%" height="15" fill="rgb(234,44,20)" fg:x="1682" fg:w="40"/><text x="56.3541%" y="3551.50"></text></g><g><title>boggle.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (40 samples, 1.33%)</title><rect x="56.1041%" y="3525" width="1.3342%" height="15" fill="rgb(254,138,23)" fg:x="1682" fg:w="40"/><text x="56.3541%" y="3535.50"></text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::collect_words(boggle::utils::dict_trie::DictTrieNode*, ref$&lt;str$&gt;, alloc::vec::Vec (40 samples, 1.33%)</title><rect x="56.1041%" y="3509" width="1.3342%" height="15" fill="rgb(206,119,39)" fg:x="1682" fg:w="40"/><text x="56.3541%" y="3519.50"></text></g><g><title>boggle.exe`std::collections::hash::map::impl$36::into_iter(std::collections::hash::map::HashMap (1 samples, 0.03%)</title><rect x="57.4049%" y="3493" width="0.0334%" height="15" fill="rgb(231,105,52)" fg:x="1721" fg:w="1"/><text x="57.6549%" y="3503.50"></text></g><g><title>boggle.exe`std::collections::hash::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;::iter (1 samples, 0.03%)</title><rect x="57.4049%" y="3477" width="0.0334%" height="15" fill="rgb(250,20,5)" fg:x="1721" fg:w="1"/><text x="57.6549%" y="3487.50"></text></g><g><title>boggle.exe`hashbrown::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt;::iter (1 samples, 0.03%)</title><rect x="57.4049%" y="3461" width="0.0334%" height="15" fill="rgb(215,198,30)" fg:x="1721" fg:w="1"/><text x="57.6549%" y="3471.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTable&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;::iter (1 samples, 0.03%)</title><rect x="57.4049%" y="3445" width="0.0334%" height="15" fill="rgb(246,142,8)" fg:x="1721" fg:w="1"/><text x="57.6549%" y="3455.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::iter (1 samples, 0.03%)</title><rect x="57.4049%" y="3429" width="0.0334%" height="15" fill="rgb(243,26,38)" fg:x="1721" fg:w="1"/><text x="57.6549%" y="3439.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawIterRange&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::new(unsigned char*, hashbrown::raw::Bucket&lt;tuple$ (1 samples, 0.03%)</title><rect x="57.4049%" y="3413" width="0.0334%" height="15" fill="rgb(205,133,28)" fg:x="1721" fg:w="1"/><text x="57.6549%" y="3423.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::load_aligned (1 samples, 0.03%)</title><rect x="57.4049%" y="3397" width="0.0334%" height="15" fill="rgb(212,34,0)" fg:x="1721" fg:w="1"/><text x="57.6549%" y="3407.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::match_empty_or_deleted (1 samples, 0.03%)</title><rect x="57.4049%" y="3381" width="0.0334%" height="15" fill="rgb(251,226,22)" fg:x="1721" fg:w="1"/><text x="57.6549%" y="3391.50"></text></g><g><title>boggle.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.03%)</title><rect x="57.4049%" y="3365" width="0.0334%" height="15" fill="rgb(252,119,9)" fg:x="1721" fg:w="1"/><text x="57.6549%" y="3375.50"></text></g><g><title>boggle.exe`alloc::string::String::push (1 samples, 0.03%)</title><rect x="57.4383%" y="3557" width="0.0334%" height="15" fill="rgb(213,150,50)" fg:x="1722" fg:w="1"/><text x="57.6883%" y="3567.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::push (1 samples, 0.03%)</title><rect x="57.4383%" y="3541" width="0.0334%" height="15" fill="rgb(212,24,39)" fg:x="1722" fg:w="1"/><text x="57.6883%" y="3551.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_mut_ptr (1 samples, 0.03%)</title><rect x="57.4383%" y="3525" width="0.0334%" height="15" fill="rgb(213,46,39)" fg:x="1722" fg:w="1"/><text x="57.6883%" y="3535.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::ptr (1 samples, 0.03%)</title><rect x="57.4383%" y="3509" width="0.0334%" height="15" fill="rgb(239,106,12)" fg:x="1722" fg:w="1"/><text x="57.6883%" y="3519.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (1 samples, 0.03%)</title><rect x="57.4383%" y="3493" width="0.0334%" height="15" fill="rgb(249,229,21)" fg:x="1722" fg:w="1"/><text x="57.6883%" y="3503.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (1 samples, 0.03%)</title><rect x="57.4383%" y="3477" width="0.0334%" height="15" fill="rgb(212,158,3)" fg:x="1722" fg:w="1"/><text x="57.6883%" y="3487.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::grow_one&lt;u8,alloc::alloc::Global&gt; (1 samples, 0.03%)</title><rect x="57.4383%" y="3461" width="0.0334%" height="15" fill="rgb(253,26,48)" fg:x="1722" fg:w="1"/><text x="57.6883%" y="3471.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_one (1 samples, 0.03%)</title><rect x="57.4383%" y="3445" width="0.0334%" height="15" fill="rgb(238,178,20)" fg:x="1722" fg:w="1"/><text x="57.6883%" y="3455.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (1 samples, 0.03%)</title><rect x="57.4383%" y="3429" width="0.0334%" height="15" fill="rgb(208,86,15)" fg:x="1722" fg:w="1"/><text x="57.6883%" y="3439.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (1 samples, 0.03%)</title><rect x="57.4383%" y="3413" width="0.0334%" height="15" fill="rgb(239,42,53)" fg:x="1722" fg:w="1"/><text x="57.6883%" y="3423.50"></text></g><g><title>boggle.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="57.4383%" y="3397" width="0.0334%" height="15" fill="rgb(245,226,8)" fg:x="1722" fg:w="1"/><text x="57.6883%" y="3407.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="57.4383%" y="3381" width="0.0334%" height="15" fill="rgb(216,176,32)" fg:x="1722" fg:w="1"/><text x="57.6883%" y="3391.50"></text></g><g><title>boggle.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="57.4383%" y="3365" width="0.0334%" height="15" fill="rgb(231,186,21)" fg:x="1722" fg:w="1"/><text x="57.6883%" y="3375.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="57.4383%" y="3349" width="0.0334%" height="15" fill="rgb(205,95,49)" fg:x="1722" fg:w="1"/><text x="57.6883%" y="3359.50"></text></g><g><title>`0x7FFAC12D5376 (1 samples, 0.03%)</title><rect x="57.4383%" y="3333" width="0.0334%" height="15" fill="rgb(217,145,8)" fg:x="1722" fg:w="1"/><text x="57.6883%" y="3343.50"></text></g><g><title>`0x7FFAC12D54B5 (1 samples, 0.03%)</title><rect x="57.4383%" y="3317" width="0.0334%" height="15" fill="rgb(239,144,48)" fg:x="1722" fg:w="1"/><text x="57.6883%" y="3327.50"></text></g><g><title>`0x7FFAC12D5E0B (1 samples, 0.03%)</title><rect x="57.4383%" y="3301" width="0.0334%" height="15" fill="rgb(214,189,23)" fg:x="1722" fg:w="1"/><text x="57.6883%" y="3311.50"></text></g><g><title>`0x7FFAC12D23A7 (1 samples, 0.03%)</title><rect x="57.4383%" y="3285" width="0.0334%" height="15" fill="rgb(229,157,17)" fg:x="1722" fg:w="1"/><text x="57.6883%" y="3295.50"></text></g><g><title>`0x7FFAC12C7776 (1 samples, 0.03%)</title><rect x="57.4716%" y="3365" width="0.0334%" height="15" fill="rgb(230,5,48)" fg:x="1723" fg:w="1"/><text x="57.7216%" y="3375.50"></text></g><g><title>`0x7FFAC12C78B4 (1 samples, 0.03%)</title><rect x="57.4716%" y="3349" width="0.0334%" height="15" fill="rgb(224,156,48)" fg:x="1723" fg:w="1"/><text x="57.7216%" y="3359.50"></text></g><g><title>`0x7FFAC12C803A (1 samples, 0.03%)</title><rect x="57.4716%" y="3333" width="0.0334%" height="15" fill="rgb(223,14,29)" fg:x="1723" fg:w="1"/><text x="57.7216%" y="3343.50"></text></g><g><title>boggle.exe`alloc::string::String::pop (43 samples, 1.43%)</title><rect x="56.1041%" y="3621" width="1.4343%" height="15" fill="rgb(229,96,36)" fg:x="1682" fg:w="43"/><text x="56.3541%" y="3631.50"></text></g><g><title>boggle.exe`alloc::string::impl$28::deref (43 samples, 1.43%)</title><rect x="56.1041%" y="3605" width="1.4343%" height="15" fill="rgb(231,102,53)" fg:x="1682" fg:w="43"/><text x="56.3541%" y="3615.50"></text></g><g><title>boggle.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (43 samples, 1.43%)</title><rect x="56.1041%" y="3589" width="1.4343%" height="15" fill="rgb(210,77,38)" fg:x="1682" fg:w="43"/><text x="56.3541%" y="3599.50"></text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::collect_words(boggle::utils::dict_trie::DictTrieNode*, ref$&lt;str$&gt;, alloc::vec::Vec (43 samples, 1.43%)</title><rect x="56.1041%" y="3573" width="1.4343%" height="15" fill="rgb(235,131,6)" fg:x="1682" fg:w="43"/><text x="56.3541%" y="3583.50"></text></g><g><title>boggle.exe`alloc::string::impl$102::to_string(ref$ (2 samples, 0.07%)</title><rect x="57.4716%" y="3557" width="0.0667%" height="15" fill="rgb(252,55,38)" fg:x="1723" fg:w="2"/><text x="57.7216%" y="3567.50"></text></g><g><title>boggle.exe`alloc::string::impl$44::from(ref$ (2 samples, 0.07%)</title><rect x="57.4716%" y="3541" width="0.0667%" height="15" fill="rgb(246,38,14)" fg:x="1723" fg:w="2"/><text x="57.7216%" y="3551.50"></text></g><g><title>boggle.exe`alloc::str::impl$4::to_owned(ref$ (2 samples, 0.07%)</title><rect x="57.4716%" y="3525" width="0.0667%" height="15" fill="rgb(242,27,5)" fg:x="1723" fg:w="2"/><text x="57.7216%" y="3535.50"></text></g><g><title>boggle.exe`alloc::slice::impl$9::to_owned(ref$&lt;slice2$ (2 samples, 0.07%)</title><rect x="57.4716%" y="3509" width="0.0667%" height="15" fill="rgb(228,65,35)" fg:x="1723" fg:w="2"/><text x="57.7216%" y="3519.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec(ref$&lt;slice2$ (2 samples, 0.07%)</title><rect x="57.4716%" y="3493" width="0.0667%" height="15" fill="rgb(245,93,11)" fg:x="1723" fg:w="2"/><text x="57.7216%" y="3503.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec_in(ref$&lt;slice2$ (2 samples, 0.07%)</title><rect x="57.4716%" y="3477" width="0.0667%" height="15" fill="rgb(213,1,31)" fg:x="1723" fg:w="2"/><text x="57.7216%" y="3487.50"></text></g><g><title>boggle.exe`alloc::slice::hack::to_vec(ref$&lt;slice2$ (2 samples, 0.07%)</title><rect x="57.4716%" y="3461" width="0.0667%" height="15" fill="rgb(237,205,14)" fg:x="1723" fg:w="2"/><text x="57.7216%" y="3471.50"></text></g><g><title>boggle.exe`alloc::slice::hack::impl$1::to_vec(ref$&lt;slice2$ (2 samples, 0.07%)</title><rect x="57.4716%" y="3445" width="0.0667%" height="15" fill="rgb(232,118,45)" fg:x="1723" fg:w="2"/><text x="57.7216%" y="3455.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (2 samples, 0.07%)</title><rect x="57.4716%" y="3429" width="0.0667%" height="15" fill="rgb(218,5,6)" fg:x="1723" fg:w="2"/><text x="57.7216%" y="3439.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (2 samples, 0.07%)</title><rect x="57.4716%" y="3413" width="0.0667%" height="15" fill="rgb(251,87,51)" fg:x="1723" fg:w="2"/><text x="57.7216%" y="3423.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (2 samples, 0.07%)</title><rect x="57.4716%" y="3397" width="0.0667%" height="15" fill="rgb(207,225,20)" fg:x="1723" fg:w="2"/><text x="57.7216%" y="3407.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (2 samples, 0.07%)</title><rect x="57.4716%" y="3381" width="0.0667%" height="15" fill="rgb(222,78,54)" fg:x="1723" fg:w="2"/><text x="57.7216%" y="3391.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::allocate (1 samples, 0.03%)</title><rect x="57.5050%" y="3365" width="0.0334%" height="15" fill="rgb(232,85,16)" fg:x="1724" fg:w="1"/><text x="57.7550%" y="3375.50"></text></g><g><title>boggle.exe`alloc::alloc::Global::alloc_impl (1 samples, 0.03%)</title><rect x="57.5050%" y="3349" width="0.0334%" height="15" fill="rgb(244,25,33)" fg:x="1724" fg:w="1"/><text x="57.7550%" y="3359.50"></text></g><g><title>boggle.exe`alloc::alloc::alloc (1 samples, 0.03%)</title><rect x="57.5050%" y="3333" width="0.0334%" height="15" fill="rgb(233,24,36)" fg:x="1724" fg:w="1"/><text x="57.7550%" y="3343.50"></text></g><g><title>boggle.exe`core::ptr::read_volatile (1 samples, 0.03%)</title><rect x="57.5050%" y="3317" width="0.0334%" height="15" fill="rgb(253,49,54)" fg:x="1724" fg:w="1"/><text x="57.7550%" y="3327.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="57.5384%" y="3445" width="0.0334%" height="15" fill="rgb(245,12,22)" fg:x="1725" fg:w="1"/><text x="57.7884%" y="3455.50"></text></g><g><title>boggle.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="57.5384%" y="3429" width="0.0334%" height="15" fill="rgb(253,141,28)" fg:x="1725" fg:w="1"/><text x="57.7884%" y="3439.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="57.5384%" y="3413" width="0.0334%" height="15" fill="rgb(225,207,27)" fg:x="1725" fg:w="1"/><text x="57.7884%" y="3423.50"></text></g><g><title>boggle.exe`__rust_realloc (1 samples, 0.03%)</title><rect x="57.5384%" y="3397" width="0.0334%" height="15" fill="rgb(220,84,2)" fg:x="1725" fg:w="1"/><text x="57.7884%" y="3407.50"></text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::collect_words(boggle::utils::dict_trie::DictTrieNode*, ref$&lt;str$&gt;, alloc::vec::Vec (45 samples, 1.50%)</title><rect x="56.1041%" y="3701" width="1.5010%" height="15" fill="rgb(224,37,37)" fg:x="1682" fg:w="45"/><text x="56.3541%" y="3711.50"></text></g><g><title>boggle.exe`alloc::string::String::pop (45 samples, 1.50%)</title><rect x="56.1041%" y="3685" width="1.5010%" height="15" fill="rgb(220,143,18)" fg:x="1682" fg:w="45"/><text x="56.3541%" y="3695.50"></text></g><g><title>boggle.exe`alloc::string::impl$28::deref (45 samples, 1.50%)</title><rect x="56.1041%" y="3669" width="1.5010%" height="15" fill="rgb(210,88,33)" fg:x="1682" fg:w="45"/><text x="56.3541%" y="3679.50"></text></g><g><title>boggle.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (45 samples, 1.50%)</title><rect x="56.1041%" y="3653" width="1.5010%" height="15" fill="rgb(219,87,51)" fg:x="1682" fg:w="45"/><text x="56.3541%" y="3663.50"></text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::collect_words(boggle::utils::dict_trie::DictTrieNode*, ref$&lt;str$&gt;, alloc::vec::Vec (45 samples, 1.50%)</title><rect x="56.1041%" y="3637" width="1.5010%" height="15" fill="rgb(211,7,35)" fg:x="1682" fg:w="45"/><text x="56.3541%" y="3647.50"></text></g><g><title>boggle.exe`alloc::string::String::push (2 samples, 0.07%)</title><rect x="57.5384%" y="3621" width="0.0667%" height="15" fill="rgb(232,77,2)" fg:x="1725" fg:w="2"/><text x="57.7884%" y="3631.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::push (2 samples, 0.07%)</title><rect x="57.5384%" y="3605" width="0.0667%" height="15" fill="rgb(249,94,25)" fg:x="1725" fg:w="2"/><text x="57.7884%" y="3615.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_mut_ptr (2 samples, 0.07%)</title><rect x="57.5384%" y="3589" width="0.0667%" height="15" fill="rgb(215,112,2)" fg:x="1725" fg:w="2"/><text x="57.7884%" y="3599.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::ptr (2 samples, 0.07%)</title><rect x="57.5384%" y="3573" width="0.0667%" height="15" fill="rgb(226,115,48)" fg:x="1725" fg:w="2"/><text x="57.7884%" y="3583.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (2 samples, 0.07%)</title><rect x="57.5384%" y="3557" width="0.0667%" height="15" fill="rgb(249,196,10)" fg:x="1725" fg:w="2"/><text x="57.7884%" y="3567.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (2 samples, 0.07%)</title><rect x="57.5384%" y="3541" width="0.0667%" height="15" fill="rgb(237,109,14)" fg:x="1725" fg:w="2"/><text x="57.7884%" y="3551.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::grow_one&lt;u8,alloc::alloc::Global&gt; (2 samples, 0.07%)</title><rect x="57.5384%" y="3525" width="0.0667%" height="15" fill="rgb(217,103,53)" fg:x="1725" fg:w="2"/><text x="57.7884%" y="3535.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_one (2 samples, 0.07%)</title><rect x="57.5384%" y="3509" width="0.0667%" height="15" fill="rgb(244,137,9)" fg:x="1725" fg:w="2"/><text x="57.7884%" y="3519.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (2 samples, 0.07%)</title><rect x="57.5384%" y="3493" width="0.0667%" height="15" fill="rgb(227,201,3)" fg:x="1725" fg:w="2"/><text x="57.7884%" y="3503.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (2 samples, 0.07%)</title><rect x="57.5384%" y="3477" width="0.0667%" height="15" fill="rgb(243,94,6)" fg:x="1725" fg:w="2"/><text x="57.7884%" y="3487.50"></text></g><g><title>boggle.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (2 samples, 0.07%)</title><rect x="57.5384%" y="3461" width="0.0667%" height="15" fill="rgb(235,118,5)" fg:x="1725" fg:w="2"/><text x="57.7884%" y="3471.50"></text></g><g><title>boggle.exe`enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$&lt;u8&gt; &gt;,core::alloc::AllocError&gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$&lt;u8&gt; &gt;,core::alloc::AllocError&gt; &gt;, alloc::raw_vec::finish_grow::closure_env$0 (1 samples, 0.03%)</title><rect x="57.5717%" y="3445" width="0.0334%" height="15" fill="rgb(247,10,30)" fg:x="1726" fg:w="1"/><text x="57.8217%" y="3455.50"></text></g><g><title>boggle.exe`alloc::raw_vec::min_non_zero_cap (1 samples, 0.03%)</title><rect x="57.6051%" y="3493" width="0.0334%" height="15" fill="rgb(205,26,28)" fg:x="1727" fg:w="1"/><text x="57.8551%" y="3503.50"></text></g><g><title>`0x7FFAC12D53E1 (1 samples, 0.03%)</title><rect x="57.6384%" y="3397" width="0.0334%" height="15" fill="rgb(206,99,35)" fg:x="1728" fg:w="1"/><text x="57.8884%" y="3407.50"></text></g><g><title>`0x7FFAC12D5DAA (1 samples, 0.03%)</title><rect x="57.6718%" y="3381" width="0.0334%" height="15" fill="rgb(238,130,40)" fg:x="1729" fg:w="1"/><text x="57.9218%" y="3391.50"></text></g><g><title>`0x7FFAC12C7776 (1 samples, 0.03%)</title><rect x="57.6718%" y="3365" width="0.0334%" height="15" fill="rgb(224,126,31)" fg:x="1729" fg:w="1"/><text x="57.9218%" y="3375.50"></text></g><g><title>`0x7FFAC12C78B4 (1 samples, 0.03%)</title><rect x="57.6718%" y="3349" width="0.0334%" height="15" fill="rgb(254,105,17)" fg:x="1729" fg:w="1"/><text x="57.9218%" y="3359.50"></text></g><g><title>`0x7FFAC12C7FF0 (1 samples, 0.03%)</title><rect x="57.6718%" y="3333" width="0.0334%" height="15" fill="rgb(216,87,36)" fg:x="1729" fg:w="1"/><text x="57.9218%" y="3343.50"></text></g><g><title>`0x7FFAC12D54B5 (2 samples, 0.07%)</title><rect x="57.6718%" y="3397" width="0.0667%" height="15" fill="rgb(240,21,12)" fg:x="1729" fg:w="2"/><text x="57.9218%" y="3407.50"></text></g><g><title>`0x7FFAC12D5E0B (1 samples, 0.03%)</title><rect x="57.7051%" y="3381" width="0.0334%" height="15" fill="rgb(245,192,34)" fg:x="1730" fg:w="1"/><text x="57.9551%" y="3391.50"></text></g><g><title>`0x7FFAC12D23A7 (1 samples, 0.03%)</title><rect x="57.7051%" y="3365" width="0.0334%" height="15" fill="rgb(226,100,49)" fg:x="1730" fg:w="1"/><text x="57.9551%" y="3375.50"></text></g><g><title>boggle.exe`alloc::string::impl$24::add(alloc::string::String, ref$ (5 samples, 0.17%)</title><rect x="57.6051%" y="3541" width="0.1668%" height="15" fill="rgb(245,188,27)" fg:x="1727" fg:w="5"/><text x="57.8551%" y="3551.50"></text></g><g><title>boggle.exe`alloc::raw_vec::impl$5::reserve::do_reserve_and_handle&lt;alloc::alloc::Global&gt;(alloc::raw_vec::RawVecInner (5 samples, 0.17%)</title><rect x="57.6051%" y="3525" width="0.1668%" height="15" fill="rgb(212,170,8)" fg:x="1727" fg:w="5"/><text x="57.8551%" y="3535.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (5 samples, 0.17%)</title><rect x="57.6051%" y="3509" width="0.1668%" height="15" fill="rgb(217,113,29)" fg:x="1727" fg:w="5"/><text x="57.8551%" y="3519.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (4 samples, 0.13%)</title><rect x="57.6384%" y="3493" width="0.1334%" height="15" fill="rgb(237,30,3)" fg:x="1728" fg:w="4"/><text x="57.8884%" y="3503.50"></text></g><g><title>boggle.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (4 samples, 0.13%)</title><rect x="57.6384%" y="3477" width="0.1334%" height="15" fill="rgb(227,19,28)" fg:x="1728" fg:w="4"/><text x="57.8884%" y="3487.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (4 samples, 0.13%)</title><rect x="57.6384%" y="3461" width="0.1334%" height="15" fill="rgb(239,172,45)" fg:x="1728" fg:w="4"/><text x="57.8884%" y="3471.50"></text></g><g><title>boggle.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (4 samples, 0.13%)</title><rect x="57.6384%" y="3445" width="0.1334%" height="15" fill="rgb(254,55,39)" fg:x="1728" fg:w="4"/><text x="57.8884%" y="3455.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (4 samples, 0.13%)</title><rect x="57.6384%" y="3429" width="0.1334%" height="15" fill="rgb(249,208,12)" fg:x="1728" fg:w="4"/><text x="57.8884%" y="3439.50"></text></g><g><title>`0x7FFAC12D5376 (4 samples, 0.13%)</title><rect x="57.6384%" y="3413" width="0.1334%" height="15" fill="rgb(240,52,13)" fg:x="1728" fg:w="4"/><text x="57.8884%" y="3423.50"></text></g><g><title>`0x7FFAC12D54F2 (1 samples, 0.03%)</title><rect x="57.7385%" y="3397" width="0.0334%" height="15" fill="rgb(252,149,13)" fg:x="1731" fg:w="1"/><text x="57.9885%" y="3407.50"></text></g><g><title>`0x7FFAC1403440 (1 samples, 0.03%)</title><rect x="57.7385%" y="3381" width="0.0334%" height="15" fill="rgb(232,81,48)" fg:x="1731" fg:w="1"/><text x="57.9885%" y="3391.50"></text></g><g><title>boggle.exe`alloc::string::impl$7::from_iter (3 samples, 0.10%)</title><rect x="57.7718%" y="3525" width="0.1001%" height="15" fill="rgb(222,144,2)" fg:x="1732" fg:w="3"/><text x="58.0218%" y="3535.50"></text></g><g><title>boggle.exe`alloc::string::impl$13::extend (2 samples, 0.07%)</title><rect x="57.8052%" y="3509" width="0.0667%" height="15" fill="rgb(216,81,32)" fg:x="1733" fg:w="2"/><text x="58.0552%" y="3519.50"></text></g><g><title>boggle.exe`alloc::raw_vec::impl$5::reserve::do_reserve_and_handle&lt;alloc::alloc::Global&gt;(alloc::raw_vec::RawVecInner (2 samples, 0.07%)</title><rect x="57.8052%" y="3493" width="0.0667%" height="15" fill="rgb(244,78,51)" fg:x="1733" fg:w="2"/><text x="58.0552%" y="3503.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (2 samples, 0.07%)</title><rect x="57.8052%" y="3477" width="0.0667%" height="15" fill="rgb(217,66,21)" fg:x="1733" fg:w="2"/><text x="58.0552%" y="3487.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (2 samples, 0.07%)</title><rect x="57.8052%" y="3461" width="0.0667%" height="15" fill="rgb(247,101,42)" fg:x="1733" fg:w="2"/><text x="58.0552%" y="3471.50"></text></g><g><title>boggle.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (2 samples, 0.07%)</title><rect x="57.8052%" y="3445" width="0.0667%" height="15" fill="rgb(227,81,39)" fg:x="1733" fg:w="2"/><text x="58.0552%" y="3455.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="57.8386%" y="3429" width="0.0334%" height="15" fill="rgb(220,223,44)" fg:x="1734" fg:w="1"/><text x="58.0886%" y="3439.50"></text></g><g><title>boggle.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="57.8386%" y="3413" width="0.0334%" height="15" fill="rgb(205,218,2)" fg:x="1734" fg:w="1"/><text x="58.0886%" y="3423.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="57.8386%" y="3397" width="0.0334%" height="15" fill="rgb(212,207,28)" fg:x="1734" fg:w="1"/><text x="58.0886%" y="3407.50"></text></g><g><title>`0x7FFAC12C7776 (1 samples, 0.03%)</title><rect x="57.8386%" y="3381" width="0.0334%" height="15" fill="rgb(224,12,41)" fg:x="1734" fg:w="1"/><text x="58.0886%" y="3391.50"></text></g><g><title>`0x7FFAC12C78B7 (1 samples, 0.03%)</title><rect x="57.8386%" y="3365" width="0.0334%" height="15" fill="rgb(216,118,12)" fg:x="1734" fg:w="1"/><text x="58.0886%" y="3375.50"></text></g><g><title>boggle.exe`core::char::methods::impl$0::to_uppercase (4 samples, 0.13%)</title><rect x="57.7718%" y="3541" width="0.1334%" height="15" fill="rgb(252,97,46)" fg:x="1732" fg:w="4"/><text x="58.0218%" y="3551.50"></text></g><g><title>boggle.exe`core::char::CaseMappingIter::new (1 samples, 0.03%)</title><rect x="57.8719%" y="3525" width="0.0334%" height="15" fill="rgb(244,206,19)" fg:x="1735" fg:w="1"/><text x="58.1219%" y="3535.50"></text></g><g><title>`0x7FFAC12D23A7 (1 samples, 0.03%)</title><rect x="57.9053%" y="3429" width="0.0334%" height="15" fill="rgb(231,84,31)" fg:x="1736" fg:w="1"/><text x="58.1553%" y="3439.50"></text></g><g><title>`0x7FFAC12D27E3 (1 samples, 0.03%)</title><rect x="57.9386%" y="3429" width="0.0334%" height="15" fill="rgb(244,133,0)" fg:x="1737" fg:w="1"/><text x="58.1886%" y="3439.50"></text></g><g><title>boggle.exe`boggle::BoggleSolver::has_extension (58 samples, 1.93%)</title><rect x="56.0707%" y="3829" width="1.9346%" height="15" fill="rgb(223,15,50)" fg:x="1681" fg:w="58"/><text x="56.3207%" y="3839.50">b..</text></g><g><title>boggle.exe`core::ptr::drop_in_place(alloc::vec::Vec (58 samples, 1.93%)</title><rect x="56.0707%" y="3813" width="1.9346%" height="15" fill="rgb(250,118,49)" fg:x="1681" fg:w="58"/><text x="56.3207%" y="3823.50">b..</text></g><g><title>boggle.exe`alloc::vec::impl$25::drop(alloc::vec::Vec (58 samples, 1.93%)</title><rect x="56.0707%" y="3797" width="1.9346%" height="15" fill="rgb(248,25,38)" fg:x="1681" fg:w="58"/><text x="56.3207%" y="3807.50">b..</text></g><g><title>boggle.exe`alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;::as_mut_ptr (58 samples, 1.93%)</title><rect x="56.0707%" y="3781" width="1.9346%" height="15" fill="rgb(215,70,14)" fg:x="1681" fg:w="58"/><text x="56.3207%" y="3791.50">b..</text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;alloc::string::String,alloc::alloc::Global&gt;::ptr (58 samples, 1.93%)</title><rect x="56.0707%" y="3765" width="1.9346%" height="15" fill="rgb(215,28,15)" fg:x="1681" fg:w="58"/><text x="56.3207%" y="3775.50">b..</text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (58 samples, 1.93%)</title><rect x="56.0707%" y="3749" width="1.9346%" height="15" fill="rgb(243,6,28)" fg:x="1681" fg:w="58"/><text x="56.3207%" y="3759.50">b..</text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (58 samples, 1.93%)</title><rect x="56.0707%" y="3733" width="1.9346%" height="15" fill="rgb(222,130,1)" fg:x="1681" fg:w="58"/><text x="56.3207%" y="3743.50">b..</text></g><g><title>boggle.exe`boggle::utils::dict_trie::DictTrie::extend_word (58 samples, 1.93%)</title><rect x="56.0707%" y="3717" width="1.9346%" height="15" fill="rgb(236,166,44)" fg:x="1681" fg:w="58"/><text x="56.3207%" y="3727.50">b..</text></g><g><title>boggle.exe`core::ptr::drop_in_place (12 samples, 0.40%)</title><rect x="57.6051%" y="3701" width="0.4003%" height="15" fill="rgb(221,108,14)" fg:x="1727" fg:w="12"/><text x="57.8551%" y="3711.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(alloc::vec::Vec (12 samples, 0.40%)</title><rect x="57.6051%" y="3685" width="0.4003%" height="15" fill="rgb(252,3,45)" fg:x="1727" fg:w="12"/><text x="57.8551%" y="3695.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (12 samples, 0.40%)</title><rect x="57.6051%" y="3669" width="0.4003%" height="15" fill="rgb(237,68,30)" fg:x="1727" fg:w="12"/><text x="57.8551%" y="3679.50"></text></g><g><title>boggle.exe`alloc::raw_vec::impl$4::drop(alloc::raw_vec::RawVec (12 samples, 0.40%)</title><rect x="57.6051%" y="3653" width="0.4003%" height="15" fill="rgb(211,79,22)" fg:x="1727" fg:w="12"/><text x="57.8551%" y="3663.50"></text></g><g><title>boggle.exe`alloc::vec::in_place_collect::from_iter_in_place&lt;core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter&lt;alloc::string::String,alloc::alloc::Global&gt;,boggle::utils::dict_trie::impl$1::extend_word::closure_env$0&gt;,alloc::string::String&gt;(core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter (12 samples, 0.40%)</title><rect x="57.6051%" y="3637" width="0.4003%" height="15" fill="rgb(252,185,21)" fg:x="1727" fg:w="12"/><text x="57.8551%" y="3647.50"></text></g><g><title>boggle.exe`alloc::vec::into_iter::IntoIter&lt;alloc::string::String,alloc::alloc::Global&gt;::forget_allocation_drop_remaining (12 samples, 0.40%)</title><rect x="57.6051%" y="3621" width="0.4003%" height="15" fill="rgb(225,189,26)" fg:x="1727" fg:w="12"/><text x="57.8551%" y="3631.50"></text></g><g><title>boggle.exe`alloc::vec::into_iter::IntoIter&lt;alloc::string::String,alloc::alloc::Global&gt;::as_raw_mut_slice (12 samples, 0.40%)</title><rect x="57.6051%" y="3605" width="0.4003%" height="15" fill="rgb(241,30,40)" fg:x="1727" fg:w="12"/><text x="57.8551%" y="3615.50"></text></g><g><title>boggle.exe`alloc::vec::into_iter::impl$5::try_fold&lt;alloc::string::String,alloc::alloc::Global,alloc::vec::in_place_drop::InPlaceDrop&lt;alloc::string::String&gt;,core::iter::adapters::map::map_try_fold::closure_env$0&lt;alloc::string::String,alloc::string::String,alloc::vec::in_place_drop::InPlaceDrop&lt;alloc::string::String&gt;,enum2$&lt;core::result::Result&lt;alloc::vec::in_place_drop::InPlaceDrop&lt;alloc::string::String&gt;,never$&gt; &gt;,boggle::utils::dict_trie::impl$1::extend_word::closure_env$0,alloc::vec::in_place_collect::write_in_place_with_drop::closure_env$0&lt;alloc::string::String&gt; &gt;,enum2$&lt;core::result::Result&lt;alloc::vec::in_place_drop::InPlaceDrop&lt;alloc::string::String&gt;,never$&gt; &gt; &gt;(alloc::vec::into_iter::IntoIter&lt;alloc::string::String,alloc::alloc::Global&gt;*, alloc::vec::in_place_drop::InPlaceDrop&lt;alloc::string::String&gt;, core::iter::adapters::map::map_try_fold::closure_env$0&lt;alloc::string::String,alloc::string::String,alloc::vec::in_place_drop::InPlaceDrop&lt;alloc::string::String&gt;,enum2$&lt;core::result::Result&lt;alloc::vec::in_place_drop::InPlaceDrop&lt;alloc::string::String&gt;,never$&gt; &gt;,boggle::utils::dict_trie::impl$1::extend_word::closure_env$0,alloc::vec::in_place_collect::write_in_place_with_drop::closure_env$0 (12 samples, 0.40%)</title><rect x="57.6051%" y="3589" width="0.4003%" height="15" fill="rgb(235,215,44)" fg:x="1727" fg:w="12"/><text x="57.8551%" y="3599.50"></text></g><g><title>boggle.exe`core::iter::adapters::map::map_try_fold::closure$0(core::iter::adapters::map::map_try_fold::closure_env$0&lt;alloc::string::String,alloc::string::String,alloc::vec::in_place_drop::InPlaceDrop&lt;alloc::string::String&gt;,enum2$&lt;core::result::Result&lt;alloc::vec::in_place_drop::InPlaceDrop&lt;alloc::string::String&gt;,never$&gt; &gt;,boggle::utils::dict_trie::impl$1::extend_word::closure_env$0,alloc::vec::in_place_collect::write_in_place_with_drop::closure_env$0&lt;alloc::string::String&gt; &gt;*, alloc::vec::in_place_drop::InPlaceDrop (12 samples, 0.40%)</title><rect x="57.6051%" y="3573" width="0.4003%" height="15" fill="rgb(205,8,29)" fg:x="1727" fg:w="12"/><text x="57.8551%" y="3583.50"></text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::closure$0 (12 samples, 0.40%)</title><rect x="57.6051%" y="3557" width="0.4003%" height="15" fill="rgb(241,137,42)" fg:x="1727" fg:w="12"/><text x="57.8551%" y="3567.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place (3 samples, 0.10%)</title><rect x="57.9053%" y="3541" width="0.1001%" height="15" fill="rgb(237,155,2)" fg:x="1736" fg:w="3"/><text x="58.1553%" y="3551.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(alloc::vec::Vec (3 samples, 0.10%)</title><rect x="57.9053%" y="3525" width="0.1001%" height="15" fill="rgb(245,29,42)" fg:x="1736" fg:w="3"/><text x="58.1553%" y="3535.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (3 samples, 0.10%)</title><rect x="57.9053%" y="3509" width="0.1001%" height="15" fill="rgb(234,101,35)" fg:x="1736" fg:w="3"/><text x="58.1553%" y="3519.50"></text></g><g><title>boggle.exe`alloc::raw_vec::impl$4::drop(alloc::raw_vec::RawVec (3 samples, 0.10%)</title><rect x="57.9053%" y="3493" width="0.1001%" height="15" fill="rgb(228,64,37)" fg:x="1736" fg:w="3"/><text x="58.1553%" y="3503.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::deallocate (3 samples, 0.10%)</title><rect x="57.9053%" y="3477" width="0.1001%" height="15" fill="rgb(217,214,36)" fg:x="1736" fg:w="3"/><text x="58.1553%" y="3487.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (3 samples, 0.10%)</title><rect x="57.9053%" y="3461" width="0.1001%" height="15" fill="rgb(243,70,3)" fg:x="1736" fg:w="3"/><text x="58.1553%" y="3471.50"></text></g><g><title>boggle.exe`alloc::alloc::dealloc (3 samples, 0.10%)</title><rect x="57.9053%" y="3445" width="0.1001%" height="15" fill="rgb(253,158,52)" fg:x="1736" fg:w="3"/><text x="58.1553%" y="3455.50"></text></g><g><title>boggle.exe`__rust_dealloc (1 samples, 0.03%)</title><rect x="57.9720%" y="3429" width="0.0334%" height="15" fill="rgb(234,111,54)" fg:x="1738" fg:w="1"/><text x="58.2220%" y="3439.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;tuple$&lt;i32,i32&gt;,alloc::alloc::Global&gt;::push(tuple$ (1 samples, 0.03%)</title><rect x="58.0053%" y="3813" width="0.0334%" height="15" fill="rgb(217,70,32)" fg:x="1739" fg:w="1"/><text x="58.2553%" y="3823.50"></text></g><g><title>`0x7FFAC12C7893 (1 samples, 0.03%)</title><rect x="58.0387%" y="3541" width="0.0334%" height="15" fill="rgb(234,18,33)" fg:x="1740" fg:w="1"/><text x="58.2887%" y="3551.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;::new (2 samples, 0.07%)</title><rect x="58.0387%" y="3685" width="0.0667%" height="15" fill="rgb(234,12,49)" fg:x="1740" fg:w="2"/><text x="58.2887%" y="3695.50"></text></g><g><title>boggle.exe`alloc::str::impl$5::to_lowercase (2 samples, 0.07%)</title><rect x="58.0387%" y="3669" width="0.0667%" height="15" fill="rgb(236,10,21)" fg:x="1740" fg:w="2"/><text x="58.2887%" y="3679.50"></text></g><g><title>boggle.exe`alloc::str::convert_while_ascii (2 samples, 0.07%)</title><rect x="58.0387%" y="3653" width="0.0667%" height="15" fill="rgb(248,182,45)" fg:x="1740" fg:w="2"/><text x="58.2887%" y="3663.50"></text></g><g><title>boggle.exe`alloc::vec::Vec::with_capacity (2 samples, 0.07%)</title><rect x="58.0387%" y="3637" width="0.0667%" height="15" fill="rgb(217,95,36)" fg:x="1740" fg:w="2"/><text x="58.2887%" y="3647.50"></text></g><g><title>boggle.exe`alloc::vec::Vec::with_capacity_in (2 samples, 0.07%)</title><rect x="58.0387%" y="3621" width="0.0667%" height="15" fill="rgb(212,110,31)" fg:x="1740" fg:w="2"/><text x="58.2887%" y="3631.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec::with_capacity_in (2 samples, 0.07%)</title><rect x="58.0387%" y="3605" width="0.0667%" height="15" fill="rgb(206,32,53)" fg:x="1740" fg:w="2"/><text x="58.2887%" y="3615.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner::with_capacity_in (2 samples, 0.07%)</title><rect x="58.0387%" y="3589" width="0.0667%" height="15" fill="rgb(246,141,37)" fg:x="1740" fg:w="2"/><text x="58.2887%" y="3599.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner::try_allocate_in (2 samples, 0.07%)</title><rect x="58.0387%" y="3573" width="0.0667%" height="15" fill="rgb(219,16,7)" fg:x="1740" fg:w="2"/><text x="58.2887%" y="3583.50"></text></g><g><title>`0x7FFAC12C7776 (2 samples, 0.07%)</title><rect x="58.0387%" y="3557" width="0.0667%" height="15" fill="rgb(230,205,45)" fg:x="1740" fg:w="2"/><text x="58.2887%" y="3567.50"></text></g><g><title>`0x7FFAC12C78B4 (1 samples, 0.03%)</title><rect x="58.0720%" y="3541" width="0.0334%" height="15" fill="rgb(231,43,49)" fg:x="1741" fg:w="1"/><text x="58.3220%" y="3551.50"></text></g><g><title>`0x7FFAC12C8047 (1 samples, 0.03%)</title><rect x="58.0720%" y="3525" width="0.0334%" height="15" fill="rgb(212,106,34)" fg:x="1741" fg:w="1"/><text x="58.3220%" y="3535.50"></text></g><g><title>boggle.exe`alloc::string::String::pop (1 samples, 0.03%)</title><rect x="58.1054%" y="3093" width="0.0334%" height="15" fill="rgb(206,83,17)" fg:x="1742" fg:w="1"/><text x="58.3554%" y="3103.50"></text></g><g><title>boggle.exe`alloc::string::impl$28::deref (1 samples, 0.03%)</title><rect x="58.1054%" y="3077" width="0.0334%" height="15" fill="rgb(244,154,49)" fg:x="1742" fg:w="1"/><text x="58.3554%" y="3087.50"></text></g><g><title>boggle.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (1 samples, 0.03%)</title><rect x="58.1054%" y="3061" width="0.0334%" height="15" fill="rgb(244,149,49)" fg:x="1742" fg:w="1"/><text x="58.3554%" y="3071.50"></text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::collect_words(boggle::utils::dict_trie::DictTrieNode*, ref$&lt;str$&gt;, alloc::vec::Vec (1 samples, 0.03%)</title><rect x="58.1054%" y="3045" width="0.0334%" height="15" fill="rgb(227,134,18)" fg:x="1742" fg:w="1"/><text x="58.3554%" y="3055.50"></text></g><g><title>boggle.exe`alloc::string::String::pop (1 samples, 0.03%)</title><rect x="58.1054%" y="3029" width="0.0334%" height="15" fill="rgb(237,116,36)" fg:x="1742" fg:w="1"/><text x="58.3554%" y="3039.50"></text></g><g><title>boggle.exe`alloc::string::impl$28::deref (1 samples, 0.03%)</title><rect x="58.1054%" y="3013" width="0.0334%" height="15" fill="rgb(205,129,40)" fg:x="1742" fg:w="1"/><text x="58.3554%" y="3023.50"></text></g><g><title>boggle.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (1 samples, 0.03%)</title><rect x="58.1054%" y="2997" width="0.0334%" height="15" fill="rgb(236,178,4)" fg:x="1742" fg:w="1"/><text x="58.3554%" y="3007.50"></text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::collect_words(boggle::utils::dict_trie::DictTrieNode*, ref$&lt;str$&gt;, alloc::vec::Vec (1 samples, 0.03%)</title><rect x="58.1054%" y="2981" width="0.0334%" height="15" fill="rgb(251,76,53)" fg:x="1742" fg:w="1"/><text x="58.3554%" y="2991.50"></text></g><g><title>boggle.exe`alloc::string::impl$102::to_string(ref$ (1 samples, 0.03%)</title><rect x="58.1054%" y="2965" width="0.0334%" height="15" fill="rgb(242,92,40)" fg:x="1742" fg:w="1"/><text x="58.3554%" y="2975.50"></text></g><g><title>boggle.exe`alloc::string::impl$44::from(ref$ (1 samples, 0.03%)</title><rect x="58.1054%" y="2949" width="0.0334%" height="15" fill="rgb(209,45,30)" fg:x="1742" fg:w="1"/><text x="58.3554%" y="2959.50"></text></g><g><title>boggle.exe`alloc::str::impl$4::to_owned(ref$ (1 samples, 0.03%)</title><rect x="58.1054%" y="2933" width="0.0334%" height="15" fill="rgb(218,157,36)" fg:x="1742" fg:w="1"/><text x="58.3554%" y="2943.50"></text></g><g><title>boggle.exe`alloc::slice::impl$9::to_owned(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="58.1054%" y="2917" width="0.0334%" height="15" fill="rgb(222,186,16)" fg:x="1742" fg:w="1"/><text x="58.3554%" y="2927.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="58.1054%" y="2901" width="0.0334%" height="15" fill="rgb(254,72,35)" fg:x="1742" fg:w="1"/><text x="58.3554%" y="2911.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec_in(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="58.1054%" y="2885" width="0.0334%" height="15" fill="rgb(224,25,35)" fg:x="1742" fg:w="1"/><text x="58.3554%" y="2895.50"></text></g><g><title>boggle.exe`alloc::slice::hack::to_vec(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="58.1054%" y="2869" width="0.0334%" height="15" fill="rgb(206,135,52)" fg:x="1742" fg:w="1"/><text x="58.3554%" y="2879.50"></text></g><g><title>boggle.exe`alloc::slice::hack::impl$1::to_vec(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="58.1054%" y="2853" width="0.0334%" height="15" fill="rgb(229,174,47)" fg:x="1742" fg:w="1"/><text x="58.3554%" y="2863.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="58.1054%" y="2837" width="0.0334%" height="15" fill="rgb(242,184,21)" fg:x="1742" fg:w="1"/><text x="58.3554%" y="2847.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="58.1054%" y="2821" width="0.0334%" height="15" fill="rgb(213,22,45)" fg:x="1742" fg:w="1"/><text x="58.3554%" y="2831.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="58.1054%" y="2805" width="0.0334%" height="15" fill="rgb(237,81,54)" fg:x="1742" fg:w="1"/><text x="58.3554%" y="2815.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (1 samples, 0.03%)</title><rect x="58.1054%" y="2789" width="0.0334%" height="15" fill="rgb(248,177,18)" fg:x="1742" fg:w="1"/><text x="58.3554%" y="2799.50"></text></g><g><title>`0x7FFAC12C7776 (1 samples, 0.03%)</title><rect x="58.1054%" y="2773" width="0.0334%" height="15" fill="rgb(254,31,16)" fg:x="1742" fg:w="1"/><text x="58.3554%" y="2783.50"></text></g><g><title>`0x7FFAC12C78B4 (1 samples, 0.03%)</title><rect x="58.1054%" y="2757" width="0.0334%" height="15" fill="rgb(235,20,31)" fg:x="1742" fg:w="1"/><text x="58.3554%" y="2767.50"></text></g><g><title>`0x7FFAC12C7FF3 (1 samples, 0.03%)</title><rect x="58.1054%" y="2741" width="0.0334%" height="15" fill="rgb(240,56,43)" fg:x="1742" fg:w="1"/><text x="58.3554%" y="2751.50"></text></g><g><title>boggle.exe`alloc::string::String::pop (2 samples, 0.07%)</title><rect x="58.1054%" y="3285" width="0.0667%" height="15" fill="rgb(237,197,51)" fg:x="1742" fg:w="2"/><text x="58.3554%" y="3295.50"></text></g><g><title>boggle.exe`alloc::string::impl$28::deref (2 samples, 0.07%)</title><rect x="58.1054%" y="3269" width="0.0667%" height="15" fill="rgb(241,162,44)" fg:x="1742" fg:w="2"/><text x="58.3554%" y="3279.50"></text></g><g><title>boggle.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (2 samples, 0.07%)</title><rect x="58.1054%" y="3253" width="0.0667%" height="15" fill="rgb(224,23,20)" fg:x="1742" fg:w="2"/><text x="58.3554%" y="3263.50"></text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::collect_words(boggle::utils::dict_trie::DictTrieNode*, ref$&lt;str$&gt;, alloc::vec::Vec (2 samples, 0.07%)</title><rect x="58.1054%" y="3237" width="0.0667%" height="15" fill="rgb(250,109,34)" fg:x="1742" fg:w="2"/><text x="58.3554%" y="3247.50"></text></g><g><title>boggle.exe`alloc::string::String::pop (2 samples, 0.07%)</title><rect x="58.1054%" y="3221" width="0.0667%" height="15" fill="rgb(214,175,50)" fg:x="1742" fg:w="2"/><text x="58.3554%" y="3231.50"></text></g><g><title>boggle.exe`alloc::string::impl$28::deref (2 samples, 0.07%)</title><rect x="58.1054%" y="3205" width="0.0667%" height="15" fill="rgb(213,182,5)" fg:x="1742" fg:w="2"/><text x="58.3554%" y="3215.50"></text></g><g><title>boggle.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (2 samples, 0.07%)</title><rect x="58.1054%" y="3189" width="0.0667%" height="15" fill="rgb(209,199,19)" fg:x="1742" fg:w="2"/><text x="58.3554%" y="3199.50"></text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::collect_words(boggle::utils::dict_trie::DictTrieNode*, ref$&lt;str$&gt;, alloc::vec::Vec (2 samples, 0.07%)</title><rect x="58.1054%" y="3173" width="0.0667%" height="15" fill="rgb(236,224,42)" fg:x="1742" fg:w="2"/><text x="58.3554%" y="3183.50"></text></g><g><title>boggle.exe`alloc::string::String::pop (2 samples, 0.07%)</title><rect x="58.1054%" y="3157" width="0.0667%" height="15" fill="rgb(246,226,29)" fg:x="1742" fg:w="2"/><text x="58.3554%" y="3167.50"></text></g><g><title>boggle.exe`alloc::string::impl$28::deref (2 samples, 0.07%)</title><rect x="58.1054%" y="3141" width="0.0667%" height="15" fill="rgb(227,223,11)" fg:x="1742" fg:w="2"/><text x="58.3554%" y="3151.50"></text></g><g><title>boggle.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (2 samples, 0.07%)</title><rect x="58.1054%" y="3125" width="0.0667%" height="15" fill="rgb(219,7,51)" fg:x="1742" fg:w="2"/><text x="58.3554%" y="3135.50"></text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::collect_words(boggle::utils::dict_trie::DictTrieNode*, ref$&lt;str$&gt;, alloc::vec::Vec (2 samples, 0.07%)</title><rect x="58.1054%" y="3109" width="0.0667%" height="15" fill="rgb(245,167,10)" fg:x="1742" fg:w="2"/><text x="58.3554%" y="3119.50"></text></g><g><title>boggle.exe`alloc::string::impl$102::to_string(ref$ (1 samples, 0.03%)</title><rect x="58.1388%" y="3093" width="0.0334%" height="15" fill="rgb(237,224,16)" fg:x="1743" fg:w="1"/><text x="58.3888%" y="3103.50"></text></g><g><title>boggle.exe`alloc::string::impl$44::from(ref$ (1 samples, 0.03%)</title><rect x="58.1388%" y="3077" width="0.0334%" height="15" fill="rgb(226,132,13)" fg:x="1743" fg:w="1"/><text x="58.3888%" y="3087.50"></text></g><g><title>boggle.exe`alloc::str::impl$4::to_owned(ref$ (1 samples, 0.03%)</title><rect x="58.1388%" y="3061" width="0.0334%" height="15" fill="rgb(214,140,3)" fg:x="1743" fg:w="1"/><text x="58.3888%" y="3071.50"></text></g><g><title>boggle.exe`alloc::slice::impl$9::to_owned(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="58.1388%" y="3045" width="0.0334%" height="15" fill="rgb(221,177,4)" fg:x="1743" fg:w="1"/><text x="58.3888%" y="3055.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="58.1388%" y="3029" width="0.0334%" height="15" fill="rgb(238,139,3)" fg:x="1743" fg:w="1"/><text x="58.3888%" y="3039.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec_in(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="58.1388%" y="3013" width="0.0334%" height="15" fill="rgb(216,17,39)" fg:x="1743" fg:w="1"/><text x="58.3888%" y="3023.50"></text></g><g><title>boggle.exe`alloc::slice::hack::to_vec(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="58.1388%" y="2997" width="0.0334%" height="15" fill="rgb(238,120,9)" fg:x="1743" fg:w="1"/><text x="58.3888%" y="3007.50"></text></g><g><title>boggle.exe`alloc::slice::hack::impl$1::to_vec(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="58.1388%" y="2981" width="0.0334%" height="15" fill="rgb(244,92,53)" fg:x="1743" fg:w="1"/><text x="58.3888%" y="2991.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="58.1388%" y="2965" width="0.0334%" height="15" fill="rgb(224,148,33)" fg:x="1743" fg:w="1"/><text x="58.3888%" y="2975.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="58.1388%" y="2949" width="0.0334%" height="15" fill="rgb(243,6,36)" fg:x="1743" fg:w="1"/><text x="58.3888%" y="2959.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="58.1388%" y="2933" width="0.0334%" height="15" fill="rgb(230,102,11)" fg:x="1743" fg:w="1"/><text x="58.3888%" y="2943.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (1 samples, 0.03%)</title><rect x="58.1388%" y="2917" width="0.0334%" height="15" fill="rgb(234,148,36)" fg:x="1743" fg:w="1"/><text x="58.3888%" y="2927.50"></text></g><g><title>`0x7FFAC12C7776 (1 samples, 0.03%)</title><rect x="58.1388%" y="2901" width="0.0334%" height="15" fill="rgb(251,153,25)" fg:x="1743" fg:w="1"/><text x="58.3888%" y="2911.50"></text></g><g><title>`0x7FFAC12C78B4 (1 samples, 0.03%)</title><rect x="58.1388%" y="2885" width="0.0334%" height="15" fill="rgb(215,129,8)" fg:x="1743" fg:w="1"/><text x="58.3888%" y="2895.50"></text></g><g><title>`0x7FFAC12C809C (1 samples, 0.03%)</title><rect x="58.1388%" y="2869" width="0.0334%" height="15" fill="rgb(224,128,35)" fg:x="1743" fg:w="1"/><text x="58.3888%" y="2879.50"></text></g><g><title>boggle.exe`alloc::string::String::pop (3 samples, 0.10%)</title><rect x="58.1054%" y="3349" width="0.1001%" height="15" fill="rgb(237,56,52)" fg:x="1742" fg:w="3"/><text x="58.3554%" y="3359.50"></text></g><g><title>boggle.exe`alloc::string::impl$28::deref (3 samples, 0.10%)</title><rect x="58.1054%" y="3333" width="0.1001%" height="15" fill="rgb(234,213,19)" fg:x="1742" fg:w="3"/><text x="58.3554%" y="3343.50"></text></g><g><title>boggle.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (3 samples, 0.10%)</title><rect x="58.1054%" y="3317" width="0.1001%" height="15" fill="rgb(252,82,23)" fg:x="1742" fg:w="3"/><text x="58.3554%" y="3327.50"></text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::collect_words(boggle::utils::dict_trie::DictTrieNode*, ref$&lt;str$&gt;, alloc::vec::Vec (3 samples, 0.10%)</title><rect x="58.1054%" y="3301" width="0.1001%" height="15" fill="rgb(254,201,21)" fg:x="1742" fg:w="3"/><text x="58.3554%" y="3311.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;::push (1 samples, 0.03%)</title><rect x="58.1721%" y="3285" width="0.0334%" height="15" fill="rgb(250,186,11)" fg:x="1744" fg:w="1"/><text x="58.4221%" y="3295.50"></text></g><g><title>boggle.exe`core::ptr::write (1 samples, 0.03%)</title><rect x="58.1721%" y="3269" width="0.0334%" height="15" fill="rgb(211,174,5)" fg:x="1744" fg:w="1"/><text x="58.4221%" y="3279.50"></text></g><g><title>`0x7FFAC12C7EE2 (1 samples, 0.03%)</title><rect x="58.2055%" y="3157" width="0.0334%" height="15" fill="rgb(214,121,10)" fg:x="1745" fg:w="1"/><text x="58.4555%" y="3167.50"></text></g><g><title>`0x7FFAC12C8047 (1 samples, 0.03%)</title><rect x="58.2388%" y="3157" width="0.0334%" height="15" fill="rgb(241,66,2)" fg:x="1746" fg:w="1"/><text x="58.4888%" y="3167.50"></text></g><g><title>boggle.exe`alloc::string::String::pop (6 samples, 0.20%)</title><rect x="58.1054%" y="3413" width="0.2001%" height="15" fill="rgb(220,167,19)" fg:x="1742" fg:w="6"/><text x="58.3554%" y="3423.50"></text></g><g><title>boggle.exe`alloc::string::impl$28::deref (6 samples, 0.20%)</title><rect x="58.1054%" y="3397" width="0.2001%" height="15" fill="rgb(231,54,50)" fg:x="1742" fg:w="6"/><text x="58.3554%" y="3407.50"></text></g><g><title>boggle.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (6 samples, 0.20%)</title><rect x="58.1054%" y="3381" width="0.2001%" height="15" fill="rgb(239,217,53)" fg:x="1742" fg:w="6"/><text x="58.3554%" y="3391.50"></text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::collect_words(boggle::utils::dict_trie::DictTrieNode*, ref$&lt;str$&gt;, alloc::vec::Vec (6 samples, 0.20%)</title><rect x="58.1054%" y="3365" width="0.2001%" height="15" fill="rgb(248,8,0)" fg:x="1742" fg:w="6"/><text x="58.3554%" y="3375.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;::push (3 samples, 0.10%)</title><rect x="58.2055%" y="3349" width="0.1001%" height="15" fill="rgb(229,118,37)" fg:x="1745" fg:w="3"/><text x="58.4555%" y="3359.50"></text></g><g><title>boggle.exe`alloc::string::impl$6::clone (3 samples, 0.10%)</title><rect x="58.2055%" y="3333" width="0.1001%" height="15" fill="rgb(253,223,43)" fg:x="1745" fg:w="3"/><text x="58.4555%" y="3343.50"></text></g><g><title>boggle.exe`alloc::vec::impl$11::clone (3 samples, 0.10%)</title><rect x="58.2055%" y="3317" width="0.1001%" height="15" fill="rgb(211,77,36)" fg:x="1745" fg:w="3"/><text x="58.4555%" y="3327.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec_in (3 samples, 0.10%)</title><rect x="58.2055%" y="3301" width="0.1001%" height="15" fill="rgb(219,3,53)" fg:x="1745" fg:w="3"/><text x="58.4555%" y="3311.50"></text></g><g><title>boggle.exe`alloc::slice::hack::to_vec (3 samples, 0.10%)</title><rect x="58.2055%" y="3285" width="0.1001%" height="15" fill="rgb(244,45,42)" fg:x="1745" fg:w="3"/><text x="58.4555%" y="3295.50"></text></g><g><title>boggle.exe`alloc::slice::hack::impl$1::to_vec (3 samples, 0.10%)</title><rect x="58.2055%" y="3269" width="0.1001%" height="15" fill="rgb(225,95,27)" fg:x="1745" fg:w="3"/><text x="58.4555%" y="3279.50"></text></g><g><title>boggle.exe`alloc::vec::Vec::with_capacity_in (3 samples, 0.10%)</title><rect x="58.2055%" y="3253" width="0.1001%" height="15" fill="rgb(207,74,8)" fg:x="1745" fg:w="3"/><text x="58.4555%" y="3263.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec::with_capacity_in (3 samples, 0.10%)</title><rect x="58.2055%" y="3237" width="0.1001%" height="15" fill="rgb(243,63,36)" fg:x="1745" fg:w="3"/><text x="58.4555%" y="3247.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner::with_capacity_in (3 samples, 0.10%)</title><rect x="58.2055%" y="3221" width="0.1001%" height="15" fill="rgb(211,180,12)" fg:x="1745" fg:w="3"/><text x="58.4555%" y="3231.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner::try_allocate_in (3 samples, 0.10%)</title><rect x="58.2055%" y="3205" width="0.1001%" height="15" fill="rgb(254,166,49)" fg:x="1745" fg:w="3"/><text x="58.4555%" y="3215.50"></text></g><g><title>`0x7FFAC12C7776 (3 samples, 0.10%)</title><rect x="58.2055%" y="3189" width="0.1001%" height="15" fill="rgb(205,19,0)" fg:x="1745" fg:w="3"/><text x="58.4555%" y="3199.50"></text></g><g><title>`0x7FFAC12C78B4 (3 samples, 0.10%)</title><rect x="58.2055%" y="3173" width="0.1001%" height="15" fill="rgb(224,172,32)" fg:x="1745" fg:w="3"/><text x="58.4555%" y="3183.50"></text></g><g><title>`0x7FFAC12C826D (1 samples, 0.03%)</title><rect x="58.2722%" y="3157" width="0.0334%" height="15" fill="rgb(254,136,30)" fg:x="1747" fg:w="1"/><text x="58.5222%" y="3167.50"></text></g><g><title>`0x7FFAC12C8060 (1 samples, 0.03%)</title><rect x="58.3055%" y="3109" width="0.0334%" height="15" fill="rgb(246,19,35)" fg:x="1748" fg:w="1"/><text x="58.5555%" y="3119.50"></text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::collect_words(boggle::utils::dict_trie::DictTrieNode*, ref$&lt;str$&gt;, alloc::vec::Vec (8 samples, 0.27%)</title><rect x="58.1054%" y="3685" width="0.2668%" height="15" fill="rgb(219,24,36)" fg:x="1742" fg:w="8"/><text x="58.3554%" y="3695.50"></text></g><g><title>boggle.exe`alloc::string::String::pop (8 samples, 0.27%)</title><rect x="58.1054%" y="3669" width="0.2668%" height="15" fill="rgb(251,55,1)" fg:x="1742" fg:w="8"/><text x="58.3554%" y="3679.50"></text></g><g><title>boggle.exe`alloc::string::impl$28::deref (8 samples, 0.27%)</title><rect x="58.1054%" y="3653" width="0.2668%" height="15" fill="rgb(218,117,39)" fg:x="1742" fg:w="8"/><text x="58.3554%" y="3663.50"></text></g><g><title>boggle.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (8 samples, 0.27%)</title><rect x="58.1054%" y="3637" width="0.2668%" height="15" fill="rgb(248,169,11)" fg:x="1742" fg:w="8"/><text x="58.3554%" y="3647.50"></text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::collect_words(boggle::utils::dict_trie::DictTrieNode*, ref$&lt;str$&gt;, alloc::vec::Vec (8 samples, 0.27%)</title><rect x="58.1054%" y="3621" width="0.2668%" height="15" fill="rgb(244,40,44)" fg:x="1742" fg:w="8"/><text x="58.3554%" y="3631.50"></text></g><g><title>boggle.exe`alloc::string::String::pop (8 samples, 0.27%)</title><rect x="58.1054%" y="3605" width="0.2668%" height="15" fill="rgb(234,62,37)" fg:x="1742" fg:w="8"/><text x="58.3554%" y="3615.50"></text></g><g><title>boggle.exe`alloc::string::impl$28::deref (8 samples, 0.27%)</title><rect x="58.1054%" y="3589" width="0.2668%" height="15" fill="rgb(207,117,42)" fg:x="1742" fg:w="8"/><text x="58.3554%" y="3599.50"></text></g><g><title>boggle.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (8 samples, 0.27%)</title><rect x="58.1054%" y="3573" width="0.2668%" height="15" fill="rgb(213,43,2)" fg:x="1742" fg:w="8"/><text x="58.3554%" y="3583.50"></text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::collect_words(boggle::utils::dict_trie::DictTrieNode*, ref$&lt;str$&gt;, alloc::vec::Vec (8 samples, 0.27%)</title><rect x="58.1054%" y="3557" width="0.2668%" height="15" fill="rgb(244,202,51)" fg:x="1742" fg:w="8"/><text x="58.3554%" y="3567.50"></text></g><g><title>boggle.exe`alloc::string::String::pop (8 samples, 0.27%)</title><rect x="58.1054%" y="3541" width="0.2668%" height="15" fill="rgb(253,174,46)" fg:x="1742" fg:w="8"/><text x="58.3554%" y="3551.50"></text></g><g><title>boggle.exe`alloc::string::impl$28::deref (8 samples, 0.27%)</title><rect x="58.1054%" y="3525" width="0.2668%" height="15" fill="rgb(251,23,1)" fg:x="1742" fg:w="8"/><text x="58.3554%" y="3535.50"></text></g><g><title>boggle.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (8 samples, 0.27%)</title><rect x="58.1054%" y="3509" width="0.2668%" height="15" fill="rgb(253,26,1)" fg:x="1742" fg:w="8"/><text x="58.3554%" y="3519.50"></text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::collect_words(boggle::utils::dict_trie::DictTrieNode*, ref$&lt;str$&gt;, alloc::vec::Vec (8 samples, 0.27%)</title><rect x="58.1054%" y="3493" width="0.2668%" height="15" fill="rgb(216,89,31)" fg:x="1742" fg:w="8"/><text x="58.3554%" y="3503.50"></text></g><g><title>boggle.exe`alloc::string::String::pop (8 samples, 0.27%)</title><rect x="58.1054%" y="3477" width="0.2668%" height="15" fill="rgb(209,109,5)" fg:x="1742" fg:w="8"/><text x="58.3554%" y="3487.50"></text></g><g><title>boggle.exe`alloc::string::impl$28::deref (8 samples, 0.27%)</title><rect x="58.1054%" y="3461" width="0.2668%" height="15" fill="rgb(229,63,13)" fg:x="1742" fg:w="8"/><text x="58.3554%" y="3471.50"></text></g><g><title>boggle.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (8 samples, 0.27%)</title><rect x="58.1054%" y="3445" width="0.2668%" height="15" fill="rgb(238,137,54)" fg:x="1742" fg:w="8"/><text x="58.3554%" y="3455.50"></text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::collect_words(boggle::utils::dict_trie::DictTrieNode*, ref$&lt;str$&gt;, alloc::vec::Vec (8 samples, 0.27%)</title><rect x="58.1054%" y="3429" width="0.2668%" height="15" fill="rgb(228,1,9)" fg:x="1742" fg:w="8"/><text x="58.3554%" y="3439.50"></text></g><g><title>boggle.exe`alloc::string::String::push (2 samples, 0.07%)</title><rect x="58.3055%" y="3413" width="0.0667%" height="15" fill="rgb(249,120,48)" fg:x="1748" fg:w="2"/><text x="58.5555%" y="3423.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::push (2 samples, 0.07%)</title><rect x="58.3055%" y="3397" width="0.0667%" height="15" fill="rgb(209,72,36)" fg:x="1748" fg:w="2"/><text x="58.5555%" y="3407.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_mut_ptr (2 samples, 0.07%)</title><rect x="58.3055%" y="3381" width="0.0667%" height="15" fill="rgb(247,98,49)" fg:x="1748" fg:w="2"/><text x="58.5555%" y="3391.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::ptr (2 samples, 0.07%)</title><rect x="58.3055%" y="3365" width="0.0667%" height="15" fill="rgb(233,75,36)" fg:x="1748" fg:w="2"/><text x="58.5555%" y="3375.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (2 samples, 0.07%)</title><rect x="58.3055%" y="3349" width="0.0667%" height="15" fill="rgb(225,14,24)" fg:x="1748" fg:w="2"/><text x="58.5555%" y="3359.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (2 samples, 0.07%)</title><rect x="58.3055%" y="3333" width="0.0667%" height="15" fill="rgb(237,193,20)" fg:x="1748" fg:w="2"/><text x="58.5555%" y="3343.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::grow_one&lt;u8,alloc::alloc::Global&gt; (2 samples, 0.07%)</title><rect x="58.3055%" y="3317" width="0.0667%" height="15" fill="rgb(239,122,19)" fg:x="1748" fg:w="2"/><text x="58.5555%" y="3327.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_one (2 samples, 0.07%)</title><rect x="58.3055%" y="3301" width="0.0667%" height="15" fill="rgb(231,220,10)" fg:x="1748" fg:w="2"/><text x="58.5555%" y="3311.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (2 samples, 0.07%)</title><rect x="58.3055%" y="3285" width="0.0667%" height="15" fill="rgb(220,66,15)" fg:x="1748" fg:w="2"/><text x="58.5555%" y="3295.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (2 samples, 0.07%)</title><rect x="58.3055%" y="3269" width="0.0667%" height="15" fill="rgb(215,171,52)" fg:x="1748" fg:w="2"/><text x="58.5555%" y="3279.50"></text></g><g><title>boggle.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (2 samples, 0.07%)</title><rect x="58.3055%" y="3253" width="0.0667%" height="15" fill="rgb(241,169,50)" fg:x="1748" fg:w="2"/><text x="58.5555%" y="3263.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (2 samples, 0.07%)</title><rect x="58.3055%" y="3237" width="0.0667%" height="15" fill="rgb(236,189,0)" fg:x="1748" fg:w="2"/><text x="58.5555%" y="3247.50"></text></g><g><title>boggle.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (2 samples, 0.07%)</title><rect x="58.3055%" y="3221" width="0.0667%" height="15" fill="rgb(217,147,20)" fg:x="1748" fg:w="2"/><text x="58.5555%" y="3231.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (2 samples, 0.07%)</title><rect x="58.3055%" y="3205" width="0.0667%" height="15" fill="rgb(206,188,39)" fg:x="1748" fg:w="2"/><text x="58.5555%" y="3215.50"></text></g><g><title>`0x7FFAC12D5376 (2 samples, 0.07%)</title><rect x="58.3055%" y="3189" width="0.0667%" height="15" fill="rgb(227,118,25)" fg:x="1748" fg:w="2"/><text x="58.5555%" y="3199.50"></text></g><g><title>`0x7FFAC12D54B5 (2 samples, 0.07%)</title><rect x="58.3055%" y="3173" width="0.0667%" height="15" fill="rgb(248,171,40)" fg:x="1748" fg:w="2"/><text x="58.5555%" y="3183.50"></text></g><g><title>`0x7FFAC12D5DAA (2 samples, 0.07%)</title><rect x="58.3055%" y="3157" width="0.0667%" height="15" fill="rgb(251,90,54)" fg:x="1748" fg:w="2"/><text x="58.5555%" y="3167.50"></text></g><g><title>`0x7FFAC12C7776 (2 samples, 0.07%)</title><rect x="58.3055%" y="3141" width="0.0667%" height="15" fill="rgb(234,11,46)" fg:x="1748" fg:w="2"/><text x="58.5555%" y="3151.50"></text></g><g><title>`0x7FFAC12C78B4 (2 samples, 0.07%)</title><rect x="58.3055%" y="3125" width="0.0667%" height="15" fill="rgb(229,134,13)" fg:x="1748" fg:w="2"/><text x="58.5555%" y="3135.50"></text></g><g><title>`0x7FFAC12C8168 (1 samples, 0.03%)</title><rect x="58.3389%" y="3109" width="0.0334%" height="15" fill="rgb(223,129,3)" fg:x="1749" fg:w="1"/><text x="58.5889%" y="3119.50"></text></g><g><title>boggle.exe`core::char::methods::impl$0::to_uppercase (1 samples, 0.03%)</title><rect x="58.3722%" y="3525" width="0.0334%" height="15" fill="rgb(221,124,13)" fg:x="1750" fg:w="1"/><text x="58.6222%" y="3535.50"></text></g><g><title>boggle.exe`alloc::string::impl$7::from_iter (1 samples, 0.03%)</title><rect x="58.3722%" y="3509" width="0.0334%" height="15" fill="rgb(234,3,18)" fg:x="1750" fg:w="1"/><text x="58.6222%" y="3519.50"></text></g><g><title>boggle.exe`alloc::string::impl$13::extend (1 samples, 0.03%)</title><rect x="58.3722%" y="3493" width="0.0334%" height="15" fill="rgb(249,199,20)" fg:x="1750" fg:w="1"/><text x="58.6222%" y="3503.50"></text></g><g><title>boggle.exe`alloc::raw_vec::impl$5::reserve::do_reserve_and_handle&lt;alloc::alloc::Global&gt;(alloc::raw_vec::RawVecInner (1 samples, 0.03%)</title><rect x="58.3722%" y="3477" width="0.0334%" height="15" fill="rgb(224,134,6)" fg:x="1750" fg:w="1"/><text x="58.6222%" y="3487.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (1 samples, 0.03%)</title><rect x="58.3722%" y="3461" width="0.0334%" height="15" fill="rgb(254,83,26)" fg:x="1750" fg:w="1"/><text x="58.6222%" y="3471.50"></text></g><g><title>boggle.exe`alloc::raw_vec::layout_array (1 samples, 0.03%)</title><rect x="58.3722%" y="3445" width="0.0334%" height="15" fill="rgb(217,88,9)" fg:x="1750" fg:w="1"/><text x="58.6222%" y="3455.50"></text></g><g><title>boggle.exe`core::alloc::layout::Layout::repeat (1 samples, 0.03%)</title><rect x="58.3722%" y="3429" width="0.0334%" height="15" fill="rgb(225,73,2)" fg:x="1750" fg:w="1"/><text x="58.6222%" y="3439.50"></text></g><g><title>boggle.exe`core::alloc::layout::Layout::padding_needed_for (1 samples, 0.03%)</title><rect x="58.3722%" y="3413" width="0.0334%" height="15" fill="rgb(226,44,39)" fg:x="1750" fg:w="1"/><text x="58.6222%" y="3423.50"></text></g><g><title>boggle.exe`boggle::BoggleSolver::has_extension (12 samples, 0.40%)</title><rect x="58.0387%" y="3813" width="0.4003%" height="15" fill="rgb(228,53,17)" fg:x="1740" fg:w="12"/><text x="58.2887%" y="3823.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(alloc::vec::Vec (12 samples, 0.40%)</title><rect x="58.0387%" y="3797" width="0.4003%" height="15" fill="rgb(212,27,27)" fg:x="1740" fg:w="12"/><text x="58.2887%" y="3807.50"></text></g><g><title>boggle.exe`alloc::vec::impl$25::drop(alloc::vec::Vec (12 samples, 0.40%)</title><rect x="58.0387%" y="3781" width="0.4003%" height="15" fill="rgb(241,50,6)" fg:x="1740" fg:w="12"/><text x="58.2887%" y="3791.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;::as_mut_ptr (12 samples, 0.40%)</title><rect x="58.0387%" y="3765" width="0.4003%" height="15" fill="rgb(225,28,51)" fg:x="1740" fg:w="12"/><text x="58.2887%" y="3775.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;alloc::string::String,alloc::alloc::Global&gt;::ptr (12 samples, 0.40%)</title><rect x="58.0387%" y="3749" width="0.4003%" height="15" fill="rgb(215,33,16)" fg:x="1740" fg:w="12"/><text x="58.2887%" y="3759.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (12 samples, 0.40%)</title><rect x="58.0387%" y="3733" width="0.4003%" height="15" fill="rgb(243,40,39)" fg:x="1740" fg:w="12"/><text x="58.2887%" y="3743.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (12 samples, 0.40%)</title><rect x="58.0387%" y="3717" width="0.4003%" height="15" fill="rgb(225,11,42)" fg:x="1740" fg:w="12"/><text x="58.2887%" y="3727.50"></text></g><g><title>boggle.exe`boggle::utils::dict_trie::DictTrie::extend_word (12 samples, 0.40%)</title><rect x="58.0387%" y="3701" width="0.4003%" height="15" fill="rgb(241,220,38)" fg:x="1740" fg:w="12"/><text x="58.2887%" y="3711.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place (2 samples, 0.07%)</title><rect x="58.3722%" y="3685" width="0.0667%" height="15" fill="rgb(244,52,35)" fg:x="1750" fg:w="2"/><text x="58.6222%" y="3695.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(alloc::vec::Vec (2 samples, 0.07%)</title><rect x="58.3722%" y="3669" width="0.0667%" height="15" fill="rgb(246,42,46)" fg:x="1750" fg:w="2"/><text x="58.6222%" y="3679.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (2 samples, 0.07%)</title><rect x="58.3722%" y="3653" width="0.0667%" height="15" fill="rgb(205,184,13)" fg:x="1750" fg:w="2"/><text x="58.6222%" y="3663.50"></text></g><g><title>boggle.exe`alloc::raw_vec::impl$4::drop(alloc::raw_vec::RawVec (2 samples, 0.07%)</title><rect x="58.3722%" y="3637" width="0.0667%" height="15" fill="rgb(209,48,36)" fg:x="1750" fg:w="2"/><text x="58.6222%" y="3647.50"></text></g><g><title>boggle.exe`alloc::vec::in_place_collect::from_iter_in_place&lt;core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter&lt;alloc::string::String,alloc::alloc::Global&gt;,boggle::utils::dict_trie::impl$1::extend_word::closure_env$0&gt;,alloc::string::String&gt;(core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter (2 samples, 0.07%)</title><rect x="58.3722%" y="3621" width="0.0667%" height="15" fill="rgb(244,34,51)" fg:x="1750" fg:w="2"/><text x="58.6222%" y="3631.50"></text></g><g><title>boggle.exe`alloc::vec::into_iter::IntoIter&lt;alloc::string::String,alloc::alloc::Global&gt;::forget_allocation_drop_remaining (2 samples, 0.07%)</title><rect x="58.3722%" y="3605" width="0.0667%" height="15" fill="rgb(221,107,33)" fg:x="1750" fg:w="2"/><text x="58.6222%" y="3615.50"></text></g><g><title>boggle.exe`alloc::vec::into_iter::IntoIter&lt;alloc::string::String,alloc::alloc::Global&gt;::as_raw_mut_slice (2 samples, 0.07%)</title><rect x="58.3722%" y="3589" width="0.0667%" height="15" fill="rgb(224,203,12)" fg:x="1750" fg:w="2"/><text x="58.6222%" y="3599.50"></text></g><g><title>boggle.exe`alloc::vec::into_iter::impl$5::try_fold&lt;alloc::string::String,alloc::alloc::Global,alloc::vec::in_place_drop::InPlaceDrop&lt;alloc::string::String&gt;,core::iter::adapters::map::map_try_fold::closure_env$0&lt;alloc::string::String,alloc::string::String,alloc::vec::in_place_drop::InPlaceDrop&lt;alloc::string::String&gt;,enum2$&lt;core::result::Result&lt;alloc::vec::in_place_drop::InPlaceDrop&lt;alloc::string::String&gt;,never$&gt; &gt;,boggle::utils::dict_trie::impl$1::extend_word::closure_env$0,alloc::vec::in_place_collect::write_in_place_with_drop::closure_env$0&lt;alloc::string::String&gt; &gt;,enum2$&lt;core::result::Result&lt;alloc::vec::in_place_drop::InPlaceDrop&lt;alloc::string::String&gt;,never$&gt; &gt; &gt;(alloc::vec::into_iter::IntoIter&lt;alloc::string::String,alloc::alloc::Global&gt;*, alloc::vec::in_place_drop::InPlaceDrop&lt;alloc::string::String&gt;, core::iter::adapters::map::map_try_fold::closure_env$0&lt;alloc::string::String,alloc::string::String,alloc::vec::in_place_drop::InPlaceDrop&lt;alloc::string::String&gt;,enum2$&lt;core::result::Result&lt;alloc::vec::in_place_drop::InPlaceDrop&lt;alloc::string::String&gt;,never$&gt; &gt;,boggle::utils::dict_trie::impl$1::extend_word::closure_env$0,alloc::vec::in_place_collect::write_in_place_with_drop::closure_env$0 (2 samples, 0.07%)</title><rect x="58.3722%" y="3573" width="0.0667%" height="15" fill="rgb(230,215,18)" fg:x="1750" fg:w="2"/><text x="58.6222%" y="3583.50"></text></g><g><title>boggle.exe`core::iter::adapters::map::map_try_fold::closure$0(core::iter::adapters::map::map_try_fold::closure_env$0&lt;alloc::string::String,alloc::string::String,alloc::vec::in_place_drop::InPlaceDrop&lt;alloc::string::String&gt;,enum2$&lt;core::result::Result&lt;alloc::vec::in_place_drop::InPlaceDrop&lt;alloc::string::String&gt;,never$&gt; &gt;,boggle::utils::dict_trie::impl$1::extend_word::closure_env$0,alloc::vec::in_place_collect::write_in_place_with_drop::closure_env$0&lt;alloc::string::String&gt; &gt;*, alloc::vec::in_place_drop::InPlaceDrop (2 samples, 0.07%)</title><rect x="58.3722%" y="3557" width="0.0667%" height="15" fill="rgb(206,185,35)" fg:x="1750" fg:w="2"/><text x="58.6222%" y="3567.50"></text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::closure$0 (2 samples, 0.07%)</title><rect x="58.3722%" y="3541" width="0.0667%" height="15" fill="rgb(228,140,34)" fg:x="1750" fg:w="2"/><text x="58.6222%" y="3551.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place (1 samples, 0.03%)</title><rect x="58.4056%" y="3525" width="0.0334%" height="15" fill="rgb(208,93,13)" fg:x="1751" fg:w="1"/><text x="58.6556%" y="3535.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(alloc::vec::Vec (1 samples, 0.03%)</title><rect x="58.4056%" y="3509" width="0.0334%" height="15" fill="rgb(221,193,39)" fg:x="1751" fg:w="1"/><text x="58.6556%" y="3519.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (1 samples, 0.03%)</title><rect x="58.4056%" y="3493" width="0.0334%" height="15" fill="rgb(241,132,34)" fg:x="1751" fg:w="1"/><text x="58.6556%" y="3503.50"></text></g><g><title>boggle.exe`alloc::raw_vec::impl$4::drop(alloc::raw_vec::RawVec (1 samples, 0.03%)</title><rect x="58.4056%" y="3477" width="0.0334%" height="15" fill="rgb(221,141,10)" fg:x="1751" fg:w="1"/><text x="58.6556%" y="3487.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::deallocate (1 samples, 0.03%)</title><rect x="58.4056%" y="3461" width="0.0334%" height="15" fill="rgb(226,90,31)" fg:x="1751" fg:w="1"/><text x="58.6556%" y="3471.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="58.4056%" y="3445" width="0.0334%" height="15" fill="rgb(243,75,5)" fg:x="1751" fg:w="1"/><text x="58.6556%" y="3455.50"></text></g><g><title>boggle.exe`alloc::alloc::dealloc (1 samples, 0.03%)</title><rect x="58.4056%" y="3429" width="0.0334%" height="15" fill="rgb(227,156,21)" fg:x="1751" fg:w="1"/><text x="58.6556%" y="3439.50"></text></g><g><title>`0x7FFAC12D291A (1 samples, 0.03%)</title><rect x="58.4390%" y="3797" width="0.0334%" height="15" fill="rgb(250,195,8)" fg:x="1752" fg:w="1"/><text x="58.6890%" y="3807.50"></text></g><g><title>`0x7FFAC12D269C (1 samples, 0.03%)</title><rect x="58.4723%" y="3669" width="0.0334%" height="15" fill="rgb(220,134,5)" fg:x="1753" fg:w="1"/><text x="58.7223%" y="3679.50"></text></g><g><title>`0x7FFAC12D23A7 (1 samples, 0.03%)</title><rect x="58.5057%" y="3397" width="0.0334%" height="15" fill="rgb(246,106,34)" fg:x="1754" fg:w="1"/><text x="58.7557%" y="3407.50"></text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::collect_words(boggle::utils::dict_trie::DictTrieNode*, ref$&lt;str$&gt;, alloc::vec::Vec (2 samples, 0.07%)</title><rect x="58.5057%" y="3669" width="0.0667%" height="15" fill="rgb(205,1,4)" fg:x="1754" fg:w="2"/><text x="58.7557%" y="3679.50"></text></g><g><title>boggle.exe`alloc::string::String::pop (2 samples, 0.07%)</title><rect x="58.5057%" y="3653" width="0.0667%" height="15" fill="rgb(224,151,29)" fg:x="1754" fg:w="2"/><text x="58.7557%" y="3663.50"></text></g><g><title>boggle.exe`alloc::string::impl$28::deref (2 samples, 0.07%)</title><rect x="58.5057%" y="3637" width="0.0667%" height="15" fill="rgb(251,196,0)" fg:x="1754" fg:w="2"/><text x="58.7557%" y="3647.50"></text></g><g><title>boggle.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (2 samples, 0.07%)</title><rect x="58.5057%" y="3621" width="0.0667%" height="15" fill="rgb(212,127,0)" fg:x="1754" fg:w="2"/><text x="58.7557%" y="3631.50"></text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::collect_words(boggle::utils::dict_trie::DictTrieNode*, ref$&lt;str$&gt;, alloc::vec::Vec (2 samples, 0.07%)</title><rect x="58.5057%" y="3605" width="0.0667%" height="15" fill="rgb(236,71,53)" fg:x="1754" fg:w="2"/><text x="58.7557%" y="3615.50"></text></g><g><title>boggle.exe`alloc::string::String::pop (2 samples, 0.07%)</title><rect x="58.5057%" y="3589" width="0.0667%" height="15" fill="rgb(227,99,0)" fg:x="1754" fg:w="2"/><text x="58.7557%" y="3599.50"></text></g><g><title>boggle.exe`alloc::string::impl$28::deref (2 samples, 0.07%)</title><rect x="58.5057%" y="3573" width="0.0667%" height="15" fill="rgb(239,89,21)" fg:x="1754" fg:w="2"/><text x="58.7557%" y="3583.50"></text></g><g><title>boggle.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (2 samples, 0.07%)</title><rect x="58.5057%" y="3557" width="0.0667%" height="15" fill="rgb(243,122,19)" fg:x="1754" fg:w="2"/><text x="58.7557%" y="3567.50"></text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::collect_words(boggle::utils::dict_trie::DictTrieNode*, ref$&lt;str$&gt;, alloc::vec::Vec (2 samples, 0.07%)</title><rect x="58.5057%" y="3541" width="0.0667%" height="15" fill="rgb(229,192,45)" fg:x="1754" fg:w="2"/><text x="58.7557%" y="3551.50"></text></g><g><title>boggle.exe`alloc::string::String::pop (2 samples, 0.07%)</title><rect x="58.5057%" y="3525" width="0.0667%" height="15" fill="rgb(235,165,35)" fg:x="1754" fg:w="2"/><text x="58.7557%" y="3535.50"></text></g><g><title>boggle.exe`alloc::string::impl$28::deref (2 samples, 0.07%)</title><rect x="58.5057%" y="3509" width="0.0667%" height="15" fill="rgb(253,202,0)" fg:x="1754" fg:w="2"/><text x="58.7557%" y="3519.50"></text></g><g><title>boggle.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (2 samples, 0.07%)</title><rect x="58.5057%" y="3493" width="0.0667%" height="15" fill="rgb(235,51,20)" fg:x="1754" fg:w="2"/><text x="58.7557%" y="3503.50"></text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::collect_words(boggle::utils::dict_trie::DictTrieNode*, ref$&lt;str$&gt;, alloc::vec::Vec (2 samples, 0.07%)</title><rect x="58.5057%" y="3477" width="0.0667%" height="15" fill="rgb(218,95,46)" fg:x="1754" fg:w="2"/><text x="58.7557%" y="3487.50"></text></g><g><title>boggle.exe`alloc::string::String::pop (2 samples, 0.07%)</title><rect x="58.5057%" y="3461" width="0.0667%" height="15" fill="rgb(212,81,10)" fg:x="1754" fg:w="2"/><text x="58.7557%" y="3471.50"></text></g><g><title>boggle.exe`alloc::string::impl$28::deref (2 samples, 0.07%)</title><rect x="58.5057%" y="3445" width="0.0667%" height="15" fill="rgb(240,59,0)" fg:x="1754" fg:w="2"/><text x="58.7557%" y="3455.50"></text></g><g><title>boggle.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (2 samples, 0.07%)</title><rect x="58.5057%" y="3429" width="0.0667%" height="15" fill="rgb(212,191,42)" fg:x="1754" fg:w="2"/><text x="58.7557%" y="3439.50"></text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::collect_words(boggle::utils::dict_trie::DictTrieNode*, ref$&lt;str$&gt;, alloc::vec::Vec (2 samples, 0.07%)</title><rect x="58.5057%" y="3413" width="0.0667%" height="15" fill="rgb(233,140,3)" fg:x="1754" fg:w="2"/><text x="58.7557%" y="3423.50"></text></g><g><title>boggle.exe`alloc::string::String::pop (1 samples, 0.03%)</title><rect x="58.5390%" y="3397" width="0.0334%" height="15" fill="rgb(215,69,23)" fg:x="1755" fg:w="1"/><text x="58.7890%" y="3407.50"></text></g><g><title>boggle.exe`alloc::string::impl$28::deref (1 samples, 0.03%)</title><rect x="58.5390%" y="3381" width="0.0334%" height="15" fill="rgb(240,202,20)" fg:x="1755" fg:w="1"/><text x="58.7890%" y="3391.50"></text></g><g><title>boggle.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (1 samples, 0.03%)</title><rect x="58.5390%" y="3365" width="0.0334%" height="15" fill="rgb(209,146,50)" fg:x="1755" fg:w="1"/><text x="58.7890%" y="3375.50"></text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::collect_words(boggle::utils::dict_trie::DictTrieNode*, ref$&lt;str$&gt;, alloc::vec::Vec (1 samples, 0.03%)</title><rect x="58.5390%" y="3349" width="0.0334%" height="15" fill="rgb(253,102,54)" fg:x="1755" fg:w="1"/><text x="58.7890%" y="3359.50"></text></g><g><title>boggle.exe`alloc::string::String::push (1 samples, 0.03%)</title><rect x="58.5390%" y="3333" width="0.0334%" height="15" fill="rgb(250,173,47)" fg:x="1755" fg:w="1"/><text x="58.7890%" y="3343.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::push (1 samples, 0.03%)</title><rect x="58.5390%" y="3317" width="0.0334%" height="15" fill="rgb(232,142,7)" fg:x="1755" fg:w="1"/><text x="58.7890%" y="3327.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_mut_ptr (1 samples, 0.03%)</title><rect x="58.5390%" y="3301" width="0.0334%" height="15" fill="rgb(230,157,47)" fg:x="1755" fg:w="1"/><text x="58.7890%" y="3311.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::ptr (1 samples, 0.03%)</title><rect x="58.5390%" y="3285" width="0.0334%" height="15" fill="rgb(214,177,35)" fg:x="1755" fg:w="1"/><text x="58.7890%" y="3295.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (1 samples, 0.03%)</title><rect x="58.5390%" y="3269" width="0.0334%" height="15" fill="rgb(234,119,46)" fg:x="1755" fg:w="1"/><text x="58.7890%" y="3279.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (1 samples, 0.03%)</title><rect x="58.5390%" y="3253" width="0.0334%" height="15" fill="rgb(241,180,50)" fg:x="1755" fg:w="1"/><text x="58.7890%" y="3263.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::grow_one&lt;u8,alloc::alloc::Global&gt; (1 samples, 0.03%)</title><rect x="58.5390%" y="3237" width="0.0334%" height="15" fill="rgb(221,54,25)" fg:x="1755" fg:w="1"/><text x="58.7890%" y="3247.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_one (1 samples, 0.03%)</title><rect x="58.5390%" y="3221" width="0.0334%" height="15" fill="rgb(209,157,44)" fg:x="1755" fg:w="1"/><text x="58.7890%" y="3231.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (1 samples, 0.03%)</title><rect x="58.5390%" y="3205" width="0.0334%" height="15" fill="rgb(246,115,41)" fg:x="1755" fg:w="1"/><text x="58.7890%" y="3215.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (1 samples, 0.03%)</title><rect x="58.5390%" y="3189" width="0.0334%" height="15" fill="rgb(229,86,1)" fg:x="1755" fg:w="1"/><text x="58.7890%" y="3199.50"></text></g><g><title>boggle.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="58.5390%" y="3173" width="0.0334%" height="15" fill="rgb(240,108,53)" fg:x="1755" fg:w="1"/><text x="58.7890%" y="3183.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="58.5390%" y="3157" width="0.0334%" height="15" fill="rgb(227,134,2)" fg:x="1755" fg:w="1"/><text x="58.7890%" y="3167.50"></text></g><g><title>boggle.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="58.5390%" y="3141" width="0.0334%" height="15" fill="rgb(213,129,25)" fg:x="1755" fg:w="1"/><text x="58.7890%" y="3151.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="58.5390%" y="3125" width="0.0334%" height="15" fill="rgb(226,35,21)" fg:x="1755" fg:w="1"/><text x="58.7890%" y="3135.50"></text></g><g><title>`0x7FFAC12D5376 (1 samples, 0.03%)</title><rect x="58.5390%" y="3109" width="0.0334%" height="15" fill="rgb(208,129,26)" fg:x="1755" fg:w="1"/><text x="58.7890%" y="3119.50"></text></g><g><title>`0x7FFAC12D54B5 (1 samples, 0.03%)</title><rect x="58.5390%" y="3093" width="0.0334%" height="15" fill="rgb(224,83,6)" fg:x="1755" fg:w="1"/><text x="58.7890%" y="3103.50"></text></g><g><title>`0x7FFAC12D5DAA (1 samples, 0.03%)</title><rect x="58.5390%" y="3077" width="0.0334%" height="15" fill="rgb(227,52,39)" fg:x="1755" fg:w="1"/><text x="58.7890%" y="3087.50"></text></g><g><title>`0x7FFAC12C7776 (1 samples, 0.03%)</title><rect x="58.5390%" y="3061" width="0.0334%" height="15" fill="rgb(241,30,17)" fg:x="1755" fg:w="1"/><text x="58.7890%" y="3071.50"></text></g><g><title>`0x7FFAC12C77E7 (1 samples, 0.03%)</title><rect x="58.5390%" y="3045" width="0.0334%" height="15" fill="rgb(246,186,42)" fg:x="1755" fg:w="1"/><text x="58.7890%" y="3055.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place (1 samples, 0.03%)</title><rect x="58.5724%" y="3669" width="0.0334%" height="15" fill="rgb(221,169,15)" fg:x="1756" fg:w="1"/><text x="58.8224%" y="3679.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(alloc::vec::Vec (1 samples, 0.03%)</title><rect x="58.5724%" y="3653" width="0.0334%" height="15" fill="rgb(235,108,21)" fg:x="1756" fg:w="1"/><text x="58.8224%" y="3663.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (1 samples, 0.03%)</title><rect x="58.5724%" y="3637" width="0.0334%" height="15" fill="rgb(219,148,30)" fg:x="1756" fg:w="1"/><text x="58.8224%" y="3647.50"></text></g><g><title>boggle.exe`alloc::raw_vec::impl$4::drop(alloc::raw_vec::RawVec (1 samples, 0.03%)</title><rect x="58.5724%" y="3621" width="0.0334%" height="15" fill="rgb(220,109,5)" fg:x="1756" fg:w="1"/><text x="58.8224%" y="3631.50"></text></g><g><title>boggle.exe`alloc::vec::in_place_collect::from_iter_in_place&lt;core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter&lt;alloc::string::String,alloc::alloc::Global&gt;,boggle::utils::dict_trie::impl$1::extend_word::closure_env$0&gt;,alloc::string::String&gt;(core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter (1 samples, 0.03%)</title><rect x="58.5724%" y="3605" width="0.0334%" height="15" fill="rgb(213,203,48)" fg:x="1756" fg:w="1"/><text x="58.8224%" y="3615.50"></text></g><g><title>boggle.exe`alloc::vec::into_iter::IntoIter&lt;alloc::string::String,alloc::alloc::Global&gt;::forget_allocation_drop_remaining (1 samples, 0.03%)</title><rect x="58.5724%" y="3589" width="0.0334%" height="15" fill="rgb(244,71,33)" fg:x="1756" fg:w="1"/><text x="58.8224%" y="3599.50"></text></g><g><title>boggle.exe`alloc::vec::into_iter::IntoIter&lt;alloc::string::String,alloc::alloc::Global&gt;::as_raw_mut_slice (1 samples, 0.03%)</title><rect x="58.5724%" y="3573" width="0.0334%" height="15" fill="rgb(209,23,2)" fg:x="1756" fg:w="1"/><text x="58.8224%" y="3583.50"></text></g><g><title>boggle.exe`alloc::vec::into_iter::impl$5::try_fold&lt;alloc::string::String,alloc::alloc::Global,alloc::vec::in_place_drop::InPlaceDrop&lt;alloc::string::String&gt;,core::iter::adapters::map::map_try_fold::closure_env$0&lt;alloc::string::String,alloc::string::String,alloc::vec::in_place_drop::InPlaceDrop&lt;alloc::string::String&gt;,enum2$&lt;core::result::Result&lt;alloc::vec::in_place_drop::InPlaceDrop&lt;alloc::string::String&gt;,never$&gt; &gt;,boggle::utils::dict_trie::impl$1::extend_word::closure_env$0,alloc::vec::in_place_collect::write_in_place_with_drop::closure_env$0&lt;alloc::string::String&gt; &gt;,enum2$&lt;core::result::Result&lt;alloc::vec::in_place_drop::InPlaceDrop&lt;alloc::string::String&gt;,never$&gt; &gt; &gt;(alloc::vec::into_iter::IntoIter&lt;alloc::string::String,alloc::alloc::Global&gt;*, alloc::vec::in_place_drop::InPlaceDrop&lt;alloc::string::String&gt;, core::iter::adapters::map::map_try_fold::closure_env$0&lt;alloc::string::String,alloc::string::String,alloc::vec::in_place_drop::InPlaceDrop&lt;alloc::string::String&gt;,enum2$&lt;core::result::Result&lt;alloc::vec::in_place_drop::InPlaceDrop&lt;alloc::string::String&gt;,never$&gt; &gt;,boggle::utils::dict_trie::impl$1::extend_word::closure_env$0,alloc::vec::in_place_collect::write_in_place_with_drop::closure_env$0 (1 samples, 0.03%)</title><rect x="58.5724%" y="3557" width="0.0334%" height="15" fill="rgb(219,97,7)" fg:x="1756" fg:w="1"/><text x="58.8224%" y="3567.50"></text></g><g><title>boggle.exe`core::iter::adapters::map::map_try_fold::closure$0(core::iter::adapters::map::map_try_fold::closure_env$0&lt;alloc::string::String,alloc::string::String,alloc::vec::in_place_drop::InPlaceDrop&lt;alloc::string::String&gt;,enum2$&lt;core::result::Result&lt;alloc::vec::in_place_drop::InPlaceDrop&lt;alloc::string::String&gt;,never$&gt; &gt;,boggle::utils::dict_trie::impl$1::extend_word::closure_env$0,alloc::vec::in_place_collect::write_in_place_with_drop::closure_env$0&lt;alloc::string::String&gt; &gt;*, alloc::vec::in_place_drop::InPlaceDrop (1 samples, 0.03%)</title><rect x="58.5724%" y="3541" width="0.0334%" height="15" fill="rgb(216,161,23)" fg:x="1756" fg:w="1"/><text x="58.8224%" y="3551.50"></text></g><g><title>boggle.exe`boggle::utils::dict_trie::impl$1::extend_word::closure$0 (1 samples, 0.03%)</title><rect x="58.5724%" y="3525" width="0.0334%" height="15" fill="rgb(207,45,42)" fg:x="1756" fg:w="1"/><text x="58.8224%" y="3535.50"></text></g><g><title>boggle.exe`alloc::string::impl$24::add(alloc::string::String, ref$ (1 samples, 0.03%)</title><rect x="58.5724%" y="3509" width="0.0334%" height="15" fill="rgb(241,61,4)" fg:x="1756" fg:w="1"/><text x="58.8224%" y="3519.50"></text></g><g><title>boggle.exe`alloc::raw_vec::impl$5::reserve::do_reserve_and_handle&lt;alloc::alloc::Global&gt;(alloc::raw_vec::RawVecInner (1 samples, 0.03%)</title><rect x="58.5724%" y="3493" width="0.0334%" height="15" fill="rgb(236,170,1)" fg:x="1756" fg:w="1"/><text x="58.8224%" y="3503.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (1 samples, 0.03%)</title><rect x="58.5724%" y="3477" width="0.0334%" height="15" fill="rgb(239,72,5)" fg:x="1756" fg:w="1"/><text x="58.8224%" y="3487.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (1 samples, 0.03%)</title><rect x="58.5724%" y="3461" width="0.0334%" height="15" fill="rgb(214,13,50)" fg:x="1756" fg:w="1"/><text x="58.8224%" y="3471.50"></text></g><g><title>boggle.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="58.5724%" y="3445" width="0.0334%" height="15" fill="rgb(224,88,9)" fg:x="1756" fg:w="1"/><text x="58.8224%" y="3455.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;::as_mut_ptr (5 samples, 0.17%)</title><rect x="58.4723%" y="3749" width="0.1668%" height="15" fill="rgb(238,192,34)" fg:x="1753" fg:w="5"/><text x="58.7223%" y="3759.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;alloc::string::String,alloc::alloc::Global&gt;::ptr (5 samples, 0.17%)</title><rect x="58.4723%" y="3733" width="0.1668%" height="15" fill="rgb(217,203,50)" fg:x="1753" fg:w="5"/><text x="58.7223%" y="3743.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (5 samples, 0.17%)</title><rect x="58.4723%" y="3717" width="0.1668%" height="15" fill="rgb(241,123,32)" fg:x="1753" fg:w="5"/><text x="58.7223%" y="3727.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (5 samples, 0.17%)</title><rect x="58.4723%" y="3701" width="0.1668%" height="15" fill="rgb(248,151,39)" fg:x="1753" fg:w="5"/><text x="58.7223%" y="3711.50"></text></g><g><title>boggle.exe`boggle::utils::dict_trie::DictTrie::extend_word (5 samples, 0.17%)</title><rect x="58.4723%" y="3685" width="0.1668%" height="15" fill="rgb(208,89,6)" fg:x="1753" fg:w="5"/><text x="58.7223%" y="3695.50"></text></g><g><title>boggle.exe`std::collections::hash::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;::get (1 samples, 0.03%)</title><rect x="58.6057%" y="3669" width="0.0334%" height="15" fill="rgb(254,43,26)" fg:x="1757" fg:w="1"/><text x="58.8557%" y="3679.50"></text></g><g><title>boggle.exe`hashbrown::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt;::get (1 samples, 0.03%)</title><rect x="58.6057%" y="3653" width="0.0334%" height="15" fill="rgb(216,158,13)" fg:x="1757" fg:w="1"/><text x="58.8557%" y="3663.50"></text></g><g><title>boggle.exe`hashbrown::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt;::get_inner (1 samples, 0.03%)</title><rect x="58.6057%" y="3637" width="0.0334%" height="15" fill="rgb(212,47,37)" fg:x="1757" fg:w="1"/><text x="58.8557%" y="3647.50"></text></g><g><title>boggle.exe`hashbrown::map::make_hash (1 samples, 0.03%)</title><rect x="58.6057%" y="3621" width="0.0334%" height="15" fill="rgb(254,16,10)" fg:x="1757" fg:w="1"/><text x="58.8557%" y="3631.50"></text></g><g><title>boggle.exe`core::hash::BuildHasher::hash_one&lt;std::hash::random::RandomState,ref$&lt;char&gt; &gt; (1 samples, 0.03%)</title><rect x="58.6057%" y="3605" width="0.0334%" height="15" fill="rgb(223,228,16)" fg:x="1757" fg:w="1"/><text x="58.8557%" y="3615.50"></text></g><g><title>boggle.exe`std::hash::random::impl$1::build_hasher (1 samples, 0.03%)</title><rect x="58.6057%" y="3589" width="0.0334%" height="15" fill="rgb(249,108,50)" fg:x="1757" fg:w="1"/><text x="58.8557%" y="3599.50"></text></g><g><title>boggle.exe`core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.03%)</title><rect x="58.6057%" y="3573" width="0.0334%" height="15" fill="rgb(208,220,5)" fg:x="1757" fg:w="1"/><text x="58.8557%" y="3583.50"></text></g><g><title>boggle.exe`core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt;::new_with_keys (1 samples, 0.03%)</title><rect x="58.6057%" y="3557" width="0.0334%" height="15" fill="rgb(217,89,48)" fg:x="1757" fg:w="1"/><text x="58.8557%" y="3567.50"></text></g><g><title>boggle.exe`core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt;::reset (1 samples, 0.03%)</title><rect x="58.6057%" y="3541" width="0.0334%" height="15" fill="rgb(212,113,41)" fg:x="1757" fg:w="1"/><text x="58.8557%" y="3551.50"></text></g><g><title>boggle.exe`boggle::BoggleSolver::has_extension (6 samples, 0.20%)</title><rect x="58.4723%" y="3797" width="0.2001%" height="15" fill="rgb(231,127,5)" fg:x="1753" fg:w="6"/><text x="58.7223%" y="3807.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(alloc::vec::Vec (6 samples, 0.20%)</title><rect x="58.4723%" y="3781" width="0.2001%" height="15" fill="rgb(217,141,17)" fg:x="1753" fg:w="6"/><text x="58.7223%" y="3791.50"></text></g><g><title>boggle.exe`alloc::vec::impl$25::drop(alloc::vec::Vec (6 samples, 0.20%)</title><rect x="58.4723%" y="3765" width="0.2001%" height="15" fill="rgb(245,125,54)" fg:x="1753" fg:w="6"/><text x="58.7223%" y="3775.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(ptr_mut$&lt;slice2$ (1 samples, 0.03%)</title><rect x="58.6391%" y="3749" width="0.0334%" height="15" fill="rgb(248,125,3)" fg:x="1758" fg:w="1"/><text x="58.8891%" y="3759.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place (1 samples, 0.03%)</title><rect x="58.6391%" y="3733" width="0.0334%" height="15" fill="rgb(236,119,51)" fg:x="1758" fg:w="1"/><text x="58.8891%" y="3743.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(alloc::vec::Vec (1 samples, 0.03%)</title><rect x="58.6391%" y="3717" width="0.0334%" height="15" fill="rgb(239,99,8)" fg:x="1758" fg:w="1"/><text x="58.8891%" y="3727.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (1 samples, 0.03%)</title><rect x="58.6391%" y="3701" width="0.0334%" height="15" fill="rgb(224,228,4)" fg:x="1758" fg:w="1"/><text x="58.8891%" y="3711.50"></text></g><g><title>boggle.exe`alloc::raw_vec::impl$4::drop(alloc::raw_vec::RawVec (1 samples, 0.03%)</title><rect x="58.6391%" y="3685" width="0.0334%" height="15" fill="rgb(220,131,45)" fg:x="1758" fg:w="1"/><text x="58.8891%" y="3695.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::deallocate (1 samples, 0.03%)</title><rect x="58.6391%" y="3669" width="0.0334%" height="15" fill="rgb(215,62,5)" fg:x="1758" fg:w="1"/><text x="58.8891%" y="3679.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="58.6391%" y="3653" width="0.0334%" height="15" fill="rgb(253,12,24)" fg:x="1758" fg:w="1"/><text x="58.8891%" y="3663.50"></text></g><g><title>boggle.exe`alloc::alloc::dealloc (1 samples, 0.03%)</title><rect x="58.6391%" y="3637" width="0.0334%" height="15" fill="rgb(248,120,50)" fg:x="1758" fg:w="1"/><text x="58.8891%" y="3647.50"></text></g><g><title>`0x7FFAC12D23A7 (1 samples, 0.03%)</title><rect x="58.6391%" y="3621" width="0.0334%" height="15" fill="rgb(245,194,10)" fg:x="1758" fg:w="1"/><text x="58.8891%" y="3631.50"></text></g><g><title>boggle.exe`boggle::BoggleSolver::valid_word (1 samples, 0.03%)</title><rect x="58.6724%" y="3797" width="0.0334%" height="15" fill="rgb(241,149,38)" fg:x="1759" fg:w="1"/><text x="58.9224%" y="3807.50"></text></g><g><title>boggle.exe`boggle::boggle_utils::boggle_char::BoggleChar::append_to (1 samples, 0.03%)</title><rect x="58.6724%" y="3781" width="0.0334%" height="15" fill="rgb(219,215,7)" fg:x="1759" fg:w="1"/><text x="58.9224%" y="3791.50"></text></g><g><title>boggle.exe`alloc::string::String::push (1 samples, 0.03%)</title><rect x="58.6724%" y="3765" width="0.0334%" height="15" fill="rgb(208,120,31)" fg:x="1759" fg:w="1"/><text x="58.9224%" y="3775.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::push (1 samples, 0.03%)</title><rect x="58.6724%" y="3749" width="0.0334%" height="15" fill="rgb(244,30,8)" fg:x="1759" fg:w="1"/><text x="58.9224%" y="3759.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::grow_one&lt;u8,alloc::alloc::Global&gt; (1 samples, 0.03%)</title><rect x="58.6724%" y="3733" width="0.0334%" height="15" fill="rgb(238,35,44)" fg:x="1759" fg:w="1"/><text x="58.9224%" y="3743.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_one (1 samples, 0.03%)</title><rect x="58.6724%" y="3717" width="0.0334%" height="15" fill="rgb(243,218,37)" fg:x="1759" fg:w="1"/><text x="58.9224%" y="3727.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (1 samples, 0.03%)</title><rect x="58.6724%" y="3701" width="0.0334%" height="15" fill="rgb(218,169,10)" fg:x="1759" fg:w="1"/><text x="58.9224%" y="3711.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (1 samples, 0.03%)</title><rect x="58.6724%" y="3685" width="0.0334%" height="15" fill="rgb(221,144,10)" fg:x="1759" fg:w="1"/><text x="58.9224%" y="3695.50"></text></g><g><title>boggle.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="58.6724%" y="3669" width="0.0334%" height="15" fill="rgb(226,41,38)" fg:x="1759" fg:w="1"/><text x="58.9224%" y="3679.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="58.6724%" y="3653" width="0.0334%" height="15" fill="rgb(228,3,1)" fg:x="1759" fg:w="1"/><text x="58.9224%" y="3663.50"></text></g><g><title>boggle.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="58.6724%" y="3637" width="0.0334%" height="15" fill="rgb(209,129,12)" fg:x="1759" fg:w="1"/><text x="58.9224%" y="3647.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="58.6724%" y="3621" width="0.0334%" height="15" fill="rgb(213,136,33)" fg:x="1759" fg:w="1"/><text x="58.9224%" y="3631.50"></text></g><g><title>`0x7FFAC12D5376 (1 samples, 0.03%)</title><rect x="58.6724%" y="3605" width="0.0334%" height="15" fill="rgb(209,181,29)" fg:x="1759" fg:w="1"/><text x="58.9224%" y="3615.50"></text></g><g><title>`0x7FFAC12D54B5 (1 samples, 0.03%)</title><rect x="58.6724%" y="3589" width="0.0334%" height="15" fill="rgb(234,173,18)" fg:x="1759" fg:w="1"/><text x="58.9224%" y="3599.50"></text></g><g><title>`0x7FFAC12D5DAA (1 samples, 0.03%)</title><rect x="58.6724%" y="3573" width="0.0334%" height="15" fill="rgb(227,73,47)" fg:x="1759" fg:w="1"/><text x="58.9224%" y="3583.50"></text></g><g><title>`0x7FFAC12C7776 (1 samples, 0.03%)</title><rect x="58.6724%" y="3557" width="0.0334%" height="15" fill="rgb(234,9,34)" fg:x="1759" fg:w="1"/><text x="58.9224%" y="3567.50"></text></g><g><title>`0x7FFAC12C78B4 (1 samples, 0.03%)</title><rect x="58.6724%" y="3541" width="0.0334%" height="15" fill="rgb(235,172,15)" fg:x="1759" fg:w="1"/><text x="58.9224%" y="3551.50"></text></g><g><title>`0x7FFAC12C8A44 (1 samples, 0.03%)</title><rect x="58.6724%" y="3525" width="0.0334%" height="15" fill="rgb(245,61,2)" fg:x="1759" fg:w="1"/><text x="58.9224%" y="3535.50"></text></g><g><title>`0x7FFAC13713A2 (1 samples, 0.03%)</title><rect x="58.6724%" y="3509" width="0.0334%" height="15" fill="rgb(238,39,47)" fg:x="1759" fg:w="1"/><text x="58.9224%" y="3519.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place (1 samples, 0.03%)</title><rect x="58.7058%" y="3781" width="0.0334%" height="15" fill="rgb(234,37,24)" fg:x="1760" fg:w="1"/><text x="58.9558%" y="3791.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(alloc::vec::Vec (1 samples, 0.03%)</title><rect x="58.7058%" y="3765" width="0.0334%" height="15" fill="rgb(248,223,24)" fg:x="1760" fg:w="1"/><text x="58.9558%" y="3775.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (1 samples, 0.03%)</title><rect x="58.7058%" y="3749" width="0.0334%" height="15" fill="rgb(223,12,15)" fg:x="1760" fg:w="1"/><text x="58.9558%" y="3759.50"></text></g><g><title>boggle.exe`alloc::raw_vec::impl$4::drop(alloc::raw_vec::RawVec (1 samples, 0.03%)</title><rect x="58.7058%" y="3733" width="0.0334%" height="15" fill="rgb(249,6,3)" fg:x="1760" fg:w="1"/><text x="58.9558%" y="3743.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::deallocate (1 samples, 0.03%)</title><rect x="58.7058%" y="3717" width="0.0334%" height="15" fill="rgb(237,105,33)" fg:x="1760" fg:w="1"/><text x="58.9558%" y="3727.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="58.7058%" y="3701" width="0.0334%" height="15" fill="rgb(252,208,35)" fg:x="1760" fg:w="1"/><text x="58.9558%" y="3711.50"></text></g><g><title>boggle.exe`alloc::alloc::dealloc (1 samples, 0.03%)</title><rect x="58.7058%" y="3685" width="0.0334%" height="15" fill="rgb(215,181,35)" fg:x="1760" fg:w="1"/><text x="58.9558%" y="3695.50"></text></g><g><title>`0x7FFAC12D2313 (1 samples, 0.03%)</title><rect x="58.7058%" y="3669" width="0.0334%" height="15" fill="rgb(246,212,3)" fg:x="1760" fg:w="1"/><text x="58.9558%" y="3679.50"></text></g><g><title>boggle.exe`boggle::BoggleSolver::step_and_search(tuple$&lt;usize,usize&gt;, std::collections::hash::set::HashSet&lt;tuple$ (10 samples, 0.33%)</title><rect x="58.4390%" y="3813" width="0.3336%" height="15" fill="rgb(247,156,24)" fg:x="1752" fg:w="10"/><text x="58.6890%" y="3823.50"></text></g><g><title>boggle.exe`boggle::utils::dict_trie::DictTrie::check_word (2 samples, 0.07%)</title><rect x="58.7058%" y="3797" width="0.0667%" height="15" fill="rgb(248,9,31)" fg:x="1760" fg:w="2"/><text x="58.9558%" y="3807.50"></text></g><g><title>boggle.exe`std::collections::hash::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;::get (1 samples, 0.03%)</title><rect x="58.7392%" y="3781" width="0.0334%" height="15" fill="rgb(234,26,45)" fg:x="1761" fg:w="1"/><text x="58.9892%" y="3791.50"></text></g><g><title>boggle.exe`hashbrown::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt;::get (1 samples, 0.03%)</title><rect x="58.7392%" y="3765" width="0.0334%" height="15" fill="rgb(249,11,32)" fg:x="1761" fg:w="1"/><text x="58.9892%" y="3775.50"></text></g><g><title>boggle.exe`hashbrown::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt;::get_inner (1 samples, 0.03%)</title><rect x="58.7392%" y="3749" width="0.0334%" height="15" fill="rgb(249,162,33)" fg:x="1761" fg:w="1"/><text x="58.9892%" y="3759.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTable&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;::get(unsigned long long, hashbrown::map::equivalent_key::closure_env$0 (1 samples, 0.03%)</title><rect x="58.7392%" y="3733" width="0.0334%" height="15" fill="rgb(232,4,32)" fg:x="1761" fg:w="1"/><text x="58.9892%" y="3743.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTable&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;::find(unsigned long long, hashbrown::map::equivalent_key::closure_env$0 (1 samples, 0.03%)</title><rect x="58.7392%" y="3717" width="0.0334%" height="15" fill="rgb(212,5,45)" fg:x="1761" fg:w="1"/><text x="58.9892%" y="3727.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::find_inner(unsigned long long, ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;usize&gt;,assoc$ (1 samples, 0.03%)</title><rect x="58.7392%" y="3701" width="0.0334%" height="15" fill="rgb(227,95,13)" fg:x="1761" fg:w="1"/><text x="58.9892%" y="3711.50"></text></g><g><title>boggle.exe`hashbrown::raw::impl$8::find::closure$0(hashbrown::raw::impl$8::find::closure_env$0&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global,hashbrown::map::equivalent_key::closure_env$0 (1 samples, 0.03%)</title><rect x="58.7392%" y="3685" width="0.0334%" height="15" fill="rgb(223,205,10)" fg:x="1761" fg:w="1"/><text x="58.9892%" y="3695.50"></text></g><g><title>boggle.exe`hashbrown::raw::Bucket&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::as_ref (1 samples, 0.03%)</title><rect x="58.7392%" y="3669" width="0.0334%" height="15" fill="rgb(222,178,8)" fg:x="1761" fg:w="1"/><text x="58.9892%" y="3679.50"></text></g><g><title>boggle.exe`hashbrown::raw::Bucket&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::as_ptr (1 samples, 0.03%)</title><rect x="58.7392%" y="3653" width="0.0334%" height="15" fill="rgb(216,13,22)" fg:x="1761" fg:w="1"/><text x="58.9892%" y="3663.50"></text></g><g><title>boggle.exe`core::ptr::mut_ptr::impl$0::sub(tuple$ (1 samples, 0.03%)</title><rect x="58.7392%" y="3637" width="0.0334%" height="15" fill="rgb(240,167,12)" fg:x="1761" fg:w="1"/><text x="58.9892%" y="3647.50"></text></g><g><title>boggle.exe`core::ptr::mut_ptr::impl$0::offset(tuple$ (1 samples, 0.03%)</title><rect x="58.7392%" y="3621" width="0.0334%" height="15" fill="rgb(235,68,35)" fg:x="1761" fg:w="1"/><text x="58.9892%" y="3631.50"></text></g><g><title>`0x7FFAC12D5D7A (1 samples, 0.03%)</title><rect x="58.7725%" y="3589" width="0.0334%" height="15" fill="rgb(253,40,27)" fg:x="1762" fg:w="1"/><text x="59.0225%" y="3599.50"></text></g><g><title>boggle.exe`boggle::BoggleSolver::valid_word (2 samples, 0.07%)</title><rect x="58.7725%" y="3813" width="0.0667%" height="15" fill="rgb(214,19,28)" fg:x="1762" fg:w="2"/><text x="59.0225%" y="3823.50"></text></g><g><title>boggle.exe`boggle::boggle_utils::boggle_char::BoggleChar::append_to (2 samples, 0.07%)</title><rect x="58.7725%" y="3797" width="0.0667%" height="15" fill="rgb(210,167,45)" fg:x="1762" fg:w="2"/><text x="59.0225%" y="3807.50"></text></g><g><title>boggle.exe`alloc::string::String::push (2 samples, 0.07%)</title><rect x="58.7725%" y="3781" width="0.0667%" height="15" fill="rgb(232,97,40)" fg:x="1762" fg:w="2"/><text x="59.0225%" y="3791.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::push (2 samples, 0.07%)</title><rect x="58.7725%" y="3765" width="0.0667%" height="15" fill="rgb(250,35,23)" fg:x="1762" fg:w="2"/><text x="59.0225%" y="3775.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::grow_one&lt;u8,alloc::alloc::Global&gt; (2 samples, 0.07%)</title><rect x="58.7725%" y="3749" width="0.0667%" height="15" fill="rgb(248,47,53)" fg:x="1762" fg:w="2"/><text x="59.0225%" y="3759.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_one (2 samples, 0.07%)</title><rect x="58.7725%" y="3733" width="0.0667%" height="15" fill="rgb(226,58,50)" fg:x="1762" fg:w="2"/><text x="59.0225%" y="3743.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (2 samples, 0.07%)</title><rect x="58.7725%" y="3717" width="0.0667%" height="15" fill="rgb(217,105,26)" fg:x="1762" fg:w="2"/><text x="59.0225%" y="3727.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (2 samples, 0.07%)</title><rect x="58.7725%" y="3701" width="0.0667%" height="15" fill="rgb(208,64,1)" fg:x="1762" fg:w="2"/><text x="59.0225%" y="3711.50"></text></g><g><title>boggle.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (2 samples, 0.07%)</title><rect x="58.7725%" y="3685" width="0.0667%" height="15" fill="rgb(214,80,1)" fg:x="1762" fg:w="2"/><text x="59.0225%" y="3695.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (2 samples, 0.07%)</title><rect x="58.7725%" y="3669" width="0.0667%" height="15" fill="rgb(206,175,26)" fg:x="1762" fg:w="2"/><text x="59.0225%" y="3679.50"></text></g><g><title>boggle.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (2 samples, 0.07%)</title><rect x="58.7725%" y="3653" width="0.0667%" height="15" fill="rgb(235,156,37)" fg:x="1762" fg:w="2"/><text x="59.0225%" y="3663.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (2 samples, 0.07%)</title><rect x="58.7725%" y="3637" width="0.0667%" height="15" fill="rgb(213,100,9)" fg:x="1762" fg:w="2"/><text x="59.0225%" y="3647.50"></text></g><g><title>`0x7FFAC12D5376 (2 samples, 0.07%)</title><rect x="58.7725%" y="3621" width="0.0667%" height="15" fill="rgb(241,15,13)" fg:x="1762" fg:w="2"/><text x="59.0225%" y="3631.50"></text></g><g><title>`0x7FFAC12D54B5 (2 samples, 0.07%)</title><rect x="58.7725%" y="3605" width="0.0667%" height="15" fill="rgb(205,97,43)" fg:x="1762" fg:w="2"/><text x="59.0225%" y="3615.50"></text></g><g><title>`0x7FFAC12D5E0B (1 samples, 0.03%)</title><rect x="58.8059%" y="3589" width="0.0334%" height="15" fill="rgb(216,106,32)" fg:x="1763" fg:w="1"/><text x="59.0559%" y="3599.50"></text></g><g><title>`0x7FFAC12D2AA7 (1 samples, 0.03%)</title><rect x="58.8059%" y="3573" width="0.0334%" height="15" fill="rgb(226,200,8)" fg:x="1763" fg:w="1"/><text x="59.0559%" y="3583.50"></text></g><g><title>`0x7FFAC1319480 (1 samples, 0.03%)</title><rect x="58.8059%" y="3557" width="0.0334%" height="15" fill="rgb(244,54,29)" fg:x="1763" fg:w="1"/><text x="59.0559%" y="3567.50"></text></g><g><title>boggle.exe`boggle::BoggleSolver::step_and_search(tuple$&lt;usize,usize&gt;, std::collections::hash::set::HashSet&lt;tuple$ (26 samples, 0.87%)</title><rect x="58.0053%" y="3829" width="0.8672%" height="15" fill="rgb(252,169,12)" fg:x="1739" fg:w="26"/><text x="58.2553%" y="3839.50"></text></g><g><title>boggle.exe`boggle::utils::dict_trie::DictTrie::check_word (1 samples, 0.03%)</title><rect x="58.8392%" y="3813" width="0.0334%" height="15" fill="rgb(231,199,11)" fg:x="1764" fg:w="1"/><text x="59.0892%" y="3823.50"></text></g><g><title>boggle.exe`std::collections::hash::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;::get (1 samples, 0.03%)</title><rect x="58.8392%" y="3797" width="0.0334%" height="15" fill="rgb(233,191,18)" fg:x="1764" fg:w="1"/><text x="59.0892%" y="3807.50"></text></g><g><title>boggle.exe`hashbrown::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt;::get (1 samples, 0.03%)</title><rect x="58.8392%" y="3781" width="0.0334%" height="15" fill="rgb(215,83,47)" fg:x="1764" fg:w="1"/><text x="59.0892%" y="3791.50"></text></g><g><title>boggle.exe`hashbrown::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt;::get_inner (1 samples, 0.03%)</title><rect x="58.8392%" y="3765" width="0.0334%" height="15" fill="rgb(251,67,19)" fg:x="1764" fg:w="1"/><text x="59.0892%" y="3775.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTable&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;::get(unsigned long long, hashbrown::map::equivalent_key::closure_env$0 (1 samples, 0.03%)</title><rect x="58.8392%" y="3749" width="0.0334%" height="15" fill="rgb(240,7,20)" fg:x="1764" fg:w="1"/><text x="59.0892%" y="3759.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTable&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;::find(unsigned long long, hashbrown::map::equivalent_key::closure_env$0 (1 samples, 0.03%)</title><rect x="58.8392%" y="3733" width="0.0334%" height="15" fill="rgb(210,150,26)" fg:x="1764" fg:w="1"/><text x="59.0892%" y="3743.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::find_inner(unsigned long long, ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;usize&gt;,assoc$ (1 samples, 0.03%)</title><rect x="58.8392%" y="3717" width="0.0334%" height="15" fill="rgb(228,75,42)" fg:x="1764" fg:w="1"/><text x="59.0892%" y="3727.50"></text></g><g><title>boggle.exe`hashbrown::raw::impl$8::find::closure$0(hashbrown::raw::impl$8::find::closure_env$0&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global,hashbrown::map::equivalent_key::closure_env$0 (1 samples, 0.03%)</title><rect x="58.8392%" y="3701" width="0.0334%" height="15" fill="rgb(237,134,48)" fg:x="1764" fg:w="1"/><text x="59.0892%" y="3711.50"></text></g><g><title>boggle.exe`hashbrown::map::equivalent_key::closure$0(hashbrown::map::equivalent_key::closure_env$0&lt;char,char,boggle::utils::dict_trie::DictTrieNode&gt;*, tuple$ (1 samples, 0.03%)</title><rect x="58.8392%" y="3685" width="0.0334%" height="15" fill="rgb(205,80,50)" fg:x="1764" fg:w="1"/><text x="59.0892%" y="3695.50"></text></g><g><title>boggle.exe`hashbrown::impl$0::equivalent (1 samples, 0.03%)</title><rect x="58.8392%" y="3669" width="0.0334%" height="15" fill="rgb(217,74,48)" fg:x="1764" fg:w="1"/><text x="59.0892%" y="3679.50"></text></g><g><title>boggle.exe`core::cmp::impls::impl$9::eq (1 samples, 0.03%)</title><rect x="58.8392%" y="3653" width="0.0334%" height="15" fill="rgb(205,82,50)" fg:x="1764" fg:w="1"/><text x="59.0892%" y="3663.50"></text></g><g><title>boggle.exe`core::cmp::impls::impl$20::eq (1 samples, 0.03%)</title><rect x="58.8392%" y="3637" width="0.0334%" height="15" fill="rgb(228,1,33)" fg:x="1764" fg:w="1"/><text x="59.0892%" y="3647.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(alloc::vec::Vec (1,749 samples, 58.34%)</title><rect x="0.5670%" y="4053" width="58.3389%" height="15" fill="rgb(214,50,23)" fg:x="17" fg:w="1749"/><text x="0.8170%" y="4063.50">boggle.exe`core::ptr::drop_in_place(alloc::vec::Vec</text></g><g><title>boggle.exe`alloc::vec::impl$25::drop(alloc::vec::Vec (1,749 samples, 58.34%)</title><rect x="0.5670%" y="4037" width="58.3389%" height="15" fill="rgb(210,62,9)" fg:x="17" fg:w="1749"/><text x="0.8170%" y="4047.50">boggle.exe`alloc::vec::impl$25::drop(alloc::vec::Vec</text></g><g><title>boggle.exe`alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;::as_mut_ptr (1,749 samples, 58.34%)</title><rect x="0.5670%" y="4021" width="58.3389%" height="15" fill="rgb(210,104,37)" fg:x="17" fg:w="1749"/><text x="0.8170%" y="4031.50">boggle.exe`alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;::as_mut_ptr</text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;alloc::string::String,alloc::alloc::Global&gt;::ptr (1,749 samples, 58.34%)</title><rect x="0.5670%" y="4005" width="58.3389%" height="15" fill="rgb(232,104,43)" fg:x="17" fg:w="1749"/><text x="0.8170%" y="4015.50">boggle.exe`alloc::raw_vec::RawVec&lt;alloc::string::String,alloc::alloc::Global&gt;::ptr</text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (1,749 samples, 58.34%)</title><rect x="0.5670%" y="3989" width="58.3389%" height="15" fill="rgb(244,52,6)" fg:x="17" fg:w="1749"/><text x="0.8170%" y="3999.50">boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr</text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (1,749 samples, 58.34%)</title><rect x="0.5670%" y="3973" width="58.3389%" height="15" fill="rgb(211,174,52)" fg:x="17" fg:w="1749"/><text x="0.8170%" y="3983.50">boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null</text></g><g><title>boggle.exe`boggle::BoggleSolver::find_all_words (1,749 samples, 58.34%)</title><rect x="0.5670%" y="3957" width="58.3389%" height="15" fill="rgb(229,48,4)" fg:x="17" fg:w="1749"/><text x="0.8170%" y="3967.50">boggle.exe`boggle::BoggleSolver::find_all_words</text></g><g><title>boggle.exe`core::ptr::drop_in_place (991 samples, 33.06%)</title><rect x="25.8506%" y="3941" width="33.0554%" height="15" fill="rgb(205,155,16)" fg:x="775" fg:w="991"/><text x="26.1006%" y="3951.50">boggle.exe`core::ptr::drop_in_place</text></g><g><title>boggle.exe`core::ptr::drop_in_place(alloc::vec::Vec (991 samples, 33.06%)</title><rect x="25.8506%" y="3925" width="33.0554%" height="15" fill="rgb(211,141,53)" fg:x="775" fg:w="991"/><text x="26.1006%" y="3935.50">boggle.exe`core::ptr::drop_in_place(alloc::vec::Vec</text></g><g><title>boggle.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (991 samples, 33.06%)</title><rect x="25.8506%" y="3909" width="33.0554%" height="15" fill="rgb(240,148,11)" fg:x="775" fg:w="991"/><text x="26.1006%" y="3919.50">boggle.exe`core::ptr::drop_in_place(alloc::raw_vec::Ra..</text></g><g><title>boggle.exe`alloc::raw_vec::impl$4::drop(alloc::raw_vec::RawVec (991 samples, 33.06%)</title><rect x="25.8506%" y="3893" width="33.0554%" height="15" fill="rgb(214,45,23)" fg:x="775" fg:w="991"/><text x="26.1006%" y="3903.50">boggle.exe`alloc::raw_vec::impl$4::drop(alloc::raw_vec..</text></g><g><title>boggle.exe`boggle::BoggleSolver::step_and_search(tuple$&lt;usize,usize&gt;, std::collections::hash::set::HashSet&lt;tuple$ (991 samples, 33.06%)</title><rect x="25.8506%" y="3877" width="33.0554%" height="15" fill="rgb(248,74,26)" fg:x="775" fg:w="991"/><text x="26.1006%" y="3887.50">boggle.exe`boggle::BoggleSolver::step_and_search(tuple..</text></g><g><title>boggle.exe`boggle::BoggleSolver::step_and_search(tuple$&lt;usize,usize&gt;, std::collections::hash::set::HashSet&lt;tuple$ (331 samples, 11.04%)</title><rect x="47.8652%" y="3861" width="11.0407%" height="15" fill="rgb(218,121,16)" fg:x="1435" fg:w="331"/><text x="48.1152%" y="3871.50">boggle.exe`boggl..</text></g><g><title>boggle.exe`boggle::BoggleSolver::step_and_search(tuple$&lt;usize,usize&gt;, std::collections::hash::set::HashSet&lt;tuple$ (85 samples, 2.84%)</title><rect x="56.0707%" y="3845" width="2.8352%" height="15" fill="rgb(218,10,47)" fg:x="1681" fg:w="85"/><text x="56.3207%" y="3855.50">bo..</text></g><g><title>boggle.exe`boggle::BoggleSolver::valid_word (1 samples, 0.03%)</title><rect x="58.8726%" y="3829" width="0.0334%" height="15" fill="rgb(227,99,14)" fg:x="1765" fg:w="1"/><text x="59.1226%" y="3839.50"></text></g><g><title>boggle.exe`boggle::boggle_utils::boggle_char::BoggleChar::append_to (1 samples, 0.03%)</title><rect x="58.8726%" y="3813" width="0.0334%" height="15" fill="rgb(229,83,46)" fg:x="1765" fg:w="1"/><text x="59.1226%" y="3823.50"></text></g><g><title>boggle.exe`alloc::string::String::push (1 samples, 0.03%)</title><rect x="58.8726%" y="3797" width="0.0334%" height="15" fill="rgb(228,25,1)" fg:x="1765" fg:w="1"/><text x="59.1226%" y="3807.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::push (1 samples, 0.03%)</title><rect x="58.8726%" y="3781" width="0.0334%" height="15" fill="rgb(252,190,15)" fg:x="1765" fg:w="1"/><text x="59.1226%" y="3791.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::grow_one&lt;u8,alloc::alloc::Global&gt; (1 samples, 0.03%)</title><rect x="58.8726%" y="3765" width="0.0334%" height="15" fill="rgb(213,103,51)" fg:x="1765" fg:w="1"/><text x="59.1226%" y="3775.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_one (1 samples, 0.03%)</title><rect x="58.8726%" y="3749" width="0.0334%" height="15" fill="rgb(220,38,44)" fg:x="1765" fg:w="1"/><text x="59.1226%" y="3759.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (1 samples, 0.03%)</title><rect x="58.8726%" y="3733" width="0.0334%" height="15" fill="rgb(210,45,26)" fg:x="1765" fg:w="1"/><text x="59.1226%" y="3743.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (1 samples, 0.03%)</title><rect x="58.8726%" y="3717" width="0.0334%" height="15" fill="rgb(205,95,48)" fg:x="1765" fg:w="1"/><text x="59.1226%" y="3727.50"></text></g><g><title>boggle.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="58.8726%" y="3701" width="0.0334%" height="15" fill="rgb(225,179,37)" fg:x="1765" fg:w="1"/><text x="59.1226%" y="3711.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="58.8726%" y="3685" width="0.0334%" height="15" fill="rgb(230,209,3)" fg:x="1765" fg:w="1"/><text x="59.1226%" y="3695.50"></text></g><g><title>boggle.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="58.8726%" y="3669" width="0.0334%" height="15" fill="rgb(248,12,46)" fg:x="1765" fg:w="1"/><text x="59.1226%" y="3679.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="58.8726%" y="3653" width="0.0334%" height="15" fill="rgb(234,18,0)" fg:x="1765" fg:w="1"/><text x="59.1226%" y="3663.50"></text></g><g><title>`0x7FFAC12D5376 (1 samples, 0.03%)</title><rect x="58.8726%" y="3637" width="0.0334%" height="15" fill="rgb(238,197,14)" fg:x="1765" fg:w="1"/><text x="59.1226%" y="3647.50"></text></g><g><title>`0x7FFAC12D54B5 (1 samples, 0.03%)</title><rect x="58.8726%" y="3621" width="0.0334%" height="15" fill="rgb(251,162,48)" fg:x="1765" fg:w="1"/><text x="59.1226%" y="3631.50"></text></g><g><title>`0x7FFAC12D5E0B (1 samples, 0.03%)</title><rect x="58.8726%" y="3605" width="0.0334%" height="15" fill="rgb(237,73,42)" fg:x="1765" fg:w="1"/><text x="59.1226%" y="3615.50"></text></g><g><title>`0x7FFAC12D23A7 (1 samples, 0.03%)</title><rect x="58.8726%" y="3589" width="0.0334%" height="15" fill="rgb(211,108,8)" fg:x="1765" fg:w="1"/><text x="59.1226%" y="3599.50"></text></g><g><title>boggle.exe`hashbrown::raw::bitmask::impl$3::next (1 samples, 0.03%)</title><rect x="58.9059%" y="3141" width="0.0334%" height="15" fill="rgb(213,45,22)" fg:x="1766" fg:w="1"/><text x="59.1559%" y="3151.50"></text></g><g><title>boggle.exe`hashbrown::raw::bitmask::BitMask::remove_lowest_bit (1 samples, 0.03%)</title><rect x="58.9059%" y="3125" width="0.0334%" height="15" fill="rgb(252,154,5)" fg:x="1766" fg:w="1"/><text x="59.1559%" y="3135.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(enum2$&lt;core::option::Option (2 samples, 0.07%)</title><rect x="58.9059%" y="3205" width="0.0667%" height="15" fill="rgb(221,79,52)" fg:x="1766" fg:w="2"/><text x="59.1559%" y="3215.50"></text></g><g><title>boggle.exe`hashbrown::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt;::insert&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt; (2 samples, 0.07%)</title><rect x="58.9059%" y="3189" width="0.0667%" height="15" fill="rgb(229,220,36)" fg:x="1766" fg:w="2"/><text x="59.1559%" y="3199.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTable&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;::find_or_find_insert_slot(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;char,char,boggle::utils::dict_trie::DictTrieNode&gt;, hashbrown::map::make_hasher::closure_env$0 (2 samples, 0.07%)</title><rect x="58.9059%" y="3173" width="0.0667%" height="15" fill="rgb(211,17,16)" fg:x="1766" fg:w="2"/><text x="59.1559%" y="3183.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner(unsigned long long, ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;usize&gt;,assoc$ (2 samples, 0.07%)</title><rect x="58.9059%" y="3157" width="0.0667%" height="15" fill="rgb(222,55,31)" fg:x="1766" fg:w="2"/><text x="59.1559%" y="3167.50"></text></g><g><title>boggle.exe`hashbrown::raw::h2 (1 samples, 0.03%)</title><rect x="58.9393%" y="3141" width="0.0334%" height="15" fill="rgb(221,221,31)" fg:x="1767" fg:w="1"/><text x="59.1893%" y="3151.50"></text></g><g><title>boggle.exe`hashbrown::map::make_hash (1 samples, 0.03%)</title><rect x="59.0060%" y="2981" width="0.0334%" height="15" fill="rgb(227,168,26)" fg:x="1769" fg:w="1"/><text x="59.2560%" y="2991.50"></text></g><g><title>boggle.exe`core::hash::BuildHasher::hash_one&lt;std::hash::random::RandomState,ref$&lt;char&gt; &gt; (1 samples, 0.03%)</title><rect x="59.0060%" y="2965" width="0.0334%" height="15" fill="rgb(224,139,9)" fg:x="1769" fg:w="1"/><text x="59.2560%" y="2975.50"></text></g><g><title>boggle.exe`std::hash::random::impl$4::finish (1 samples, 0.03%)</title><rect x="59.0060%" y="2949" width="0.0334%" height="15" fill="rgb(254,172,0)" fg:x="1769" fg:w="1"/><text x="59.2560%" y="2959.50"></text></g><g><title>boggle.exe`core::hash::sip::impl$4::finish (1 samples, 0.03%)</title><rect x="59.0060%" y="2933" width="0.0334%" height="15" fill="rgb(235,203,1)" fg:x="1769" fg:w="1"/><text x="59.2560%" y="2943.50"></text></g><g><title>boggle.exe`core::hash::sip::impl$5::finish(core::hash::sip::Hasher (1 samples, 0.03%)</title><rect x="59.0060%" y="2917" width="0.0334%" height="15" fill="rgb(216,205,24)" fg:x="1769" fg:w="1"/><text x="59.2560%" y="2927.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(enum2$&lt;core::option::Option (2 samples, 0.07%)</title><rect x="59.0060%" y="3013" width="0.0667%" height="15" fill="rgb(233,24,6)" fg:x="1769" fg:w="2"/><text x="59.2560%" y="3023.50"></text></g><g><title>boggle.exe`hashbrown::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt;::insert&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt; (2 samples, 0.07%)</title><rect x="59.0060%" y="2997" width="0.0667%" height="15" fill="rgb(244,110,9)" fg:x="1769" fg:w="2"/><text x="59.2560%" y="3007.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTable&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;::insert_in_slot(unsigned long long, hashbrown::raw::InsertSlot, tuple$ (1 samples, 0.03%)</title><rect x="59.0394%" y="2981" width="0.0334%" height="15" fill="rgb(239,222,42)" fg:x="1770" fg:w="1"/><text x="59.2894%" y="2991.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTable&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;::bucket (1 samples, 0.03%)</title><rect x="59.0394%" y="2965" width="0.0334%" height="15" fill="rgb(218,145,13)" fg:x="1770" fg:w="1"/><text x="59.2894%" y="2975.50"></text></g><g><title>boggle.exe`hashbrown::raw::Bucket&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::from_base_index(core::ptr::non_null::NonNull&lt;tuple$ (1 samples, 0.03%)</title><rect x="59.0394%" y="2949" width="0.0334%" height="15" fill="rgb(207,69,11)" fg:x="1770" fg:w="1"/><text x="59.2894%" y="2959.50"></text></g><g><title>boggle.exe`core::ptr::mut_ptr::impl$0::sub(tuple$ (1 samples, 0.03%)</title><rect x="59.0394%" y="2933" width="0.0334%" height="15" fill="rgb(220,223,22)" fg:x="1770" fg:w="1"/><text x="59.2894%" y="2943.50"></text></g><g><title>boggle.exe`core::ptr::mut_ptr::impl$0::offset(tuple$ (1 samples, 0.03%)</title><rect x="59.0394%" y="2917" width="0.0334%" height="15" fill="rgb(245,102,5)" fg:x="1770" fg:w="1"/><text x="59.2894%" y="2927.50"></text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_tuple::impl$0::next_element_seed(bincode::de::impl$3::deserialize_tuple::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, core::marker::PhantomData (1 samples, 0.03%)</title><rect x="59.1394%" y="2885" width="0.0334%" height="15" fill="rgb(211,148,2)" fg:x="1773" fg:w="1"/><text x="59.3894%" y="2895.50"></text></g><g><title>boggle.exe`serde::de::impl$5::deserialize(core::marker::PhantomData&lt;bool&gt;, bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (1 samples, 0.03%)</title><rect x="59.1394%" y="2869" width="0.0334%" height="15" fill="rgb(241,13,44)" fg:x="1773" fg:w="1"/><text x="59.3894%" y="2879.50"></text></g><g><title>boggle.exe`serde::de::impls::impl$3::deserialize(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (1 samples, 0.03%)</title><rect x="59.1394%" y="2853" width="0.0334%" height="15" fill="rgb(219,137,21)" fg:x="1773" fg:w="1"/><text x="59.3894%" y="2863.50"></text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_bool(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (1 samples, 0.03%)</title><rect x="59.1394%" y="2837" width="0.0334%" height="15" fill="rgb(242,206,5)" fg:x="1773" fg:w="1"/><text x="59.3894%" y="2847.50"></text></g><g><title>boggle.exe`bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;::deserialize_byte (1 samples, 0.03%)</title><rect x="59.1394%" y="2821" width="0.0334%" height="15" fill="rgb(217,114,22)" fg:x="1773" fg:w="1"/><text x="59.3894%" y="2831.50"></text></g><g><title>boggle.exe`bincode::byteorder::ReadBytesExt::read_u8 (1 samples, 0.03%)</title><rect x="59.1394%" y="2805" width="0.0334%" height="15" fill="rgb(253,206,42)" fg:x="1773" fg:w="1"/><text x="59.3894%" y="2815.50"></text></g><g><title>boggle.exe`bincode::de::read::impl$2::read_exact(bincode::de::read::SliceReader*, ref_mut$&lt;slice2$ (1 samples, 0.03%)</title><rect x="59.1394%" y="2789" width="0.0334%" height="15" fill="rgb(236,102,18)" fg:x="1773" fg:w="1"/><text x="59.3894%" y="2799.50"></text></g><g><title>boggle.exe`bincode::de::read::impl$2::read(bincode::de::read::SliceReader*, ref_mut$&lt;slice2$ (1 samples, 0.03%)</title><rect x="59.1394%" y="2773" width="0.0334%" height="15" fill="rgb(208,59,49)" fg:x="1773" fg:w="1"/><text x="59.3894%" y="2783.50"></text></g><g><title>boggle.exe`bincode::config::int::impl$1::deserialize_u64(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (2 samples, 0.07%)</title><rect x="59.1728%" y="2821" width="0.0667%" height="15" fill="rgb(215,194,28)" fg:x="1774" fg:w="2"/><text x="59.4228%" y="2831.50"></text></g><g><title>boggle.exe`bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;::deserialize_literal_u64 (2 samples, 0.07%)</title><rect x="59.1728%" y="2805" width="0.0667%" height="15" fill="rgb(243,207,11)" fg:x="1774" fg:w="2"/><text x="59.4228%" y="2815.50"></text></g><g><title>boggle.exe`bincode::byteorder::ReadBytesExt::read_u64 (2 samples, 0.07%)</title><rect x="59.1728%" y="2789" width="0.0667%" height="15" fill="rgb(254,179,35)" fg:x="1774" fg:w="2"/><text x="59.4228%" y="2799.50"></text></g><g><title>boggle.exe`bincode::de::read::impl$2::read_exact(bincode::de::read::SliceReader*, ref_mut$&lt;slice2$ (2 samples, 0.07%)</title><rect x="59.1728%" y="2773" width="0.0667%" height="15" fill="rgb(235,97,3)" fg:x="1774" fg:w="2"/><text x="59.4228%" y="2783.50"></text></g><g><title>boggle.exe`bincode::de::read::impl$2::read(bincode::de::read::SliceReader*, ref_mut$&lt;slice2$ (2 samples, 0.07%)</title><rect x="59.1728%" y="2757" width="0.0667%" height="15" fill="rgb(215,155,33)" fg:x="1774" fg:w="2"/><text x="59.4228%" y="2767.50"></text></g><g><title>boggle.exe`core::slice::impl$0::split_at(ref$&lt;slice2$ (2 samples, 0.07%)</title><rect x="59.1728%" y="2741" width="0.0667%" height="15" fill="rgb(223,128,12)" fg:x="1774" fg:w="2"/><text x="59.4228%" y="2751.50"></text></g><g><title>boggle.exe`core::slice::impl$0::split_at_checked(ref$&lt;slice2$ (2 samples, 0.07%)</title><rect x="59.1728%" y="2725" width="0.0667%" height="15" fill="rgb(208,157,18)" fg:x="1774" fg:w="2"/><text x="59.4228%" y="2735.50"></text></g><g><title>boggle.exe`core::slice::impl$0::split_at_unchecked(ref$&lt;slice2$ (2 samples, 0.07%)</title><rect x="59.1728%" y="2709" width="0.0667%" height="15" fill="rgb(249,70,54)" fg:x="1774" fg:w="2"/><text x="59.4228%" y="2719.50"></text></g><g><title>boggle.exe`bincode::config::int::IntEncoding::deserialize_len(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (3 samples, 0.10%)</title><rect x="59.1728%" y="2837" width="0.1001%" height="15" fill="rgb(244,118,24)" fg:x="1774" fg:w="3"/><text x="59.4228%" y="2847.50"></text></g><g><title>boggle.exe`enum2$&lt;core::result::Result&lt;u64,alloc::boxed::Box&lt;enum2$&lt;bincode::error::ErrorKind&gt;,alloc::alloc::Global&gt; &gt; &gt;::and_then(enum2$&lt;core::result::Result&lt;u64,alloc::boxed::Box&lt;enum2$&lt;bincode::error::ErrorKind&gt;,alloc::alloc::Global&gt; &gt; &gt;, enum2$&lt;core::result::Result&lt;usize,alloc::boxed::Box&lt;enum2$&lt;bincode::error::ErrorKind&gt;,alloc::alloc::Global&gt; &gt; &gt; (*) (1 samples, 0.03%)</title><rect x="59.2395%" y="2821" width="0.0334%" height="15" fill="rgb(211,54,0)" fg:x="1776" fg:w="1"/><text x="59.4895%" y="2831.50"></text></g><g><title>boggle.exe`core::ops::function::FnOnce::call_once(enum2$&lt;core::result::Result&lt;usize,alloc::boxed::Box&lt;enum2$&lt;bincode::error::ErrorKind&gt;,alloc::alloc::Global&gt; &gt; &gt; (*) (1 samples, 0.03%)</title><rect x="59.2395%" y="2805" width="0.0334%" height="15" fill="rgb(245,137,45)" fg:x="1776" fg:w="1"/><text x="59.4895%" y="2815.50"></text></g><g><title>boggle.exe`bincode::config::int::cast_u64_to_usize (1 samples, 0.03%)</title><rect x="59.2395%" y="2789" width="0.0334%" height="15" fill="rgb(232,154,31)" fg:x="1776" fg:w="1"/><text x="59.4895%" y="2799.50"></text></g><g><title>boggle.exe`core::hash::sip::impl$5::write&lt;core::hash::sip::Sip13Rounds&gt;(core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt;*, ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="59.3729%" y="2709" width="0.0334%" height="15" fill="rgb(253,6,39)" fg:x="1780" fg:w="1"/><text x="59.6229%" y="2719.50"></text></g><g><title>boggle.exe`core::hash::sip::u8to64_le(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="59.3729%" y="2693" width="0.0334%" height="15" fill="rgb(234,183,24)" fg:x="1780" fg:w="1"/><text x="59.6229%" y="2703.50"></text></g><g><title>boggle.exe`core::intrinsics::copy_nonoverlapping (1 samples, 0.03%)</title><rect x="59.3729%" y="2677" width="0.0334%" height="15" fill="rgb(252,84,40)" fg:x="1780" fg:w="1"/><text x="59.6229%" y="2687.50"></text></g><g><title>boggle.exe`hashbrown::map::make_hash (2 samples, 0.07%)</title><rect x="59.3729%" y="2789" width="0.0667%" height="15" fill="rgb(224,65,2)" fg:x="1780" fg:w="2"/><text x="59.6229%" y="2799.50"></text></g><g><title>boggle.exe`core::hash::BuildHasher::hash_one&lt;std::hash::random::RandomState,ref$&lt;char&gt; &gt; (2 samples, 0.07%)</title><rect x="59.3729%" y="2773" width="0.0667%" height="15" fill="rgb(229,38,24)" fg:x="1780" fg:w="2"/><text x="59.6229%" y="2783.50"></text></g><g><title>boggle.exe`std::hash::random::impl$4::finish (2 samples, 0.07%)</title><rect x="59.3729%" y="2757" width="0.0667%" height="15" fill="rgb(218,131,50)" fg:x="1780" fg:w="2"/><text x="59.6229%" y="2767.50"></text></g><g><title>boggle.exe`core::hash::sip::impl$4::finish (2 samples, 0.07%)</title><rect x="59.3729%" y="2741" width="0.0667%" height="15" fill="rgb(233,106,18)" fg:x="1780" fg:w="2"/><text x="59.6229%" y="2751.50"></text></g><g><title>boggle.exe`core::hash::sip::impl$5::finish(core::hash::sip::Hasher (2 samples, 0.07%)</title><rect x="59.3729%" y="2725" width="0.0667%" height="15" fill="rgb(220,216,11)" fg:x="1780" fg:w="2"/><text x="59.6229%" y="2735.50"></text></g><g><title>boggle.exe`core::hash::sip::impl$8::c_rounds (1 samples, 0.03%)</title><rect x="59.4063%" y="2709" width="0.0334%" height="15" fill="rgb(251,100,45)" fg:x="1781" fg:w="1"/><text x="59.6563%" y="2719.50"></text></g><g><title>boggle.exe`core::num::impl$9::wrapping_add (1 samples, 0.03%)</title><rect x="59.4063%" y="2693" width="0.0334%" height="15" fill="rgb(235,143,32)" fg:x="1781" fg:w="1"/><text x="59.6563%" y="2703.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTable&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;::find_or_find_insert_slot(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;char,char,boggle::utils::dict_trie::DictTrieNode&gt;, hashbrown::map::make_hasher::closure_env$0 (1 samples, 0.03%)</title><rect x="59.4396%" y="2789" width="0.0334%" height="15" fill="rgb(248,124,34)" fg:x="1782" fg:w="1"/><text x="59.6896%" y="2799.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner(unsigned long long, ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;usize&gt;,assoc$ (1 samples, 0.03%)</title><rect x="59.4396%" y="2773" width="0.0334%" height="15" fill="rgb(225,221,4)" fg:x="1782" fg:w="1"/><text x="59.6896%" y="2783.50"></text></g><g><title>boggle.exe`hashbrown::raw::h2 (1 samples, 0.03%)</title><rect x="59.4396%" y="2757" width="0.0334%" height="15" fill="rgb(242,27,43)" fg:x="1782" fg:w="1"/><text x="59.6896%" y="2767.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(enum2$&lt;core::option::Option (7 samples, 0.23%)</title><rect x="59.3396%" y="2821" width="0.2335%" height="15" fill="rgb(227,54,8)" fg:x="1779" fg:w="7"/><text x="59.5896%" y="2831.50"></text></g><g><title>boggle.exe`hashbrown::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt;::insert&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt; (7 samples, 0.23%)</title><rect x="59.3396%" y="2805" width="0.2335%" height="15" fill="rgb(253,139,49)" fg:x="1779" fg:w="7"/><text x="59.5896%" y="2815.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTable&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;::insert_in_slot(unsigned long long, hashbrown::raw::InsertSlot, tuple$ (3 samples, 0.10%)</title><rect x="59.4730%" y="2789" width="0.1001%" height="15" fill="rgb(231,26,43)" fg:x="1783" fg:w="3"/><text x="59.7230%" y="2799.50"></text></g><g><title>boggle.exe`hashbrown::raw::Bucket&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::write(tuple$ (3 samples, 0.10%)</title><rect x="59.4730%" y="2773" width="0.1001%" height="15" fill="rgb(207,121,39)" fg:x="1783" fg:w="3"/><text x="59.7230%" y="2783.50"></text></g><g><title>boggle.exe`core::ptr::mut_ptr::impl$0::write(tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;*, tuple$ (3 samples, 0.10%)</title><rect x="59.4730%" y="2757" width="0.1001%" height="15" fill="rgb(223,101,35)" fg:x="1783" fg:w="3"/><text x="59.7230%" y="2767.50"></text></g><g><title>boggle.exe`core::ptr::write(tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;*, tuple$ (3 samples, 0.10%)</title><rect x="59.4730%" y="2741" width="0.1001%" height="15" fill="rgb(232,87,23)" fg:x="1783" fg:w="3"/><text x="59.7230%" y="2751.50"></text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_map::impl$0::next_key_seed(bincode::de::impl$3::deserialize_map::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, core::marker::PhantomData (3 samples, 0.10%)</title><rect x="59.5730%" y="2789" width="0.1001%" height="15" fill="rgb(225,180,29)" fg:x="1786" fg:w="3"/><text x="59.8230%" y="2799.50"></text></g><g><title>boggle.exe`serde::de::impl$5::deserialize(core::marker::PhantomData&lt;char&gt;, bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (3 samples, 0.10%)</title><rect x="59.5730%" y="2773" width="0.1001%" height="15" fill="rgb(225,25,17)" fg:x="1786" fg:w="3"/><text x="59.8230%" y="2783.50"></text></g><g><title>boggle.exe`serde::de::impls::impl$5::deserialize(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (3 samples, 0.10%)</title><rect x="59.5730%" y="2757" width="0.1001%" height="15" fill="rgb(223,8,52)" fg:x="1786" fg:w="3"/><text x="59.8230%" y="2767.50"></text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_char(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (3 samples, 0.10%)</title><rect x="59.5730%" y="2741" width="0.1001%" height="15" fill="rgb(246,42,21)" fg:x="1786" fg:w="3"/><text x="59.8230%" y="2751.50"></text></g><g><title>boggle.exe`bincode::de::utf8_char_width (3 samples, 0.10%)</title><rect x="59.5730%" y="2725" width="0.1001%" height="15" fill="rgb(205,64,43)" fg:x="1786" fg:w="3"/><text x="59.8230%" y="2735.50"></text></g><g><title>boggle.exe`bincode::config::int::IntEncoding::deserialize_len(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (1 samples, 0.03%)</title><rect x="59.9400%" y="2645" width="0.0334%" height="15" fill="rgb(221,160,13)" fg:x="1797" fg:w="1"/><text x="60.1900%" y="2655.50"></text></g><g><title>boggle.exe`enum2$&lt;core::result::Result&lt;u64,alloc::boxed::Box&lt;enum2$&lt;bincode::error::ErrorKind&gt;,alloc::alloc::Global&gt; &gt; &gt;::and_then(enum2$&lt;core::result::Result&lt;u64,alloc::boxed::Box&lt;enum2$&lt;bincode::error::ErrorKind&gt;,alloc::alloc::Global&gt; &gt; &gt;, enum2$&lt;core::result::Result&lt;usize,alloc::boxed::Box&lt;enum2$&lt;bincode::error::ErrorKind&gt;,alloc::alloc::Global&gt; &gt; &gt; (*) (1 samples, 0.03%)</title><rect x="59.9400%" y="2629" width="0.0334%" height="15" fill="rgb(239,58,35)" fg:x="1797" fg:w="1"/><text x="60.1900%" y="2639.50"></text></g><g><title>boggle.exe`core::ops::function::FnOnce::call_once(enum2$&lt;core::result::Result&lt;usize,alloc::boxed::Box&lt;enum2$&lt;bincode::error::ErrorKind&gt;,alloc::alloc::Global&gt; &gt; &gt; (*) (1 samples, 0.03%)</title><rect x="59.9400%" y="2613" width="0.0334%" height="15" fill="rgb(251,26,40)" fg:x="1797" fg:w="1"/><text x="60.1900%" y="2623.50"></text></g><g><title>boggle.exe`core::hash::sip::impl$5::write&lt;core::hash::sip::Sip13Rounds&gt;(core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt;*, ref$&lt;slice2$ (2 samples, 0.07%)</title><rect x="60.1067%" y="2517" width="0.0667%" height="15" fill="rgb(247,0,4)" fg:x="1802" fg:w="2"/><text x="60.3567%" y="2527.50"></text></g><g><title>boggle.exe`core::hash::sip::impl$8::c_rounds (1 samples, 0.03%)</title><rect x="60.1734%" y="2517" width="0.0334%" height="15" fill="rgb(218,130,10)" fg:x="1804" fg:w="1"/><text x="60.4234%" y="2527.50"></text></g><g><title>boggle.exe`core::num::impl$9::wrapping_add (1 samples, 0.03%)</title><rect x="60.1734%" y="2501" width="0.0334%" height="15" fill="rgb(239,32,7)" fg:x="1804" fg:w="1"/><text x="60.4234%" y="2511.50"></text></g><g><title>boggle.exe`hashbrown::map::make_hash (5 samples, 0.17%)</title><rect x="60.1067%" y="2597" width="0.1668%" height="15" fill="rgb(210,192,24)" fg:x="1802" fg:w="5"/><text x="60.3567%" y="2607.50"></text></g><g><title>boggle.exe`core::hash::BuildHasher::hash_one&lt;std::hash::random::RandomState,ref$&lt;char&gt; &gt; (5 samples, 0.17%)</title><rect x="60.1067%" y="2581" width="0.1668%" height="15" fill="rgb(226,212,17)" fg:x="1802" fg:w="5"/><text x="60.3567%" y="2591.50"></text></g><g><title>boggle.exe`std::hash::random::impl$4::finish (5 samples, 0.17%)</title><rect x="60.1067%" y="2565" width="0.1668%" height="15" fill="rgb(219,201,28)" fg:x="1802" fg:w="5"/><text x="60.3567%" y="2575.50"></text></g><g><title>boggle.exe`core::hash::sip::impl$4::finish (5 samples, 0.17%)</title><rect x="60.1067%" y="2549" width="0.1668%" height="15" fill="rgb(235,207,41)" fg:x="1802" fg:w="5"/><text x="60.3567%" y="2559.50"></text></g><g><title>boggle.exe`core::hash::sip::impl$5::finish(core::hash::sip::Hasher (5 samples, 0.17%)</title><rect x="60.1067%" y="2533" width="0.1668%" height="15" fill="rgb(241,95,54)" fg:x="1802" fg:w="5"/><text x="60.3567%" y="2543.50"></text></g><g><title>boggle.exe`core::hash::sip::impl$8::d_rounds (2 samples, 0.07%)</title><rect x="60.2068%" y="2517" width="0.0667%" height="15" fill="rgb(248,12,23)" fg:x="1805" fg:w="2"/><text x="60.4568%" y="2527.50"></text></g><g><title>boggle.exe`core::num::impl$9::wrapping_add (2 samples, 0.07%)</title><rect x="60.2068%" y="2501" width="0.0667%" height="15" fill="rgb(228,173,4)" fg:x="1805" fg:w="2"/><text x="60.4568%" y="2511.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTable&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;::find_or_find_insert_slot(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;char,char,boggle::utils::dict_trie::DictTrieNode&gt;, hashbrown::map::make_hasher::closure_env$0 (1 samples, 0.03%)</title><rect x="60.2735%" y="2597" width="0.0334%" height="15" fill="rgb(254,99,5)" fg:x="1807" fg:w="1"/><text x="60.5235%" y="2607.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner(unsigned long long, ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;usize&gt;,assoc$ (1 samples, 0.03%)</title><rect x="60.2735%" y="2581" width="0.0334%" height="15" fill="rgb(212,184,17)" fg:x="1807" fg:w="1"/><text x="60.5235%" y="2591.50"></text></g><g><title>boggle.exe`hashbrown::raw::h2 (1 samples, 0.03%)</title><rect x="60.2735%" y="2565" width="0.0334%" height="15" fill="rgb(252,174,1)" fg:x="1807" fg:w="1"/><text x="60.5235%" y="2575.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(enum2$&lt;core::option::Option (11 samples, 0.37%)</title><rect x="60.0400%" y="2629" width="0.3669%" height="15" fill="rgb(241,118,51)" fg:x="1800" fg:w="11"/><text x="60.2900%" y="2639.50"></text></g><g><title>boggle.exe`hashbrown::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt;::insert&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt; (10 samples, 0.33%)</title><rect x="60.0734%" y="2613" width="0.3336%" height="15" fill="rgb(227,94,47)" fg:x="1801" fg:w="10"/><text x="60.3234%" y="2623.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTable&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;::insert_in_slot(unsigned long long, hashbrown::raw::InsertSlot, tuple$ (3 samples, 0.10%)</title><rect x="60.3069%" y="2597" width="0.1001%" height="15" fill="rgb(229,104,2)" fg:x="1808" fg:w="3"/><text x="60.5569%" y="2607.50"></text></g><g><title>boggle.exe`hashbrown::raw::Bucket&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::write(tuple$ (3 samples, 0.10%)</title><rect x="60.3069%" y="2581" width="0.1001%" height="15" fill="rgb(219,28,31)" fg:x="1808" fg:w="3"/><text x="60.5569%" y="2591.50"></text></g><g><title>boggle.exe`core::ptr::mut_ptr::impl$0::write(tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;*, tuple$ (3 samples, 0.10%)</title><rect x="60.3069%" y="2565" width="0.1001%" height="15" fill="rgb(233,109,36)" fg:x="1808" fg:w="3"/><text x="60.5569%" y="2575.50"></text></g><g><title>boggle.exe`core::ptr::write(tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;*, tuple$ (3 samples, 0.10%)</title><rect x="60.3069%" y="2549" width="0.1001%" height="15" fill="rgb(246,88,11)" fg:x="1808" fg:w="3"/><text x="60.5569%" y="2559.50"></text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_map::impl$0::next_key_seed(bincode::de::impl$3::deserialize_map::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, core::marker::PhantomData (1 samples, 0.03%)</title><rect x="60.4069%" y="2597" width="0.0334%" height="15" fill="rgb(209,212,17)" fg:x="1811" fg:w="1"/><text x="60.6569%" y="2607.50"></text></g><g><title>boggle.exe`serde::de::impl$5::deserialize(core::marker::PhantomData&lt;char&gt;, bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (1 samples, 0.03%)</title><rect x="60.4069%" y="2581" width="0.0334%" height="15" fill="rgb(243,59,29)" fg:x="1811" fg:w="1"/><text x="60.6569%" y="2591.50"></text></g><g><title>boggle.exe`serde::de::impls::impl$5::deserialize(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (1 samples, 0.03%)</title><rect x="60.4069%" y="2565" width="0.0334%" height="15" fill="rgb(244,205,48)" fg:x="1811" fg:w="1"/><text x="60.6569%" y="2575.50"></text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_char(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (1 samples, 0.03%)</title><rect x="60.4069%" y="2549" width="0.0334%" height="15" fill="rgb(227,30,6)" fg:x="1811" fg:w="1"/><text x="60.6569%" y="2559.50"></text></g><g><title>boggle.exe`bincode::de::read::impl$2::read_exact(bincode::de::read::SliceReader*, ref_mut$&lt;slice2$ (1 samples, 0.03%)</title><rect x="60.4069%" y="2533" width="0.0334%" height="15" fill="rgb(220,205,48)" fg:x="1811" fg:w="1"/><text x="60.6569%" y="2543.50"></text></g><g><title>boggle.exe`bincode::de::read::impl$2::read(bincode::de::read::SliceReader*, ref_mut$&lt;slice2$ (1 samples, 0.03%)</title><rect x="60.4069%" y="2517" width="0.0334%" height="15" fill="rgb(250,94,14)" fg:x="1811" fg:w="1"/><text x="60.6569%" y="2527.50"></text></g><g><title>boggle.exe`hashbrown::map::make_hash (3 samples, 0.10%)</title><rect x="61.0740%" y="2405" width="0.1001%" height="15" fill="rgb(216,119,42)" fg:x="1831" fg:w="3"/><text x="61.3240%" y="2415.50"></text></g><g><title>boggle.exe`core::hash::BuildHasher::hash_one&lt;std::hash::random::RandomState,ref$&lt;char&gt; &gt; (3 samples, 0.10%)</title><rect x="61.0740%" y="2389" width="0.1001%" height="15" fill="rgb(232,155,0)" fg:x="1831" fg:w="3"/><text x="61.3240%" y="2399.50"></text></g><g><title>boggle.exe`std::hash::random::impl$4::finish (2 samples, 0.07%)</title><rect x="61.1074%" y="2373" width="0.0667%" height="15" fill="rgb(212,24,32)" fg:x="1832" fg:w="2"/><text x="61.3574%" y="2383.50"></text></g><g><title>boggle.exe`core::hash::sip::impl$4::finish (2 samples, 0.07%)</title><rect x="61.1074%" y="2357" width="0.0667%" height="15" fill="rgb(216,69,20)" fg:x="1832" fg:w="2"/><text x="61.3574%" y="2367.50"></text></g><g><title>boggle.exe`core::hash::sip::impl$5::finish(core::hash::sip::Hasher (2 samples, 0.07%)</title><rect x="61.1074%" y="2341" width="0.0667%" height="15" fill="rgb(229,73,31)" fg:x="1832" fg:w="2"/><text x="61.3574%" y="2351.50"></text></g><g><title>boggle.exe`core::hash::sip::impl$8::d_rounds (1 samples, 0.03%)</title><rect x="61.1408%" y="2325" width="0.0334%" height="15" fill="rgb(224,219,20)" fg:x="1833" fg:w="1"/><text x="61.3908%" y="2335.50"></text></g><g><title>boggle.exe`core::num::impl$9::wrapping_add (1 samples, 0.03%)</title><rect x="61.1408%" y="2309" width="0.0334%" height="15" fill="rgb(215,146,41)" fg:x="1833" fg:w="1"/><text x="61.3908%" y="2319.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::find_insert_slot_in_group (1 samples, 0.03%)</title><rect x="61.1741%" y="2373" width="0.0334%" height="15" fill="rgb(244,71,31)" fg:x="1834" fg:w="1"/><text x="61.4241%" y="2383.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::match_empty_or_deleted (1 samples, 0.03%)</title><rect x="61.1741%" y="2357" width="0.0334%" height="15" fill="rgb(224,24,11)" fg:x="1834" fg:w="1"/><text x="61.4241%" y="2367.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTable&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;::find_or_find_insert_slot(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;char,char,boggle::utils::dict_trie::DictTrieNode&gt;, hashbrown::map::make_hasher::closure_env$0 (2 samples, 0.07%)</title><rect x="61.1741%" y="2405" width="0.0667%" height="15" fill="rgb(229,76,15)" fg:x="1834" fg:w="2"/><text x="61.4241%" y="2415.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner(unsigned long long, ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;usize&gt;,assoc$ (2 samples, 0.07%)</title><rect x="61.1741%" y="2389" width="0.0667%" height="15" fill="rgb(209,93,2)" fg:x="1834" fg:w="2"/><text x="61.4241%" y="2399.50"></text></g><g><title>boggle.exe`hashbrown::raw::h2 (1 samples, 0.03%)</title><rect x="61.2075%" y="2373" width="0.0334%" height="15" fill="rgb(216,200,50)" fg:x="1835" fg:w="1"/><text x="61.4575%" y="2383.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(enum2$&lt;core::option::Option (6 samples, 0.20%)</title><rect x="61.0740%" y="2437" width="0.2001%" height="15" fill="rgb(211,67,34)" fg:x="1831" fg:w="6"/><text x="61.3240%" y="2447.50"></text></g><g><title>boggle.exe`hashbrown::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt;::insert&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt; (6 samples, 0.20%)</title><rect x="61.0740%" y="2421" width="0.2001%" height="15" fill="rgb(225,87,47)" fg:x="1831" fg:w="6"/><text x="61.3240%" y="2431.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTable&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;::insert_in_slot(unsigned long long, hashbrown::raw::InsertSlot, tuple$ (1 samples, 0.03%)</title><rect x="61.2408%" y="2405" width="0.0334%" height="15" fill="rgb(217,185,16)" fg:x="1836" fg:w="1"/><text x="61.4908%" y="2415.50"></text></g><g><title>boggle.exe`hashbrown::raw::Bucket&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::write(tuple$ (1 samples, 0.03%)</title><rect x="61.2408%" y="2389" width="0.0334%" height="15" fill="rgb(205,0,0)" fg:x="1836" fg:w="1"/><text x="61.4908%" y="2399.50"></text></g><g><title>boggle.exe`core::ptr::mut_ptr::impl$0::write(tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;*, tuple$ (1 samples, 0.03%)</title><rect x="61.2408%" y="2373" width="0.0334%" height="15" fill="rgb(207,116,45)" fg:x="1836" fg:w="1"/><text x="61.4908%" y="2383.50"></text></g><g><title>boggle.exe`core::ptr::write(tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;*, tuple$ (1 samples, 0.03%)</title><rect x="61.2408%" y="2357" width="0.0334%" height="15" fill="rgb(221,156,26)" fg:x="1836" fg:w="1"/><text x="61.4908%" y="2367.50"></text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_map::impl$0::next_key_seed(bincode::de::impl$3::deserialize_map::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, core::marker::PhantomData (1 samples, 0.03%)</title><rect x="61.2742%" y="2405" width="0.0334%" height="15" fill="rgb(213,140,4)" fg:x="1837" fg:w="1"/><text x="61.5242%" y="2415.50"></text></g><g><title>boggle.exe`serde::de::impl$5::deserialize(core::marker::PhantomData&lt;char&gt;, bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (1 samples, 0.03%)</title><rect x="61.2742%" y="2389" width="0.0334%" height="15" fill="rgb(231,224,15)" fg:x="1837" fg:w="1"/><text x="61.5242%" y="2399.50"></text></g><g><title>boggle.exe`serde::de::impls::impl$5::deserialize(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (1 samples, 0.03%)</title><rect x="61.2742%" y="2373" width="0.0334%" height="15" fill="rgb(244,76,20)" fg:x="1837" fg:w="1"/><text x="61.5242%" y="2383.50"></text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_char(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (1 samples, 0.03%)</title><rect x="61.2742%" y="2357" width="0.0334%" height="15" fill="rgb(238,117,7)" fg:x="1837" fg:w="1"/><text x="61.5242%" y="2367.50"></text></g><g><title>boggle.exe`bincode::de::read::impl$2::read_exact(bincode::de::read::SliceReader*, ref_mut$&lt;slice2$ (1 samples, 0.03%)</title><rect x="61.2742%" y="2341" width="0.0334%" height="15" fill="rgb(235,1,10)" fg:x="1837" fg:w="1"/><text x="61.5242%" y="2351.50"></text></g><g><title>boggle.exe`bincode::de::read::impl$2::read(bincode::de::read::SliceReader*, ref_mut$&lt;slice2$ (1 samples, 0.03%)</title><rect x="61.2742%" y="2325" width="0.0334%" height="15" fill="rgb(216,165,6)" fg:x="1837" fg:w="1"/><text x="61.5242%" y="2335.50"></text></g><g><title>boggle.exe`bincode::config::int::IntEncoding::deserialize_len(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (1 samples, 0.03%)</title><rect x="61.5744%" y="2261" width="0.0334%" height="15" fill="rgb(246,91,35)" fg:x="1846" fg:w="1"/><text x="61.8244%" y="2271.50"></text></g><g><title>boggle.exe`enum2$&lt;core::result::Result&lt;u64,alloc::boxed::Box&lt;enum2$&lt;bincode::error::ErrorKind&gt;,alloc::alloc::Global&gt; &gt; &gt;::and_then(enum2$&lt;core::result::Result&lt;u64,alloc::boxed::Box&lt;enum2$&lt;bincode::error::ErrorKind&gt;,alloc::alloc::Global&gt; &gt; &gt;, enum2$&lt;core::result::Result&lt;usize,alloc::boxed::Box&lt;enum2$&lt;bincode::error::ErrorKind&gt;,alloc::alloc::Global&gt; &gt; &gt; (*) (1 samples, 0.03%)</title><rect x="61.5744%" y="2245" width="0.0334%" height="15" fill="rgb(228,96,24)" fg:x="1846" fg:w="1"/><text x="61.8244%" y="2255.50"></text></g><g><title>boggle.exe`core::ops::function::FnOnce::call_once(enum2$&lt;core::result::Result&lt;usize,alloc::boxed::Box&lt;enum2$&lt;bincode::error::ErrorKind&gt;,alloc::alloc::Global&gt; &gt; &gt; (*) (1 samples, 0.03%)</title><rect x="61.5744%" y="2229" width="0.0334%" height="15" fill="rgb(254,217,53)" fg:x="1846" fg:w="1"/><text x="61.8244%" y="2239.50"></text></g><g><title>boggle.exe`std::hash::random::impl$1::build_hasher (2 samples, 0.07%)</title><rect x="62.0080%" y="2181" width="0.0667%" height="15" fill="rgb(209,60,0)" fg:x="1859" fg:w="2"/><text x="62.2580%" y="2191.50"></text></g><g><title>boggle.exe`core::hash::sip::impl$5::write&lt;core::hash::sip::Sip13Rounds&gt;(core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt;*, ref$&lt;slice2$ (2 samples, 0.07%)</title><rect x="62.1414%" y="2133" width="0.0667%" height="15" fill="rgb(250,93,26)" fg:x="1863" fg:w="2"/><text x="62.3914%" y="2143.50"></text></g><g><title>boggle.exe`core::hash::sip::u8to64_le(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="62.1748%" y="2117" width="0.0334%" height="15" fill="rgb(211,9,40)" fg:x="1864" fg:w="1"/><text x="62.4248%" y="2127.50"></text></g><g><title>boggle.exe`hashbrown::map::make_hash (7 samples, 0.23%)</title><rect x="62.0080%" y="2213" width="0.2335%" height="15" fill="rgb(242,57,20)" fg:x="1859" fg:w="7"/><text x="62.2580%" y="2223.50"></text></g><g><title>boggle.exe`core::hash::BuildHasher::hash_one&lt;std::hash::random::RandomState,ref$&lt;char&gt; &gt; (7 samples, 0.23%)</title><rect x="62.0080%" y="2197" width="0.2335%" height="15" fill="rgb(248,85,48)" fg:x="1859" fg:w="7"/><text x="62.2580%" y="2207.50"></text></g><g><title>boggle.exe`std::hash::random::impl$4::finish (5 samples, 0.17%)</title><rect x="62.0747%" y="2181" width="0.1668%" height="15" fill="rgb(212,117,2)" fg:x="1861" fg:w="5"/><text x="62.3247%" y="2191.50"></text></g><g><title>boggle.exe`core::hash::sip::impl$4::finish (5 samples, 0.17%)</title><rect x="62.0747%" y="2165" width="0.1668%" height="15" fill="rgb(243,19,3)" fg:x="1861" fg:w="5"/><text x="62.3247%" y="2175.50"></text></g><g><title>boggle.exe`core::hash::sip::impl$5::finish(core::hash::sip::Hasher (5 samples, 0.17%)</title><rect x="62.0747%" y="2149" width="0.1668%" height="15" fill="rgb(232,217,24)" fg:x="1861" fg:w="5"/><text x="62.3247%" y="2159.50"></text></g><g><title>boggle.exe`core::hash::sip::impl$8::d_rounds (1 samples, 0.03%)</title><rect x="62.2081%" y="2133" width="0.0334%" height="15" fill="rgb(224,175,40)" fg:x="1865" fg:w="1"/><text x="62.4581%" y="2143.50"></text></g><g><title>boggle.exe`core::num::impl$9::wrapping_add (1 samples, 0.03%)</title><rect x="62.2081%" y="2117" width="0.0334%" height="15" fill="rgb(212,162,32)" fg:x="1865" fg:w="1"/><text x="62.4581%" y="2127.50"></text></g><g><title>boggle.exe`hashbrown::raw::h2 (1 samples, 0.03%)</title><rect x="62.2748%" y="2181" width="0.0334%" height="15" fill="rgb(215,9,4)" fg:x="1867" fg:w="1"/><text x="62.5248%" y="2191.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTable&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;::find_or_find_insert_slot(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;char,char,boggle::utils::dict_trie::DictTrieNode&gt;, hashbrown::map::make_hasher::closure_env$0 (3 samples, 0.10%)</title><rect x="62.2415%" y="2213" width="0.1001%" height="15" fill="rgb(242,42,7)" fg:x="1866" fg:w="3"/><text x="62.4915%" y="2223.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner(unsigned long long, ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;usize&gt;,assoc$ (2 samples, 0.07%)</title><rect x="62.2748%" y="2197" width="0.0667%" height="15" fill="rgb(242,184,45)" fg:x="1867" fg:w="2"/><text x="62.5248%" y="2207.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::match_empty (1 samples, 0.03%)</title><rect x="62.3082%" y="2181" width="0.0334%" height="15" fill="rgb(228,111,51)" fg:x="1868" fg:w="1"/><text x="62.5582%" y="2191.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::match_byte (1 samples, 0.03%)</title><rect x="62.3082%" y="2165" width="0.0334%" height="15" fill="rgb(236,147,17)" fg:x="1868" fg:w="1"/><text x="62.5582%" y="2175.50"></text></g><g><title>boggle.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.03%)</title><rect x="62.3082%" y="2149" width="0.0334%" height="15" fill="rgb(210,75,22)" fg:x="1868" fg:w="1"/><text x="62.5582%" y="2159.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(enum2$&lt;core::option::Option (19 samples, 0.63%)</title><rect x="61.8412%" y="2245" width="0.6338%" height="15" fill="rgb(217,159,45)" fg:x="1854" fg:w="19"/><text x="62.0912%" y="2255.50"></text></g><g><title>boggle.exe`hashbrown::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt;::insert&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt; (19 samples, 0.63%)</title><rect x="61.8412%" y="2229" width="0.6338%" height="15" fill="rgb(245,165,53)" fg:x="1854" fg:w="19"/><text x="62.0912%" y="2239.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTable&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;::insert_in_slot(unsigned long long, hashbrown::raw::InsertSlot, tuple$ (4 samples, 0.13%)</title><rect x="62.3416%" y="2213" width="0.1334%" height="15" fill="rgb(251,190,50)" fg:x="1869" fg:w="4"/><text x="62.5916%" y="2223.50"></text></g><g><title>boggle.exe`hashbrown::raw::Bucket&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::write(tuple$ (4 samples, 0.13%)</title><rect x="62.3416%" y="2197" width="0.1334%" height="15" fill="rgb(208,203,29)" fg:x="1869" fg:w="4"/><text x="62.5916%" y="2207.50"></text></g><g><title>boggle.exe`core::ptr::mut_ptr::impl$0::write(tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;*, tuple$ (4 samples, 0.13%)</title><rect x="62.3416%" y="2181" width="0.1334%" height="15" fill="rgb(207,209,35)" fg:x="1869" fg:w="4"/><text x="62.5916%" y="2191.50"></text></g><g><title>boggle.exe`core::ptr::write(tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;*, tuple$ (4 samples, 0.13%)</title><rect x="62.3416%" y="2165" width="0.1334%" height="15" fill="rgb(230,144,49)" fg:x="1869" fg:w="4"/><text x="62.5916%" y="2175.50"></text></g><g><title>boggle.exe`bincode::de::read::impl$2::read_exact(bincode::de::read::SliceReader*, ref_mut$&lt;slice2$ (2 samples, 0.07%)</title><rect x="62.4750%" y="2149" width="0.0667%" height="15" fill="rgb(229,31,6)" fg:x="1873" fg:w="2"/><text x="62.7250%" y="2159.50"></text></g><g><title>boggle.exe`bincode::de::read::impl$2::read(bincode::de::read::SliceReader*, ref_mut$&lt;slice2$ (2 samples, 0.07%)</title><rect x="62.4750%" y="2133" width="0.0667%" height="15" fill="rgb(251,129,24)" fg:x="1873" fg:w="2"/><text x="62.7250%" y="2143.50"></text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_map::impl$0::next_key_seed(bincode::de::impl$3::deserialize_map::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, core::marker::PhantomData (3 samples, 0.10%)</title><rect x="62.4750%" y="2213" width="0.1001%" height="15" fill="rgb(235,105,15)" fg:x="1873" fg:w="3"/><text x="62.7250%" y="2223.50"></text></g><g><title>boggle.exe`serde::de::impl$5::deserialize(core::marker::PhantomData&lt;char&gt;, bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (3 samples, 0.10%)</title><rect x="62.4750%" y="2197" width="0.1001%" height="15" fill="rgb(216,52,43)" fg:x="1873" fg:w="3"/><text x="62.7250%" y="2207.50"></text></g><g><title>boggle.exe`serde::de::impls::impl$5::deserialize(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (3 samples, 0.10%)</title><rect x="62.4750%" y="2181" width="0.1001%" height="15" fill="rgb(238,144,41)" fg:x="1873" fg:w="3"/><text x="62.7250%" y="2191.50"></text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_char(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (3 samples, 0.10%)</title><rect x="62.4750%" y="2165" width="0.1001%" height="15" fill="rgb(243,63,9)" fg:x="1873" fg:w="3"/><text x="62.7250%" y="2175.50"></text></g><g><title>boggle.exe`bincode::de::utf8_char_width (1 samples, 0.03%)</title><rect x="62.5417%" y="2149" width="0.0334%" height="15" fill="rgb(246,208,1)" fg:x="1875" fg:w="1"/><text x="62.7917%" y="2159.50"></text></g><g><title>boggle.exe`bincode::config::int::IntEncoding::deserialize_len(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (1 samples, 0.03%)</title><rect x="63.1087%" y="2069" width="0.0334%" height="15" fill="rgb(233,182,18)" fg:x="1892" fg:w="1"/><text x="63.3587%" y="2079.50"></text></g><g><title>boggle.exe`enum2$&lt;core::result::Result&lt;u64,alloc::boxed::Box&lt;enum2$&lt;bincode::error::ErrorKind&gt;,alloc::alloc::Global&gt; &gt; &gt;::and_then(enum2$&lt;core::result::Result&lt;u64,alloc::boxed::Box&lt;enum2$&lt;bincode::error::ErrorKind&gt;,alloc::alloc::Global&gt; &gt; &gt;, enum2$&lt;core::result::Result&lt;usize,alloc::boxed::Box&lt;enum2$&lt;bincode::error::ErrorKind&gt;,alloc::alloc::Global&gt; &gt; &gt; (*) (1 samples, 0.03%)</title><rect x="63.1087%" y="2053" width="0.0334%" height="15" fill="rgb(242,224,8)" fg:x="1892" fg:w="1"/><text x="63.3587%" y="2063.50"></text></g><g><title>boggle.exe`core::ops::function::FnOnce::call_once(enum2$&lt;core::result::Result&lt;usize,alloc::boxed::Box&lt;enum2$&lt;bincode::error::ErrorKind&gt;,alloc::alloc::Global&gt; &gt; &gt; (*) (1 samples, 0.03%)</title><rect x="63.1087%" y="2037" width="0.0334%" height="15" fill="rgb(243,54,37)" fg:x="1892" fg:w="1"/><text x="63.3587%" y="2047.50"></text></g><g><title>boggle.exe`bincode::config::int::cast_u64_to_usize (1 samples, 0.03%)</title><rect x="63.1087%" y="2021" width="0.0334%" height="15" fill="rgb(233,192,12)" fg:x="1892" fg:w="1"/><text x="63.3587%" y="2031.50"></text></g><g><title>boggle.exe`hashbrown::map::make_hash (2 samples, 0.07%)</title><rect x="63.4423%" y="2021" width="0.0667%" height="15" fill="rgb(251,192,53)" fg:x="1902" fg:w="2"/><text x="63.6923%" y="2031.50"></text></g><g><title>boggle.exe`core::hash::BuildHasher::hash_one&lt;std::hash::random::RandomState,ref$&lt;char&gt; &gt; (2 samples, 0.07%)</title><rect x="63.4423%" y="2005" width="0.0667%" height="15" fill="rgb(246,141,26)" fg:x="1902" fg:w="2"/><text x="63.6923%" y="2015.50"></text></g><g><title>boggle.exe`std::hash::random::impl$4::finish (2 samples, 0.07%)</title><rect x="63.4423%" y="1989" width="0.0667%" height="15" fill="rgb(239,195,19)" fg:x="1902" fg:w="2"/><text x="63.6923%" y="1999.50"></text></g><g><title>boggle.exe`core::hash::sip::impl$4::finish (2 samples, 0.07%)</title><rect x="63.4423%" y="1973" width="0.0667%" height="15" fill="rgb(241,16,39)" fg:x="1902" fg:w="2"/><text x="63.6923%" y="1983.50"></text></g><g><title>boggle.exe`core::hash::sip::impl$5::finish(core::hash::sip::Hasher (2 samples, 0.07%)</title><rect x="63.4423%" y="1957" width="0.0667%" height="15" fill="rgb(223,13,53)" fg:x="1902" fg:w="2"/><text x="63.6923%" y="1967.50"></text></g><g><title>boggle.exe`core::hash::sip::impl$8::d_rounds (1 samples, 0.03%)</title><rect x="63.4757%" y="1941" width="0.0334%" height="15" fill="rgb(214,227,0)" fg:x="1903" fg:w="1"/><text x="63.7257%" y="1951.50"></text></g><g><title>boggle.exe`core::num::impl$9::wrapping_add (1 samples, 0.03%)</title><rect x="63.4757%" y="1925" width="0.0334%" height="15" fill="rgb(228,103,26)" fg:x="1903" fg:w="1"/><text x="63.7257%" y="1935.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(enum2$&lt;core::option::Option (12 samples, 0.40%)</title><rect x="63.3089%" y="2053" width="0.4003%" height="15" fill="rgb(254,177,53)" fg:x="1898" fg:w="12"/><text x="63.5589%" y="2063.50"></text></g><g><title>boggle.exe`hashbrown::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt;::insert&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt; (11 samples, 0.37%)</title><rect x="63.3422%" y="2037" width="0.3669%" height="15" fill="rgb(208,201,34)" fg:x="1899" fg:w="11"/><text x="63.5922%" y="2047.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTable&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;::insert_in_slot(unsigned long long, hashbrown::raw::InsertSlot, tuple$ (6 samples, 0.20%)</title><rect x="63.5090%" y="2021" width="0.2001%" height="15" fill="rgb(212,39,5)" fg:x="1904" fg:w="6"/><text x="63.7590%" y="2031.50"></text></g><g><title>boggle.exe`hashbrown::raw::Bucket&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::write(tuple$ (6 samples, 0.20%)</title><rect x="63.5090%" y="2005" width="0.2001%" height="15" fill="rgb(246,117,3)" fg:x="1904" fg:w="6"/><text x="63.7590%" y="2015.50"></text></g><g><title>boggle.exe`core::ptr::mut_ptr::impl$0::write(tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;*, tuple$ (6 samples, 0.20%)</title><rect x="63.5090%" y="1989" width="0.2001%" height="15" fill="rgb(244,118,39)" fg:x="1904" fg:w="6"/><text x="63.7590%" y="1999.50"></text></g><g><title>boggle.exe`core::ptr::write(tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;*, tuple$ (6 samples, 0.20%)</title><rect x="63.5090%" y="1973" width="0.2001%" height="15" fill="rgb(241,64,10)" fg:x="1904" fg:w="6"/><text x="63.7590%" y="1983.50"></text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_map::impl$0::next_key_seed(bincode::de::impl$3::deserialize_map::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, core::marker::PhantomData (1 samples, 0.03%)</title><rect x="63.7091%" y="2021" width="0.0334%" height="15" fill="rgb(229,39,44)" fg:x="1910" fg:w="1"/><text x="63.9591%" y="2031.50"></text></g><g><title>boggle.exe`serde::de::impl$5::deserialize(core::marker::PhantomData&lt;char&gt;, bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (1 samples, 0.03%)</title><rect x="63.7091%" y="2005" width="0.0334%" height="15" fill="rgb(230,226,3)" fg:x="1910" fg:w="1"/><text x="63.9591%" y="2015.50"></text></g><g><title>boggle.exe`serde::de::impls::impl$5::deserialize(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (1 samples, 0.03%)</title><rect x="63.7091%" y="1989" width="0.0334%" height="15" fill="rgb(222,13,42)" fg:x="1910" fg:w="1"/><text x="63.9591%" y="1999.50"></text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_char(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (1 samples, 0.03%)</title><rect x="63.7091%" y="1973" width="0.0334%" height="15" fill="rgb(247,180,54)" fg:x="1910" fg:w="1"/><text x="63.9591%" y="1983.50"></text></g><g><title>boggle.exe`bincode::de::read::impl$2::read_exact(bincode::de::read::SliceReader*, ref_mut$&lt;slice2$ (1 samples, 0.03%)</title><rect x="63.7091%" y="1957" width="0.0334%" height="15" fill="rgb(205,96,16)" fg:x="1910" fg:w="1"/><text x="63.9591%" y="1967.50"></text></g><g><title>boggle.exe`bincode::de::read::impl$2::read(bincode::de::read::SliceReader*, ref_mut$&lt;slice2$ (1 samples, 0.03%)</title><rect x="63.7091%" y="1941" width="0.0334%" height="15" fill="rgb(205,100,21)" fg:x="1910" fg:w="1"/><text x="63.9591%" y="1951.50"></text></g><g><title>boggle.exe`bincode::config::int::IntEncoding::deserialize_len(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (1 samples, 0.03%)</title><rect x="64.1094%" y="1877" width="0.0334%" height="15" fill="rgb(248,51,4)" fg:x="1922" fg:w="1"/><text x="64.3594%" y="1887.50"></text></g><g><title>boggle.exe`bincode::config::int::impl$1::deserialize_u64(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (1 samples, 0.03%)</title><rect x="64.1094%" y="1861" width="0.0334%" height="15" fill="rgb(217,197,30)" fg:x="1922" fg:w="1"/><text x="64.3594%" y="1871.50"></text></g><g><title>boggle.exe`bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;::deserialize_literal_u64 (1 samples, 0.03%)</title><rect x="64.1094%" y="1845" width="0.0334%" height="15" fill="rgb(240,179,40)" fg:x="1922" fg:w="1"/><text x="64.3594%" y="1855.50"></text></g><g><title>boggle.exe`bincode::byteorder::ReadBytesExt::read_u64 (1 samples, 0.03%)</title><rect x="64.1094%" y="1829" width="0.0334%" height="15" fill="rgb(212,185,35)" fg:x="1922" fg:w="1"/><text x="64.3594%" y="1839.50"></text></g><g><title>boggle.exe`bincode::de::read::impl$2::read_exact(bincode::de::read::SliceReader*, ref_mut$&lt;slice2$ (1 samples, 0.03%)</title><rect x="64.1094%" y="1813" width="0.0334%" height="15" fill="rgb(251,222,31)" fg:x="1922" fg:w="1"/><text x="64.3594%" y="1823.50"></text></g><g><title>boggle.exe`bincode::de::read::impl$2::read(bincode::de::read::SliceReader*, ref_mut$&lt;slice2$ (1 samples, 0.03%)</title><rect x="64.1094%" y="1797" width="0.0334%" height="15" fill="rgb(208,140,36)" fg:x="1922" fg:w="1"/><text x="64.3594%" y="1807.50"></text></g><g><title>boggle.exe`core::slice::impl$0::split_at(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="64.1094%" y="1781" width="0.0334%" height="15" fill="rgb(220,148,1)" fg:x="1922" fg:w="1"/><text x="64.3594%" y="1791.50"></text></g><g><title>boggle.exe`core::slice::impl$0::split_at_checked(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="64.1094%" y="1765" width="0.0334%" height="15" fill="rgb(254,4,28)" fg:x="1922" fg:w="1"/><text x="64.3594%" y="1775.50"></text></g><g><title>boggle.exe`core::slice::impl$0::split_at_unchecked(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="64.1094%" y="1749" width="0.0334%" height="15" fill="rgb(222,185,44)" fg:x="1922" fg:w="1"/><text x="64.3594%" y="1759.50"></text></g><g><title>boggle.exe`core::ptr::const_ptr::impl$0::add (1 samples, 0.03%)</title><rect x="64.1094%" y="1733" width="0.0334%" height="15" fill="rgb(215,74,39)" fg:x="1922" fg:w="1"/><text x="64.3594%" y="1743.50"></text></g><g><title>boggle.exe`core::hash::impls::impl$5::hash (1 samples, 0.03%)</title><rect x="64.3763%" y="1797" width="0.0334%" height="15" fill="rgb(247,86,4)" fg:x="1930" fg:w="1"/><text x="64.6263%" y="1807.50"></text></g><g><title>boggle.exe`core::hash::impls::impl$1::hash (1 samples, 0.03%)</title><rect x="64.3763%" y="1781" width="0.0334%" height="15" fill="rgb(231,105,32)" fg:x="1930" fg:w="1"/><text x="64.6263%" y="1791.50"></text></g><g><title>boggle.exe`core::hash::Hasher::write_u32 (1 samples, 0.03%)</title><rect x="64.3763%" y="1765" width="0.0334%" height="15" fill="rgb(222,65,35)" fg:x="1930" fg:w="1"/><text x="64.6263%" y="1775.50"></text></g><g><title>boggle.exe`std::hash::random::impl$4::write(std::hash::random::DefaultHasher*, ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="64.3763%" y="1749" width="0.0334%" height="15" fill="rgb(218,145,35)" fg:x="1930" fg:w="1"/><text x="64.6263%" y="1759.50"></text></g><g><title>boggle.exe`core::hash::sip::impl$4::write(core::hash::sip::SipHasher13*, ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="64.3763%" y="1733" width="0.0334%" height="15" fill="rgb(208,7,15)" fg:x="1930" fg:w="1"/><text x="64.6263%" y="1743.50"></text></g><g><title>boggle.exe`hashbrown::map::make_hash (2 samples, 0.07%)</title><rect x="64.3763%" y="1829" width="0.0667%" height="15" fill="rgb(209,83,13)" fg:x="1930" fg:w="2"/><text x="64.6263%" y="1839.50"></text></g><g><title>boggle.exe`core::hash::BuildHasher::hash_one&lt;std::hash::random::RandomState,ref$&lt;char&gt; &gt; (2 samples, 0.07%)</title><rect x="64.3763%" y="1813" width="0.0667%" height="15" fill="rgb(218,3,10)" fg:x="1930" fg:w="2"/><text x="64.6263%" y="1823.50"></text></g><g><title>boggle.exe`std::hash::random::impl$4::finish (1 samples, 0.03%)</title><rect x="64.4096%" y="1797" width="0.0334%" height="15" fill="rgb(211,219,4)" fg:x="1931" fg:w="1"/><text x="64.6596%" y="1807.50"></text></g><g><title>boggle.exe`core::hash::sip::impl$4::finish (1 samples, 0.03%)</title><rect x="64.4096%" y="1781" width="0.0334%" height="15" fill="rgb(228,194,12)" fg:x="1931" fg:w="1"/><text x="64.6596%" y="1791.50"></text></g><g><title>boggle.exe`core::hash::sip::impl$5::finish(core::hash::sip::Hasher (1 samples, 0.03%)</title><rect x="64.4096%" y="1765" width="0.0334%" height="15" fill="rgb(210,175,7)" fg:x="1931" fg:w="1"/><text x="64.6596%" y="1775.50"></text></g><g><title>boggle.exe`core::hash::sip::impl$8::d_rounds (1 samples, 0.03%)</title><rect x="64.4096%" y="1749" width="0.0334%" height="15" fill="rgb(243,132,6)" fg:x="1931" fg:w="1"/><text x="64.6596%" y="1759.50"></text></g><g><title>boggle.exe`core::num::impl$9::rotate_left (1 samples, 0.03%)</title><rect x="64.4096%" y="1733" width="0.0334%" height="15" fill="rgb(207,72,18)" fg:x="1931" fg:w="1"/><text x="64.6596%" y="1743.50"></text></g><g><title>boggle.exe`hashbrown::raw::Bucket&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::write(tuple$ (4 samples, 0.13%)</title><rect x="64.4430%" y="1813" width="0.1334%" height="15" fill="rgb(236,1,18)" fg:x="1932" fg:w="4"/><text x="64.6930%" y="1823.50"></text></g><g><title>boggle.exe`core::ptr::mut_ptr::impl$0::write(tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;*, tuple$ (4 samples, 0.13%)</title><rect x="64.4430%" y="1797" width="0.1334%" height="15" fill="rgb(227,0,18)" fg:x="1932" fg:w="4"/><text x="64.6930%" y="1807.50"></text></g><g><title>boggle.exe`core::ptr::write(tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;*, tuple$ (4 samples, 0.13%)</title><rect x="64.4430%" y="1781" width="0.1334%" height="15" fill="rgb(247,37,5)" fg:x="1932" fg:w="4"/><text x="64.6930%" y="1791.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(enum2$&lt;core::option::Option (7 samples, 0.23%)</title><rect x="64.3763%" y="1861" width="0.2335%" height="15" fill="rgb(237,179,24)" fg:x="1930" fg:w="7"/><text x="64.6263%" y="1871.50"></text></g><g><title>boggle.exe`hashbrown::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt;::insert&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt; (7 samples, 0.23%)</title><rect x="64.3763%" y="1845" width="0.2335%" height="15" fill="rgb(226,53,20)" fg:x="1930" fg:w="7"/><text x="64.6263%" y="1855.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTable&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;::insert_in_slot(unsigned long long, hashbrown::raw::InsertSlot, tuple$ (5 samples, 0.17%)</title><rect x="64.4430%" y="1829" width="0.1668%" height="15" fill="rgb(247,75,7)" fg:x="1932" fg:w="5"/><text x="64.6930%" y="1839.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTable&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;::bucket (1 samples, 0.03%)</title><rect x="64.5764%" y="1813" width="0.0334%" height="15" fill="rgb(233,96,12)" fg:x="1936" fg:w="1"/><text x="64.8264%" y="1823.50"></text></g><g><title>boggle.exe`hashbrown::raw::Bucket&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::from_base_index(core::ptr::non_null::NonNull&lt;tuple$ (1 samples, 0.03%)</title><rect x="64.5764%" y="1797" width="0.0334%" height="15" fill="rgb(224,125,0)" fg:x="1936" fg:w="1"/><text x="64.8264%" y="1807.50"></text></g><g><title>boggle.exe`core::ptr::mut_ptr::impl$0::sub(tuple$ (1 samples, 0.03%)</title><rect x="64.5764%" y="1781" width="0.0334%" height="15" fill="rgb(224,92,25)" fg:x="1936" fg:w="1"/><text x="64.8264%" y="1791.50"></text></g><g><title>boggle.exe`core::ptr::mut_ptr::impl$0::offset(tuple$ (1 samples, 0.03%)</title><rect x="64.5764%" y="1765" width="0.0334%" height="15" fill="rgb(224,42,24)" fg:x="1936" fg:w="1"/><text x="64.8264%" y="1775.50"></text></g><g><title>boggle.exe`bincode::config::int::impl$1::deserialize_u64(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (1 samples, 0.03%)</title><rect x="64.8099%" y="1669" width="0.0334%" height="15" fill="rgb(234,132,49)" fg:x="1943" fg:w="1"/><text x="65.0599%" y="1679.50"></text></g><g><title>boggle.exe`bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;::deserialize_literal_u64 (1 samples, 0.03%)</title><rect x="64.8099%" y="1653" width="0.0334%" height="15" fill="rgb(248,100,35)" fg:x="1943" fg:w="1"/><text x="65.0599%" y="1663.50"></text></g><g><title>boggle.exe`bincode::byteorder::ReadBytesExt::read_u64 (1 samples, 0.03%)</title><rect x="64.8099%" y="1637" width="0.0334%" height="15" fill="rgb(239,94,40)" fg:x="1943" fg:w="1"/><text x="65.0599%" y="1647.50"></text></g><g><title>boggle.exe`bincode::de::read::impl$2::read_exact(bincode::de::read::SliceReader*, ref_mut$&lt;slice2$ (1 samples, 0.03%)</title><rect x="64.8099%" y="1621" width="0.0334%" height="15" fill="rgb(235,139,28)" fg:x="1943" fg:w="1"/><text x="65.0599%" y="1631.50"></text></g><g><title>boggle.exe`bincode::de::read::impl$2::read(bincode::de::read::SliceReader*, ref_mut$&lt;slice2$ (1 samples, 0.03%)</title><rect x="64.8099%" y="1605" width="0.0334%" height="15" fill="rgb(217,144,7)" fg:x="1943" fg:w="1"/><text x="65.0599%" y="1615.50"></text></g><g><title>boggle.exe`core::slice::impl$0::split_at(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="64.8099%" y="1589" width="0.0334%" height="15" fill="rgb(227,55,4)" fg:x="1943" fg:w="1"/><text x="65.0599%" y="1599.50"></text></g><g><title>boggle.exe`core::slice::impl$0::split_at_checked(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="64.8099%" y="1573" width="0.0334%" height="15" fill="rgb(252,82,54)" fg:x="1943" fg:w="1"/><text x="65.0599%" y="1583.50"></text></g><g><title>boggle.exe`core::slice::impl$0::split_at_unchecked(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="64.8099%" y="1557" width="0.0334%" height="15" fill="rgb(245,172,4)" fg:x="1943" fg:w="1"/><text x="65.0599%" y="1567.50"></text></g><g><title>boggle.exe`core::ptr::const_ptr::impl$0::add (1 samples, 0.03%)</title><rect x="64.8099%" y="1541" width="0.0334%" height="15" fill="rgb(207,26,27)" fg:x="1943" fg:w="1"/><text x="65.0599%" y="1551.50"></text></g><g><title>boggle.exe`bincode::config::int::IntEncoding::deserialize_len(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (2 samples, 0.07%)</title><rect x="64.8099%" y="1685" width="0.0667%" height="15" fill="rgb(252,98,18)" fg:x="1943" fg:w="2"/><text x="65.0599%" y="1695.50"></text></g><g><title>boggle.exe`enum2$&lt;core::result::Result&lt;u64,alloc::boxed::Box&lt;enum2$&lt;bincode::error::ErrorKind&gt;,alloc::alloc::Global&gt; &gt; &gt;::and_then(enum2$&lt;core::result::Result&lt;u64,alloc::boxed::Box&lt;enum2$&lt;bincode::error::ErrorKind&gt;,alloc::alloc::Global&gt; &gt; &gt;, enum2$&lt;core::result::Result&lt;usize,alloc::boxed::Box&lt;enum2$&lt;bincode::error::ErrorKind&gt;,alloc::alloc::Global&gt; &gt; &gt; (*) (1 samples, 0.03%)</title><rect x="64.8432%" y="1669" width="0.0334%" height="15" fill="rgb(244,8,26)" fg:x="1944" fg:w="1"/><text x="65.0932%" y="1679.50"></text></g><g><title>boggle.exe`core::ops::function::FnOnce::call_once(enum2$&lt;core::result::Result&lt;usize,alloc::boxed::Box&lt;enum2$&lt;bincode::error::ErrorKind&gt;,alloc::alloc::Global&gt; &gt; &gt; (*) (1 samples, 0.03%)</title><rect x="64.8432%" y="1653" width="0.0334%" height="15" fill="rgb(237,173,45)" fg:x="1944" fg:w="1"/><text x="65.0932%" y="1663.50"></text></g><g><title>boggle.exe`hashbrown::map::make_hash (1 samples, 0.03%)</title><rect x="65.0434%" y="1637" width="0.0334%" height="15" fill="rgb(208,213,49)" fg:x="1950" fg:w="1"/><text x="65.2934%" y="1647.50"></text></g><g><title>boggle.exe`core::hash::BuildHasher::hash_one&lt;std::hash::random::RandomState,ref$&lt;char&gt; &gt; (1 samples, 0.03%)</title><rect x="65.0434%" y="1621" width="0.0334%" height="15" fill="rgb(212,122,37)" fg:x="1950" fg:w="1"/><text x="65.2934%" y="1631.50"></text></g><g><title>boggle.exe`std::hash::random::impl$4::finish (1 samples, 0.03%)</title><rect x="65.0434%" y="1605" width="0.0334%" height="15" fill="rgb(213,80,17)" fg:x="1950" fg:w="1"/><text x="65.2934%" y="1615.50"></text></g><g><title>boggle.exe`core::hash::sip::impl$4::finish (1 samples, 0.03%)</title><rect x="65.0434%" y="1589" width="0.0334%" height="15" fill="rgb(206,210,43)" fg:x="1950" fg:w="1"/><text x="65.2934%" y="1599.50"></text></g><g><title>boggle.exe`core::hash::sip::impl$5::finish(core::hash::sip::Hasher (1 samples, 0.03%)</title><rect x="65.0434%" y="1573" width="0.0334%" height="15" fill="rgb(229,214,3)" fg:x="1950" fg:w="1"/><text x="65.2934%" y="1583.50"></text></g><g><title>boggle.exe`core::hash::sip::impl$8::d_rounds (1 samples, 0.03%)</title><rect x="65.0434%" y="1557" width="0.0334%" height="15" fill="rgb(235,213,29)" fg:x="1950" fg:w="1"/><text x="65.2934%" y="1567.50"></text></g><g><title>boggle.exe`core::num::impl$9::wrapping_add (1 samples, 0.03%)</title><rect x="65.0434%" y="1541" width="0.0334%" height="15" fill="rgb(248,135,26)" fg:x="1950" fg:w="1"/><text x="65.2934%" y="1551.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(enum2$&lt;core::option::Option (3 samples, 0.10%)</title><rect x="65.0100%" y="1669" width="0.1001%" height="15" fill="rgb(242,188,12)" fg:x="1949" fg:w="3"/><text x="65.2600%" y="1679.50"></text></g><g><title>boggle.exe`hashbrown::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt;::insert&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt; (3 samples, 0.10%)</title><rect x="65.0100%" y="1653" width="0.1001%" height="15" fill="rgb(245,38,12)" fg:x="1949" fg:w="3"/><text x="65.2600%" y="1663.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTable&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;::find_or_find_insert_slot(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;char,char,boggle::utils::dict_trie::DictTrieNode&gt;, hashbrown::map::make_hasher::closure_env$0 (1 samples, 0.03%)</title><rect x="65.0767%" y="1637" width="0.0334%" height="15" fill="rgb(218,42,13)" fg:x="1951" fg:w="1"/><text x="65.3267%" y="1647.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner(unsigned long long, ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;usize&gt;,assoc$ (1 samples, 0.03%)</title><rect x="65.0767%" y="1621" width="0.0334%" height="15" fill="rgb(238,132,49)" fg:x="1951" fg:w="1"/><text x="65.3267%" y="1631.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::find_insert_slot_in_group (1 samples, 0.03%)</title><rect x="65.0767%" y="1605" width="0.0334%" height="15" fill="rgb(209,196,19)" fg:x="1951" fg:w="1"/><text x="65.3267%" y="1615.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::match_empty_or_deleted (1 samples, 0.03%)</title><rect x="65.0767%" y="1589" width="0.0334%" height="15" fill="rgb(244,131,22)" fg:x="1951" fg:w="1"/><text x="65.3267%" y="1599.50"></text></g><g><title>boggle.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.03%)</title><rect x="65.0767%" y="1573" width="0.0334%" height="15" fill="rgb(223,18,34)" fg:x="1951" fg:w="1"/><text x="65.3267%" y="1583.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(enum2$&lt;core::option::Option (1 samples, 0.03%)</title><rect x="65.3769%" y="1477" width="0.0334%" height="15" fill="rgb(252,124,54)" fg:x="1960" fg:w="1"/><text x="65.6269%" y="1487.50"></text></g><g><title>boggle.exe`hashbrown::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt;::insert&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt; (1 samples, 0.03%)</title><rect x="65.3769%" y="1461" width="0.0334%" height="15" fill="rgb(229,106,42)" fg:x="1960" fg:w="1"/><text x="65.6269%" y="1471.50"></text></g><g><title>boggle.exe`hashbrown::map::make_hash (1 samples, 0.03%)</title><rect x="65.3769%" y="1445" width="0.0334%" height="15" fill="rgb(221,129,1)" fg:x="1960" fg:w="1"/><text x="65.6269%" y="1455.50"></text></g><g><title>boggle.exe`core::hash::BuildHasher::hash_one&lt;std::hash::random::RandomState,ref$&lt;char&gt; &gt; (1 samples, 0.03%)</title><rect x="65.3769%" y="1429" width="0.0334%" height="15" fill="rgb(229,74,15)" fg:x="1960" fg:w="1"/><text x="65.6269%" y="1439.50"></text></g><g><title>boggle.exe`std::hash::random::impl$4::finish (1 samples, 0.03%)</title><rect x="65.3769%" y="1413" width="0.0334%" height="15" fill="rgb(210,206,50)" fg:x="1960" fg:w="1"/><text x="65.6269%" y="1423.50"></text></g><g><title>boggle.exe`core::hash::sip::impl$4::finish (1 samples, 0.03%)</title><rect x="65.3769%" y="1397" width="0.0334%" height="15" fill="rgb(251,114,31)" fg:x="1960" fg:w="1"/><text x="65.6269%" y="1407.50"></text></g><g><title>boggle.exe`core::hash::sip::impl$5::finish(core::hash::sip::Hasher (1 samples, 0.03%)</title><rect x="65.3769%" y="1381" width="0.0334%" height="15" fill="rgb(215,225,28)" fg:x="1960" fg:w="1"/><text x="65.6269%" y="1391.50"></text></g><g><title>boggle.exe`core::hash::sip::impl$5::write&lt;core::hash::sip::Sip13Rounds&gt;(core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt;*, ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="65.3769%" y="1365" width="0.0334%" height="15" fill="rgb(237,109,14)" fg:x="1960" fg:w="1"/><text x="65.6269%" y="1375.50"></text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_map::impl$0::next_key_seed(bincode::de::impl$3::deserialize_map::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, core::marker::PhantomData (1 samples, 0.03%)</title><rect x="65.4103%" y="1445" width="0.0334%" height="15" fill="rgb(230,13,37)" fg:x="1961" fg:w="1"/><text x="65.6603%" y="1455.50"></text></g><g><title>boggle.exe`serde::de::impl$5::deserialize(core::marker::PhantomData&lt;char&gt;, bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (1 samples, 0.03%)</title><rect x="65.4103%" y="1429" width="0.0334%" height="15" fill="rgb(231,40,28)" fg:x="1961" fg:w="1"/><text x="65.6603%" y="1439.50"></text></g><g><title>boggle.exe`serde::de::impls::impl$5::deserialize(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (1 samples, 0.03%)</title><rect x="65.4103%" y="1413" width="0.0334%" height="15" fill="rgb(231,202,18)" fg:x="1961" fg:w="1"/><text x="65.6603%" y="1423.50"></text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_char(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (1 samples, 0.03%)</title><rect x="65.4103%" y="1397" width="0.0334%" height="15" fill="rgb(225,33,18)" fg:x="1961" fg:w="1"/><text x="65.6603%" y="1407.50"></text></g><g><title>boggle.exe`bincode::de::read::impl$2::read_exact(bincode::de::read::SliceReader*, ref_mut$&lt;slice2$ (1 samples, 0.03%)</title><rect x="65.4103%" y="1381" width="0.0334%" height="15" fill="rgb(223,64,47)" fg:x="1961" fg:w="1"/><text x="65.6603%" y="1391.50"></text></g><g><title>boggle.exe`bincode::de::read::impl$2::read(bincode::de::read::SliceReader*, ref_mut$&lt;slice2$ (1 samples, 0.03%)</title><rect x="65.4103%" y="1365" width="0.0334%" height="15" fill="rgb(234,114,13)" fg:x="1961" fg:w="1"/><text x="65.6603%" y="1375.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTable&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;::find_or_find_insert_slot(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;char,char,boggle::utils::dict_trie::DictTrieNode&gt;, hashbrown::map::make_hasher::closure_env$0 (1 samples, 0.03%)</title><rect x="65.6771%" y="1253" width="0.0334%" height="15" fill="rgb(248,56,40)" fg:x="1969" fg:w="1"/><text x="65.9271%" y="1263.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner(unsigned long long, ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;usize&gt;,assoc$ (1 samples, 0.03%)</title><rect x="65.6771%" y="1237" width="0.0334%" height="15" fill="rgb(221,194,21)" fg:x="1969" fg:w="1"/><text x="65.9271%" y="1247.50"></text></g><g><title>boggle.exe`hashbrown::raw::h2 (1 samples, 0.03%)</title><rect x="65.6771%" y="1221" width="0.0334%" height="15" fill="rgb(242,108,46)" fg:x="1969" fg:w="1"/><text x="65.9271%" y="1231.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(enum2$&lt;core::option::Option (5 samples, 0.17%)</title><rect x="65.6104%" y="1285" width="0.1668%" height="15" fill="rgb(220,106,10)" fg:x="1967" fg:w="5"/><text x="65.8604%" y="1295.50"></text></g><g><title>boggle.exe`hashbrown::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt;::insert&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt; (5 samples, 0.17%)</title><rect x="65.6104%" y="1269" width="0.1668%" height="15" fill="rgb(211,88,4)" fg:x="1967" fg:w="5"/><text x="65.8604%" y="1279.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTable&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;::insert_in_slot(unsigned long long, hashbrown::raw::InsertSlot, tuple$ (2 samples, 0.07%)</title><rect x="65.7105%" y="1253" width="0.0667%" height="15" fill="rgb(214,95,34)" fg:x="1970" fg:w="2"/><text x="65.9605%" y="1263.50"></text></g><g><title>boggle.exe`hashbrown::raw::Bucket&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::write(tuple$ (2 samples, 0.07%)</title><rect x="65.7105%" y="1237" width="0.0667%" height="15" fill="rgb(250,160,33)" fg:x="1970" fg:w="2"/><text x="65.9605%" y="1247.50"></text></g><g><title>boggle.exe`core::ptr::mut_ptr::impl$0::write(tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;*, tuple$ (2 samples, 0.07%)</title><rect x="65.7105%" y="1221" width="0.0667%" height="15" fill="rgb(225,29,10)" fg:x="1970" fg:w="2"/><text x="65.9605%" y="1231.50"></text></g><g><title>boggle.exe`core::ptr::write(tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;*, tuple$ (2 samples, 0.07%)</title><rect x="65.7105%" y="1205" width="0.0667%" height="15" fill="rgb(224,28,30)" fg:x="1970" fg:w="2"/><text x="65.9605%" y="1215.50"></text></g><g><title>boggle.exe`hashbrown::map::make_hash (1 samples, 0.03%)</title><rect x="66.1107%" y="869" width="0.0334%" height="15" fill="rgb(231,77,4)" fg:x="1982" fg:w="1"/><text x="66.3607%" y="879.50"></text></g><g><title>boggle.exe`core::hash::BuildHasher::hash_one&lt;std::hash::random::RandomState,ref$&lt;char&gt; &gt; (1 samples, 0.03%)</title><rect x="66.1107%" y="853" width="0.0334%" height="15" fill="rgb(209,63,21)" fg:x="1982" fg:w="1"/><text x="66.3607%" y="863.50"></text></g><g><title>boggle.exe`std::hash::random::impl$4::finish (1 samples, 0.03%)</title><rect x="66.1107%" y="837" width="0.0334%" height="15" fill="rgb(226,22,11)" fg:x="1982" fg:w="1"/><text x="66.3607%" y="847.50"></text></g><g><title>boggle.exe`core::hash::sip::impl$4::finish (1 samples, 0.03%)</title><rect x="66.1107%" y="821" width="0.0334%" height="15" fill="rgb(216,82,30)" fg:x="1982" fg:w="1"/><text x="66.3607%" y="831.50"></text></g><g><title>boggle.exe`core::hash::sip::impl$5::finish(core::hash::sip::Hasher (1 samples, 0.03%)</title><rect x="66.1107%" y="805" width="0.0334%" height="15" fill="rgb(246,227,38)" fg:x="1982" fg:w="1"/><text x="66.3607%" y="815.50"></text></g><g><title>boggle.exe`core::hash::sip::impl$5::write&lt;core::hash::sip::Sip13Rounds&gt;(core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt;*, ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="66.1107%" y="789" width="0.0334%" height="15" fill="rgb(251,203,53)" fg:x="1982" fg:w="1"/><text x="66.3607%" y="799.50"></text></g><g><title>boggle.exe`core::hash::sip::u8to64_le(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="66.1107%" y="773" width="0.0334%" height="15" fill="rgb(254,101,1)" fg:x="1982" fg:w="1"/><text x="66.3607%" y="783.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTable&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;::find_or_find_insert_slot(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;char,char,boggle::utils::dict_trie::DictTrieNode&gt;, hashbrown::map::make_hasher::closure_env$0 (1 samples, 0.03%)</title><rect x="66.1441%" y="869" width="0.0334%" height="15" fill="rgb(241,180,5)" fg:x="1983" fg:w="1"/><text x="66.3941%" y="879.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner(unsigned long long, ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;usize&gt;,assoc$ (1 samples, 0.03%)</title><rect x="66.1441%" y="853" width="0.0334%" height="15" fill="rgb(218,168,4)" fg:x="1983" fg:w="1"/><text x="66.3941%" y="863.50"></text></g><g><title>boggle.exe`hashbrown::raw::h2 (1 samples, 0.03%)</title><rect x="66.1441%" y="837" width="0.0334%" height="15" fill="rgb(224,223,32)" fg:x="1983" fg:w="1"/><text x="66.3941%" y="847.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(enum2$&lt;core::option::Option (3 samples, 0.10%)</title><rect x="66.1107%" y="901" width="0.1001%" height="15" fill="rgb(236,106,22)" fg:x="1982" fg:w="3"/><text x="66.3607%" y="911.50"></text></g><g><title>boggle.exe`hashbrown::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt;::insert&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt; (3 samples, 0.10%)</title><rect x="66.1107%" y="885" width="0.1001%" height="15" fill="rgb(206,121,5)" fg:x="1982" fg:w="3"/><text x="66.3607%" y="895.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTable&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;::insert_in_slot(unsigned long long, hashbrown::raw::InsertSlot, tuple$ (1 samples, 0.03%)</title><rect x="66.1775%" y="869" width="0.0334%" height="15" fill="rgb(233,87,28)" fg:x="1984" fg:w="1"/><text x="66.4275%" y="879.50"></text></g><g><title>boggle.exe`hashbrown::raw::Bucket&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::write(tuple$ (1 samples, 0.03%)</title><rect x="66.1775%" y="853" width="0.0334%" height="15" fill="rgb(236,137,17)" fg:x="1984" fg:w="1"/><text x="66.4275%" y="863.50"></text></g><g><title>boggle.exe`core::ptr::mut_ptr::impl$0::write(tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;*, tuple$ (1 samples, 0.03%)</title><rect x="66.1775%" y="837" width="0.0334%" height="15" fill="rgb(209,183,38)" fg:x="1984" fg:w="1"/><text x="66.4275%" y="847.50"></text></g><g><title>boggle.exe`core::ptr::write(tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;*, tuple$ (1 samples, 0.03%)</title><rect x="66.1775%" y="821" width="0.0334%" height="15" fill="rgb(206,162,44)" fg:x="1984" fg:w="1"/><text x="66.4275%" y="831.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(enum2$&lt;core::option::Option (1 samples, 0.03%)</title><rect x="66.2775%" y="709" width="0.0334%" height="15" fill="rgb(237,70,39)" fg:x="1987" fg:w="1"/><text x="66.5275%" y="719.50"></text></g><g><title>boggle.exe`hashbrown::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt;::insert&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt; (1 samples, 0.03%)</title><rect x="66.2775%" y="693" width="0.0334%" height="15" fill="rgb(212,176,5)" fg:x="1987" fg:w="1"/><text x="66.5275%" y="703.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTable&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;::find_or_find_insert_slot(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;char,char,boggle::utils::dict_trie::DictTrieNode&gt;, hashbrown::map::make_hasher::closure_env$0 (1 samples, 0.03%)</title><rect x="66.2775%" y="677" width="0.0334%" height="15" fill="rgb(232,95,16)" fg:x="1987" fg:w="1"/><text x="66.5275%" y="687.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner(unsigned long long, ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;usize&gt;,assoc$ (1 samples, 0.03%)</title><rect x="66.2775%" y="661" width="0.0334%" height="15" fill="rgb(219,115,35)" fg:x="1987" fg:w="1"/><text x="66.5275%" y="671.50"></text></g><g><title>boggle.exe`hashbrown::raw::h2 (1 samples, 0.03%)</title><rect x="66.2775%" y="645" width="0.0334%" height="15" fill="rgb(251,67,27)" fg:x="1987" fg:w="1"/><text x="66.5275%" y="655.50"></text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_map::impl$0::next_key_seed(bincode::de::impl$3::deserialize_map::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, core::marker::PhantomData (1 samples, 0.03%)</title><rect x="66.3442%" y="485" width="0.0334%" height="15" fill="rgb(222,95,40)" fg:x="1989" fg:w="1"/><text x="66.5942%" y="495.50"></text></g><g><title>boggle.exe`serde::de::impl$5::deserialize(core::marker::PhantomData&lt;char&gt;, bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (1 samples, 0.03%)</title><rect x="66.3442%" y="469" width="0.0334%" height="15" fill="rgb(250,35,16)" fg:x="1989" fg:w="1"/><text x="66.5942%" y="479.50"></text></g><g><title>boggle.exe`serde::de::impls::impl$5::deserialize(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (1 samples, 0.03%)</title><rect x="66.3442%" y="453" width="0.0334%" height="15" fill="rgb(224,86,44)" fg:x="1989" fg:w="1"/><text x="66.5942%" y="463.50"></text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_char(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (1 samples, 0.03%)</title><rect x="66.3442%" y="437" width="0.0334%" height="15" fill="rgb(237,53,53)" fg:x="1989" fg:w="1"/><text x="66.5942%" y="447.50"></text></g><g><title>boggle.exe`bincode::de::utf8_char_width (1 samples, 0.03%)</title><rect x="66.3442%" y="421" width="0.0334%" height="15" fill="rgb(208,171,33)" fg:x="1989" fg:w="1"/><text x="66.5942%" y="431.50"></text></g><g><title>boggle.exe`serde::de::MapAccess::next_entry(bincode::de::impl$3::deserialize_map::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (1 samples, 0.03%)</title><rect x="66.4443%" y="325" width="0.0334%" height="15" fill="rgb(222,64,27)" fg:x="1992" fg:w="1"/><text x="66.6943%" y="335.50"></text></g><g><title>boggle.exe`serde::de::MapAccess::next_entry_seed(bincode::de::impl$3::deserialize_map::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, core::marker::PhantomData&lt;char&gt;, core::marker::PhantomData (1 samples, 0.03%)</title><rect x="66.4443%" y="309" width="0.0334%" height="15" fill="rgb(221,121,35)" fg:x="1992" fg:w="1"/><text x="66.6943%" y="319.50"></text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_map::impl$0::next_value_seed(bincode::de::impl$3::deserialize_map::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, core::marker::PhantomData (1 samples, 0.03%)</title><rect x="66.4443%" y="293" width="0.0334%" height="15" fill="rgb(228,137,42)" fg:x="1992" fg:w="1"/><text x="66.6943%" y="303.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;boggle::utils::dict_trie::DictTrieNode,alloc::boxed::Box&lt;enum2$ (1 samples, 0.03%)</title><rect x="66.4443%" y="277" width="0.0334%" height="15" fill="rgb(227,54,21)" fg:x="1992" fg:w="1"/><text x="66.6943%" y="287.50"></text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_struct&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt;,boggle::utils::dict_trie::_::impl$0::deserialize::__Visitor&gt;(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, ref$&lt;str$&gt;, ref$&lt;slice2$&lt;ref$ (1 samples, 0.03%)</title><rect x="66.4443%" y="261" width="0.0334%" height="15" fill="rgb(240,168,33)" fg:x="1992" fg:w="1"/><text x="66.6943%" y="271.50"></text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_tuple(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (1 samples, 0.03%)</title><rect x="66.4443%" y="245" width="0.0334%" height="15" fill="rgb(243,159,6)" fg:x="1992" fg:w="1"/><text x="66.6943%" y="255.50"></text></g><g><title>boggle.exe`boggle::utils::dict_trie::_::impl$0::deserialize::impl$2::visit_seq(boggle::utils::dict_trie::_::impl$0::deserialize::__Visitor, bincode::de::impl$3::deserialize_tuple::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (1 samples, 0.03%)</title><rect x="66.4443%" y="229" width="0.0334%" height="15" fill="rgb(205,211,41)" fg:x="1992" fg:w="1"/><text x="66.6943%" y="239.50"></text></g><g><title>boggle.exe`serde::de::SeqAccess::next_element(bincode::de::impl$3::deserialize_tuple::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (1 samples, 0.03%)</title><rect x="66.4443%" y="213" width="0.0334%" height="15" fill="rgb(253,30,1)" fg:x="1992" fg:w="1"/><text x="66.6943%" y="223.50"></text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_tuple::impl$0::next_element_seed(bincode::de::impl$3::deserialize_tuple::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, core::marker::PhantomData&lt;std::collections::hash::map::HashMap (1 samples, 0.03%)</title><rect x="66.4443%" y="197" width="0.0334%" height="15" fill="rgb(226,80,18)" fg:x="1992" fg:w="1"/><text x="66.6943%" y="207.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;std::collections::hash::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;,alloc::boxed::Box&lt;enum2$ (1 samples, 0.03%)</title><rect x="66.4443%" y="181" width="0.0334%" height="15" fill="rgb(253,156,46)" fg:x="1992" fg:w="1"/><text x="66.6943%" y="191.50"></text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_map&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt;,serde::de::impls::impl$202::deserialize::MapVisitor&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt; &gt;(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, serde::de::impls::impl$202::deserialize::MapVisitor (1 samples, 0.03%)</title><rect x="66.4443%" y="165" width="0.0334%" height="15" fill="rgb(248,87,27)" fg:x="1992" fg:w="1"/><text x="66.6943%" y="175.50"></text></g><g><title>boggle.exe`serde::de::impls::impl$202::deserialize::impl$0::visit_map(serde::de::impls::impl$202::deserialize::MapVisitor&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;, bincode::de::impl$3::deserialize_map::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (1 samples, 0.03%)</title><rect x="66.4443%" y="149" width="0.0334%" height="15" fill="rgb(227,122,2)" fg:x="1992" fg:w="1"/><text x="66.6943%" y="159.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(enum2$&lt;core::option::Option (1 samples, 0.03%)</title><rect x="66.4443%" y="133" width="0.0334%" height="15" fill="rgb(229,94,39)" fg:x="1992" fg:w="1"/><text x="66.6943%" y="143.50"></text></g><g><title>boggle.exe`hashbrown::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt;::insert&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt; (1 samples, 0.03%)</title><rect x="66.4443%" y="117" width="0.0334%" height="15" fill="rgb(225,173,31)" fg:x="1992" fg:w="1"/><text x="66.6943%" y="127.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTable&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;::find_or_find_insert_slot(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;char,char,boggle::utils::dict_trie::DictTrieNode&gt;, hashbrown::map::make_hasher::closure_env$0 (1 samples, 0.03%)</title><rect x="66.4443%" y="101" width="0.0334%" height="15" fill="rgb(239,176,30)" fg:x="1992" fg:w="1"/><text x="66.6943%" y="111.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner(unsigned long long, ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;usize&gt;,assoc$ (1 samples, 0.03%)</title><rect x="66.4443%" y="85" width="0.0334%" height="15" fill="rgb(212,104,21)" fg:x="1992" fg:w="1"/><text x="66.6943%" y="95.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::match_empty (1 samples, 0.03%)</title><rect x="66.4443%" y="69" width="0.0334%" height="15" fill="rgb(240,209,40)" fg:x="1992" fg:w="1"/><text x="66.6943%" y="79.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::match_byte (1 samples, 0.03%)</title><rect x="66.4443%" y="53" width="0.0334%" height="15" fill="rgb(234,195,5)" fg:x="1992" fg:w="1"/><text x="66.6943%" y="63.50"></text></g><g><title>boggle.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.03%)</title><rect x="66.4443%" y="37" width="0.0334%" height="15" fill="rgb(238,213,1)" fg:x="1992" fg:w="1"/><text x="66.6943%" y="47.50"></text></g><g><title>boggle.exe`serde::de::MapAccess::next_entry(bincode::de::impl$3::deserialize_map::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (6 samples, 0.20%)</title><rect x="66.3109%" y="709" width="0.2001%" height="15" fill="rgb(235,182,54)" fg:x="1988" fg:w="6"/><text x="66.5609%" y="719.50"></text></g><g><title>boggle.exe`serde::de::MapAccess::next_entry_seed(bincode::de::impl$3::deserialize_map::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, core::marker::PhantomData&lt;char&gt;, core::marker::PhantomData (6 samples, 0.20%)</title><rect x="66.3109%" y="693" width="0.2001%" height="15" fill="rgb(229,50,46)" fg:x="1988" fg:w="6"/><text x="66.5609%" y="703.50"></text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_map::impl$0::next_value_seed(bincode::de::impl$3::deserialize_map::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, core::marker::PhantomData (6 samples, 0.20%)</title><rect x="66.3109%" y="677" width="0.2001%" height="15" fill="rgb(219,145,13)" fg:x="1988" fg:w="6"/><text x="66.5609%" y="687.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;boggle::utils::dict_trie::DictTrieNode,alloc::boxed::Box&lt;enum2$ (6 samples, 0.20%)</title><rect x="66.3109%" y="661" width="0.2001%" height="15" fill="rgb(220,226,10)" fg:x="1988" fg:w="6"/><text x="66.5609%" y="671.50"></text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_struct&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt;,boggle::utils::dict_trie::_::impl$0::deserialize::__Visitor&gt;(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, ref$&lt;str$&gt;, ref$&lt;slice2$&lt;ref$ (6 samples, 0.20%)</title><rect x="66.3109%" y="645" width="0.2001%" height="15" fill="rgb(248,47,30)" fg:x="1988" fg:w="6"/><text x="66.5609%" y="655.50"></text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_tuple(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (5 samples, 0.17%)</title><rect x="66.3442%" y="629" width="0.1668%" height="15" fill="rgb(231,209,44)" fg:x="1989" fg:w="5"/><text x="66.5942%" y="639.50"></text></g><g><title>boggle.exe`boggle::utils::dict_trie::_::impl$0::deserialize::impl$2::visit_seq(boggle::utils::dict_trie::_::impl$0::deserialize::__Visitor, bincode::de::impl$3::deserialize_tuple::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (5 samples, 0.17%)</title><rect x="66.3442%" y="613" width="0.1668%" height="15" fill="rgb(209,80,30)" fg:x="1989" fg:w="5"/><text x="66.5942%" y="623.50"></text></g><g><title>boggle.exe`serde::de::SeqAccess::next_element(bincode::de::impl$3::deserialize_tuple::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (5 samples, 0.17%)</title><rect x="66.3442%" y="597" width="0.1668%" height="15" fill="rgb(232,9,14)" fg:x="1989" fg:w="5"/><text x="66.5942%" y="607.50"></text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_tuple::impl$0::next_element_seed(bincode::de::impl$3::deserialize_tuple::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, core::marker::PhantomData&lt;std::collections::hash::map::HashMap (5 samples, 0.17%)</title><rect x="66.3442%" y="581" width="0.1668%" height="15" fill="rgb(243,91,43)" fg:x="1989" fg:w="5"/><text x="66.5942%" y="591.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;std::collections::hash::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;,alloc::boxed::Box&lt;enum2$ (5 samples, 0.17%)</title><rect x="66.3442%" y="565" width="0.1668%" height="15" fill="rgb(231,90,52)" fg:x="1989" fg:w="5"/><text x="66.5942%" y="575.50"></text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_map&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt;,serde::de::impls::impl$202::deserialize::MapVisitor&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt; &gt;(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, serde::de::impls::impl$202::deserialize::MapVisitor (5 samples, 0.17%)</title><rect x="66.3442%" y="549" width="0.1668%" height="15" fill="rgb(253,192,44)" fg:x="1989" fg:w="5"/><text x="66.5942%" y="559.50"></text></g><g><title>boggle.exe`serde::de::impls::impl$202::deserialize::impl$0::visit_map(serde::de::impls::impl$202::deserialize::MapVisitor&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;, bincode::de::impl$3::deserialize_map::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (5 samples, 0.17%)</title><rect x="66.3442%" y="533" width="0.1668%" height="15" fill="rgb(241,66,31)" fg:x="1989" fg:w="5"/><text x="66.5942%" y="543.50"></text></g><g><title>boggle.exe`serde::de::MapAccess::next_entry(bincode::de::impl$3::deserialize_map::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (5 samples, 0.17%)</title><rect x="66.3442%" y="517" width="0.1668%" height="15" fill="rgb(235,81,37)" fg:x="1989" fg:w="5"/><text x="66.5942%" y="527.50"></text></g><g><title>boggle.exe`serde::de::MapAccess::next_entry_seed(bincode::de::impl$3::deserialize_map::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, core::marker::PhantomData&lt;char&gt;, core::marker::PhantomData (5 samples, 0.17%)</title><rect x="66.3442%" y="501" width="0.1668%" height="15" fill="rgb(223,221,9)" fg:x="1989" fg:w="5"/><text x="66.5942%" y="511.50"></text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_map::impl$0::next_value_seed(bincode::de::impl$3::deserialize_map::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, core::marker::PhantomData (4 samples, 0.13%)</title><rect x="66.3776%" y="485" width="0.1334%" height="15" fill="rgb(242,180,7)" fg:x="1990" fg:w="4"/><text x="66.6276%" y="495.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;boggle::utils::dict_trie::DictTrieNode,alloc::boxed::Box&lt;enum2$ (4 samples, 0.13%)</title><rect x="66.3776%" y="469" width="0.1334%" height="15" fill="rgb(243,78,19)" fg:x="1990" fg:w="4"/><text x="66.6276%" y="479.50"></text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_struct&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt;,boggle::utils::dict_trie::_::impl$0::deserialize::__Visitor&gt;(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, ref$&lt;str$&gt;, ref$&lt;slice2$&lt;ref$ (4 samples, 0.13%)</title><rect x="66.3776%" y="453" width="0.1334%" height="15" fill="rgb(233,23,17)" fg:x="1990" fg:w="4"/><text x="66.6276%" y="463.50"></text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_tuple(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (4 samples, 0.13%)</title><rect x="66.3776%" y="437" width="0.1334%" height="15" fill="rgb(252,122,45)" fg:x="1990" fg:w="4"/><text x="66.6276%" y="447.50"></text></g><g><title>boggle.exe`boggle::utils::dict_trie::_::impl$0::deserialize::impl$2::visit_seq(boggle::utils::dict_trie::_::impl$0::deserialize::__Visitor, bincode::de::impl$3::deserialize_tuple::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (4 samples, 0.13%)</title><rect x="66.3776%" y="421" width="0.1334%" height="15" fill="rgb(247,108,20)" fg:x="1990" fg:w="4"/><text x="66.6276%" y="431.50"></text></g><g><title>boggle.exe`serde::de::SeqAccess::next_element(bincode::de::impl$3::deserialize_tuple::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (4 samples, 0.13%)</title><rect x="66.3776%" y="405" width="0.1334%" height="15" fill="rgb(235,84,21)" fg:x="1990" fg:w="4"/><text x="66.6276%" y="415.50"></text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_tuple::impl$0::next_element_seed(bincode::de::impl$3::deserialize_tuple::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, core::marker::PhantomData&lt;std::collections::hash::map::HashMap (4 samples, 0.13%)</title><rect x="66.3776%" y="389" width="0.1334%" height="15" fill="rgb(247,129,10)" fg:x="1990" fg:w="4"/><text x="66.6276%" y="399.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;std::collections::hash::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;,alloc::boxed::Box&lt;enum2$ (4 samples, 0.13%)</title><rect x="66.3776%" y="373" width="0.1334%" height="15" fill="rgb(208,173,14)" fg:x="1990" fg:w="4"/><text x="66.6276%" y="383.50"></text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_map&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt;,serde::de::impls::impl$202::deserialize::MapVisitor&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt; &gt;(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, serde::de::impls::impl$202::deserialize::MapVisitor (4 samples, 0.13%)</title><rect x="66.3776%" y="357" width="0.1334%" height="15" fill="rgb(236,31,38)" fg:x="1990" fg:w="4"/><text x="66.6276%" y="367.50"></text></g><g><title>boggle.exe`serde::de::impls::impl$202::deserialize::impl$0::visit_map(serde::de::impls::impl$202::deserialize::MapVisitor&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;, bincode::de::impl$3::deserialize_map::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (4 samples, 0.13%)</title><rect x="66.3776%" y="341" width="0.1334%" height="15" fill="rgb(232,65,17)" fg:x="1990" fg:w="4"/><text x="66.6276%" y="351.50"></text></g><g><title>boggle.exe`std::collections::hash::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;::with_capacity_and_hasher (1 samples, 0.03%)</title><rect x="66.4777%" y="325" width="0.0334%" height="15" fill="rgb(224,45,49)" fg:x="1993" fg:w="1"/><text x="66.7277%" y="335.50"></text></g><g><title>boggle.exe`hashbrown::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt;::with_capacity_and_hasher (1 samples, 0.03%)</title><rect x="66.4777%" y="309" width="0.0334%" height="15" fill="rgb(225,2,53)" fg:x="1993" fg:w="1"/><text x="66.7277%" y="319.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTable&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;::with_capacity_in&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt; (1 samples, 0.03%)</title><rect x="66.4777%" y="293" width="0.0334%" height="15" fill="rgb(248,210,53)" fg:x="1993" fg:w="1"/><text x="66.7277%" y="303.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::with_capacity (1 samples, 0.03%)</title><rect x="66.4777%" y="277" width="0.0334%" height="15" fill="rgb(211,1,30)" fg:x="1993" fg:w="1"/><text x="66.7277%" y="287.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::fallible_with_capacity (1 samples, 0.03%)</title><rect x="66.4777%" y="261" width="0.0334%" height="15" fill="rgb(224,96,15)" fg:x="1993" fg:w="1"/><text x="66.7277%" y="271.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::new_uninitialized (1 samples, 0.03%)</title><rect x="66.4777%" y="245" width="0.0334%" height="15" fill="rgb(252,45,11)" fg:x="1993" fg:w="1"/><text x="66.7277%" y="255.50"></text></g><g><title>boggle.exe`hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.03%)</title><rect x="66.4777%" y="229" width="0.0334%" height="15" fill="rgb(220,125,38)" fg:x="1993" fg:w="1"/><text x="66.7277%" y="239.50"></text></g><g><title>`0x7FFAC12C7776 (1 samples, 0.03%)</title><rect x="66.4777%" y="213" width="0.0334%" height="15" fill="rgb(243,161,33)" fg:x="1993" fg:w="1"/><text x="66.7277%" y="223.50"></text></g><g><title>`0x7FFAC12C78B4 (1 samples, 0.03%)</title><rect x="66.4777%" y="197" width="0.0334%" height="15" fill="rgb(248,197,34)" fg:x="1993" fg:w="1"/><text x="66.7277%" y="207.50"></text></g><g><title>`0x7FFAC12C8047 (1 samples, 0.03%)</title><rect x="66.4777%" y="181" width="0.0334%" height="15" fill="rgb(228,165,23)" fg:x="1993" fg:w="1"/><text x="66.7277%" y="191.50"></text></g><g><title>`0x7FFAC12C8047 (1 samples, 0.03%)</title><rect x="66.5110%" y="565" width="0.0334%" height="15" fill="rgb(236,94,38)" fg:x="1994" fg:w="1"/><text x="66.7610%" y="575.50"></text></g><g><title>boggle.exe`serde::de::MapAccess::next_entry(bincode::de::impl$3::deserialize_map::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (13 samples, 0.43%)</title><rect x="66.2108%" y="901" width="0.4336%" height="15" fill="rgb(220,13,23)" fg:x="1985" fg:w="13"/><text x="66.4608%" y="911.50"></text></g><g><title>boggle.exe`serde::de::MapAccess::next_entry_seed(bincode::de::impl$3::deserialize_map::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, core::marker::PhantomData&lt;char&gt;, core::marker::PhantomData (13 samples, 0.43%)</title><rect x="66.2108%" y="885" width="0.4336%" height="15" fill="rgb(234,26,39)" fg:x="1985" fg:w="13"/><text x="66.4608%" y="895.50"></text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_map::impl$0::next_value_seed(bincode::de::impl$3::deserialize_map::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, core::marker::PhantomData (13 samples, 0.43%)</title><rect x="66.2108%" y="869" width="0.4336%" height="15" fill="rgb(205,117,44)" fg:x="1985" fg:w="13"/><text x="66.4608%" y="879.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;boggle::utils::dict_trie::DictTrieNode,alloc::boxed::Box&lt;enum2$ (13 samples, 0.43%)</title><rect x="66.2108%" y="853" width="0.4336%" height="15" fill="rgb(250,42,2)" fg:x="1985" fg:w="13"/><text x="66.4608%" y="863.50"></text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_struct&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt;,boggle::utils::dict_trie::_::impl$0::deserialize::__Visitor&gt;(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, ref$&lt;str$&gt;, ref$&lt;slice2$&lt;ref$ (13 samples, 0.43%)</title><rect x="66.2108%" y="837" width="0.4336%" height="15" fill="rgb(223,83,14)" fg:x="1985" fg:w="13"/><text x="66.4608%" y="847.50"></text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_tuple(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (12 samples, 0.40%)</title><rect x="66.2442%" y="821" width="0.4003%" height="15" fill="rgb(241,147,50)" fg:x="1986" fg:w="12"/><text x="66.4942%" y="831.50"></text></g><g><title>boggle.exe`boggle::utils::dict_trie::_::impl$0::deserialize::impl$2::visit_seq(boggle::utils::dict_trie::_::impl$0::deserialize::__Visitor, bincode::de::impl$3::deserialize_tuple::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (12 samples, 0.40%)</title><rect x="66.2442%" y="805" width="0.4003%" height="15" fill="rgb(218,90,6)" fg:x="1986" fg:w="12"/><text x="66.4942%" y="815.50"></text></g><g><title>boggle.exe`serde::de::SeqAccess::next_element(bincode::de::impl$3::deserialize_tuple::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (12 samples, 0.40%)</title><rect x="66.2442%" y="789" width="0.4003%" height="15" fill="rgb(210,191,5)" fg:x="1986" fg:w="12"/><text x="66.4942%" y="799.50"></text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_tuple::impl$0::next_element_seed(bincode::de::impl$3::deserialize_tuple::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, core::marker::PhantomData&lt;std::collections::hash::map::HashMap (12 samples, 0.40%)</title><rect x="66.2442%" y="773" width="0.4003%" height="15" fill="rgb(225,139,19)" fg:x="1986" fg:w="12"/><text x="66.4942%" y="783.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;std::collections::hash::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;,alloc::boxed::Box&lt;enum2$ (12 samples, 0.40%)</title><rect x="66.2442%" y="757" width="0.4003%" height="15" fill="rgb(210,1,33)" fg:x="1986" fg:w="12"/><text x="66.4942%" y="767.50"></text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_map&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt;,serde::de::impls::impl$202::deserialize::MapVisitor&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt; &gt;(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, serde::de::impls::impl$202::deserialize::MapVisitor (12 samples, 0.40%)</title><rect x="66.2442%" y="741" width="0.4003%" height="15" fill="rgb(213,50,3)" fg:x="1986" fg:w="12"/><text x="66.4942%" y="751.50"></text></g><g><title>boggle.exe`serde::de::impls::impl$202::deserialize::impl$0::visit_map(serde::de::impls::impl$202::deserialize::MapVisitor&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;, bincode::de::impl$3::deserialize_map::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (12 samples, 0.40%)</title><rect x="66.2442%" y="725" width="0.4003%" height="15" fill="rgb(234,227,4)" fg:x="1986" fg:w="12"/><text x="66.4942%" y="735.50"></text></g><g><title>boggle.exe`std::collections::hash::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;::with_capacity_and_hasher (4 samples, 0.13%)</title><rect x="66.5110%" y="709" width="0.1334%" height="15" fill="rgb(246,63,5)" fg:x="1994" fg:w="4"/><text x="66.7610%" y="719.50"></text></g><g><title>boggle.exe`hashbrown::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt;::with_capacity_and_hasher (4 samples, 0.13%)</title><rect x="66.5110%" y="693" width="0.1334%" height="15" fill="rgb(245,136,27)" fg:x="1994" fg:w="4"/><text x="66.7610%" y="703.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTable&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;::with_capacity_in&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt; (4 samples, 0.13%)</title><rect x="66.5110%" y="677" width="0.1334%" height="15" fill="rgb(247,199,27)" fg:x="1994" fg:w="4"/><text x="66.7610%" y="687.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::with_capacity (4 samples, 0.13%)</title><rect x="66.5110%" y="661" width="0.1334%" height="15" fill="rgb(252,158,49)" fg:x="1994" fg:w="4"/><text x="66.7610%" y="671.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::fallible_with_capacity (4 samples, 0.13%)</title><rect x="66.5110%" y="645" width="0.1334%" height="15" fill="rgb(254,73,1)" fg:x="1994" fg:w="4"/><text x="66.7610%" y="655.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::new_uninitialized (4 samples, 0.13%)</title><rect x="66.5110%" y="629" width="0.1334%" height="15" fill="rgb(248,93,19)" fg:x="1994" fg:w="4"/><text x="66.7610%" y="639.50"></text></g><g><title>boggle.exe`hashbrown::raw::alloc::inner::do_alloc (4 samples, 0.13%)</title><rect x="66.5110%" y="613" width="0.1334%" height="15" fill="rgb(206,67,5)" fg:x="1994" fg:w="4"/><text x="66.7610%" y="623.50"></text></g><g><title>`0x7FFAC12C7776 (4 samples, 0.13%)</title><rect x="66.5110%" y="597" width="0.1334%" height="15" fill="rgb(209,210,4)" fg:x="1994" fg:w="4"/><text x="66.7610%" y="607.50"></text></g><g><title>`0x7FFAC12C78B4 (4 samples, 0.13%)</title><rect x="66.5110%" y="581" width="0.1334%" height="15" fill="rgb(214,185,36)" fg:x="1994" fg:w="4"/><text x="66.7610%" y="591.50"></text></g><g><title>`0x7FFAC12C8A44 (3 samples, 0.10%)</title><rect x="66.5444%" y="565" width="0.1001%" height="15" fill="rgb(233,191,26)" fg:x="1995" fg:w="3"/><text x="66.7944%" y="575.50"></text></g><g><title>`0x7FFAC1371342 (3 samples, 0.10%)</title><rect x="66.5444%" y="549" width="0.1001%" height="15" fill="rgb(248,94,17)" fg:x="1995" fg:w="3"/><text x="66.7944%" y="559.50"></text></g><g><title>boggle.exe`serde::de::MapAccess::next_entry(bincode::de::impl$3::deserialize_map::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (25 samples, 0.83%)</title><rect x="66.0107%" y="1093" width="0.8339%" height="15" fill="rgb(250,64,4)" fg:x="1979" fg:w="25"/><text x="66.2607%" y="1103.50"></text></g><g><title>boggle.exe`serde::de::MapAccess::next_entry_seed(bincode::de::impl$3::deserialize_map::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, core::marker::PhantomData&lt;char&gt;, core::marker::PhantomData (25 samples, 0.83%)</title><rect x="66.0107%" y="1077" width="0.8339%" height="15" fill="rgb(218,41,53)" fg:x="1979" fg:w="25"/><text x="66.2607%" y="1087.50"></text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_map::impl$0::next_value_seed(bincode::de::impl$3::deserialize_map::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, core::marker::PhantomData (25 samples, 0.83%)</title><rect x="66.0107%" y="1061" width="0.8339%" height="15" fill="rgb(251,176,28)" fg:x="1979" fg:w="25"/><text x="66.2607%" y="1071.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;boggle::utils::dict_trie::DictTrieNode,alloc::boxed::Box&lt;enum2$ (25 samples, 0.83%)</title><rect x="66.0107%" y="1045" width="0.8339%" height="15" fill="rgb(247,22,9)" fg:x="1979" fg:w="25"/><text x="66.2607%" y="1055.50"></text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_struct&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt;,boggle::utils::dict_trie::_::impl$0::deserialize::__Visitor&gt;(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, ref$&lt;str$&gt;, ref$&lt;slice2$&lt;ref$ (25 samples, 0.83%)</title><rect x="66.0107%" y="1029" width="0.8339%" height="15" fill="rgb(218,201,14)" fg:x="1979" fg:w="25"/><text x="66.2607%" y="1039.50"></text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_tuple(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (24 samples, 0.80%)</title><rect x="66.0440%" y="1013" width="0.8005%" height="15" fill="rgb(218,94,10)" fg:x="1980" fg:w="24"/><text x="66.2940%" y="1023.50"></text></g><g><title>boggle.exe`boggle::utils::dict_trie::_::impl$0::deserialize::impl$2::visit_seq(boggle::utils::dict_trie::_::impl$0::deserialize::__Visitor, bincode::de::impl$3::deserialize_tuple::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (24 samples, 0.80%)</title><rect x="66.0440%" y="997" width="0.8005%" height="15" fill="rgb(222,183,52)" fg:x="1980" fg:w="24"/><text x="66.2940%" y="1007.50"></text></g><g><title>boggle.exe`serde::de::SeqAccess::next_element(bincode::de::impl$3::deserialize_tuple::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (23 samples, 0.77%)</title><rect x="66.0774%" y="981" width="0.7672%" height="15" fill="rgb(242,140,25)" fg:x="1981" fg:w="23"/><text x="66.3274%" y="991.50"></text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_tuple::impl$0::next_element_seed(bincode::de::impl$3::deserialize_tuple::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, core::marker::PhantomData&lt;std::collections::hash::map::HashMap (23 samples, 0.77%)</title><rect x="66.0774%" y="965" width="0.7672%" height="15" fill="rgb(235,197,38)" fg:x="1981" fg:w="23"/><text x="66.3274%" y="975.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;std::collections::hash::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;,alloc::boxed::Box&lt;enum2$ (23 samples, 0.77%)</title><rect x="66.0774%" y="949" width="0.7672%" height="15" fill="rgb(237,136,15)" fg:x="1981" fg:w="23"/><text x="66.3274%" y="959.50"></text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_map&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt;,serde::de::impls::impl$202::deserialize::MapVisitor&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt; &gt;(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, serde::de::impls::impl$202::deserialize::MapVisitor (23 samples, 0.77%)</title><rect x="66.0774%" y="933" width="0.7672%" height="15" fill="rgb(223,44,49)" fg:x="1981" fg:w="23"/><text x="66.3274%" y="943.50"></text></g><g><title>boggle.exe`serde::de::impls::impl$202::deserialize::impl$0::visit_map(serde::de::impls::impl$202::deserialize::MapVisitor&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;, bincode::de::impl$3::deserialize_map::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (23 samples, 0.77%)</title><rect x="66.0774%" y="917" width="0.7672%" height="15" fill="rgb(227,71,15)" fg:x="1981" fg:w="23"/><text x="66.3274%" y="927.50"></text></g><g><title>boggle.exe`std::collections::hash::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;::with_capacity_and_hasher (6 samples, 0.20%)</title><rect x="66.6444%" y="901" width="0.2001%" height="15" fill="rgb(225,153,20)" fg:x="1998" fg:w="6"/><text x="66.8944%" y="911.50"></text></g><g><title>boggle.exe`hashbrown::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt;::with_capacity_and_hasher (6 samples, 0.20%)</title><rect x="66.6444%" y="885" width="0.2001%" height="15" fill="rgb(210,190,26)" fg:x="1998" fg:w="6"/><text x="66.8944%" y="895.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTable&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;::with_capacity_in&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt; (6 samples, 0.20%)</title><rect x="66.6444%" y="869" width="0.2001%" height="15" fill="rgb(223,147,5)" fg:x="1998" fg:w="6"/><text x="66.8944%" y="879.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::with_capacity (6 samples, 0.20%)</title><rect x="66.6444%" y="853" width="0.2001%" height="15" fill="rgb(207,14,23)" fg:x="1998" fg:w="6"/><text x="66.8944%" y="863.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::fallible_with_capacity (6 samples, 0.20%)</title><rect x="66.6444%" y="837" width="0.2001%" height="15" fill="rgb(211,195,53)" fg:x="1998" fg:w="6"/><text x="66.8944%" y="847.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::new_uninitialized (6 samples, 0.20%)</title><rect x="66.6444%" y="821" width="0.2001%" height="15" fill="rgb(237,75,46)" fg:x="1998" fg:w="6"/><text x="66.8944%" y="831.50"></text></g><g><title>boggle.exe`hashbrown::raw::alloc::inner::do_alloc (6 samples, 0.20%)</title><rect x="66.6444%" y="805" width="0.2001%" height="15" fill="rgb(254,55,14)" fg:x="1998" fg:w="6"/><text x="66.8944%" y="815.50"></text></g><g><title>`0x7FFAC12C7776 (6 samples, 0.20%)</title><rect x="66.6444%" y="789" width="0.2001%" height="15" fill="rgb(230,185,30)" fg:x="1998" fg:w="6"/><text x="66.8944%" y="799.50"></text></g><g><title>`0x7FFAC12C78B4 (6 samples, 0.20%)</title><rect x="66.6444%" y="773" width="0.2001%" height="15" fill="rgb(220,14,11)" fg:x="1998" fg:w="6"/><text x="66.8944%" y="783.50"></text></g><g><title>`0x7FFAC12C8A44 (6 samples, 0.20%)</title><rect x="66.6444%" y="757" width="0.2001%" height="15" fill="rgb(215,169,44)" fg:x="1998" fg:w="6"/><text x="66.8944%" y="767.50"></text></g><g><title>`0x7FFAC1371342 (6 samples, 0.20%)</title><rect x="66.6444%" y="741" width="0.2001%" height="15" fill="rgb(253,203,20)" fg:x="1998" fg:w="6"/><text x="66.8944%" y="751.50"></text></g><g><title>`0x7FFAC12C785E (1 samples, 0.03%)</title><rect x="66.8446%" y="965" width="0.0334%" height="15" fill="rgb(229,225,17)" fg:x="2004" fg:w="1"/><text x="67.0946%" y="975.50"></text></g><g><title>`0x7FFAC1371342 (3 samples, 0.10%)</title><rect x="66.8779%" y="933" width="0.1001%" height="15" fill="rgb(236,76,26)" fg:x="2005" fg:w="3"/><text x="67.1279%" y="943.50"></text></g><g><title>`0x7FFAC12C8A44 (5 samples, 0.17%)</title><rect x="66.8779%" y="949" width="0.1668%" height="15" fill="rgb(234,15,30)" fg:x="2005" fg:w="5"/><text x="67.1279%" y="959.50"></text></g><g><title>`0x7FFAC1371345 (2 samples, 0.07%)</title><rect x="66.9780%" y="933" width="0.0667%" height="15" fill="rgb(211,113,48)" fg:x="2008" fg:w="2"/><text x="67.2280%" y="943.50"></text></g><g><title>boggle.exe`serde::de::MapAccess::next_entry(bincode::de::impl$3::deserialize_map::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (39 samples, 1.30%)</title><rect x="65.7772%" y="1285" width="1.3009%" height="15" fill="rgb(221,31,36)" fg:x="1972" fg:w="39"/><text x="66.0272%" y="1295.50"></text></g><g><title>boggle.exe`serde::de::MapAccess::next_entry_seed(bincode::de::impl$3::deserialize_map::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, core::marker::PhantomData&lt;char&gt;, core::marker::PhantomData (39 samples, 1.30%)</title><rect x="65.7772%" y="1269" width="1.3009%" height="15" fill="rgb(215,118,52)" fg:x="1972" fg:w="39"/><text x="66.0272%" y="1279.50"></text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_map::impl$0::next_value_seed(bincode::de::impl$3::deserialize_map::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, core::marker::PhantomData (39 samples, 1.30%)</title><rect x="65.7772%" y="1253" width="1.3009%" height="15" fill="rgb(241,151,27)" fg:x="1972" fg:w="39"/><text x="66.0272%" y="1263.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;boggle::utils::dict_trie::DictTrieNode,alloc::boxed::Box&lt;enum2$ (39 samples, 1.30%)</title><rect x="65.7772%" y="1237" width="1.3009%" height="15" fill="rgb(253,51,3)" fg:x="1972" fg:w="39"/><text x="66.0272%" y="1247.50"></text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_struct&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt;,boggle::utils::dict_trie::_::impl$0::deserialize::__Visitor&gt;(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, ref$&lt;str$&gt;, ref$&lt;slice2$&lt;ref$ (37 samples, 1.23%)</title><rect x="65.8439%" y="1221" width="1.2342%" height="15" fill="rgb(216,201,24)" fg:x="1974" fg:w="37"/><text x="66.0939%" y="1231.50"></text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_tuple(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (35 samples, 1.17%)</title><rect x="65.9106%" y="1205" width="1.1674%" height="15" fill="rgb(231,107,4)" fg:x="1976" fg:w="35"/><text x="66.1606%" y="1215.50"></text></g><g><title>boggle.exe`boggle::utils::dict_trie::_::impl$0::deserialize::impl$2::visit_seq(boggle::utils::dict_trie::_::impl$0::deserialize::__Visitor, bincode::de::impl$3::deserialize_tuple::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (35 samples, 1.17%)</title><rect x="65.9106%" y="1189" width="1.1674%" height="15" fill="rgb(243,97,54)" fg:x="1976" fg:w="35"/><text x="66.1606%" y="1199.50"></text></g><g><title>boggle.exe`serde::de::SeqAccess::next_element(bincode::de::impl$3::deserialize_tuple::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (34 samples, 1.13%)</title><rect x="65.9440%" y="1173" width="1.1341%" height="15" fill="rgb(221,32,51)" fg:x="1977" fg:w="34"/><text x="66.1940%" y="1183.50"></text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_tuple::impl$0::next_element_seed(bincode::de::impl$3::deserialize_tuple::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, core::marker::PhantomData&lt;std::collections::hash::map::HashMap (34 samples, 1.13%)</title><rect x="65.9440%" y="1157" width="1.1341%" height="15" fill="rgb(218,171,35)" fg:x="1977" fg:w="34"/><text x="66.1940%" y="1167.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;std::collections::hash::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;,alloc::boxed::Box&lt;enum2$ (34 samples, 1.13%)</title><rect x="65.9440%" y="1141" width="1.1341%" height="15" fill="rgb(214,20,53)" fg:x="1977" fg:w="34"/><text x="66.1940%" y="1151.50"></text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_map&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt;,serde::de::impls::impl$202::deserialize::MapVisitor&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt; &gt;(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, serde::de::impls::impl$202::deserialize::MapVisitor (34 samples, 1.13%)</title><rect x="65.9440%" y="1125" width="1.1341%" height="15" fill="rgb(239,9,52)" fg:x="1977" fg:w="34"/><text x="66.1940%" y="1135.50"></text></g><g><title>boggle.exe`serde::de::impls::impl$202::deserialize::impl$0::visit_map(serde::de::impls::impl$202::deserialize::MapVisitor&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;, bincode::de::impl$3::deserialize_map::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (33 samples, 1.10%)</title><rect x="65.9773%" y="1109" width="1.1007%" height="15" fill="rgb(215,114,45)" fg:x="1978" fg:w="33"/><text x="66.2273%" y="1119.50"></text></g><g><title>boggle.exe`std::collections::hash::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;::with_capacity_and_hasher (7 samples, 0.23%)</title><rect x="66.8446%" y="1093" width="0.2335%" height="15" fill="rgb(208,118,9)" fg:x="2004" fg:w="7"/><text x="67.0946%" y="1103.50"></text></g><g><title>boggle.exe`hashbrown::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt;::with_capacity_and_hasher (7 samples, 0.23%)</title><rect x="66.8446%" y="1077" width="0.2335%" height="15" fill="rgb(235,7,39)" fg:x="2004" fg:w="7"/><text x="67.0946%" y="1087.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTable&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;::with_capacity_in&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt; (7 samples, 0.23%)</title><rect x="66.8446%" y="1061" width="0.2335%" height="15" fill="rgb(243,225,15)" fg:x="2004" fg:w="7"/><text x="67.0946%" y="1071.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::with_capacity (7 samples, 0.23%)</title><rect x="66.8446%" y="1045" width="0.2335%" height="15" fill="rgb(225,216,18)" fg:x="2004" fg:w="7"/><text x="67.0946%" y="1055.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::fallible_with_capacity (7 samples, 0.23%)</title><rect x="66.8446%" y="1029" width="0.2335%" height="15" fill="rgb(233,36,38)" fg:x="2004" fg:w="7"/><text x="67.0946%" y="1039.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::new_uninitialized (7 samples, 0.23%)</title><rect x="66.8446%" y="1013" width="0.2335%" height="15" fill="rgb(239,88,23)" fg:x="2004" fg:w="7"/><text x="67.0946%" y="1023.50"></text></g><g><title>boggle.exe`hashbrown::raw::alloc::inner::do_alloc (7 samples, 0.23%)</title><rect x="66.8446%" y="997" width="0.2335%" height="15" fill="rgb(219,181,35)" fg:x="2004" fg:w="7"/><text x="67.0946%" y="1007.50"></text></g><g><title>`0x7FFAC12C7776 (7 samples, 0.23%)</title><rect x="66.8446%" y="981" width="0.2335%" height="15" fill="rgb(215,18,46)" fg:x="2004" fg:w="7"/><text x="67.0946%" y="991.50"></text></g><g><title>`0x7FFAC12C78B4 (6 samples, 0.20%)</title><rect x="66.8779%" y="965" width="0.2001%" height="15" fill="rgb(241,38,11)" fg:x="2005" fg:w="6"/><text x="67.1279%" y="975.50"></text></g><g><title>`0x7FFAC12C8CE9 (1 samples, 0.03%)</title><rect x="67.0447%" y="949" width="0.0334%" height="15" fill="rgb(248,169,45)" fg:x="2010" fg:w="1"/><text x="67.2947%" y="959.50"></text></g><g><title>`0x7FFAC12C7776 (1 samples, 0.03%)</title><rect x="67.0447%" y="933" width="0.0334%" height="15" fill="rgb(239,50,49)" fg:x="2010" fg:w="1"/><text x="67.2947%" y="943.50"></text></g><g><title>`0x7FFAC12C7AFE (1 samples, 0.03%)</title><rect x="67.0447%" y="917" width="0.0334%" height="15" fill="rgb(231,96,31)" fg:x="2010" fg:w="1"/><text x="67.2947%" y="927.50"></text></g><g><title>`0x7FFAC12AFC80 (1 samples, 0.03%)</title><rect x="67.0447%" y="901" width="0.0334%" height="15" fill="rgb(224,193,37)" fg:x="2010" fg:w="1"/><text x="67.2947%" y="911.50"></text></g><g><title>`0x7FFAC12C6CB2 (1 samples, 0.03%)</title><rect x="67.1448%" y="1173" width="0.0334%" height="15" fill="rgb(227,153,50)" fg:x="2013" fg:w="1"/><text x="67.3948%" y="1183.50"></text></g><g><title>`0x7FFAC12C78AB (1 samples, 0.03%)</title><rect x="67.1781%" y="1157" width="0.0334%" height="15" fill="rgb(249,228,3)" fg:x="2014" fg:w="1"/><text x="67.4281%" y="1167.50"></text></g><g><title>`0x7FFAC1371342 (8 samples, 0.27%)</title><rect x="67.2115%" y="1125" width="0.2668%" height="15" fill="rgb(219,164,43)" fg:x="2015" fg:w="8"/><text x="67.4615%" y="1135.50"></text></g><g><title>`0x7FFAC12C8A44 (11 samples, 0.37%)</title><rect x="67.2115%" y="1141" width="0.3669%" height="15" fill="rgb(216,45,41)" fg:x="2015" fg:w="11"/><text x="67.4615%" y="1151.50"></text></g><g><title>`0x7FFAC1371345 (3 samples, 0.10%)</title><rect x="67.4783%" y="1125" width="0.1001%" height="15" fill="rgb(210,226,51)" fg:x="2023" fg:w="3"/><text x="67.7283%" y="1135.50"></text></g><g><title>`0x7FFAC12AF786 (1 samples, 0.03%)</title><rect x="67.5784%" y="1093" width="0.0334%" height="15" fill="rgb(209,117,49)" fg:x="2026" fg:w="1"/><text x="67.8284%" y="1103.50"></text></g><g><title>`0x7FFAC12C8CE9 (2 samples, 0.07%)</title><rect x="67.5784%" y="1141" width="0.0667%" height="15" fill="rgb(206,196,24)" fg:x="2026" fg:w="2"/><text x="67.8284%" y="1151.50"></text></g><g><title>`0x7FFAC12C7776 (2 samples, 0.07%)</title><rect x="67.5784%" y="1125" width="0.0667%" height="15" fill="rgb(253,218,3)" fg:x="2026" fg:w="2"/><text x="67.8284%" y="1135.50"></text></g><g><title>`0x7FFAC12C7AFE (2 samples, 0.07%)</title><rect x="67.5784%" y="1109" width="0.0667%" height="15" fill="rgb(252,166,2)" fg:x="2026" fg:w="2"/><text x="67.8284%" y="1119.50"></text></g><g><title>`0x7FFAC12B09B0 (1 samples, 0.03%)</title><rect x="67.6117%" y="1093" width="0.0334%" height="15" fill="rgb(236,218,26)" fg:x="2027" fg:w="1"/><text x="67.8617%" y="1103.50"></text></g><g><title>`0x7FFAC12B1EDF (1 samples, 0.03%)</title><rect x="67.6117%" y="1077" width="0.0334%" height="15" fill="rgb(254,84,19)" fg:x="2027" fg:w="1"/><text x="67.8617%" y="1087.50"></text></g><g><title>`0x7FFAC12B2854 (1 samples, 0.03%)</title><rect x="67.6117%" y="1061" width="0.0334%" height="15" fill="rgb(219,137,29)" fg:x="2027" fg:w="1"/><text x="67.8617%" y="1071.50"></text></g><g><title>`0x7FFAC12B238A (1 samples, 0.03%)</title><rect x="67.6117%" y="1045" width="0.0334%" height="15" fill="rgb(227,47,52)" fg:x="2027" fg:w="1"/><text x="67.8617%" y="1055.50"></text></g><g><title>`0x7FFAC12C7776 (15 samples, 0.50%)</title><rect x="67.1781%" y="1173" width="0.5003%" height="15" fill="rgb(229,167,24)" fg:x="2014" fg:w="15"/><text x="67.4281%" y="1183.50"></text></g><g><title>`0x7FFAC12C78B4 (14 samples, 0.47%)</title><rect x="67.2115%" y="1157" width="0.4670%" height="15" fill="rgb(233,164,1)" fg:x="2015" fg:w="14"/><text x="67.4615%" y="1167.50"></text></g><g><title>`0x7FFAC12C8EC7 (1 samples, 0.03%)</title><rect x="67.6451%" y="1141" width="0.0334%" height="15" fill="rgb(218,88,48)" fg:x="2028" fg:w="1"/><text x="67.8951%" y="1151.50"></text></g><g><title>`0x7FFAC12C7791 (1 samples, 0.03%)</title><rect x="67.6785%" y="1173" width="0.0334%" height="15" fill="rgb(226,214,24)" fg:x="2029" fg:w="1"/><text x="67.9285%" y="1183.50"></text></g><g><title>boggle.exe`std::collections::hash::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;::with_capacity_and_hasher (20 samples, 0.67%)</title><rect x="67.0781%" y="1285" width="0.6671%" height="15" fill="rgb(233,29,12)" fg:x="2011" fg:w="20"/><text x="67.3281%" y="1295.50"></text></g><g><title>boggle.exe`hashbrown::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt;::with_capacity_and_hasher (20 samples, 0.67%)</title><rect x="67.0781%" y="1269" width="0.6671%" height="15" fill="rgb(219,120,34)" fg:x="2011" fg:w="20"/><text x="67.3281%" y="1279.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTable&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;::with_capacity_in&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt; (20 samples, 0.67%)</title><rect x="67.0781%" y="1253" width="0.6671%" height="15" fill="rgb(226,78,44)" fg:x="2011" fg:w="20"/><text x="67.3281%" y="1263.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::with_capacity (19 samples, 0.63%)</title><rect x="67.1114%" y="1237" width="0.6338%" height="15" fill="rgb(240,15,48)" fg:x="2012" fg:w="19"/><text x="67.3614%" y="1247.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::fallible_with_capacity (19 samples, 0.63%)</title><rect x="67.1114%" y="1221" width="0.6338%" height="15" fill="rgb(253,176,7)" fg:x="2012" fg:w="19"/><text x="67.3614%" y="1231.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::new_uninitialized (18 samples, 0.60%)</title><rect x="67.1448%" y="1205" width="0.6004%" height="15" fill="rgb(206,166,28)" fg:x="2013" fg:w="18"/><text x="67.3948%" y="1215.50"></text></g><g><title>boggle.exe`hashbrown::raw::alloc::inner::do_alloc (18 samples, 0.60%)</title><rect x="67.1448%" y="1189" width="0.6004%" height="15" fill="rgb(241,53,51)" fg:x="2013" fg:w="18"/><text x="67.3948%" y="1199.50"></text></g><g><title>boggle.exe`std::alloc::__default_lib_allocator::__rdl_alloc (1 samples, 0.03%)</title><rect x="67.7118%" y="1173" width="0.0334%" height="15" fill="rgb(249,112,30)" fg:x="2030" fg:w="1"/><text x="67.9618%" y="1183.50"></text></g><g><title>boggle.exe`std::sys::alloc::windows::impl$0::alloc (1 samples, 0.03%)</title><rect x="67.7118%" y="1157" width="0.0334%" height="15" fill="rgb(217,85,30)" fg:x="2030" fg:w="1"/><text x="67.9618%" y="1167.50"></text></g><g><title>boggle.exe`std::sys::alloc::windows::allocate (1 samples, 0.03%)</title><rect x="67.7118%" y="1141" width="0.0334%" height="15" fill="rgb(233,49,7)" fg:x="2030" fg:w="1"/><text x="67.9618%" y="1151.50"></text></g><g><title>boggle.exe`serde::de::MapAccess::next_entry(bincode::de::impl$3::deserialize_map::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (71 samples, 2.37%)</title><rect x="65.4103%" y="1477" width="2.3682%" height="15" fill="rgb(234,109,9)" fg:x="1961" fg:w="71"/><text x="65.6603%" y="1487.50">bo..</text></g><g><title>boggle.exe`serde::de::MapAccess::next_entry_seed(bincode::de::impl$3::deserialize_map::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, core::marker::PhantomData&lt;char&gt;, core::marker::PhantomData (71 samples, 2.37%)</title><rect x="65.4103%" y="1461" width="2.3682%" height="15" fill="rgb(253,95,22)" fg:x="1961" fg:w="71"/><text x="65.6603%" y="1471.50">bo..</text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_map::impl$0::next_value_seed(bincode::de::impl$3::deserialize_map::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, core::marker::PhantomData (70 samples, 2.33%)</title><rect x="65.4436%" y="1445" width="2.3349%" height="15" fill="rgb(233,176,25)" fg:x="1962" fg:w="70"/><text x="65.6936%" y="1455.50">b..</text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;boggle::utils::dict_trie::DictTrieNode,alloc::boxed::Box&lt;enum2$ (70 samples, 2.33%)</title><rect x="65.4436%" y="1429" width="2.3349%" height="15" fill="rgb(236,33,39)" fg:x="1962" fg:w="70"/><text x="65.6936%" y="1439.50">b..</text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_struct&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt;,boggle::utils::dict_trie::_::impl$0::deserialize::__Visitor&gt;(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, ref$&lt;str$&gt;, ref$&lt;slice2$&lt;ref$ (68 samples, 2.27%)</title><rect x="65.5103%" y="1413" width="2.2682%" height="15" fill="rgb(223,226,42)" fg:x="1964" fg:w="68"/><text x="65.7603%" y="1423.50">b..</text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_tuple(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (68 samples, 2.27%)</title><rect x="65.5103%" y="1397" width="2.2682%" height="15" fill="rgb(216,99,33)" fg:x="1964" fg:w="68"/><text x="65.7603%" y="1407.50">b..</text></g><g><title>boggle.exe`boggle::utils::dict_trie::_::impl$0::deserialize::impl$2::visit_seq(boggle::utils::dict_trie::_::impl$0::deserialize::__Visitor, bincode::de::impl$3::deserialize_tuple::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (68 samples, 2.27%)</title><rect x="65.5103%" y="1381" width="2.2682%" height="15" fill="rgb(235,84,23)" fg:x="1964" fg:w="68"/><text x="65.7603%" y="1391.50">b..</text></g><g><title>boggle.exe`serde::de::SeqAccess::next_element(bincode::de::impl$3::deserialize_tuple::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (68 samples, 2.27%)</title><rect x="65.5103%" y="1365" width="2.2682%" height="15" fill="rgb(232,2,27)" fg:x="1964" fg:w="68"/><text x="65.7603%" y="1375.50">b..</text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_tuple::impl$0::next_element_seed(bincode::de::impl$3::deserialize_tuple::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, core::marker::PhantomData&lt;std::collections::hash::map::HashMap (68 samples, 2.27%)</title><rect x="65.5103%" y="1349" width="2.2682%" height="15" fill="rgb(241,23,22)" fg:x="1964" fg:w="68"/><text x="65.7603%" y="1359.50">b..</text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;std::collections::hash::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;,alloc::boxed::Box&lt;enum2$ (68 samples, 2.27%)</title><rect x="65.5103%" y="1333" width="2.2682%" height="15" fill="rgb(211,73,27)" fg:x="1964" fg:w="68"/><text x="65.7603%" y="1343.50">b..</text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_map&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt;,serde::de::impls::impl$202::deserialize::MapVisitor&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt; &gt;(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, serde::de::impls::impl$202::deserialize::MapVisitor (67 samples, 2.23%)</title><rect x="65.5437%" y="1317" width="2.2348%" height="15" fill="rgb(235,109,49)" fg:x="1965" fg:w="67"/><text x="65.7937%" y="1327.50">b..</text></g><g><title>boggle.exe`serde::de::impls::impl$202::deserialize::impl$0::visit_map(serde::de::impls::impl$202::deserialize::MapVisitor&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;, bincode::de::impl$3::deserialize_map::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (67 samples, 2.23%)</title><rect x="65.5437%" y="1301" width="2.2348%" height="15" fill="rgb(230,99,29)" fg:x="1965" fg:w="67"/><text x="65.7937%" y="1311.50">b..</text></g><g><title>boggle.exe`std::hash::random::impl$5::default (1 samples, 0.03%)</title><rect x="67.7452%" y="1285" width="0.0334%" height="15" fill="rgb(245,199,7)" fg:x="2031" fg:w="1"/><text x="67.9952%" y="1295.50"></text></g><g><title>boggle.exe`std::hash::random::RandomState::new (1 samples, 0.03%)</title><rect x="67.7452%" y="1269" width="0.0334%" height="15" fill="rgb(217,179,10)" fg:x="2031" fg:w="1"/><text x="67.9952%" y="1279.50"></text></g><g><title>boggle.exe`std::thread::local::LocalKey&lt;core::cell::Cell&lt;tuple$&lt;u64,u64&gt; &gt; &gt;::with (1 samples, 0.03%)</title><rect x="67.7452%" y="1253" width="0.0334%" height="15" fill="rgb(254,99,47)" fg:x="2031" fg:w="1"/><text x="67.9952%" y="1263.50"></text></g><g><title>boggle.exe`std::thread::local::LocalKey&lt;core::cell::Cell&lt;tuple$&lt;u64,u64&gt; &gt; &gt;::try_with (1 samples, 0.03%)</title><rect x="67.7452%" y="1237" width="0.0334%" height="15" fill="rgb(251,121,7)" fg:x="2031" fg:w="1"/><text x="67.9952%" y="1247.50"></text></g><g><title>boggle.exe`core::ops::function::FnOnce::call_once(std::hash::random::impl$0::new::KEYS::constant$0::closure_env$1, enum2$&lt;core::option::Option&lt;ref_mut$&lt;enum2$&lt;core::option::Option&lt;core::cell::Cell&lt;tuple$ (1 samples, 0.03%)</title><rect x="67.7452%" y="1221" width="0.0334%" height="15" fill="rgb(250,177,26)" fg:x="2031" fg:w="1"/><text x="67.9952%" y="1231.50"></text></g><g><title>boggle.exe`std::hash::random::impl$0::new::KEYS::constant$0::closure$1(std::hash::random::impl$0::new::KEYS::constant$0::closure_env$1*, enum2$&lt;core::option::Option&lt;ref_mut$&lt;enum2$&lt;core::option::Option&lt;core::cell::Cell&lt;tuple$ (1 samples, 0.03%)</title><rect x="67.7452%" y="1205" width="0.0334%" height="15" fill="rgb(232,88,15)" fg:x="2031" fg:w="1"/><text x="67.9952%" y="1215.50"></text></g><g><title>boggle.exe`core::ptr::mut_ptr::impl$0::write_bytes (1 samples, 0.03%)</title><rect x="67.7785%" y="1397" width="0.0334%" height="15" fill="rgb(251,54,54)" fg:x="2032" fg:w="1"/><text x="68.0285%" y="1407.50"></text></g><g><title>boggle.exe`core::intrinsics::write_bytes (1 samples, 0.03%)</title><rect x="67.7785%" y="1381" width="0.0334%" height="15" fill="rgb(208,177,15)" fg:x="2032" fg:w="1"/><text x="68.0285%" y="1391.50"></text></g><g><title>`0x7FFAB89118BE (1 samples, 0.03%)</title><rect x="67.7785%" y="1365" width="0.0334%" height="15" fill="rgb(205,97,32)" fg:x="2032" fg:w="1"/><text x="68.0285%" y="1375.50"></text></g><g><title>`0x7FFAC12C8047 (1 samples, 0.03%)</title><rect x="67.8119%" y="1333" width="0.0334%" height="15" fill="rgb(217,192,13)" fg:x="2033" fg:w="1"/><text x="68.0619%" y="1343.50"></text></g><g><title>`0x7FFAC12C811F (1 samples, 0.03%)</title><rect x="67.8452%" y="1333" width="0.0334%" height="15" fill="rgb(215,163,41)" fg:x="2034" fg:w="1"/><text x="68.0952%" y="1343.50"></text></g><g><title>`0x7FFAC12C818E (1 samples, 0.03%)</title><rect x="67.8786%" y="1333" width="0.0334%" height="15" fill="rgb(246,83,29)" fg:x="2035" fg:w="1"/><text x="68.1286%" y="1343.50"></text></g><g><title>`0x7FFAC12C860D (1 samples, 0.03%)</title><rect x="67.9119%" y="1333" width="0.0334%" height="15" fill="rgb(219,2,45)" fg:x="2036" fg:w="1"/><text x="68.1619%" y="1343.50"></text></g><g><title>`0x7FFAC1371342 (8 samples, 0.27%)</title><rect x="67.9453%" y="1317" width="0.2668%" height="15" fill="rgb(242,215,33)" fg:x="2037" fg:w="8"/><text x="68.1953%" y="1327.50"></text></g><g><title>`0x7FFAC12C8A44 (19 samples, 0.63%)</title><rect x="67.9453%" y="1333" width="0.6338%" height="15" fill="rgb(217,1,6)" fg:x="2037" fg:w="19"/><text x="68.1953%" y="1343.50"></text></g><g><title>`0x7FFAC1371345 (11 samples, 0.37%)</title><rect x="68.2121%" y="1317" width="0.3669%" height="15" fill="rgb(207,85,52)" fg:x="2045" fg:w="11"/><text x="68.4621%" y="1327.50"></text></g><g><title>`0x7FFAC12C7776 (24 samples, 0.80%)</title><rect x="67.8119%" y="1365" width="0.8005%" height="15" fill="rgb(231,171,19)" fg:x="2033" fg:w="24"/><text x="68.0619%" y="1375.50"></text></g><g><title>`0x7FFAC12C78B4 (24 samples, 0.80%)</title><rect x="67.8119%" y="1349" width="0.8005%" height="15" fill="rgb(207,128,4)" fg:x="2033" fg:w="24"/><text x="68.0619%" y="1359.50"></text></g><g><title>`0x7FFAC12C8CE9 (1 samples, 0.03%)</title><rect x="68.5791%" y="1333" width="0.0334%" height="15" fill="rgb(219,208,4)" fg:x="2056" fg:w="1"/><text x="68.8291%" y="1343.50"></text></g><g><title>`0x7FFAC12C7776 (1 samples, 0.03%)</title><rect x="68.5791%" y="1317" width="0.0334%" height="15" fill="rgb(235,161,42)" fg:x="2056" fg:w="1"/><text x="68.8291%" y="1327.50"></text></g><g><title>`0x7FFAC12C7AFE (1 samples, 0.03%)</title><rect x="68.5791%" y="1301" width="0.0334%" height="15" fill="rgb(247,218,18)" fg:x="2056" fg:w="1"/><text x="68.8291%" y="1311.50"></text></g><g><title>`0x7FFAC12B09B0 (1 samples, 0.03%)</title><rect x="68.5791%" y="1285" width="0.0334%" height="15" fill="rgb(232,114,51)" fg:x="2056" fg:w="1"/><text x="68.8291%" y="1295.50"></text></g><g><title>`0x7FFAC12B1EDF (1 samples, 0.03%)</title><rect x="68.5791%" y="1269" width="0.0334%" height="15" fill="rgb(222,95,3)" fg:x="2056" fg:w="1"/><text x="68.8291%" y="1279.50"></text></g><g><title>`0x7FFAC12B2854 (1 samples, 0.03%)</title><rect x="68.5791%" y="1253" width="0.0334%" height="15" fill="rgb(240,65,29)" fg:x="2056" fg:w="1"/><text x="68.8291%" y="1263.50"></text></g><g><title>`0x7FFAC12B238A (1 samples, 0.03%)</title><rect x="68.5791%" y="1237" width="0.0334%" height="15" fill="rgb(249,209,20)" fg:x="2056" fg:w="1"/><text x="68.8291%" y="1247.50"></text></g><g><title>boggle.exe`std::collections::hash::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;::with_capacity_and_hasher (26 samples, 0.87%)</title><rect x="67.7785%" y="1477" width="0.8672%" height="15" fill="rgb(241,48,37)" fg:x="2032" fg:w="26"/><text x="68.0285%" y="1487.50"></text></g><g><title>boggle.exe`hashbrown::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt;::with_capacity_and_hasher (26 samples, 0.87%)</title><rect x="67.7785%" y="1461" width="0.8672%" height="15" fill="rgb(230,140,42)" fg:x="2032" fg:w="26"/><text x="68.0285%" y="1471.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTable&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;::with_capacity_in&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt; (26 samples, 0.87%)</title><rect x="67.7785%" y="1445" width="0.8672%" height="15" fill="rgb(230,176,45)" fg:x="2032" fg:w="26"/><text x="68.0285%" y="1455.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::with_capacity (26 samples, 0.87%)</title><rect x="67.7785%" y="1429" width="0.8672%" height="15" fill="rgb(245,112,21)" fg:x="2032" fg:w="26"/><text x="68.0285%" y="1439.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::fallible_with_capacity (26 samples, 0.87%)</title><rect x="67.7785%" y="1413" width="0.8672%" height="15" fill="rgb(207,183,35)" fg:x="2032" fg:w="26"/><text x="68.0285%" y="1423.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::new_uninitialized (25 samples, 0.83%)</title><rect x="67.8119%" y="1397" width="0.8339%" height="15" fill="rgb(227,44,33)" fg:x="2033" fg:w="25"/><text x="68.0619%" y="1407.50"></text></g><g><title>boggle.exe`hashbrown::raw::alloc::inner::do_alloc (25 samples, 0.83%)</title><rect x="67.8119%" y="1381" width="0.8339%" height="15" fill="rgb(246,120,21)" fg:x="2033" fg:w="25"/><text x="68.0619%" y="1391.50"></text></g><g><title>boggle.exe`std::alloc::__default_lib_allocator::__rdl_alloc (1 samples, 0.03%)</title><rect x="68.6124%" y="1365" width="0.0334%" height="15" fill="rgb(235,57,52)" fg:x="2057" fg:w="1"/><text x="68.8624%" y="1375.50"></text></g><g><title>boggle.exe`std::sys::alloc::windows::impl$0::alloc (1 samples, 0.03%)</title><rect x="68.6124%" y="1349" width="0.0334%" height="15" fill="rgb(238,84,10)" fg:x="2057" fg:w="1"/><text x="68.8624%" y="1359.50"></text></g><g><title>boggle.exe`std::sys::alloc::windows::allocate (1 samples, 0.03%)</title><rect x="68.6124%" y="1333" width="0.0334%" height="15" fill="rgb(251,200,32)" fg:x="2057" fg:w="1"/><text x="68.8624%" y="1343.50"></text></g><g><title>boggle.exe`serde::de::MapAccess::next_entry(bincode::de::impl$3::deserialize_map::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (108 samples, 3.60%)</title><rect x="65.1101%" y="1669" width="3.6024%" height="15" fill="rgb(247,159,13)" fg:x="1952" fg:w="108"/><text x="65.3601%" y="1679.50">bogg..</text></g><g><title>boggle.exe`serde::de::MapAccess::next_entry_seed(bincode::de::impl$3::deserialize_map::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, core::marker::PhantomData&lt;char&gt;, core::marker::PhantomData (108 samples, 3.60%)</title><rect x="65.1101%" y="1653" width="3.6024%" height="15" fill="rgb(238,64,4)" fg:x="1952" fg:w="108"/><text x="65.3601%" y="1663.50">bogg..</text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_map::impl$0::next_value_seed(bincode::de::impl$3::deserialize_map::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, core::marker::PhantomData (108 samples, 3.60%)</title><rect x="65.1101%" y="1637" width="3.6024%" height="15" fill="rgb(221,131,51)" fg:x="1952" fg:w="108"/><text x="65.3601%" y="1647.50">bogg..</text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;boggle::utils::dict_trie::DictTrieNode,alloc::boxed::Box&lt;enum2$ (108 samples, 3.60%)</title><rect x="65.1101%" y="1621" width="3.6024%" height="15" fill="rgb(242,5,29)" fg:x="1952" fg:w="108"/><text x="65.3601%" y="1631.50">bogg..</text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_struct&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt;,boggle::utils::dict_trie::_::impl$0::deserialize::__Visitor&gt;(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, ref$&lt;str$&gt;, ref$&lt;slice2$&lt;ref$ (108 samples, 3.60%)</title><rect x="65.1101%" y="1605" width="3.6024%" height="15" fill="rgb(214,130,32)" fg:x="1952" fg:w="108"/><text x="65.3601%" y="1615.50">bogg..</text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_tuple(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (108 samples, 3.60%)</title><rect x="65.1101%" y="1589" width="3.6024%" height="15" fill="rgb(244,210,16)" fg:x="1952" fg:w="108"/><text x="65.3601%" y="1599.50">bogg..</text></g><g><title>boggle.exe`boggle::utils::dict_trie::_::impl$0::deserialize::impl$2::visit_seq(boggle::utils::dict_trie::_::impl$0::deserialize::__Visitor, bincode::de::impl$3::deserialize_tuple::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (108 samples, 3.60%)</title><rect x="65.1101%" y="1573" width="3.6024%" height="15" fill="rgb(234,48,26)" fg:x="1952" fg:w="108"/><text x="65.3601%" y="1583.50">bogg..</text></g><g><title>boggle.exe`serde::de::SeqAccess::next_element(bincode::de::impl$3::deserialize_tuple::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (103 samples, 3.44%)</title><rect x="65.2769%" y="1557" width="3.4356%" height="15" fill="rgb(231,82,38)" fg:x="1957" fg:w="103"/><text x="65.5269%" y="1567.50">bog..</text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_tuple::impl$0::next_element_seed(bincode::de::impl$3::deserialize_tuple::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, core::marker::PhantomData&lt;std::collections::hash::map::HashMap (103 samples, 3.44%)</title><rect x="65.2769%" y="1541" width="3.4356%" height="15" fill="rgb(254,128,41)" fg:x="1957" fg:w="103"/><text x="65.5269%" y="1551.50">bog..</text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;std::collections::hash::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;,alloc::boxed::Box&lt;enum2$ (103 samples, 3.44%)</title><rect x="65.2769%" y="1525" width="3.4356%" height="15" fill="rgb(212,73,49)" fg:x="1957" fg:w="103"/><text x="65.5269%" y="1535.50">bog..</text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_map&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt;,serde::de::impls::impl$202::deserialize::MapVisitor&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt; &gt;(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, serde::de::impls::impl$202::deserialize::MapVisitor (103 samples, 3.44%)</title><rect x="65.2769%" y="1509" width="3.4356%" height="15" fill="rgb(205,62,54)" fg:x="1957" fg:w="103"/><text x="65.5269%" y="1519.50">bog..</text></g><g><title>boggle.exe`serde::de::impls::impl$202::deserialize::impl$0::visit_map(serde::de::impls::impl$202::deserialize::MapVisitor&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;, bincode::de::impl$3::deserialize_map::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (103 samples, 3.44%)</title><rect x="65.2769%" y="1493" width="3.4356%" height="15" fill="rgb(228,0,8)" fg:x="1957" fg:w="103"/><text x="65.5269%" y="1503.50">bog..</text></g><g><title>boggle.exe`std::hash::random::impl$5::default (2 samples, 0.07%)</title><rect x="68.6458%" y="1477" width="0.0667%" height="15" fill="rgb(251,28,17)" fg:x="2058" fg:w="2"/><text x="68.8958%" y="1487.50"></text></g><g><title>boggle.exe`std::hash::random::RandomState::new (2 samples, 0.07%)</title><rect x="68.6458%" y="1461" width="0.0667%" height="15" fill="rgb(238,105,27)" fg:x="2058" fg:w="2"/><text x="68.8958%" y="1471.50"></text></g><g><title>boggle.exe`std::thread::local::LocalKey&lt;core::cell::Cell&lt;tuple$&lt;u64,u64&gt; &gt; &gt;::with (2 samples, 0.07%)</title><rect x="68.6458%" y="1445" width="0.0667%" height="15" fill="rgb(237,216,33)" fg:x="2058" fg:w="2"/><text x="68.8958%" y="1455.50"></text></g><g><title>boggle.exe`std::thread::local::LocalKey&lt;core::cell::Cell&lt;tuple$&lt;u64,u64&gt; &gt; &gt;::try_with (2 samples, 0.07%)</title><rect x="68.6458%" y="1429" width="0.0667%" height="15" fill="rgb(229,228,25)" fg:x="2058" fg:w="2"/><text x="68.8958%" y="1439.50"></text></g><g><title>boggle.exe`core::ops::function::FnOnce::call_once(std::hash::random::impl$0::new::KEYS::constant$0::closure_env$1, enum2$&lt;core::option::Option&lt;ref_mut$&lt;enum2$&lt;core::option::Option&lt;core::cell::Cell&lt;tuple$ (2 samples, 0.07%)</title><rect x="68.6458%" y="1413" width="0.0667%" height="15" fill="rgb(233,75,23)" fg:x="2058" fg:w="2"/><text x="68.8958%" y="1423.50"></text></g><g><title>boggle.exe`std::hash::random::impl$0::new::KEYS::constant$0::closure$1(std::hash::random::impl$0::new::KEYS::constant$0::closure_env$1*, enum2$&lt;core::option::Option&lt;ref_mut$&lt;enum2$&lt;core::option::Option&lt;core::cell::Cell&lt;tuple$ (2 samples, 0.07%)</title><rect x="68.6458%" y="1397" width="0.0667%" height="15" fill="rgb(231,207,16)" fg:x="2058" fg:w="2"/><text x="68.8958%" y="1407.50"></text></g><g><title>boggle.exe`std::hash::random::impl$0::new::KEYS::constant$0::closure$1::VAL (2 samples, 0.07%)</title><rect x="68.6458%" y="1381" width="0.0667%" height="15" fill="rgb(231,191,45)" fg:x="2058" fg:w="2"/><text x="68.8958%" y="1391.50"></text></g><g><title>`0x7FFAC12C6C9B (2 samples, 0.07%)</title><rect x="68.7125%" y="1557" width="0.0667%" height="15" fill="rgb(224,133,17)" fg:x="2060" fg:w="2"/><text x="68.9625%" y="1567.50"></text></g><g><title>`0x7FFAC12C8047 (1 samples, 0.03%)</title><rect x="68.7792%" y="1525" width="0.0334%" height="15" fill="rgb(209,178,27)" fg:x="2062" fg:w="1"/><text x="69.0292%" y="1535.50"></text></g><g><title>`0x7FFAC1371342 (17 samples, 0.57%)</title><rect x="68.8125%" y="1509" width="0.5670%" height="15" fill="rgb(218,37,11)" fg:x="2063" fg:w="17"/><text x="69.0625%" y="1519.50"></text></g><g><title>`0x7FFAC12C8A44 (26 samples, 0.87%)</title><rect x="68.8125%" y="1525" width="0.8672%" height="15" fill="rgb(251,226,25)" fg:x="2063" fg:w="26"/><text x="69.0625%" y="1535.50"></text></g><g><title>`0x7FFAC1371345 (9 samples, 0.30%)</title><rect x="69.3796%" y="1509" width="0.3002%" height="15" fill="rgb(209,222,27)" fg:x="2080" fg:w="9"/><text x="69.6296%" y="1519.50"></text></g><g><title>`0x7FFAC12C8CE9 (2 samples, 0.07%)</title><rect x="69.6798%" y="1525" width="0.0667%" height="15" fill="rgb(238,22,21)" fg:x="2089" fg:w="2"/><text x="69.9298%" y="1535.50"></text></g><g><title>`0x7FFAC12C7776 (2 samples, 0.07%)</title><rect x="69.6798%" y="1509" width="0.0667%" height="15" fill="rgb(233,161,25)" fg:x="2089" fg:w="2"/><text x="69.9298%" y="1519.50"></text></g><g><title>`0x7FFAC12C7AFE (2 samples, 0.07%)</title><rect x="69.6798%" y="1493" width="0.0667%" height="15" fill="rgb(226,122,53)" fg:x="2089" fg:w="2"/><text x="69.9298%" y="1503.50"></text></g><g><title>`0x7FFAC12AFC80 (2 samples, 0.07%)</title><rect x="69.6798%" y="1477" width="0.0667%" height="15" fill="rgb(220,123,17)" fg:x="2089" fg:w="2"/><text x="69.9298%" y="1487.50"></text></g><g><title>`0x7FFAC12C78B4 (30 samples, 1.00%)</title><rect x="68.7792%" y="1541" width="1.0007%" height="15" fill="rgb(230,224,35)" fg:x="2062" fg:w="30"/><text x="69.0292%" y="1551.50"></text></g><g><title>`0x7FFAC12C8F35 (1 samples, 0.03%)</title><rect x="69.7465%" y="1525" width="0.0334%" height="15" fill="rgb(246,83,8)" fg:x="2091" fg:w="1"/><text x="69.9965%" y="1535.50"></text></g><g><title>`0x7FFAC1400124 (1 samples, 0.03%)</title><rect x="69.7465%" y="1509" width="0.0334%" height="15" fill="rgb(230,214,17)" fg:x="2091" fg:w="1"/><text x="69.9965%" y="1519.50"></text></g><g><title>`0x7FFAC12C7776 (31 samples, 1.03%)</title><rect x="68.7792%" y="1557" width="1.0340%" height="15" fill="rgb(222,97,18)" fg:x="2062" fg:w="31"/><text x="69.0292%" y="1567.50"></text></g><g><title>`0x7FFAC12C7961 (1 samples, 0.03%)</title><rect x="69.7799%" y="1541" width="0.0334%" height="15" fill="rgb(206,79,1)" fg:x="2092" fg:w="1"/><text x="70.0299%" y="1551.50"></text></g><g><title>boggle.exe`serde::de::MapAccess::next_entry(bincode::de::impl$3::deserialize_map::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (157 samples, 5.24%)</title><rect x="64.6097%" y="1861" width="5.2368%" height="15" fill="rgb(214,121,34)" fg:x="1937" fg:w="157"/><text x="64.8597%" y="1871.50">boggle..</text></g><g><title>boggle.exe`serde::de::MapAccess::next_entry_seed(bincode::de::impl$3::deserialize_map::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, core::marker::PhantomData&lt;char&gt;, core::marker::PhantomData (157 samples, 5.24%)</title><rect x="64.6097%" y="1845" width="5.2368%" height="15" fill="rgb(249,199,46)" fg:x="1937" fg:w="157"/><text x="64.8597%" y="1855.50">boggle..</text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_map::impl$0::next_value_seed(bincode::de::impl$3::deserialize_map::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, core::marker::PhantomData (157 samples, 5.24%)</title><rect x="64.6097%" y="1829" width="5.2368%" height="15" fill="rgb(214,222,46)" fg:x="1937" fg:w="157"/><text x="64.8597%" y="1839.50">boggle..</text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;boggle::utils::dict_trie::DictTrieNode,alloc::boxed::Box&lt;enum2$ (157 samples, 5.24%)</title><rect x="64.6097%" y="1813" width="5.2368%" height="15" fill="rgb(248,168,30)" fg:x="1937" fg:w="157"/><text x="64.8597%" y="1823.50">boggle..</text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_struct&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt;,boggle::utils::dict_trie::_::impl$0::deserialize::__Visitor&gt;(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, ref$&lt;str$&gt;, ref$&lt;slice2$&lt;ref$ (153 samples, 5.10%)</title><rect x="64.7432%" y="1797" width="5.1034%" height="15" fill="rgb(226,14,28)" fg:x="1941" fg:w="153"/><text x="64.9932%" y="1807.50">boggle..</text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_tuple(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (152 samples, 5.07%)</title><rect x="64.7765%" y="1781" width="5.0700%" height="15" fill="rgb(253,123,1)" fg:x="1942" fg:w="152"/><text x="65.0265%" y="1791.50">boggle..</text></g><g><title>boggle.exe`boggle::utils::dict_trie::_::impl$0::deserialize::impl$2::visit_seq(boggle::utils::dict_trie::_::impl$0::deserialize::__Visitor, bincode::de::impl$3::deserialize_tuple::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (152 samples, 5.07%)</title><rect x="64.7765%" y="1765" width="5.0700%" height="15" fill="rgb(225,24,42)" fg:x="1942" fg:w="152"/><text x="65.0265%" y="1775.50">boggle..</text></g><g><title>boggle.exe`serde::de::SeqAccess::next_element(bincode::de::impl$3::deserialize_tuple::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (151 samples, 5.04%)</title><rect x="64.8099%" y="1749" width="5.0367%" height="15" fill="rgb(216,161,37)" fg:x="1943" fg:w="151"/><text x="65.0599%" y="1759.50">boggle..</text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_tuple::impl$0::next_element_seed(bincode::de::impl$3::deserialize_tuple::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, core::marker::PhantomData&lt;std::collections::hash::map::HashMap (151 samples, 5.04%)</title><rect x="64.8099%" y="1733" width="5.0367%" height="15" fill="rgb(251,164,26)" fg:x="1943" fg:w="151"/><text x="65.0599%" y="1743.50">boggle..</text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;std::collections::hash::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;,alloc::boxed::Box&lt;enum2$ (151 samples, 5.04%)</title><rect x="64.8099%" y="1717" width="5.0367%" height="15" fill="rgb(219,177,3)" fg:x="1943" fg:w="151"/><text x="65.0599%" y="1727.50">boggle..</text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_map&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt;,serde::de::impls::impl$202::deserialize::MapVisitor&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt; &gt;(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, serde::de::impls::impl$202::deserialize::MapVisitor (151 samples, 5.04%)</title><rect x="64.8099%" y="1701" width="5.0367%" height="15" fill="rgb(222,65,0)" fg:x="1943" fg:w="151"/><text x="65.0599%" y="1711.50">boggle..</text></g><g><title>boggle.exe`serde::de::impls::impl$202::deserialize::impl$0::visit_map(serde::de::impls::impl$202::deserialize::MapVisitor&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;, bincode::de::impl$3::deserialize_map::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (149 samples, 4.97%)</title><rect x="64.8766%" y="1685" width="4.9700%" height="15" fill="rgb(223,69,54)" fg:x="1945" fg:w="149"/><text x="65.1266%" y="1695.50">boggle..</text></g><g><title>boggle.exe`std::collections::hash::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;::with_capacity_and_hasher (34 samples, 1.13%)</title><rect x="68.7125%" y="1669" width="1.1341%" height="15" fill="rgb(235,30,27)" fg:x="2060" fg:w="34"/><text x="68.9625%" y="1679.50"></text></g><g><title>boggle.exe`hashbrown::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt;::with_capacity_and_hasher (34 samples, 1.13%)</title><rect x="68.7125%" y="1653" width="1.1341%" height="15" fill="rgb(220,183,50)" fg:x="2060" fg:w="34"/><text x="68.9625%" y="1663.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTable&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;::with_capacity_in&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt; (34 samples, 1.13%)</title><rect x="68.7125%" y="1637" width="1.1341%" height="15" fill="rgb(248,198,15)" fg:x="2060" fg:w="34"/><text x="68.9625%" y="1647.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::with_capacity (34 samples, 1.13%)</title><rect x="68.7125%" y="1621" width="1.1341%" height="15" fill="rgb(222,211,4)" fg:x="2060" fg:w="34"/><text x="68.9625%" y="1631.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::fallible_with_capacity (34 samples, 1.13%)</title><rect x="68.7125%" y="1605" width="1.1341%" height="15" fill="rgb(214,102,34)" fg:x="2060" fg:w="34"/><text x="68.9625%" y="1615.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::new_uninitialized (34 samples, 1.13%)</title><rect x="68.7125%" y="1589" width="1.1341%" height="15" fill="rgb(245,92,5)" fg:x="2060" fg:w="34"/><text x="68.9625%" y="1599.50"></text></g><g><title>boggle.exe`hashbrown::raw::alloc::inner::do_alloc (34 samples, 1.13%)</title><rect x="68.7125%" y="1573" width="1.1341%" height="15" fill="rgb(252,72,51)" fg:x="2060" fg:w="34"/><text x="68.9625%" y="1583.50"></text></g><g><title>boggle.exe`std::alloc::__default_lib_allocator::__rdl_alloc (1 samples, 0.03%)</title><rect x="69.8132%" y="1557" width="0.0334%" height="15" fill="rgb(252,208,19)" fg:x="2093" fg:w="1"/><text x="70.0632%" y="1567.50"></text></g><g><title>boggle.exe`std::sys::alloc::windows::impl$0::alloc (1 samples, 0.03%)</title><rect x="69.8132%" y="1541" width="0.0334%" height="15" fill="rgb(211,69,7)" fg:x="2093" fg:w="1"/><text x="70.0632%" y="1551.50"></text></g><g><title>boggle.exe`std::sys::alloc::windows::allocate (1 samples, 0.03%)</title><rect x="69.8132%" y="1525" width="0.0334%" height="15" fill="rgb(211,27,16)" fg:x="2093" fg:w="1"/><text x="70.0632%" y="1535.50"></text></g><g><title>boggle.exe`core::ptr::mut_ptr::impl$0::write_bytes (1 samples, 0.03%)</title><rect x="69.9133%" y="1781" width="0.0334%" height="15" fill="rgb(219,216,14)" fg:x="2096" fg:w="1"/><text x="70.1633%" y="1791.50"></text></g><g><title>boggle.exe`core::intrinsics::write_bytes (1 samples, 0.03%)</title><rect x="69.9133%" y="1765" width="0.0334%" height="15" fill="rgb(219,71,8)" fg:x="2096" fg:w="1"/><text x="70.1633%" y="1775.50"></text></g><g><title>`0x7FFAC12C77D0 (1 samples, 0.03%)</title><rect x="69.9466%" y="1733" width="0.0334%" height="15" fill="rgb(223,170,53)" fg:x="2097" fg:w="1"/><text x="70.1966%" y="1743.50"></text></g><g><title>`0x7FFAC12C7E95 (1 samples, 0.03%)</title><rect x="69.9800%" y="1717" width="0.0334%" height="15" fill="rgb(246,21,26)" fg:x="2098" fg:w="1"/><text x="70.2300%" y="1727.50"></text></g><g><title>`0x7FFAC12C803A (2 samples, 0.07%)</title><rect x="70.0133%" y="1717" width="0.0667%" height="15" fill="rgb(248,20,46)" fg:x="2099" fg:w="2"/><text x="70.2633%" y="1727.50"></text></g><g><title>`0x7FFAC12C8047 (4 samples, 0.13%)</title><rect x="70.0801%" y="1717" width="0.1334%" height="15" fill="rgb(252,94,11)" fg:x="2101" fg:w="4"/><text x="70.3301%" y="1727.50"></text></g><g><title>`0x7FFAC12C812E (1 samples, 0.03%)</title><rect x="70.2135%" y="1717" width="0.0334%" height="15" fill="rgb(236,163,8)" fg:x="2105" fg:w="1"/><text x="70.4635%" y="1727.50"></text></g><g><title>`0x7FFAC12C8160 (1 samples, 0.03%)</title><rect x="70.2468%" y="1717" width="0.0334%" height="15" fill="rgb(217,221,45)" fg:x="2106" fg:w="1"/><text x="70.4968%" y="1727.50"></text></g><g><title>`0x7FFAC12C818E (1 samples, 0.03%)</title><rect x="70.2802%" y="1717" width="0.0334%" height="15" fill="rgb(238,38,17)" fg:x="2107" fg:w="1"/><text x="70.5302%" y="1727.50"></text></g><g><title>`0x7FFAC12C85E5 (1 samples, 0.03%)</title><rect x="70.3135%" y="1717" width="0.0334%" height="15" fill="rgb(242,210,23)" fg:x="2108" fg:w="1"/><text x="70.5635%" y="1727.50"></text></g><g><title>`0x7FFAC1371342 (29 samples, 0.97%)</title><rect x="70.3469%" y="1701" width="0.9673%" height="15" fill="rgb(250,86,53)" fg:x="2109" fg:w="29"/><text x="70.5969%" y="1711.50"></text></g><g><title>`0x7FFAC12C8A44 (42 samples, 1.40%)</title><rect x="70.3469%" y="1717" width="1.4009%" height="15" fill="rgb(223,168,25)" fg:x="2109" fg:w="42"/><text x="70.5969%" y="1727.50"></text></g><g><title>`0x7FFAC1371345 (13 samples, 0.43%)</title><rect x="71.3142%" y="1701" width="0.4336%" height="15" fill="rgb(251,189,4)" fg:x="2138" fg:w="13"/><text x="71.5642%" y="1711.50"></text></g><g><title>`0x7FFAC12AFC80 (2 samples, 0.07%)</title><rect x="71.7478%" y="1669" width="0.0667%" height="15" fill="rgb(245,19,28)" fg:x="2151" fg:w="2"/><text x="71.9978%" y="1679.50"></text></g><g><title>`0x7FFAC12C78B4 (56 samples, 1.87%)</title><rect x="69.9800%" y="1733" width="1.8679%" height="15" fill="rgb(207,10,34)" fg:x="2098" fg:w="56"/><text x="70.2300%" y="1743.50">`..</text></g><g><title>`0x7FFAC12C8CE9 (3 samples, 0.10%)</title><rect x="71.7478%" y="1717" width="0.1001%" height="15" fill="rgb(235,153,31)" fg:x="2151" fg:w="3"/><text x="71.9978%" y="1727.50"></text></g><g><title>`0x7FFAC12C7776 (3 samples, 0.10%)</title><rect x="71.7478%" y="1701" width="0.1001%" height="15" fill="rgb(228,72,37)" fg:x="2151" fg:w="3"/><text x="71.9978%" y="1711.50"></text></g><g><title>`0x7FFAC12C7AFE (3 samples, 0.10%)</title><rect x="71.7478%" y="1685" width="0.1001%" height="15" fill="rgb(215,15,16)" fg:x="2151" fg:w="3"/><text x="71.9978%" y="1695.50"></text></g><g><title>`0x7FFAC12B09B0 (1 samples, 0.03%)</title><rect x="71.8145%" y="1669" width="0.0334%" height="15" fill="rgb(250,119,29)" fg:x="2153" fg:w="1"/><text x="72.0645%" y="1679.50"></text></g><g><title>`0x7FFAC12B1EDF (1 samples, 0.03%)</title><rect x="71.8145%" y="1653" width="0.0334%" height="15" fill="rgb(214,59,1)" fg:x="2153" fg:w="1"/><text x="72.0645%" y="1663.50"></text></g><g><title>`0x7FFAC12B2854 (1 samples, 0.03%)</title><rect x="71.8145%" y="1637" width="0.0334%" height="15" fill="rgb(223,109,25)" fg:x="2153" fg:w="1"/><text x="72.0645%" y="1647.50"></text></g><g><title>`0x7FFAC12B238A (1 samples, 0.03%)</title><rect x="71.8145%" y="1621" width="0.0334%" height="15" fill="rgb(230,198,22)" fg:x="2153" fg:w="1"/><text x="72.0645%" y="1631.50"></text></g><g><title>`0x7FFAC12C7994 (1 samples, 0.03%)</title><rect x="71.8479%" y="1733" width="0.0334%" height="15" fill="rgb(245,184,46)" fg:x="2154" fg:w="1"/><text x="72.0979%" y="1743.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;boggle::utils::dict_trie::DictTrieNode,alloc::boxed::Box&lt;enum2$ (245 samples, 8.17%)</title><rect x="63.7425%" y="2005" width="8.1721%" height="15" fill="rgb(253,73,16)" fg:x="1911" fg:w="245"/><text x="63.9925%" y="2015.50">boggle.exe`..</text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_struct&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt;,boggle::utils::dict_trie::_::impl$0::deserialize::__Visitor&gt;(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, ref$&lt;str$&gt;, ref$&lt;slice2$&lt;ref$ (240 samples, 8.01%)</title><rect x="63.9093%" y="1989" width="8.0053%" height="15" fill="rgb(206,94,45)" fg:x="1916" fg:w="240"/><text x="64.1593%" y="1999.50">boggle.exe`..</text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_tuple(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (238 samples, 7.94%)</title><rect x="63.9760%" y="1973" width="7.9386%" height="15" fill="rgb(236,83,27)" fg:x="1918" fg:w="238"/><text x="64.2260%" y="1983.50">boggle.exe`..</text></g><g><title>boggle.exe`boggle::utils::dict_trie::_::impl$0::deserialize::impl$2::visit_seq(boggle::utils::dict_trie::_::impl$0::deserialize::__Visitor, bincode::de::impl$3::deserialize_tuple::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (238 samples, 7.94%)</title><rect x="63.9760%" y="1957" width="7.9386%" height="15" fill="rgb(220,196,8)" fg:x="1918" fg:w="238"/><text x="64.2260%" y="1967.50">boggle.exe`..</text></g><g><title>boggle.exe`serde::de::SeqAccess::next_element(bincode::de::impl$3::deserialize_tuple::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (234 samples, 7.81%)</title><rect x="64.1094%" y="1941" width="7.8052%" height="15" fill="rgb(254,185,14)" fg:x="1922" fg:w="234"/><text x="64.3594%" y="1951.50">boggle.exe`..</text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_tuple::impl$0::next_element_seed(bincode::de::impl$3::deserialize_tuple::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, core::marker::PhantomData&lt;std::collections::hash::map::HashMap (234 samples, 7.81%)</title><rect x="64.1094%" y="1925" width="7.8052%" height="15" fill="rgb(226,50,22)" fg:x="1922" fg:w="234"/><text x="64.3594%" y="1935.50">boggle.exe`..</text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;std::collections::hash::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;,alloc::boxed::Box&lt;enum2$ (234 samples, 7.81%)</title><rect x="64.1094%" y="1909" width="7.8052%" height="15" fill="rgb(253,147,0)" fg:x="1922" fg:w="234"/><text x="64.3594%" y="1919.50">boggle.exe`..</text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_map&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt;,serde::de::impls::impl$202::deserialize::MapVisitor&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt; &gt;(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, serde::de::impls::impl$202::deserialize::MapVisitor (234 samples, 7.81%)</title><rect x="64.1094%" y="1893" width="7.8052%" height="15" fill="rgb(252,46,33)" fg:x="1922" fg:w="234"/><text x="64.3594%" y="1903.50">boggle.exe`..</text></g><g><title>boggle.exe`serde::de::impls::impl$202::deserialize::impl$0::visit_map(serde::de::impls::impl$202::deserialize::MapVisitor&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;, bincode::de::impl$3::deserialize_map::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (233 samples, 7.77%)</title><rect x="64.1428%" y="1877" width="7.7718%" height="15" fill="rgb(242,22,54)" fg:x="1923" fg:w="233"/><text x="64.3928%" y="1887.50">boggle.exe`..</text></g><g><title>boggle.exe`std::collections::hash::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;::with_capacity_and_hasher (62 samples, 2.07%)</title><rect x="69.8466%" y="1861" width="2.0680%" height="15" fill="rgb(223,178,32)" fg:x="2094" fg:w="62"/><text x="70.0966%" y="1871.50">b..</text></g><g><title>boggle.exe`hashbrown::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt;::with_capacity_and_hasher (62 samples, 2.07%)</title><rect x="69.8466%" y="1845" width="2.0680%" height="15" fill="rgb(214,106,53)" fg:x="2094" fg:w="62"/><text x="70.0966%" y="1855.50">b..</text></g><g><title>boggle.exe`hashbrown::raw::RawTable&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;::with_capacity_in&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt; (62 samples, 2.07%)</title><rect x="69.8466%" y="1829" width="2.0680%" height="15" fill="rgb(232,65,50)" fg:x="2094" fg:w="62"/><text x="70.0966%" y="1839.50">b..</text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::with_capacity (60 samples, 2.00%)</title><rect x="69.9133%" y="1813" width="2.0013%" height="15" fill="rgb(231,110,28)" fg:x="2096" fg:w="60"/><text x="70.1633%" y="1823.50">b..</text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::fallible_with_capacity (60 samples, 2.00%)</title><rect x="69.9133%" y="1797" width="2.0013%" height="15" fill="rgb(216,71,40)" fg:x="2096" fg:w="60"/><text x="70.1633%" y="1807.50">b..</text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::new_uninitialized (59 samples, 1.97%)</title><rect x="69.9466%" y="1781" width="1.9680%" height="15" fill="rgb(229,89,53)" fg:x="2097" fg:w="59"/><text x="70.1966%" y="1791.50">b..</text></g><g><title>boggle.exe`hashbrown::raw::alloc::inner::do_alloc (59 samples, 1.97%)</title><rect x="69.9466%" y="1765" width="1.9680%" height="15" fill="rgb(210,124,14)" fg:x="2097" fg:w="59"/><text x="70.1966%" y="1775.50">b..</text></g><g><title>`0x7FFAC12C7776 (59 samples, 1.97%)</title><rect x="69.9466%" y="1749" width="1.9680%" height="15" fill="rgb(236,213,6)" fg:x="2097" fg:w="59"/><text x="70.1966%" y="1759.50">`..</text></g><g><title>`0x7FFAC12C79A5 (1 samples, 0.03%)</title><rect x="71.8813%" y="1733" width="0.0334%" height="15" fill="rgb(228,41,5)" fg:x="2155" fg:w="1"/><text x="72.1313%" y="1743.50"></text></g><g><title>boggle.exe`serde::de::MapAccess::next_entry(bincode::de::impl$3::deserialize_map::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (247 samples, 8.24%)</title><rect x="63.7091%" y="2053" width="8.2388%" height="15" fill="rgb(221,167,25)" fg:x="1910" fg:w="247"/><text x="63.9591%" y="2063.50">boggle.exe`..</text></g><g><title>boggle.exe`serde::de::MapAccess::next_entry_seed(bincode::de::impl$3::deserialize_map::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, core::marker::PhantomData&lt;char&gt;, core::marker::PhantomData (247 samples, 8.24%)</title><rect x="63.7091%" y="2037" width="8.2388%" height="15" fill="rgb(228,144,37)" fg:x="1910" fg:w="247"/><text x="63.9591%" y="2047.50">boggle.exe`..</text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_map::impl$0::next_value_seed(bincode::de::impl$3::deserialize_map::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, core::marker::PhantomData (246 samples, 8.21%)</title><rect x="63.7425%" y="2021" width="8.2055%" height="15" fill="rgb(227,189,38)" fg:x="1911" fg:w="246"/><text x="63.9925%" y="2031.50">boggle.exe`..</text></g><g><title>boggle.exe`serde::de::impl$5::deserialize(core::marker::PhantomData&lt;boggle::utils::dict_trie::DictTrieNode&gt;, bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (1 samples, 0.03%)</title><rect x="71.9146%" y="2005" width="0.0334%" height="15" fill="rgb(218,8,2)" fg:x="2156" fg:w="1"/><text x="72.1646%" y="2015.50"></text></g><g><title>boggle.exe`boggle::utils::dict_trie::_::impl$0::deserialize(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (1 samples, 0.03%)</title><rect x="71.9146%" y="1989" width="0.0334%" height="15" fill="rgb(209,61,28)" fg:x="2156" fg:w="1"/><text x="72.1646%" y="1999.50"></text></g><g><title>boggle.exe`core::ptr::mut_ptr::impl$0::write_bytes (1 samples, 0.03%)</title><rect x="71.9480%" y="1973" width="0.0334%" height="15" fill="rgb(233,140,39)" fg:x="2157" fg:w="1"/><text x="72.1980%" y="1983.50"></text></g><g><title>boggle.exe`core::intrinsics::write_bytes (1 samples, 0.03%)</title><rect x="71.9480%" y="1957" width="0.0334%" height="15" fill="rgb(251,66,48)" fg:x="2157" fg:w="1"/><text x="72.1980%" y="1967.50"></text></g><g><title>boggle.exe`memset (1 samples, 0.03%)</title><rect x="71.9480%" y="1941" width="0.0334%" height="15" fill="rgb(210,44,45)" fg:x="2157" fg:w="1"/><text x="72.1980%" y="1951.50"></text></g><g><title>`0x7FFAC12C77E7 (1 samples, 0.03%)</title><rect x="71.9813%" y="1925" width="0.0334%" height="15" fill="rgb(214,136,46)" fg:x="2158" fg:w="1"/><text x="72.2313%" y="1935.50"></text></g><g><title>`0x7FFAC12C7F69 (1 samples, 0.03%)</title><rect x="72.0147%" y="1909" width="0.0334%" height="15" fill="rgb(207,130,50)" fg:x="2159" fg:w="1"/><text x="72.2647%" y="1919.50"></text></g><g><title>`0x7FFAC12C7FF3 (1 samples, 0.03%)</title><rect x="72.0480%" y="1909" width="0.0334%" height="15" fill="rgb(228,102,49)" fg:x="2160" fg:w="1"/><text x="72.2980%" y="1919.50"></text></g><g><title>`0x7FFAC12C8007 (1 samples, 0.03%)</title><rect x="72.0814%" y="1909" width="0.0334%" height="15" fill="rgb(253,55,1)" fg:x="2161" fg:w="1"/><text x="72.3314%" y="1919.50"></text></g><g><title>`0x7FFAC12C8047 (4 samples, 0.13%)</title><rect x="72.1147%" y="1909" width="0.1334%" height="15" fill="rgb(238,222,9)" fg:x="2162" fg:w="4"/><text x="72.3647%" y="1919.50"></text></g><g><title>`0x7FFAC12C85E5 (1 samples, 0.03%)</title><rect x="72.2482%" y="1909" width="0.0334%" height="15" fill="rgb(246,99,6)" fg:x="2166" fg:w="1"/><text x="72.4982%" y="1919.50"></text></g><g><title>`0x7FFAC1371342 (24 samples, 0.80%)</title><rect x="72.2815%" y="1893" width="0.8005%" height="15" fill="rgb(219,110,26)" fg:x="2167" fg:w="24"/><text x="72.5315%" y="1903.50"></text></g><g><title>`0x7FFAC12C8A44 (42 samples, 1.40%)</title><rect x="72.2815%" y="1909" width="1.4009%" height="15" fill="rgb(239,160,33)" fg:x="2167" fg:w="42"/><text x="72.5315%" y="1919.50"></text></g><g><title>`0x7FFAC1371345 (18 samples, 0.60%)</title><rect x="73.0821%" y="1893" width="0.6004%" height="15" fill="rgb(220,202,23)" fg:x="2191" fg:w="18"/><text x="73.3321%" y="1903.50"></text></g><g><title>`0x7FFAC12AFC80 (2 samples, 0.07%)</title><rect x="73.6825%" y="1861" width="0.0667%" height="15" fill="rgb(208,80,26)" fg:x="2209" fg:w="2"/><text x="73.9325%" y="1871.50"></text></g><g><title>`0x7FFAC12B2773 (2 samples, 0.07%)</title><rect x="73.7492%" y="1829" width="0.0667%" height="15" fill="rgb(243,85,7)" fg:x="2211" fg:w="2"/><text x="73.9992%" y="1839.50"></text></g><g><title>`0x7FFAC13FFA24 (2 samples, 0.07%)</title><rect x="73.7492%" y="1813" width="0.0667%" height="15" fill="rgb(228,77,47)" fg:x="2211" fg:w="2"/><text x="73.9992%" y="1823.50"></text></g><g><title>`0x7FFAC12C8CE9 (5 samples, 0.17%)</title><rect x="73.6825%" y="1909" width="0.1668%" height="15" fill="rgb(212,226,8)" fg:x="2209" fg:w="5"/><text x="73.9325%" y="1919.50"></text></g><g><title>`0x7FFAC12C7776 (5 samples, 0.17%)</title><rect x="73.6825%" y="1893" width="0.1668%" height="15" fill="rgb(241,120,54)" fg:x="2209" fg:w="5"/><text x="73.9325%" y="1903.50"></text></g><g><title>`0x7FFAC12C7AFE (5 samples, 0.17%)</title><rect x="73.6825%" y="1877" width="0.1668%" height="15" fill="rgb(226,80,16)" fg:x="2209" fg:w="5"/><text x="73.9325%" y="1887.50"></text></g><g><title>`0x7FFAC12B09B0 (3 samples, 0.10%)</title><rect x="73.7492%" y="1861" width="0.1001%" height="15" fill="rgb(240,76,13)" fg:x="2211" fg:w="3"/><text x="73.9992%" y="1871.50"></text></g><g><title>`0x7FFAC12B1EDF (3 samples, 0.10%)</title><rect x="73.7492%" y="1845" width="0.1001%" height="15" fill="rgb(252,74,8)" fg:x="2211" fg:w="3"/><text x="73.9992%" y="1855.50"></text></g><g><title>`0x7FFAC12B2854 (1 samples, 0.03%)</title><rect x="73.8159%" y="1829" width="0.0334%" height="15" fill="rgb(244,155,2)" fg:x="2213" fg:w="1"/><text x="74.0659%" y="1839.50"></text></g><g><title>`0x7FFAC12B238A (1 samples, 0.03%)</title><rect x="73.8159%" y="1813" width="0.0334%" height="15" fill="rgb(215,81,35)" fg:x="2213" fg:w="1"/><text x="74.0659%" y="1823.50"></text></g><g><title>`0x7FFAC12C78B4 (56 samples, 1.87%)</title><rect x="72.0147%" y="1925" width="1.8679%" height="15" fill="rgb(206,55,2)" fg:x="2159" fg:w="56"/><text x="72.2647%" y="1935.50">`..</text></g><g><title>`0x7FFAC12C8EF7 (1 samples, 0.03%)</title><rect x="73.8492%" y="1909" width="0.0334%" height="15" fill="rgb(231,2,34)" fg:x="2214" fg:w="1"/><text x="74.0992%" y="1919.50"></text></g><g><title>`0x7FFAC12D5376 (1 samples, 0.03%)</title><rect x="73.8492%" y="1893" width="0.0334%" height="15" fill="rgb(242,176,48)" fg:x="2214" fg:w="1"/><text x="74.0992%" y="1903.50"></text></g><g><title>`0x7FFAC12D53EF (1 samples, 0.03%)</title><rect x="73.8492%" y="1877" width="0.0334%" height="15" fill="rgb(249,31,36)" fg:x="2214" fg:w="1"/><text x="74.0992%" y="1887.50"></text></g><g><title>boggle.exe`serde::de::MapAccess::next_entry(bincode::de::impl$3::deserialize_map::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (343 samples, 11.44%)</title><rect x="62.4750%" y="2245" width="11.4410%" height="15" fill="rgb(205,18,17)" fg:x="1873" fg:w="343"/><text x="62.7250%" y="2255.50">boggle.exe`serde:..</text></g><g><title>boggle.exe`serde::de::MapAccess::next_entry_seed(bincode::de::impl$3::deserialize_map::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, core::marker::PhantomData&lt;char&gt;, core::marker::PhantomData (343 samples, 11.44%)</title><rect x="62.4750%" y="2229" width="11.4410%" height="15" fill="rgb(254,130,5)" fg:x="1873" fg:w="343"/><text x="62.7250%" y="2239.50">boggle.exe`serde:..</text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_map::impl$0::next_value_seed(bincode::de::impl$3::deserialize_map::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, core::marker::PhantomData (340 samples, 11.34%)</title><rect x="62.5751%" y="2213" width="11.3409%" height="15" fill="rgb(229,42,45)" fg:x="1876" fg:w="340"/><text x="62.8251%" y="2223.50">boggle.exe`bincod..</text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;boggle::utils::dict_trie::DictTrieNode,alloc::boxed::Box&lt;enum2$ (340 samples, 11.34%)</title><rect x="62.5751%" y="2197" width="11.3409%" height="15" fill="rgb(245,95,25)" fg:x="1876" fg:w="340"/><text x="62.8251%" y="2207.50">boggle.exe`core::..</text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_struct&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt;,boggle::utils::dict_trie::_::impl$0::deserialize::__Visitor&gt;(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, ref$&lt;str$&gt;, ref$&lt;slice2$&lt;ref$ (335 samples, 11.17%)</title><rect x="62.7418%" y="2181" width="11.1741%" height="15" fill="rgb(249,193,38)" fg:x="1881" fg:w="335"/><text x="62.9918%" y="2191.50">boggle.exe`binco..</text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_tuple(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (332 samples, 11.07%)</title><rect x="62.8419%" y="2165" width="11.0740%" height="15" fill="rgb(241,140,43)" fg:x="1884" fg:w="332"/><text x="63.0919%" y="2175.50">boggle.exe`binco..</text></g><g><title>boggle.exe`boggle::utils::dict_trie::_::impl$0::deserialize::impl$2::visit_seq(boggle::utils::dict_trie::_::impl$0::deserialize::__Visitor, bincode::de::impl$3::deserialize_tuple::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (332 samples, 11.07%)</title><rect x="62.8419%" y="2149" width="11.0740%" height="15" fill="rgb(245,78,48)" fg:x="1884" fg:w="332"/><text x="63.0919%" y="2159.50">boggle.exe`boggl..</text></g><g><title>boggle.exe`serde::de::SeqAccess::next_element(bincode::de::impl$3::deserialize_tuple::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (326 samples, 10.87%)</title><rect x="63.0420%" y="2133" width="10.8739%" height="15" fill="rgb(214,92,39)" fg:x="1890" fg:w="326"/><text x="63.2920%" y="2143.50">boggle.exe`serde..</text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_tuple::impl$0::next_element_seed(bincode::de::impl$3::deserialize_tuple::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, core::marker::PhantomData&lt;std::collections::hash::map::HashMap (326 samples, 10.87%)</title><rect x="63.0420%" y="2117" width="10.8739%" height="15" fill="rgb(211,189,14)" fg:x="1890" fg:w="326"/><text x="63.2920%" y="2127.50">boggle.exe`binco..</text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;std::collections::hash::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;,alloc::boxed::Box&lt;enum2$ (326 samples, 10.87%)</title><rect x="63.0420%" y="2101" width="10.8739%" height="15" fill="rgb(218,7,24)" fg:x="1890" fg:w="326"/><text x="63.2920%" y="2111.50">boggle.exe`core:..</text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_map&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt;,serde::de::impls::impl$202::deserialize::MapVisitor&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt; &gt;(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, serde::de::impls::impl$202::deserialize::MapVisitor (325 samples, 10.84%)</title><rect x="63.0754%" y="2085" width="10.8406%" height="15" fill="rgb(224,200,49)" fg:x="1891" fg:w="325"/><text x="63.3254%" y="2095.50">boggle.exe`binco..</text></g><g><title>boggle.exe`serde::de::impls::impl$202::deserialize::impl$0::visit_map(serde::de::impls::impl$202::deserialize::MapVisitor&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;, bincode::de::impl$3::deserialize_map::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (323 samples, 10.77%)</title><rect x="63.1421%" y="2069" width="10.7738%" height="15" fill="rgb(218,210,14)" fg:x="1893" fg:w="323"/><text x="63.3921%" y="2079.50">boggle.exe`serde..</text></g><g><title>boggle.exe`std::collections::hash::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;::with_capacity_and_hasher (59 samples, 1.97%)</title><rect x="71.9480%" y="2053" width="1.9680%" height="15" fill="rgb(234,142,31)" fg:x="2157" fg:w="59"/><text x="72.1980%" y="2063.50">b..</text></g><g><title>boggle.exe`hashbrown::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt;::with_capacity_and_hasher (59 samples, 1.97%)</title><rect x="71.9480%" y="2037" width="1.9680%" height="15" fill="rgb(227,165,2)" fg:x="2157" fg:w="59"/><text x="72.1980%" y="2047.50">b..</text></g><g><title>boggle.exe`hashbrown::raw::RawTable&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;::with_capacity_in&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt; (59 samples, 1.97%)</title><rect x="71.9480%" y="2021" width="1.9680%" height="15" fill="rgb(232,44,46)" fg:x="2157" fg:w="59"/><text x="72.1980%" y="2031.50">b..</text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::with_capacity (59 samples, 1.97%)</title><rect x="71.9480%" y="2005" width="1.9680%" height="15" fill="rgb(236,149,47)" fg:x="2157" fg:w="59"/><text x="72.1980%" y="2015.50">b..</text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::fallible_with_capacity (59 samples, 1.97%)</title><rect x="71.9480%" y="1989" width="1.9680%" height="15" fill="rgb(227,45,31)" fg:x="2157" fg:w="59"/><text x="72.1980%" y="1999.50">b..</text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::new_uninitialized (58 samples, 1.93%)</title><rect x="71.9813%" y="1973" width="1.9346%" height="15" fill="rgb(240,176,51)" fg:x="2158" fg:w="58"/><text x="72.2313%" y="1983.50">b..</text></g><g><title>boggle.exe`hashbrown::raw::alloc::inner::do_alloc (58 samples, 1.93%)</title><rect x="71.9813%" y="1957" width="1.9346%" height="15" fill="rgb(249,146,41)" fg:x="2158" fg:w="58"/><text x="72.2313%" y="1967.50">b..</text></g><g><title>`0x7FFAC12C7776 (58 samples, 1.93%)</title><rect x="71.9813%" y="1941" width="1.9346%" height="15" fill="rgb(213,208,4)" fg:x="2158" fg:w="58"/><text x="72.2313%" y="1951.50">`..</text></g><g><title>`0x7FFAC12C79A5 (1 samples, 0.03%)</title><rect x="73.8826%" y="1925" width="0.0334%" height="15" fill="rgb(245,84,36)" fg:x="2215" fg:w="1"/><text x="74.1326%" y="1935.50"></text></g><g><title>boggle.exe`std::collections::hash::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;::insert (1 samples, 0.03%)</title><rect x="73.9159%" y="2245" width="0.0334%" height="15" fill="rgb(254,84,18)" fg:x="2216" fg:w="1"/><text x="74.1659%" y="2255.50"></text></g><g><title>boggle.exe`core::ptr::mut_ptr::impl$0::write_bytes (1 samples, 0.03%)</title><rect x="73.9493%" y="2165" width="0.0334%" height="15" fill="rgb(225,38,54)" fg:x="2217" fg:w="1"/><text x="74.1993%" y="2175.50"></text></g><g><title>boggle.exe`core::intrinsics::write_bytes (1 samples, 0.03%)</title><rect x="73.9493%" y="2149" width="0.0334%" height="15" fill="rgb(246,50,30)" fg:x="2217" fg:w="1"/><text x="74.1993%" y="2159.50"></text></g><g><title>boggle.exe`memset (1 samples, 0.03%)</title><rect x="73.9493%" y="2133" width="0.0334%" height="15" fill="rgb(246,148,9)" fg:x="2217" fg:w="1"/><text x="74.1993%" y="2143.50"></text></g><g><title>`0x7FFAC12C6CB2 (1 samples, 0.03%)</title><rect x="73.9827%" y="2133" width="0.0334%" height="15" fill="rgb(223,75,4)" fg:x="2218" fg:w="1"/><text x="74.2327%" y="2143.50"></text></g><g><title>`0x7FFAC12C77E7 (1 samples, 0.03%)</title><rect x="74.0160%" y="2117" width="0.0334%" height="15" fill="rgb(239,148,41)" fg:x="2219" fg:w="1"/><text x="74.2660%" y="2127.50"></text></g><g><title>`0x7FFAC12C780A (1 samples, 0.03%)</title><rect x="74.0494%" y="2117" width="0.0334%" height="15" fill="rgb(205,195,3)" fg:x="2220" fg:w="1"/><text x="74.2994%" y="2127.50"></text></g><g><title>`0x7FFAC12C7EDC (1 samples, 0.03%)</title><rect x="74.0827%" y="2101" width="0.0334%" height="15" fill="rgb(254,161,1)" fg:x="2221" fg:w="1"/><text x="74.3327%" y="2111.50"></text></g><g><title>`0x7FFAC12C8047 (2 samples, 0.07%)</title><rect x="74.1161%" y="2101" width="0.0667%" height="15" fill="rgb(211,229,8)" fg:x="2222" fg:w="2"/><text x="74.3661%" y="2111.50"></text></g><g><title>`0x7FFAC12C814B (1 samples, 0.03%)</title><rect x="74.1828%" y="2101" width="0.0334%" height="15" fill="rgb(220,97,9)" fg:x="2224" fg:w="1"/><text x="74.4328%" y="2111.50"></text></g><g><title>`0x7FFAC12C818E (1 samples, 0.03%)</title><rect x="74.2161%" y="2101" width="0.0334%" height="15" fill="rgb(240,218,8)" fg:x="2225" fg:w="1"/><text x="74.4661%" y="2111.50"></text></g><g><title>`0x7FFAC137133D (1 samples, 0.03%)</title><rect x="74.2495%" y="2085" width="0.0334%" height="15" fill="rgb(250,44,0)" fg:x="2226" fg:w="1"/><text x="74.4995%" y="2095.50"></text></g><g><title>`0x7FFAC1371342 (25 samples, 0.83%)</title><rect x="74.2829%" y="2085" width="0.8339%" height="15" fill="rgb(236,41,53)" fg:x="2227" fg:w="25"/><text x="74.5329%" y="2095.50"></text></g><g><title>`0x7FFAC1371345 (10 samples, 0.33%)</title><rect x="75.1167%" y="2085" width="0.3336%" height="15" fill="rgb(218,227,13)" fg:x="2252" fg:w="10"/><text x="75.3667%" y="2095.50"></text></g><g><title>`0x7FFAC12C8A44 (37 samples, 1.23%)</title><rect x="74.2495%" y="2101" width="1.2342%" height="15" fill="rgb(217,94,32)" fg:x="2226" fg:w="37"/><text x="74.4995%" y="2111.50"></text></g><g><title>`0x7FFAC1371360 (1 samples, 0.03%)</title><rect x="75.4503%" y="2085" width="0.0334%" height="15" fill="rgb(213,217,12)" fg:x="2262" fg:w="1"/><text x="75.7003%" y="2095.50"></text></g><g><title>`0x7FFAC12C8CE9 (1 samples, 0.03%)</title><rect x="75.4837%" y="2101" width="0.0334%" height="15" fill="rgb(229,13,46)" fg:x="2263" fg:w="1"/><text x="75.7337%" y="2111.50"></text></g><g><title>`0x7FFAC12C7776 (1 samples, 0.03%)</title><rect x="75.4837%" y="2085" width="0.0334%" height="15" fill="rgb(243,139,5)" fg:x="2263" fg:w="1"/><text x="75.7337%" y="2095.50"></text></g><g><title>`0x7FFAC12C7AFE (1 samples, 0.03%)</title><rect x="75.4837%" y="2069" width="0.0334%" height="15" fill="rgb(249,38,45)" fg:x="2263" fg:w="1"/><text x="75.7337%" y="2079.50"></text></g><g><title>`0x7FFAC12B09B0 (1 samples, 0.03%)</title><rect x="75.4837%" y="2053" width="0.0334%" height="15" fill="rgb(216,70,11)" fg:x="2263" fg:w="1"/><text x="75.7337%" y="2063.50"></text></g><g><title>`0x7FFAC12B1EDF (1 samples, 0.03%)</title><rect x="75.4837%" y="2037" width="0.0334%" height="15" fill="rgb(253,101,25)" fg:x="2263" fg:w="1"/><text x="75.7337%" y="2047.50"></text></g><g><title>`0x7FFAC12B2854 (1 samples, 0.03%)</title><rect x="75.4837%" y="2021" width="0.0334%" height="15" fill="rgb(207,197,30)" fg:x="2263" fg:w="1"/><text x="75.7337%" y="2031.50"></text></g><g><title>`0x7FFAC12B238A (1 samples, 0.03%)</title><rect x="75.4837%" y="2005" width="0.0334%" height="15" fill="rgb(238,87,13)" fg:x="2263" fg:w="1"/><text x="75.7337%" y="2015.50"></text></g><g><title>`0x7FFAC12C78B4 (44 samples, 1.47%)</title><rect x="74.0827%" y="2117" width="1.4676%" height="15" fill="rgb(215,155,8)" fg:x="2221" fg:w="44"/><text x="74.3327%" y="2127.50"></text></g><g><title>`0x7FFAC12C8E6D (1 samples, 0.03%)</title><rect x="75.5170%" y="2101" width="0.0334%" height="15" fill="rgb(239,166,38)" fg:x="2264" fg:w="1"/><text x="75.7670%" y="2111.50"></text></g><g><title>`0x7FFAC1390A01 (1 samples, 0.03%)</title><rect x="75.5170%" y="2085" width="0.0334%" height="15" fill="rgb(240,194,35)" fg:x="2264" fg:w="1"/><text x="75.7670%" y="2095.50"></text></g><g><title>`0x7FFAC1300F2D (1 samples, 0.03%)</title><rect x="75.5170%" y="2069" width="0.0334%" height="15" fill="rgb(219,10,44)" fg:x="2264" fg:w="1"/><text x="75.7670%" y="2079.50"></text></g><g><title>`0x7FFAC12C7776 (47 samples, 1.57%)</title><rect x="74.0160%" y="2133" width="1.5677%" height="15" fill="rgb(251,220,35)" fg:x="2219" fg:w="47"/><text x="74.2660%" y="2143.50"></text></g><g><title>`0x7FFAC12C78B7 (1 samples, 0.03%)</title><rect x="75.5504%" y="2117" width="0.0334%" height="15" fill="rgb(218,117,13)" fg:x="2265" fg:w="1"/><text x="75.8004%" y="2127.50"></text></g><g><title>boggle.exe`hashbrown::raw::alloc::inner::do_alloc (49 samples, 1.63%)</title><rect x="73.9827%" y="2149" width="1.6344%" height="15" fill="rgb(221,213,40)" fg:x="2218" fg:w="49"/><text x="74.2327%" y="2159.50"></text></g><g><title>boggle.exe`std::alloc::__default_lib_allocator::__rdl_alloc (1 samples, 0.03%)</title><rect x="75.5837%" y="2133" width="0.0334%" height="15" fill="rgb(251,224,35)" fg:x="2266" fg:w="1"/><text x="75.8337%" y="2143.50"></text></g><g><title>boggle.exe`std::sys::alloc::windows::impl$0::alloc (1 samples, 0.03%)</title><rect x="75.5837%" y="2117" width="0.0334%" height="15" fill="rgb(241,33,39)" fg:x="2266" fg:w="1"/><text x="75.8337%" y="2127.50"></text></g><g><title>boggle.exe`std::sys::alloc::windows::allocate (1 samples, 0.03%)</title><rect x="75.5837%" y="2101" width="0.0334%" height="15" fill="rgb(222,74,17)" fg:x="2266" fg:w="1"/><text x="75.8337%" y="2111.50"></text></g><g><title>boggle.exe`serde::de::MapAccess::next_entry(bincode::de::impl$3::deserialize_map::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (431 samples, 14.38%)</title><rect x="61.2742%" y="2437" width="14.3763%" height="15" fill="rgb(225,103,0)" fg:x="1837" fg:w="431"/><text x="61.5242%" y="2447.50">boggle.exe`serde::de::..</text></g><g><title>boggle.exe`serde::de::MapAccess::next_entry_seed(bincode::de::impl$3::deserialize_map::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, core::marker::PhantomData&lt;char&gt;, core::marker::PhantomData (431 samples, 14.38%)</title><rect x="61.2742%" y="2421" width="14.3763%" height="15" fill="rgb(240,0,12)" fg:x="1837" fg:w="431"/><text x="61.5242%" y="2431.50">boggle.exe`serde::de::..</text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_map::impl$0::next_value_seed(bincode::de::impl$3::deserialize_map::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, core::marker::PhantomData (430 samples, 14.34%)</title><rect x="61.3075%" y="2405" width="14.3429%" height="15" fill="rgb(233,213,37)" fg:x="1838" fg:w="430"/><text x="61.5575%" y="2415.50">boggle.exe`bincode::de..</text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;boggle::utils::dict_trie::DictTrieNode,alloc::boxed::Box&lt;enum2$ (430 samples, 14.34%)</title><rect x="61.3075%" y="2389" width="14.3429%" height="15" fill="rgb(225,84,52)" fg:x="1838" fg:w="430"/><text x="61.5575%" y="2399.50">boggle.exe`core::resul..</text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_struct&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt;,boggle::utils::dict_trie::_::impl$0::deserialize::__Visitor&gt;(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, ref$&lt;str$&gt;, ref$&lt;slice2$&lt;ref$ (428 samples, 14.28%)</title><rect x="61.3742%" y="2373" width="14.2762%" height="15" fill="rgb(247,160,51)" fg:x="1840" fg:w="428"/><text x="61.6242%" y="2383.50">boggle.exe`bincode::de..</text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_tuple(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (427 samples, 14.24%)</title><rect x="61.4076%" y="2357" width="14.2428%" height="15" fill="rgb(244,60,51)" fg:x="1841" fg:w="427"/><text x="61.6576%" y="2367.50">boggle.exe`bincode::de..</text></g><g><title>boggle.exe`boggle::utils::dict_trie::_::impl$0::deserialize::impl$2::visit_seq(boggle::utils::dict_trie::_::impl$0::deserialize::__Visitor, bincode::de::impl$3::deserialize_tuple::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (427 samples, 14.24%)</title><rect x="61.4076%" y="2341" width="14.2428%" height="15" fill="rgb(233,114,7)" fg:x="1841" fg:w="427"/><text x="61.6576%" y="2351.50">boggle.exe`boggle::uti..</text></g><g><title>boggle.exe`serde::de::SeqAccess::next_element(bincode::de::impl$3::deserialize_tuple::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (423 samples, 14.11%)</title><rect x="61.5410%" y="2325" width="14.1094%" height="15" fill="rgb(246,136,16)" fg:x="1845" fg:w="423"/><text x="61.7910%" y="2335.50">boggle.exe`serde::de:..</text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_tuple::impl$0::next_element_seed(bincode::de::impl$3::deserialize_tuple::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, core::marker::PhantomData&lt;std::collections::hash::map::HashMap (423 samples, 14.11%)</title><rect x="61.5410%" y="2309" width="14.1094%" height="15" fill="rgb(243,114,45)" fg:x="1845" fg:w="423"/><text x="61.7910%" y="2319.50">boggle.exe`bincode::d..</text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;std::collections::hash::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;,alloc::boxed::Box&lt;enum2$ (423 samples, 14.11%)</title><rect x="61.5410%" y="2293" width="14.1094%" height="15" fill="rgb(247,183,43)" fg:x="1845" fg:w="423"/><text x="61.7910%" y="2303.50">boggle.exe`core::resu..</text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_map&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt;,serde::de::impls::impl$202::deserialize::MapVisitor&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt; &gt;(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, serde::de::impls::impl$202::deserialize::MapVisitor (423 samples, 14.11%)</title><rect x="61.5410%" y="2277" width="14.1094%" height="15" fill="rgb(251,210,42)" fg:x="1845" fg:w="423"/><text x="61.7910%" y="2287.50">boggle.exe`bincode::d..</text></g><g><title>boggle.exe`serde::de::impls::impl$202::deserialize::impl$0::visit_map(serde::de::impls::impl$202::deserialize::MapVisitor&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;, bincode::de::impl$3::deserialize_map::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (421 samples, 14.04%)</title><rect x="61.6077%" y="2261" width="14.0427%" height="15" fill="rgb(221,88,35)" fg:x="1847" fg:w="421"/><text x="61.8577%" y="2271.50">boggle.exe`serde::de:..</text></g><g><title>boggle.exe`std::collections::hash::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;::with_capacity_and_hasher (51 samples, 1.70%)</title><rect x="73.9493%" y="2245" width="1.7011%" height="15" fill="rgb(242,21,20)" fg:x="2217" fg:w="51"/><text x="74.1993%" y="2255.50"></text></g><g><title>boggle.exe`hashbrown::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt;::with_capacity_and_hasher (51 samples, 1.70%)</title><rect x="73.9493%" y="2229" width="1.7011%" height="15" fill="rgb(233,226,36)" fg:x="2217" fg:w="51"/><text x="74.1993%" y="2239.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTable&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;::with_capacity_in&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt; (51 samples, 1.70%)</title><rect x="73.9493%" y="2213" width="1.7011%" height="15" fill="rgb(243,189,34)" fg:x="2217" fg:w="51"/><text x="74.1993%" y="2223.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::with_capacity (51 samples, 1.70%)</title><rect x="73.9493%" y="2197" width="1.7011%" height="15" fill="rgb(207,145,50)" fg:x="2217" fg:w="51"/><text x="74.1993%" y="2207.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::fallible_with_capacity (51 samples, 1.70%)</title><rect x="73.9493%" y="2181" width="1.7011%" height="15" fill="rgb(242,1,50)" fg:x="2217" fg:w="51"/><text x="74.1993%" y="2191.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::new_uninitialized (50 samples, 1.67%)</title><rect x="73.9827%" y="2165" width="1.6678%" height="15" fill="rgb(231,65,32)" fg:x="2218" fg:w="50"/><text x="74.2327%" y="2175.50"></text></g><g><title>boggle.exe`hashbrown::raw::bucket_mask_to_capacity (1 samples, 0.03%)</title><rect x="75.6171%" y="2149" width="0.0334%" height="15" fill="rgb(208,68,49)" fg:x="2267" fg:w="1"/><text x="75.8671%" y="2159.50"></text></g><g><title>boggle.exe`core::ptr::mut_ptr::impl$0::write_bytes (1 samples, 0.03%)</title><rect x="75.7505%" y="2357" width="0.0334%" height="15" fill="rgb(253,54,49)" fg:x="2271" fg:w="1"/><text x="76.0005%" y="2367.50"></text></g><g><title>boggle.exe`core::intrinsics::write_bytes (1 samples, 0.03%)</title><rect x="75.7505%" y="2341" width="0.0334%" height="15" fill="rgb(245,186,24)" fg:x="2271" fg:w="1"/><text x="76.0005%" y="2351.50"></text></g><g><title>boggle.exe`memset (1 samples, 0.03%)</title><rect x="75.7505%" y="2325" width="0.0334%" height="15" fill="rgb(209,2,41)" fg:x="2271" fg:w="1"/><text x="76.0005%" y="2335.50"></text></g><g><title>`0x7FFAC12C6C9B (1 samples, 0.03%)</title><rect x="75.7839%" y="2325" width="0.0334%" height="15" fill="rgb(242,208,54)" fg:x="2272" fg:w="1"/><text x="76.0339%" y="2335.50"></text></g><g><title>`0x7FFAC12C785E (1 samples, 0.03%)</title><rect x="75.8172%" y="2309" width="0.0334%" height="15" fill="rgb(225,9,51)" fg:x="2273" fg:w="1"/><text x="76.0672%" y="2319.50"></text></g><g><title>`0x7FFAC12C7F57 (1 samples, 0.03%)</title><rect x="75.8839%" y="2293" width="0.0334%" height="15" fill="rgb(207,207,25)" fg:x="2275" fg:w="1"/><text x="76.1339%" y="2303.50"></text></g><g><title>`0x7FFAC12C8047 (3 samples, 0.10%)</title><rect x="75.9173%" y="2293" width="0.1001%" height="15" fill="rgb(253,96,18)" fg:x="2276" fg:w="3"/><text x="76.1673%" y="2303.50"></text></g><g><title>`0x7FFAC12C818E (1 samples, 0.03%)</title><rect x="76.0173%" y="2293" width="0.0334%" height="15" fill="rgb(252,215,20)" fg:x="2279" fg:w="1"/><text x="76.2673%" y="2303.50"></text></g><g><title>`0x7FFAC12C85E5 (1 samples, 0.03%)</title><rect x="76.0507%" y="2293" width="0.0334%" height="15" fill="rgb(245,227,26)" fg:x="2280" fg:w="1"/><text x="76.3007%" y="2303.50"></text></g><g><title>`0x7FFAC1371342 (30 samples, 1.00%)</title><rect x="76.0841%" y="2277" width="1.0007%" height="15" fill="rgb(241,208,0)" fg:x="2281" fg:w="30"/><text x="76.3341%" y="2287.50"></text></g><g><title>`0x7FFAC12C8A44 (47 samples, 1.57%)</title><rect x="76.0841%" y="2293" width="1.5677%" height="15" fill="rgb(224,130,10)" fg:x="2281" fg:w="47"/><text x="76.3341%" y="2303.50"></text></g><g><title>`0x7FFAC1371345 (17 samples, 0.57%)</title><rect x="77.0847%" y="2277" width="0.5670%" height="15" fill="rgb(237,29,0)" fg:x="2311" fg:w="17"/><text x="77.3347%" y="2287.50"></text></g><g><title>`0x7FFAC12C8A9A (1 samples, 0.03%)</title><rect x="77.6518%" y="2293" width="0.0334%" height="15" fill="rgb(219,27,41)" fg:x="2328" fg:w="1"/><text x="77.9018%" y="2303.50"></text></g><g><title>`0x7FFAC12AFC80 (1 samples, 0.03%)</title><rect x="77.6851%" y="2245" width="0.0334%" height="15" fill="rgb(245,101,19)" fg:x="2329" fg:w="1"/><text x="77.9351%" y="2255.50"></text></g><g><title>`0x7FFAC12B007D (1 samples, 0.03%)</title><rect x="77.7185%" y="2245" width="0.0334%" height="15" fill="rgb(243,44,37)" fg:x="2330" fg:w="1"/><text x="77.9685%" y="2255.50"></text></g><g><title>`0x7FFAC12C78B4 (58 samples, 1.93%)</title><rect x="75.8506%" y="2309" width="1.9346%" height="15" fill="rgb(228,213,43)" fg:x="2274" fg:w="58"/><text x="76.1006%" y="2319.50">`..</text></g><g><title>`0x7FFAC12C8CE9 (3 samples, 0.10%)</title><rect x="77.6851%" y="2293" width="0.1001%" height="15" fill="rgb(219,163,21)" fg:x="2329" fg:w="3"/><text x="77.9351%" y="2303.50"></text></g><g><title>`0x7FFAC12C7776 (3 samples, 0.10%)</title><rect x="77.6851%" y="2277" width="0.1001%" height="15" fill="rgb(234,86,24)" fg:x="2329" fg:w="3"/><text x="77.9351%" y="2287.50"></text></g><g><title>`0x7FFAC12C7AFE (3 samples, 0.10%)</title><rect x="77.6851%" y="2261" width="0.1001%" height="15" fill="rgb(225,10,24)" fg:x="2329" fg:w="3"/><text x="77.9351%" y="2271.50"></text></g><g><title>`0x7FFAC12B09B0 (1 samples, 0.03%)</title><rect x="77.7518%" y="2245" width="0.0334%" height="15" fill="rgb(218,109,7)" fg:x="2331" fg:w="1"/><text x="78.0018%" y="2255.50"></text></g><g><title>`0x7FFAC12B1EDF (1 samples, 0.03%)</title><rect x="77.7518%" y="2229" width="0.0334%" height="15" fill="rgb(210,20,26)" fg:x="2331" fg:w="1"/><text x="78.0018%" y="2239.50"></text></g><g><title>`0x7FFAC12B2773 (1 samples, 0.03%)</title><rect x="77.7518%" y="2213" width="0.0334%" height="15" fill="rgb(216,18,1)" fg:x="2331" fg:w="1"/><text x="78.0018%" y="2223.50"></text></g><g><title>`0x7FFAC13FFA24 (1 samples, 0.03%)</title><rect x="77.7518%" y="2197" width="0.0334%" height="15" fill="rgb(206,163,23)" fg:x="2331" fg:w="1"/><text x="78.0018%" y="2207.50"></text></g><g><title>boggle.exe`serde::de::MapAccess::next_entry(bincode::de::impl$3::deserialize_map::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (522 samples, 17.41%)</title><rect x="60.4069%" y="2629" width="17.4116%" height="15" fill="rgb(229,150,31)" fg:x="1811" fg:w="522"/><text x="60.6569%" y="2639.50">boggle.exe`serde::de::MapAc..</text></g><g><title>boggle.exe`serde::de::MapAccess::next_entry_seed(bincode::de::impl$3::deserialize_map::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, core::marker::PhantomData&lt;char&gt;, core::marker::PhantomData (522 samples, 17.41%)</title><rect x="60.4069%" y="2613" width="17.4116%" height="15" fill="rgb(231,10,5)" fg:x="1811" fg:w="522"/><text x="60.6569%" y="2623.50">boggle.exe`serde::de::MapAc..</text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_map::impl$0::next_value_seed(bincode::de::impl$3::deserialize_map::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, core::marker::PhantomData (521 samples, 17.38%)</title><rect x="60.4403%" y="2597" width="17.3783%" height="15" fill="rgb(250,40,50)" fg:x="1812" fg:w="521"/><text x="60.6903%" y="2607.50">boggle.exe`bincode::de::imp..</text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;boggle::utils::dict_trie::DictTrieNode,alloc::boxed::Box&lt;enum2$ (521 samples, 17.38%)</title><rect x="60.4403%" y="2581" width="17.3783%" height="15" fill="rgb(217,119,7)" fg:x="1812" fg:w="521"/><text x="60.6903%" y="2591.50">boggle.exe`core::result::im..</text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_struct&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt;,boggle::utils::dict_trie::_::impl$0::deserialize::__Visitor&gt;(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, ref$&lt;str$&gt;, ref$&lt;slice2$&lt;ref$ (516 samples, 17.21%)</title><rect x="60.6071%" y="2565" width="17.2115%" height="15" fill="rgb(245,214,40)" fg:x="1817" fg:w="516"/><text x="60.8571%" y="2575.50">boggle.exe`bincode::de::imp..</text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_tuple(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (515 samples, 17.18%)</title><rect x="60.6404%" y="2549" width="17.1781%" height="15" fill="rgb(216,187,1)" fg:x="1818" fg:w="515"/><text x="60.8904%" y="2559.50">boggle.exe`bincode::de::imp..</text></g><g><title>boggle.exe`boggle::utils::dict_trie::_::impl$0::deserialize::impl$2::visit_seq(boggle::utils::dict_trie::_::impl$0::deserialize::__Visitor, bincode::de::impl$3::deserialize_tuple::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (515 samples, 17.18%)</title><rect x="60.6404%" y="2533" width="17.1781%" height="15" fill="rgb(237,146,21)" fg:x="1818" fg:w="515"/><text x="60.8904%" y="2543.50">boggle.exe`boggle::utils::d..</text></g><g><title>boggle.exe`serde::de::SeqAccess::next_element(bincode::de::impl$3::deserialize_tuple::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (509 samples, 16.98%)</title><rect x="60.8406%" y="2517" width="16.9780%" height="15" fill="rgb(210,174,47)" fg:x="1824" fg:w="509"/><text x="61.0906%" y="2527.50">boggle.exe`serde::de::SeqA..</text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_tuple::impl$0::next_element_seed(bincode::de::impl$3::deserialize_tuple::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, core::marker::PhantomData&lt;std::collections::hash::map::HashMap (509 samples, 16.98%)</title><rect x="60.8406%" y="2501" width="16.9780%" height="15" fill="rgb(218,111,39)" fg:x="1824" fg:w="509"/><text x="61.0906%" y="2511.50">boggle.exe`bincode::de::im..</text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;std::collections::hash::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;,alloc::boxed::Box&lt;enum2$ (509 samples, 16.98%)</title><rect x="60.8406%" y="2485" width="16.9780%" height="15" fill="rgb(224,95,19)" fg:x="1824" fg:w="509"/><text x="61.0906%" y="2495.50">boggle.exe`core::result::i..</text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_map&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt;,serde::de::impls::impl$202::deserialize::MapVisitor&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt; &gt;(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, serde::de::impls::impl$202::deserialize::MapVisitor (506 samples, 16.88%)</title><rect x="60.9406%" y="2469" width="16.8779%" height="15" fill="rgb(234,15,38)" fg:x="1827" fg:w="506"/><text x="61.1906%" y="2479.50">boggle.exe`bincode::de::im..</text></g><g><title>boggle.exe`serde::de::impls::impl$202::deserialize::impl$0::visit_map(serde::de::impls::impl$202::deserialize::MapVisitor&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;, bincode::de::impl$3::deserialize_map::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (506 samples, 16.88%)</title><rect x="60.9406%" y="2453" width="16.8779%" height="15" fill="rgb(246,56,12)" fg:x="1827" fg:w="506"/><text x="61.1906%" y="2463.50">boggle.exe`serde::de::impl..</text></g><g><title>boggle.exe`std::collections::hash::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;::with_capacity_and_hasher (65 samples, 2.17%)</title><rect x="75.6504%" y="2437" width="2.1681%" height="15" fill="rgb(247,16,17)" fg:x="2268" fg:w="65"/><text x="75.9004%" y="2447.50">b..</text></g><g><title>boggle.exe`hashbrown::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt;::with_capacity_and_hasher (65 samples, 2.17%)</title><rect x="75.6504%" y="2421" width="2.1681%" height="15" fill="rgb(215,151,11)" fg:x="2268" fg:w="65"/><text x="75.9004%" y="2431.50">b..</text></g><g><title>boggle.exe`hashbrown::raw::RawTable&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;::with_capacity_in&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt; (63 samples, 2.10%)</title><rect x="75.7171%" y="2405" width="2.1014%" height="15" fill="rgb(225,16,24)" fg:x="2270" fg:w="63"/><text x="75.9671%" y="2415.50">b..</text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::with_capacity (62 samples, 2.07%)</title><rect x="75.7505%" y="2389" width="2.0680%" height="15" fill="rgb(217,117,5)" fg:x="2271" fg:w="62"/><text x="76.0005%" y="2399.50">b..</text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::fallible_with_capacity (62 samples, 2.07%)</title><rect x="75.7505%" y="2373" width="2.0680%" height="15" fill="rgb(246,187,53)" fg:x="2271" fg:w="62"/><text x="76.0005%" y="2383.50">b..</text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::new_uninitialized (61 samples, 2.03%)</title><rect x="75.7839%" y="2357" width="2.0347%" height="15" fill="rgb(241,71,40)" fg:x="2272" fg:w="61"/><text x="76.0339%" y="2367.50">b..</text></g><g><title>boggle.exe`hashbrown::raw::alloc::inner::do_alloc (61 samples, 2.03%)</title><rect x="75.7839%" y="2341" width="2.0347%" height="15" fill="rgb(231,67,39)" fg:x="2272" fg:w="61"/><text x="76.0339%" y="2351.50">b..</text></g><g><title>`0x7FFAC12C7776 (60 samples, 2.00%)</title><rect x="75.8172%" y="2325" width="2.0013%" height="15" fill="rgb(222,120,24)" fg:x="2273" fg:w="60"/><text x="76.0672%" y="2335.50">`..</text></g><g><title>`0x7FFAC12C7AFE (1 samples, 0.03%)</title><rect x="77.7852%" y="2309" width="0.0334%" height="15" fill="rgb(248,3,3)" fg:x="2332" fg:w="1"/><text x="78.0352%" y="2319.50"></text></g><g><title>`0x7FFAC12AFC80 (1 samples, 0.03%)</title><rect x="77.7852%" y="2293" width="0.0334%" height="15" fill="rgb(228,218,5)" fg:x="2332" fg:w="1"/><text x="78.0352%" y="2303.50"></text></g><g><title>boggle.exe`core::ptr::mut_ptr::impl$0::write_bytes (1 samples, 0.03%)</title><rect x="77.8185%" y="2549" width="0.0334%" height="15" fill="rgb(212,202,43)" fg:x="2333" fg:w="1"/><text x="78.0685%" y="2559.50"></text></g><g><title>boggle.exe`core::intrinsics::write_bytes (1 samples, 0.03%)</title><rect x="77.8185%" y="2533" width="0.0334%" height="15" fill="rgb(235,183,2)" fg:x="2333" fg:w="1"/><text x="78.0685%" y="2543.50"></text></g><g><title>`0x7FFAC12C77D0 (1 samples, 0.03%)</title><rect x="77.8519%" y="2501" width="0.0334%" height="15" fill="rgb(230,165,10)" fg:x="2334" fg:w="1"/><text x="78.1019%" y="2511.50"></text></g><g><title>`0x7FFAC12C8047 (7 samples, 0.23%)</title><rect x="77.8853%" y="2485" width="0.2335%" height="15" fill="rgb(219,54,40)" fg:x="2335" fg:w="7"/><text x="78.1353%" y="2495.50"></text></g><g><title>`0x7FFAC1371342 (18 samples, 0.60%)</title><rect x="78.1187%" y="2469" width="0.6004%" height="15" fill="rgb(244,73,9)" fg:x="2342" fg:w="18"/><text x="78.3687%" y="2479.50"></text></g><g><title>`0x7FFAC12C8A44 (28 samples, 0.93%)</title><rect x="78.1187%" y="2485" width="0.9340%" height="15" fill="rgb(212,32,45)" fg:x="2342" fg:w="28"/><text x="78.3687%" y="2495.50"></text></g><g><title>`0x7FFAC1371345 (10 samples, 0.33%)</title><rect x="78.7191%" y="2469" width="0.3336%" height="15" fill="rgb(205,58,31)" fg:x="2360" fg:w="10"/><text x="78.9691%" y="2479.50"></text></g><g><title>`0x7FFAC12C7776 (38 samples, 1.27%)</title><rect x="77.8519%" y="2517" width="1.2675%" height="15" fill="rgb(250,120,43)" fg:x="2334" fg:w="38"/><text x="78.1019%" y="2527.50"></text></g><g><title>`0x7FFAC12C78B4 (37 samples, 1.23%)</title><rect x="77.8853%" y="2501" width="1.2342%" height="15" fill="rgb(235,13,10)" fg:x="2335" fg:w="37"/><text x="78.1353%" y="2511.50"></text></g><g><title>`0x7FFAC12C8CE9 (2 samples, 0.07%)</title><rect x="79.0527%" y="2485" width="0.0667%" height="15" fill="rgb(232,219,31)" fg:x="2370" fg:w="2"/><text x="79.3027%" y="2495.50"></text></g><g><title>`0x7FFAC12C7776 (2 samples, 0.07%)</title><rect x="79.0527%" y="2469" width="0.0667%" height="15" fill="rgb(218,157,51)" fg:x="2370" fg:w="2"/><text x="79.3027%" y="2479.50"></text></g><g><title>`0x7FFAC12C7AFE (2 samples, 0.07%)</title><rect x="79.0527%" y="2453" width="0.0667%" height="15" fill="rgb(211,91,52)" fg:x="2370" fg:w="2"/><text x="79.3027%" y="2463.50"></text></g><g><title>`0x7FFAC12B09B0 (2 samples, 0.07%)</title><rect x="79.0527%" y="2437" width="0.0667%" height="15" fill="rgb(240,173,1)" fg:x="2370" fg:w="2"/><text x="79.3027%" y="2447.50"></text></g><g><title>`0x7FFAC12B1EDF (2 samples, 0.07%)</title><rect x="79.0527%" y="2421" width="0.0667%" height="15" fill="rgb(248,20,47)" fg:x="2370" fg:w="2"/><text x="79.3027%" y="2431.50"></text></g><g><title>`0x7FFAC12B2854 (2 samples, 0.07%)</title><rect x="79.0527%" y="2405" width="0.0667%" height="15" fill="rgb(217,221,40)" fg:x="2370" fg:w="2"/><text x="79.3027%" y="2415.50"></text></g><g><title>`0x7FFAC12B238A (2 samples, 0.07%)</title><rect x="79.0527%" y="2389" width="0.0667%" height="15" fill="rgb(226,149,51)" fg:x="2370" fg:w="2"/><text x="79.3027%" y="2399.50"></text></g><g><title>boggle.exe`serde::de::MapAccess::next_entry(bincode::de::impl$3::deserialize_map::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (587 samples, 19.58%)</title><rect x="59.5730%" y="2821" width="19.5797%" height="15" fill="rgb(252,193,7)" fg:x="1786" fg:w="587"/><text x="59.8230%" y="2831.50">boggle.exe`serde::de::MapAccess..</text></g><g><title>boggle.exe`serde::de::MapAccess::next_entry_seed(bincode::de::impl$3::deserialize_map::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, core::marker::PhantomData&lt;char&gt;, core::marker::PhantomData (587 samples, 19.58%)</title><rect x="59.5730%" y="2805" width="19.5797%" height="15" fill="rgb(205,123,0)" fg:x="1786" fg:w="587"/><text x="59.8230%" y="2815.50">boggle.exe`serde::de::MapAccess..</text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_map::impl$0::next_value_seed(bincode::de::impl$3::deserialize_map::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, core::marker::PhantomData (584 samples, 19.48%)</title><rect x="59.6731%" y="2789" width="19.4797%" height="15" fill="rgb(233,173,25)" fg:x="1789" fg:w="584"/><text x="59.9231%" y="2799.50">boggle.exe`bincode::de::impl$3:..</text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;boggle::utils::dict_trie::DictTrieNode,alloc::boxed::Box&lt;enum2$ (584 samples, 19.48%)</title><rect x="59.6731%" y="2773" width="19.4797%" height="15" fill="rgb(216,63,32)" fg:x="1789" fg:w="584"/><text x="59.9231%" y="2783.50">boggle.exe`core::result::impl$2..</text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_struct&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt;,boggle::utils::dict_trie::_::impl$0::deserialize::__Visitor&gt;(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, ref$&lt;str$&gt;, ref$&lt;slice2$&lt;ref$ (580 samples, 19.35%)</title><rect x="59.8065%" y="2757" width="19.3462%" height="15" fill="rgb(209,56,45)" fg:x="1793" fg:w="580"/><text x="60.0565%" y="2767.50">boggle.exe`bincode::de::impl$3..</text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_tuple(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (580 samples, 19.35%)</title><rect x="59.8065%" y="2741" width="19.3462%" height="15" fill="rgb(226,111,49)" fg:x="1793" fg:w="580"/><text x="60.0565%" y="2751.50">boggle.exe`bincode::de::impl$3..</text></g><g><title>boggle.exe`boggle::utils::dict_trie::_::impl$0::deserialize::impl$2::visit_seq(boggle::utils::dict_trie::_::impl$0::deserialize::__Visitor, bincode::de::impl$3::deserialize_tuple::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (580 samples, 19.35%)</title><rect x="59.8065%" y="2725" width="19.3462%" height="15" fill="rgb(244,181,21)" fg:x="1793" fg:w="580"/><text x="60.0565%" y="2735.50">boggle.exe`boggle::utils::dict..</text></g><g><title>boggle.exe`serde::de::SeqAccess::next_element(bincode::de::impl$3::deserialize_tuple::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (578 samples, 19.28%)</title><rect x="59.8732%" y="2709" width="19.2795%" height="15" fill="rgb(222,126,15)" fg:x="1795" fg:w="578"/><text x="60.1232%" y="2719.50">boggle.exe`serde::de::SeqAcces..</text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_tuple::impl$0::next_element_seed(bincode::de::impl$3::deserialize_tuple::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, core::marker::PhantomData&lt;std::collections::hash::map::HashMap (578 samples, 19.28%)</title><rect x="59.8732%" y="2693" width="19.2795%" height="15" fill="rgb(222,95,17)" fg:x="1795" fg:w="578"/><text x="60.1232%" y="2703.50">boggle.exe`bincode::de::impl$3..</text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;std::collections::hash::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;,alloc::boxed::Box&lt;enum2$ (578 samples, 19.28%)</title><rect x="59.8732%" y="2677" width="19.2795%" height="15" fill="rgb(254,46,5)" fg:x="1795" fg:w="578"/><text x="60.1232%" y="2687.50">boggle.exe`core::result::impl$..</text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_map&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt;,serde::de::impls::impl$202::deserialize::MapVisitor&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt; &gt;(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, serde::de::impls::impl$202::deserialize::MapVisitor (577 samples, 19.25%)</title><rect x="59.9066%" y="2661" width="19.2462%" height="15" fill="rgb(236,216,35)" fg:x="1796" fg:w="577"/><text x="60.1566%" y="2671.50">boggle.exe`bincode::de::impl$3..</text></g><g><title>boggle.exe`serde::de::impls::impl$202::deserialize::impl$0::visit_map(serde::de::impls::impl$202::deserialize::MapVisitor&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;, bincode::de::impl$3::deserialize_map::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (575 samples, 19.18%)</title><rect x="59.9733%" y="2645" width="19.1795%" height="15" fill="rgb(217,187,26)" fg:x="1798" fg:w="575"/><text x="60.2233%" y="2655.50">boggle.exe`serde::de::impls::i..</text></g><g><title>boggle.exe`std::collections::hash::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;::with_capacity_and_hasher (40 samples, 1.33%)</title><rect x="77.8185%" y="2629" width="1.3342%" height="15" fill="rgb(207,192,25)" fg:x="2333" fg:w="40"/><text x="78.0685%" y="2639.50"></text></g><g><title>boggle.exe`hashbrown::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt;::with_capacity_and_hasher (40 samples, 1.33%)</title><rect x="77.8185%" y="2613" width="1.3342%" height="15" fill="rgb(253,135,27)" fg:x="2333" fg:w="40"/><text x="78.0685%" y="2623.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTable&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;::with_capacity_in&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt; (40 samples, 1.33%)</title><rect x="77.8185%" y="2597" width="1.3342%" height="15" fill="rgb(211,122,29)" fg:x="2333" fg:w="40"/><text x="78.0685%" y="2607.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::with_capacity (40 samples, 1.33%)</title><rect x="77.8185%" y="2581" width="1.3342%" height="15" fill="rgb(233,162,40)" fg:x="2333" fg:w="40"/><text x="78.0685%" y="2591.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::fallible_with_capacity (40 samples, 1.33%)</title><rect x="77.8185%" y="2565" width="1.3342%" height="15" fill="rgb(222,184,47)" fg:x="2333" fg:w="40"/><text x="78.0685%" y="2575.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::new_uninitialized (39 samples, 1.30%)</title><rect x="77.8519%" y="2549" width="1.3009%" height="15" fill="rgb(249,99,23)" fg:x="2334" fg:w="39"/><text x="78.1019%" y="2559.50"></text></g><g><title>boggle.exe`hashbrown::raw::alloc::inner::do_alloc (39 samples, 1.30%)</title><rect x="77.8519%" y="2533" width="1.3009%" height="15" fill="rgb(214,60,12)" fg:x="2334" fg:w="39"/><text x="78.1019%" y="2543.50"></text></g><g><title>boggle.exe`std::alloc::__default_lib_allocator::__rdl_alloc (1 samples, 0.03%)</title><rect x="79.1194%" y="2517" width="0.0334%" height="15" fill="rgb(250,229,36)" fg:x="2372" fg:w="1"/><text x="79.3694%" y="2527.50"></text></g><g><title>boggle.exe`std::sys::alloc::windows::impl$0::alloc (1 samples, 0.03%)</title><rect x="79.1194%" y="2501" width="0.0334%" height="15" fill="rgb(232,195,10)" fg:x="2372" fg:w="1"/><text x="79.3694%" y="2511.50"></text></g><g><title>boggle.exe`std::sys::alloc::windows::allocate (1 samples, 0.03%)</title><rect x="79.1194%" y="2485" width="0.0334%" height="15" fill="rgb(205,213,31)" fg:x="2372" fg:w="1"/><text x="79.3694%" y="2495.50"></text></g><g><title>`0x7FFAC12C8047 (3 samples, 0.10%)</title><rect x="79.1528%" y="2677" width="0.1001%" height="15" fill="rgb(237,43,8)" fg:x="2373" fg:w="3"/><text x="79.4028%" y="2687.50"></text></g><g><title>`0x7FFAC1371342 (13 samples, 0.43%)</title><rect x="79.2528%" y="2661" width="0.4336%" height="15" fill="rgb(216,208,3)" fg:x="2376" fg:w="13"/><text x="79.5028%" y="2671.50"></text></g><g><title>`0x7FFAC12C8A44 (18 samples, 0.60%)</title><rect x="79.2528%" y="2677" width="0.6004%" height="15" fill="rgb(228,179,44)" fg:x="2376" fg:w="18"/><text x="79.5028%" y="2687.50"></text></g><g><title>`0x7FFAC1371345 (5 samples, 0.17%)</title><rect x="79.6865%" y="2661" width="0.1668%" height="15" fill="rgb(230,192,27)" fg:x="2389" fg:w="5"/><text x="79.9365%" y="2671.50"></text></g><g><title>boggle.exe`serde::de::MapAccess::next_entry(bincode::de::impl$3::deserialize_map::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (624 samples, 20.81%)</title><rect x="59.0727%" y="3013" width="20.8139%" height="15" fill="rgb(251,30,38)" fg:x="1771" fg:w="624"/><text x="59.3227%" y="3023.50">boggle.exe`serde::de::MapAccess::..</text></g><g><title>boggle.exe`serde::de::MapAccess::next_entry_seed(bincode::de::impl$3::deserialize_map::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, core::marker::PhantomData&lt;char&gt;, core::marker::PhantomData (624 samples, 20.81%)</title><rect x="59.0727%" y="2997" width="20.8139%" height="15" fill="rgb(246,55,52)" fg:x="1771" fg:w="624"/><text x="59.3227%" y="3007.50">boggle.exe`serde::de::MapAccess::..</text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_map::impl$0::next_value_seed(bincode::de::impl$3::deserialize_map::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, core::marker::PhantomData (624 samples, 20.81%)</title><rect x="59.0727%" y="2981" width="20.8139%" height="15" fill="rgb(249,79,26)" fg:x="1771" fg:w="624"/><text x="59.3227%" y="2991.50">boggle.exe`bincode::de::impl$3::d..</text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;boggle::utils::dict_trie::DictTrieNode,alloc::boxed::Box&lt;enum2$ (624 samples, 20.81%)</title><rect x="59.0727%" y="2965" width="20.8139%" height="15" fill="rgb(220,202,16)" fg:x="1771" fg:w="624"/><text x="59.3227%" y="2975.50">boggle.exe`core::result::impl$26:..</text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_struct&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt;,boggle::utils::dict_trie::_::impl$0::deserialize::__Visitor&gt;(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, ref$&lt;str$&gt;, ref$&lt;slice2$&lt;ref$ (623 samples, 20.78%)</title><rect x="59.1061%" y="2949" width="20.7805%" height="15" fill="rgb(250,170,23)" fg:x="1772" fg:w="623"/><text x="59.3561%" y="2959.50">boggle.exe`bincode::de::impl$3::d..</text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_tuple(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (623 samples, 20.78%)</title><rect x="59.1061%" y="2933" width="20.7805%" height="15" fill="rgb(230,7,37)" fg:x="1772" fg:w="623"/><text x="59.3561%" y="2943.50">boggle.exe`bincode::de::impl$3::d..</text></g><g><title>boggle.exe`boggle::utils::dict_trie::_::impl$0::deserialize::impl$2::visit_seq(boggle::utils::dict_trie::_::impl$0::deserialize::__Visitor, bincode::de::impl$3::deserialize_tuple::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (623 samples, 20.78%)</title><rect x="59.1061%" y="2917" width="20.7805%" height="15" fill="rgb(213,71,1)" fg:x="1772" fg:w="623"/><text x="59.3561%" y="2927.50">boggle.exe`boggle::utils::dict_tr..</text></g><g><title>boggle.exe`serde::de::SeqAccess::next_element(bincode::de::impl$3::deserialize_tuple::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (622 samples, 20.75%)</title><rect x="59.1394%" y="2901" width="20.7472%" height="15" fill="rgb(227,87,39)" fg:x="1773" fg:w="622"/><text x="59.3894%" y="2911.50">boggle.exe`serde::de::SeqAccess::..</text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_tuple::impl$0::next_element_seed(bincode::de::impl$3::deserialize_tuple::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, core::marker::PhantomData&lt;std::collections::hash::map::HashMap (621 samples, 20.71%)</title><rect x="59.1728%" y="2885" width="20.7138%" height="15" fill="rgb(210,41,29)" fg:x="1774" fg:w="621"/><text x="59.4228%" y="2895.50">boggle.exe`bincode::de::impl$3::d..</text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;std::collections::hash::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;,alloc::boxed::Box&lt;enum2$ (621 samples, 20.71%)</title><rect x="59.1728%" y="2869" width="20.7138%" height="15" fill="rgb(206,191,31)" fg:x="1774" fg:w="621"/><text x="59.4228%" y="2879.50">boggle.exe`core::result::impl$26:..</text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_map&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt;,serde::de::impls::impl$202::deserialize::MapVisitor&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt; &gt;(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, serde::de::impls::impl$202::deserialize::MapVisitor (621 samples, 20.71%)</title><rect x="59.1728%" y="2853" width="20.7138%" height="15" fill="rgb(247,75,54)" fg:x="1774" fg:w="621"/><text x="59.4228%" y="2863.50">boggle.exe`bincode::de::impl$3::d..</text></g><g><title>boggle.exe`serde::de::impls::impl$202::deserialize::impl$0::visit_map(serde::de::impls::impl$202::deserialize::MapVisitor&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;, bincode::de::impl$3::deserialize_map::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (618 samples, 20.61%)</title><rect x="59.2728%" y="2837" width="20.6137%" height="15" fill="rgb(208,54,50)" fg:x="1777" fg:w="618"/><text x="59.5228%" y="2847.50">boggle.exe`serde::de::impls::imp..</text></g><g><title>boggle.exe`std::collections::hash::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;::with_capacity_and_hasher (22 samples, 0.73%)</title><rect x="79.1528%" y="2821" width="0.7338%" height="15" fill="rgb(214,90,37)" fg:x="2373" fg:w="22"/><text x="79.4028%" y="2831.50"></text></g><g><title>boggle.exe`hashbrown::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt;::with_capacity_and_hasher (22 samples, 0.73%)</title><rect x="79.1528%" y="2805" width="0.7338%" height="15" fill="rgb(220,132,6)" fg:x="2373" fg:w="22"/><text x="79.4028%" y="2815.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTable&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;::with_capacity_in&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt; (22 samples, 0.73%)</title><rect x="79.1528%" y="2789" width="0.7338%" height="15" fill="rgb(213,167,7)" fg:x="2373" fg:w="22"/><text x="79.4028%" y="2799.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::with_capacity (22 samples, 0.73%)</title><rect x="79.1528%" y="2773" width="0.7338%" height="15" fill="rgb(243,36,27)" fg:x="2373" fg:w="22"/><text x="79.4028%" y="2783.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::fallible_with_capacity (22 samples, 0.73%)</title><rect x="79.1528%" y="2757" width="0.7338%" height="15" fill="rgb(235,147,12)" fg:x="2373" fg:w="22"/><text x="79.4028%" y="2767.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::new_uninitialized (22 samples, 0.73%)</title><rect x="79.1528%" y="2741" width="0.7338%" height="15" fill="rgb(212,198,44)" fg:x="2373" fg:w="22"/><text x="79.4028%" y="2751.50"></text></g><g><title>boggle.exe`hashbrown::raw::alloc::inner::do_alloc (22 samples, 0.73%)</title><rect x="79.1528%" y="2725" width="0.7338%" height="15" fill="rgb(218,68,50)" fg:x="2373" fg:w="22"/><text x="79.4028%" y="2735.50"></text></g><g><title>`0x7FFAC12C7776 (22 samples, 0.73%)</title><rect x="79.1528%" y="2709" width="0.7338%" height="15" fill="rgb(224,79,48)" fg:x="2373" fg:w="22"/><text x="79.4028%" y="2719.50"></text></g><g><title>`0x7FFAC12C78B4 (22 samples, 0.73%)</title><rect x="79.1528%" y="2693" width="0.7338%" height="15" fill="rgb(213,191,50)" fg:x="2373" fg:w="22"/><text x="79.4028%" y="2703.50"></text></g><g><title>`0x7FFAC12C8CE9 (1 samples, 0.03%)</title><rect x="79.8532%" y="2677" width="0.0334%" height="15" fill="rgb(254,146,10)" fg:x="2394" fg:w="1"/><text x="80.1032%" y="2687.50"></text></g><g><title>`0x7FFAC12C7776 (1 samples, 0.03%)</title><rect x="79.8532%" y="2661" width="0.0334%" height="15" fill="rgb(215,175,11)" fg:x="2394" fg:w="1"/><text x="80.1032%" y="2671.50"></text></g><g><title>`0x7FFAC12C7AFE (1 samples, 0.03%)</title><rect x="79.8532%" y="2645" width="0.0334%" height="15" fill="rgb(207,49,7)" fg:x="2394" fg:w="1"/><text x="80.1032%" y="2655.50"></text></g><g><title>`0x7FFAC12B09B0 (1 samples, 0.03%)</title><rect x="79.8532%" y="2629" width="0.0334%" height="15" fill="rgb(234,144,29)" fg:x="2394" fg:w="1"/><text x="80.1032%" y="2639.50"></text></g><g><title>`0x7FFAC12B1EDF (1 samples, 0.03%)</title><rect x="79.8532%" y="2613" width="0.0334%" height="15" fill="rgb(213,222,48)" fg:x="2394" fg:w="1"/><text x="80.1032%" y="2623.50"></text></g><g><title>`0x7FFAC12B2854 (1 samples, 0.03%)</title><rect x="79.8532%" y="2597" width="0.0334%" height="15" fill="rgb(222,8,6)" fg:x="2394" fg:w="1"/><text x="80.1032%" y="2607.50"></text></g><g><title>`0x7FFAC12B238A (1 samples, 0.03%)</title><rect x="79.8532%" y="2581" width="0.0334%" height="15" fill="rgb(221,114,49)" fg:x="2394" fg:w="1"/><text x="80.1032%" y="2591.50"></text></g><g><title>`0x7FFAC12C812E (1 samples, 0.03%)</title><rect x="79.8866%" y="2869" width="0.0334%" height="15" fill="rgb(250,140,42)" fg:x="2395" fg:w="1"/><text x="80.1366%" y="2879.50"></text></g><g><title>`0x7FFAC1371342 (3 samples, 0.10%)</title><rect x="79.9199%" y="2853" width="0.1001%" height="15" fill="rgb(250,150,27)" fg:x="2396" fg:w="3"/><text x="80.1699%" y="2863.50"></text></g><g><title>boggle.exe`serde::de::MapAccess::next_entry(bincode::de::impl$3::deserialize_map::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (632 samples, 21.08%)</title><rect x="58.9726%" y="3205" width="21.0807%" height="15" fill="rgb(252,159,3)" fg:x="1768" fg:w="632"/><text x="59.2226%" y="3215.50">boggle.exe`serde::de::MapAccess::..</text></g><g><title>boggle.exe`serde::de::MapAccess::next_entry_seed(bincode::de::impl$3::deserialize_map::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, core::marker::PhantomData&lt;char&gt;, core::marker::PhantomData (632 samples, 21.08%)</title><rect x="58.9726%" y="3189" width="21.0807%" height="15" fill="rgb(241,182,3)" fg:x="1768" fg:w="632"/><text x="59.2226%" y="3199.50">boggle.exe`serde::de::MapAccess::..</text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_map::impl$0::next_value_seed(bincode::de::impl$3::deserialize_map::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, core::marker::PhantomData (632 samples, 21.08%)</title><rect x="58.9726%" y="3173" width="21.0807%" height="15" fill="rgb(236,3,9)" fg:x="1768" fg:w="632"/><text x="59.2226%" y="3183.50">boggle.exe`bincode::de::impl$3::d..</text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;boggle::utils::dict_trie::DictTrieNode,alloc::boxed::Box&lt;enum2$ (632 samples, 21.08%)</title><rect x="58.9726%" y="3157" width="21.0807%" height="15" fill="rgb(223,227,51)" fg:x="1768" fg:w="632"/><text x="59.2226%" y="3167.50">boggle.exe`core::result::impl$26:..</text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_struct&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt;,boggle::utils::dict_trie::_::impl$0::deserialize::__Visitor&gt;(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, ref$&lt;str$&gt;, ref$&lt;slice2$&lt;ref$ (632 samples, 21.08%)</title><rect x="58.9726%" y="3141" width="21.0807%" height="15" fill="rgb(232,133,30)" fg:x="1768" fg:w="632"/><text x="59.2226%" y="3151.50">boggle.exe`bincode::de::impl$3::d..</text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_tuple(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (632 samples, 21.08%)</title><rect x="58.9726%" y="3125" width="21.0807%" height="15" fill="rgb(209,93,27)" fg:x="1768" fg:w="632"/><text x="59.2226%" y="3135.50">boggle.exe`bincode::de::impl$3::d..</text></g><g><title>boggle.exe`boggle::utils::dict_trie::_::impl$0::deserialize::impl$2::visit_seq(boggle::utils::dict_trie::_::impl$0::deserialize::__Visitor, bincode::de::impl$3::deserialize_tuple::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (632 samples, 21.08%)</title><rect x="58.9726%" y="3109" width="21.0807%" height="15" fill="rgb(208,108,34)" fg:x="1768" fg:w="632"/><text x="59.2226%" y="3119.50">boggle.exe`boggle::utils::dict_tr..</text></g><g><title>boggle.exe`serde::de::SeqAccess::next_element(bincode::de::impl$3::deserialize_tuple::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (631 samples, 21.05%)</title><rect x="59.0060%" y="3093" width="21.0474%" height="15" fill="rgb(215,189,13)" fg:x="1769" fg:w="631"/><text x="59.2560%" y="3103.50">boggle.exe`serde::de::SeqAccess::..</text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_tuple::impl$0::next_element_seed(bincode::de::impl$3::deserialize_tuple::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, core::marker::PhantomData&lt;std::collections::hash::map::HashMap (631 samples, 21.05%)</title><rect x="59.0060%" y="3077" width="21.0474%" height="15" fill="rgb(206,88,23)" fg:x="1769" fg:w="631"/><text x="59.2560%" y="3087.50">boggle.exe`bincode::de::impl$3::d..</text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;std::collections::hash::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;,alloc::boxed::Box&lt;enum2$ (631 samples, 21.05%)</title><rect x="59.0060%" y="3061" width="21.0474%" height="15" fill="rgb(240,173,0)" fg:x="1769" fg:w="631"/><text x="59.2560%" y="3071.50">boggle.exe`core::result::impl$26:..</text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_map&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt;,serde::de::impls::impl$202::deserialize::MapVisitor&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt; &gt;(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, serde::de::impls::impl$202::deserialize::MapVisitor (631 samples, 21.05%)</title><rect x="59.0060%" y="3045" width="21.0474%" height="15" fill="rgb(223,106,52)" fg:x="1769" fg:w="631"/><text x="59.2560%" y="3055.50">boggle.exe`bincode::de::impl$3::d..</text></g><g><title>boggle.exe`serde::de::impls::impl$202::deserialize::impl$0::visit_map(serde::de::impls::impl$202::deserialize::MapVisitor&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;, bincode::de::impl$3::deserialize_map::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (631 samples, 21.05%)</title><rect x="59.0060%" y="3029" width="21.0474%" height="15" fill="rgb(206,130,16)" fg:x="1769" fg:w="631"/><text x="59.2560%" y="3039.50">boggle.exe`serde::de::impls::impl..</text></g><g><title>boggle.exe`std::collections::hash::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;::with_capacity_and_hasher (5 samples, 0.17%)</title><rect x="79.8866%" y="3013" width="0.1668%" height="15" fill="rgb(220,54,25)" fg:x="2395" fg:w="5"/><text x="80.1366%" y="3023.50"></text></g><g><title>boggle.exe`hashbrown::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt;::with_capacity_and_hasher (5 samples, 0.17%)</title><rect x="79.8866%" y="2997" width="0.1668%" height="15" fill="rgb(210,4,38)" fg:x="2395" fg:w="5"/><text x="80.1366%" y="3007.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTable&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;::with_capacity_in&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt; (5 samples, 0.17%)</title><rect x="79.8866%" y="2981" width="0.1668%" height="15" fill="rgb(238,94,39)" fg:x="2395" fg:w="5"/><text x="80.1366%" y="2991.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::with_capacity (5 samples, 0.17%)</title><rect x="79.8866%" y="2965" width="0.1668%" height="15" fill="rgb(234,124,34)" fg:x="2395" fg:w="5"/><text x="80.1366%" y="2975.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::fallible_with_capacity (5 samples, 0.17%)</title><rect x="79.8866%" y="2949" width="0.1668%" height="15" fill="rgb(221,91,40)" fg:x="2395" fg:w="5"/><text x="80.1366%" y="2959.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::new_uninitialized (5 samples, 0.17%)</title><rect x="79.8866%" y="2933" width="0.1668%" height="15" fill="rgb(246,53,28)" fg:x="2395" fg:w="5"/><text x="80.1366%" y="2943.50"></text></g><g><title>boggle.exe`hashbrown::raw::alloc::inner::do_alloc (5 samples, 0.17%)</title><rect x="79.8866%" y="2917" width="0.1668%" height="15" fill="rgb(229,109,7)" fg:x="2395" fg:w="5"/><text x="80.1366%" y="2927.50"></text></g><g><title>`0x7FFAC12C7776 (5 samples, 0.17%)</title><rect x="79.8866%" y="2901" width="0.1668%" height="15" fill="rgb(249,117,8)" fg:x="2395" fg:w="5"/><text x="80.1366%" y="2911.50"></text></g><g><title>`0x7FFAC12C78B4 (5 samples, 0.17%)</title><rect x="79.8866%" y="2885" width="0.1668%" height="15" fill="rgb(210,181,1)" fg:x="2395" fg:w="5"/><text x="80.1366%" y="2895.50"></text></g><g><title>`0x7FFAC12C8A44 (4 samples, 0.13%)</title><rect x="79.9199%" y="2869" width="0.1334%" height="15" fill="rgb(211,66,1)" fg:x="2396" fg:w="4"/><text x="80.1699%" y="2879.50"></text></g><g><title>`0x7FFAC1371345 (1 samples, 0.03%)</title><rect x="80.0200%" y="2853" width="0.0334%" height="15" fill="rgb(221,90,14)" fg:x="2399" fg:w="1"/><text x="80.2700%" y="2863.50"></text></g><g><title>`0x7FFAC12C78B4 (1 samples, 0.03%)</title><rect x="80.0534%" y="3077" width="0.0334%" height="15" fill="rgb(219,222,44)" fg:x="2400" fg:w="1"/><text x="80.3034%" y="3087.50"></text></g><g><title>`0x7FFAC12C8A44 (1 samples, 0.03%)</title><rect x="80.0534%" y="3061" width="0.0334%" height="15" fill="rgb(246,34,33)" fg:x="2400" fg:w="1"/><text x="80.3034%" y="3071.50"></text></g><g><title>`0x7FFAC1371342 (1 samples, 0.03%)</title><rect x="80.0534%" y="3045" width="0.0334%" height="15" fill="rgb(227,135,41)" fg:x="2400" fg:w="1"/><text x="80.3034%" y="3055.50"></text></g><g><title>boggle.exe`bincode::deserialize(ref$&lt;slice2$ (636 samples, 21.21%)</title><rect x="58.9059%" y="4021" width="21.2141%" height="15" fill="rgb(226,15,14)" fg:x="1766" fg:w="636"/><text x="59.1559%" y="4031.50">boggle.exe`bincode::deserialize(r..</text></g><g><title>boggle.exe`bincode::config::Options::deserialize(bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;, ref$&lt;slice2$ (636 samples, 21.21%)</title><rect x="58.9059%" y="4005" width="21.2141%" height="15" fill="rgb(236,148,47)" fg:x="1766" fg:w="636"/><text x="59.1559%" y="4015.50">boggle.exe`bincode::config::Optio..</text></g><g><title>boggle.exe`bincode::internal::deserialize(ref$&lt;slice2$&lt;u8&gt; &gt;, bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (636 samples, 21.21%)</title><rect x="58.9059%" y="3989" width="21.2141%" height="15" fill="rgb(233,162,52)" fg:x="1766" fg:w="636"/><text x="59.1559%" y="3999.50">boggle.exe`bincode::internal::des..</text></g><g><title>boggle.exe`bincode::internal::deserialize_seed(core::marker::PhantomData&lt;boggle::utils::trie_manager::SerializableTrie&gt;, ref$&lt;slice2$&lt;u8&gt; &gt;, bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (636 samples, 21.21%)</title><rect x="58.9059%" y="3973" width="21.2141%" height="15" fill="rgb(244,35,28)" fg:x="1766" fg:w="636"/><text x="59.1559%" y="3983.50">boggle.exe`bincode::internal::des..</text></g><g><title>boggle.exe`serde::de::impl$5::deserialize(core::marker::PhantomData&lt;boggle::utils::trie_manager::SerializableTrie&gt;, bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (636 samples, 21.21%)</title><rect x="58.9059%" y="3957" width="21.2141%" height="15" fill="rgb(205,121,10)" fg:x="1766" fg:w="636"/><text x="59.1559%" y="3967.50">boggle.exe`serde::de::impl$5::des..</text></g><g><title>boggle.exe`boggle::utils::trie_manager::_::impl$0::deserialize(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (636 samples, 21.21%)</title><rect x="58.9059%" y="3941" width="21.2141%" height="15" fill="rgb(250,58,18)" fg:x="1766" fg:w="636"/><text x="59.1559%" y="3951.50">boggle.exe`boggle::utils::trie_ma..</text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_struct(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, ref$&lt;str$&gt;, ref$&lt;slice2$&lt;ref$ (636 samples, 21.21%)</title><rect x="58.9059%" y="3925" width="21.2141%" height="15" fill="rgb(216,37,13)" fg:x="1766" fg:w="636"/><text x="59.1559%" y="3935.50">boggle.exe`bincode::de::impl$3::d..</text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_tuple(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (636 samples, 21.21%)</title><rect x="58.9059%" y="3909" width="21.2141%" height="15" fill="rgb(221,215,42)" fg:x="1766" fg:w="636"/><text x="59.1559%" y="3919.50">boggle.exe`bincode::de::impl$3::d..</text></g><g><title>boggle.exe`boggle::utils::trie_manager::_::impl$0::deserialize::impl$2::visit_seq(boggle::utils::trie_manager::_::impl$0::deserialize::__Visitor, bincode::de::impl$3::deserialize_tuple::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (636 samples, 21.21%)</title><rect x="58.9059%" y="3893" width="21.2141%" height="15" fill="rgb(217,214,19)" fg:x="1766" fg:w="636"/><text x="59.1559%" y="3903.50">boggle.exe`boggle::utils::trie_ma..</text></g><g><title>boggle.exe`serde::de::SeqAccess::next_element(bincode::de::impl$3::deserialize_tuple::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (636 samples, 21.21%)</title><rect x="58.9059%" y="3877" width="21.2141%" height="15" fill="rgb(233,139,13)" fg:x="1766" fg:w="636"/><text x="59.1559%" y="3887.50">boggle.exe`serde::de::SeqAccess::..</text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_tuple::impl$0::next_element_seed(bincode::de::impl$3::deserialize_tuple::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, core::marker::PhantomData (636 samples, 21.21%)</title><rect x="58.9059%" y="3861" width="21.2141%" height="15" fill="rgb(247,168,23)" fg:x="1766" fg:w="636"/><text x="59.1559%" y="3871.50">boggle.exe`bincode::de::impl$3::d..</text></g><g><title>boggle.exe`serde::de::impl$5::deserialize(core::marker::PhantomData&lt;boggle::utils::dict_trie::DictTrie&gt;, bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (636 samples, 21.21%)</title><rect x="58.9059%" y="3845" width="21.2141%" height="15" fill="rgb(207,202,1)" fg:x="1766" fg:w="636"/><text x="59.1559%" y="3855.50">boggle.exe`serde::de::impl$5::des..</text></g><g><title>boggle.exe`boggle::utils::dict_trie::_::impl$0::deserialize(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (636 samples, 21.21%)</title><rect x="58.9059%" y="3829" width="21.2141%" height="15" fill="rgb(220,155,48)" fg:x="1766" fg:w="636"/><text x="59.1559%" y="3839.50">boggle.exe`boggle::utils::dict_tr..</text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_struct(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, ref$&lt;str$&gt;, ref$&lt;slice2$&lt;ref$ (636 samples, 21.21%)</title><rect x="58.9059%" y="3813" width="21.2141%" height="15" fill="rgb(250,43,26)" fg:x="1766" fg:w="636"/><text x="59.1559%" y="3823.50">boggle.exe`bincode::de::impl$3::d..</text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_tuple(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (636 samples, 21.21%)</title><rect x="58.9059%" y="3797" width="21.2141%" height="15" fill="rgb(212,190,23)" fg:x="1766" fg:w="636"/><text x="59.1559%" y="3807.50">boggle.exe`bincode::de::impl$3::d..</text></g><g><title>boggle.exe`boggle::utils::dict_trie::_::impl$0::deserialize::impl$2::visit_seq(boggle::utils::dict_trie::_::impl$0::deserialize::__Visitor, bincode::de::impl$3::deserialize_tuple::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (636 samples, 21.21%)</title><rect x="58.9059%" y="3781" width="21.2141%" height="15" fill="rgb(216,39,24)" fg:x="1766" fg:w="636"/><text x="59.1559%" y="3791.50">boggle.exe`boggle::utils::dict_tr..</text></g><g><title>boggle.exe`serde::de::SeqAccess::next_element(bincode::de::impl$3::deserialize_tuple::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (636 samples, 21.21%)</title><rect x="58.9059%" y="3765" width="21.2141%" height="15" fill="rgb(252,113,16)" fg:x="1766" fg:w="636"/><text x="59.1559%" y="3775.50">boggle.exe`serde::de::SeqAccess::..</text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_tuple::impl$0::next_element_seed(bincode::de::impl$3::deserialize_tuple::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, core::marker::PhantomData (636 samples, 21.21%)</title><rect x="58.9059%" y="3749" width="21.2141%" height="15" fill="rgb(208,113,19)" fg:x="1766" fg:w="636"/><text x="59.1559%" y="3759.50">boggle.exe`bincode::de::impl$3::d..</text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;boggle::utils::dict_trie::DictTrieNode,alloc::boxed::Box&lt;enum2$ (636 samples, 21.21%)</title><rect x="58.9059%" y="3733" width="21.2141%" height="15" fill="rgb(234,107,25)" fg:x="1766" fg:w="636"/><text x="59.1559%" y="3743.50">boggle.exe`core::result::impl$26:..</text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_struct&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt;,boggle::utils::dict_trie::_::impl$0::deserialize::__Visitor&gt;(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, ref$&lt;str$&gt;, ref$&lt;slice2$&lt;ref$ (636 samples, 21.21%)</title><rect x="58.9059%" y="3717" width="21.2141%" height="15" fill="rgb(234,217,51)" fg:x="1766" fg:w="636"/><text x="59.1559%" y="3727.50">boggle.exe`bincode::de::impl$3::d..</text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_tuple(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (636 samples, 21.21%)</title><rect x="58.9059%" y="3701" width="21.2141%" height="15" fill="rgb(251,29,42)" fg:x="1766" fg:w="636"/><text x="59.1559%" y="3711.50">boggle.exe`bincode::de::impl$3::d..</text></g><g><title>boggle.exe`boggle::utils::dict_trie::_::impl$0::deserialize::impl$2::visit_seq(boggle::utils::dict_trie::_::impl$0::deserialize::__Visitor, bincode::de::impl$3::deserialize_tuple::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (636 samples, 21.21%)</title><rect x="58.9059%" y="3685" width="21.2141%" height="15" fill="rgb(221,62,51)" fg:x="1766" fg:w="636"/><text x="59.1559%" y="3695.50">boggle.exe`boggle::utils::dict_tr..</text></g><g><title>boggle.exe`serde::de::SeqAccess::next_element(bincode::de::impl$3::deserialize_tuple::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (636 samples, 21.21%)</title><rect x="58.9059%" y="3669" width="21.2141%" height="15" fill="rgb(240,192,43)" fg:x="1766" fg:w="636"/><text x="59.1559%" y="3679.50">boggle.exe`serde::de::SeqAccess::..</text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_tuple::impl$0::next_element_seed(bincode::de::impl$3::deserialize_tuple::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, core::marker::PhantomData&lt;std::collections::hash::map::HashMap (636 samples, 21.21%)</title><rect x="58.9059%" y="3653" width="21.2141%" height="15" fill="rgb(224,157,47)" fg:x="1766" fg:w="636"/><text x="59.1559%" y="3663.50">boggle.exe`bincode::de::impl$3::d..</text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;std::collections::hash::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;,alloc::boxed::Box&lt;enum2$ (636 samples, 21.21%)</title><rect x="58.9059%" y="3637" width="21.2141%" height="15" fill="rgb(226,84,45)" fg:x="1766" fg:w="636"/><text x="59.1559%" y="3647.50">boggle.exe`core::result::impl$26:..</text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_map&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt;,serde::de::impls::impl$202::deserialize::MapVisitor&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt; &gt;(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, serde::de::impls::impl$202::deserialize::MapVisitor (636 samples, 21.21%)</title><rect x="58.9059%" y="3621" width="21.2141%" height="15" fill="rgb(208,207,23)" fg:x="1766" fg:w="636"/><text x="59.1559%" y="3631.50">boggle.exe`bincode::de::impl$3::d..</text></g><g><title>boggle.exe`serde::de::impls::impl$202::deserialize::impl$0::visit_map(serde::de::impls::impl$202::deserialize::MapVisitor&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;, bincode::de::impl$3::deserialize_map::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (636 samples, 21.21%)</title><rect x="58.9059%" y="3605" width="21.2141%" height="15" fill="rgb(253,34,51)" fg:x="1766" fg:w="636"/><text x="59.1559%" y="3615.50">boggle.exe`serde::de::impls::impl..</text></g><g><title>boggle.exe`serde::de::MapAccess::next_entry(bincode::de::impl$3::deserialize_map::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (636 samples, 21.21%)</title><rect x="58.9059%" y="3589" width="21.2141%" height="15" fill="rgb(227,26,34)" fg:x="1766" fg:w="636"/><text x="59.1559%" y="3599.50">boggle.exe`serde::de::MapAccess::..</text></g><g><title>boggle.exe`serde::de::MapAccess::next_entry_seed(bincode::de::impl$3::deserialize_map::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, core::marker::PhantomData&lt;char&gt;, core::marker::PhantomData (636 samples, 21.21%)</title><rect x="58.9059%" y="3573" width="21.2141%" height="15" fill="rgb(245,75,19)" fg:x="1766" fg:w="636"/><text x="59.1559%" y="3583.50">boggle.exe`serde::de::MapAccess::..</text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_map::impl$0::next_value_seed(bincode::de::impl$3::deserialize_map::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, core::marker::PhantomData (636 samples, 21.21%)</title><rect x="58.9059%" y="3557" width="21.2141%" height="15" fill="rgb(250,191,31)" fg:x="1766" fg:w="636"/><text x="59.1559%" y="3567.50">boggle.exe`bincode::de::impl$3::d..</text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;boggle::utils::dict_trie::DictTrieNode,alloc::boxed::Box&lt;enum2$ (636 samples, 21.21%)</title><rect x="58.9059%" y="3541" width="21.2141%" height="15" fill="rgb(224,11,50)" fg:x="1766" fg:w="636"/><text x="59.1559%" y="3551.50">boggle.exe`core::result::impl$26:..</text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_struct&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt;,boggle::utils::dict_trie::_::impl$0::deserialize::__Visitor&gt;(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, ref$&lt;str$&gt;, ref$&lt;slice2$&lt;ref$ (636 samples, 21.21%)</title><rect x="58.9059%" y="3525" width="21.2141%" height="15" fill="rgb(231,171,7)" fg:x="1766" fg:w="636"/><text x="59.1559%" y="3535.50">boggle.exe`bincode::de::impl$3::d..</text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_tuple(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (636 samples, 21.21%)</title><rect x="58.9059%" y="3509" width="21.2141%" height="15" fill="rgb(252,214,10)" fg:x="1766" fg:w="636"/><text x="59.1559%" y="3519.50">boggle.exe`bincode::de::impl$3::d..</text></g><g><title>boggle.exe`boggle::utils::dict_trie::_::impl$0::deserialize::impl$2::visit_seq(boggle::utils::dict_trie::_::impl$0::deserialize::__Visitor, bincode::de::impl$3::deserialize_tuple::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (636 samples, 21.21%)</title><rect x="58.9059%" y="3493" width="21.2141%" height="15" fill="rgb(249,45,46)" fg:x="1766" fg:w="636"/><text x="59.1559%" y="3503.50">boggle.exe`boggle::utils::dict_tr..</text></g><g><title>boggle.exe`serde::de::SeqAccess::next_element(bincode::de::impl$3::deserialize_tuple::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (636 samples, 21.21%)</title><rect x="58.9059%" y="3477" width="21.2141%" height="15" fill="rgb(240,173,7)" fg:x="1766" fg:w="636"/><text x="59.1559%" y="3487.50">boggle.exe`serde::de::SeqAccess::..</text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_tuple::impl$0::next_element_seed(bincode::de::impl$3::deserialize_tuple::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, core::marker::PhantomData&lt;std::collections::hash::map::HashMap (636 samples, 21.21%)</title><rect x="58.9059%" y="3461" width="21.2141%" height="15" fill="rgb(235,214,13)" fg:x="1766" fg:w="636"/><text x="59.1559%" y="3471.50">boggle.exe`bincode::de::impl$3::d..</text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;std::collections::hash::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;,alloc::boxed::Box&lt;enum2$ (636 samples, 21.21%)</title><rect x="58.9059%" y="3445" width="21.2141%" height="15" fill="rgb(245,156,8)" fg:x="1766" fg:w="636"/><text x="59.1559%" y="3455.50">boggle.exe`core::result::impl$26:..</text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_map&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt;,serde::de::impls::impl$202::deserialize::MapVisitor&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt; &gt;(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, serde::de::impls::impl$202::deserialize::MapVisitor (636 samples, 21.21%)</title><rect x="58.9059%" y="3429" width="21.2141%" height="15" fill="rgb(235,46,12)" fg:x="1766" fg:w="636"/><text x="59.1559%" y="3439.50">boggle.exe`bincode::de::impl$3::d..</text></g><g><title>boggle.exe`serde::de::impls::impl$202::deserialize::impl$0::visit_map(serde::de::impls::impl$202::deserialize::MapVisitor&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;, bincode::de::impl$3::deserialize_map::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (636 samples, 21.21%)</title><rect x="58.9059%" y="3413" width="21.2141%" height="15" fill="rgb(221,81,14)" fg:x="1766" fg:w="636"/><text x="59.1559%" y="3423.50">boggle.exe`serde::de::impls::impl..</text></g><g><title>boggle.exe`serde::de::MapAccess::next_entry(bincode::de::impl$3::deserialize_map::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (636 samples, 21.21%)</title><rect x="58.9059%" y="3397" width="21.2141%" height="15" fill="rgb(238,207,9)" fg:x="1766" fg:w="636"/><text x="59.1559%" y="3407.50">boggle.exe`serde::de::MapAccess::..</text></g><g><title>boggle.exe`serde::de::MapAccess::next_entry_seed(bincode::de::impl$3::deserialize_map::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, core::marker::PhantomData&lt;char&gt;, core::marker::PhantomData (636 samples, 21.21%)</title><rect x="58.9059%" y="3381" width="21.2141%" height="15" fill="rgb(224,129,35)" fg:x="1766" fg:w="636"/><text x="59.1559%" y="3391.50">boggle.exe`serde::de::MapAccess::..</text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_map::impl$0::next_value_seed(bincode::de::impl$3::deserialize_map::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, core::marker::PhantomData (636 samples, 21.21%)</title><rect x="58.9059%" y="3365" width="21.2141%" height="15" fill="rgb(243,218,34)" fg:x="1766" fg:w="636"/><text x="59.1559%" y="3375.50">boggle.exe`bincode::de::impl$3::d..</text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;boggle::utils::dict_trie::DictTrieNode,alloc::boxed::Box&lt;enum2$ (636 samples, 21.21%)</title><rect x="58.9059%" y="3349" width="21.2141%" height="15" fill="rgb(220,166,13)" fg:x="1766" fg:w="636"/><text x="59.1559%" y="3359.50">boggle.exe`core::result::impl$26:..</text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_struct&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt;,boggle::utils::dict_trie::_::impl$0::deserialize::__Visitor&gt;(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, ref$&lt;str$&gt;, ref$&lt;slice2$&lt;ref$ (636 samples, 21.21%)</title><rect x="58.9059%" y="3333" width="21.2141%" height="15" fill="rgb(227,167,49)" fg:x="1766" fg:w="636"/><text x="59.1559%" y="3343.50">boggle.exe`bincode::de::impl$3::d..</text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_tuple(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (636 samples, 21.21%)</title><rect x="58.9059%" y="3317" width="21.2141%" height="15" fill="rgb(234,142,12)" fg:x="1766" fg:w="636"/><text x="59.1559%" y="3327.50">boggle.exe`bincode::de::impl$3::d..</text></g><g><title>boggle.exe`boggle::utils::dict_trie::_::impl$0::deserialize::impl$2::visit_seq(boggle::utils::dict_trie::_::impl$0::deserialize::__Visitor, bincode::de::impl$3::deserialize_tuple::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (636 samples, 21.21%)</title><rect x="58.9059%" y="3301" width="21.2141%" height="15" fill="rgb(207,100,48)" fg:x="1766" fg:w="636"/><text x="59.1559%" y="3311.50">boggle.exe`boggle::utils::dict_tr..</text></g><g><title>boggle.exe`serde::de::SeqAccess::next_element(bincode::de::impl$3::deserialize_tuple::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (636 samples, 21.21%)</title><rect x="58.9059%" y="3285" width="21.2141%" height="15" fill="rgb(210,25,14)" fg:x="1766" fg:w="636"/><text x="59.1559%" y="3295.50">boggle.exe`serde::de::SeqAccess::..</text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_tuple::impl$0::next_element_seed(bincode::de::impl$3::deserialize_tuple::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, core::marker::PhantomData&lt;std::collections::hash::map::HashMap (636 samples, 21.21%)</title><rect x="58.9059%" y="3269" width="21.2141%" height="15" fill="rgb(246,116,27)" fg:x="1766" fg:w="636"/><text x="59.1559%" y="3279.50">boggle.exe`bincode::de::impl$3::d..</text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;std::collections::hash::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;,alloc::boxed::Box&lt;enum2$ (636 samples, 21.21%)</title><rect x="58.9059%" y="3253" width="21.2141%" height="15" fill="rgb(214,193,42)" fg:x="1766" fg:w="636"/><text x="59.1559%" y="3263.50">boggle.exe`core::result::impl$26:..</text></g><g><title>boggle.exe`bincode::de::impl$3::deserialize_map&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt;,serde::de::impls::impl$202::deserialize::MapVisitor&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt; &gt;(bincode::de::Deserializer&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding&lt;bincode::config::DefaultOptions,bincode::config::int::FixintEncoding&gt;,bincode::config::trailing::AllowTrailing&gt;,bincode::config::limit::Infinite&gt; &gt;*, serde::de::impls::impl$202::deserialize::MapVisitor (636 samples, 21.21%)</title><rect x="58.9059%" y="3237" width="21.2141%" height="15" fill="rgb(214,122,8)" fg:x="1766" fg:w="636"/><text x="59.1559%" y="3247.50">boggle.exe`bincode::de::impl$3::d..</text></g><g><title>boggle.exe`serde::de::impls::impl$202::deserialize::impl$0::visit_map(serde::de::impls::impl$202::deserialize::MapVisitor&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;, bincode::de::impl$3::deserialize_map::Access&lt;bincode::de::read::SliceReader,bincode::config::WithOtherLimit&lt;bincode::config::WithOtherTrailing&lt;bincode::config::WithOtherIntEncoding (636 samples, 21.21%)</title><rect x="58.9059%" y="3221" width="21.2141%" height="15" fill="rgb(244,173,18)" fg:x="1766" fg:w="636"/><text x="59.1559%" y="3231.50">boggle.exe`serde::de::impls::impl..</text></g><g><title>boggle.exe`std::collections::hash::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState&gt;::with_capacity_and_hasher (2 samples, 0.07%)</title><rect x="80.0534%" y="3205" width="0.0667%" height="15" fill="rgb(232,68,19)" fg:x="2400" fg:w="2"/><text x="80.3034%" y="3215.50"></text></g><g><title>boggle.exe`hashbrown::map::HashMap&lt;char,boggle::utils::dict_trie::DictTrieNode,std::hash::random::RandomState,alloc::alloc::Global&gt;::with_capacity_and_hasher (2 samples, 0.07%)</title><rect x="80.0534%" y="3189" width="0.0667%" height="15" fill="rgb(236,224,1)" fg:x="2400" fg:w="2"/><text x="80.3034%" y="3199.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTable&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;::with_capacity_in&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt; (2 samples, 0.07%)</title><rect x="80.0534%" y="3173" width="0.0667%" height="15" fill="rgb(240,11,8)" fg:x="2400" fg:w="2"/><text x="80.3034%" y="3183.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::with_capacity (2 samples, 0.07%)</title><rect x="80.0534%" y="3157" width="0.0667%" height="15" fill="rgb(244,159,20)" fg:x="2400" fg:w="2"/><text x="80.3034%" y="3167.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::fallible_with_capacity (2 samples, 0.07%)</title><rect x="80.0534%" y="3141" width="0.0667%" height="15" fill="rgb(240,223,54)" fg:x="2400" fg:w="2"/><text x="80.3034%" y="3151.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::new_uninitialized (2 samples, 0.07%)</title><rect x="80.0534%" y="3125" width="0.0667%" height="15" fill="rgb(237,146,5)" fg:x="2400" fg:w="2"/><text x="80.3034%" y="3135.50"></text></g><g><title>boggle.exe`hashbrown::raw::alloc::inner::do_alloc (2 samples, 0.07%)</title><rect x="80.0534%" y="3109" width="0.0667%" height="15" fill="rgb(218,221,32)" fg:x="2400" fg:w="2"/><text x="80.3034%" y="3119.50"></text></g><g><title>`0x7FFAC12C7776 (2 samples, 0.07%)</title><rect x="80.0534%" y="3093" width="0.0667%" height="15" fill="rgb(244,96,26)" fg:x="2400" fg:w="2"/><text x="80.3034%" y="3103.50"></text></g><g><title>`0x7FFAC12C7AFE (1 samples, 0.03%)</title><rect x="80.0867%" y="3077" width="0.0334%" height="15" fill="rgb(245,184,37)" fg:x="2401" fg:w="1"/><text x="80.3367%" y="3087.50"></text></g><g><title>`0x7FFAC12AFC80 (1 samples, 0.03%)</title><rect x="80.0867%" y="3061" width="0.0334%" height="15" fill="rgb(248,91,47)" fg:x="2401" fg:w="1"/><text x="80.3367%" y="3071.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place (1 samples, 0.03%)</title><rect x="80.1201%" y="4021" width="0.0334%" height="15" fill="rgb(243,199,8)" fg:x="2402" fg:w="1"/><text x="80.3701%" y="4031.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place (1 samples, 0.03%)</title><rect x="80.1201%" y="4005" width="0.0334%" height="15" fill="rgb(249,12,15)" fg:x="2402" fg:w="1"/><text x="80.3701%" y="4015.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place (1 samples, 0.03%)</title><rect x="80.1201%" y="3989" width="0.0334%" height="15" fill="rgb(245,97,12)" fg:x="2402" fg:w="1"/><text x="80.3701%" y="3999.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place (1 samples, 0.03%)</title><rect x="80.1201%" y="3973" width="0.0334%" height="15" fill="rgb(244,61,1)" fg:x="2402" fg:w="1"/><text x="80.3701%" y="3983.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(alloc::vec::Vec (1 samples, 0.03%)</title><rect x="80.1201%" y="3957" width="0.0334%" height="15" fill="rgb(222,194,10)" fg:x="2402" fg:w="1"/><text x="80.3701%" y="3967.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (1 samples, 0.03%)</title><rect x="80.1201%" y="3941" width="0.0334%" height="15" fill="rgb(226,178,8)" fg:x="2402" fg:w="1"/><text x="80.3701%" y="3951.50"></text></g><g><title>boggle.exe`alloc::raw_vec::impl$4::drop(alloc::raw_vec::RawVec (1 samples, 0.03%)</title><rect x="80.1201%" y="3925" width="0.0334%" height="15" fill="rgb(241,32,34)" fg:x="2402" fg:w="1"/><text x="80.3701%" y="3935.50"></text></g><g><title>`0x7FFAC12D2871 (1 samples, 0.03%)</title><rect x="80.1201%" y="3909" width="0.0334%" height="15" fill="rgb(254,26,6)" fg:x="2402" fg:w="1"/><text x="80.3701%" y="3919.50"></text></g><g><title>`0x7FFAC12CB3ED (1 samples, 0.03%)</title><rect x="80.1201%" y="3893" width="0.0334%" height="15" fill="rgb(249,71,11)" fg:x="2402" fg:w="1"/><text x="80.3701%" y="3903.50"></text></g><g><title>`0x7FFAC130E5EF (1 samples, 0.03%)</title><rect x="80.1201%" y="3877" width="0.0334%" height="15" fill="rgb(232,170,27)" fg:x="2402" fg:w="1"/><text x="80.3701%" y="3887.50"></text></g><g><title>`0x7FFAC13FFAE4 (1 samples, 0.03%)</title><rect x="80.1201%" y="3861" width="0.0334%" height="15" fill="rgb(214,223,17)" fg:x="2402" fg:w="1"/><text x="80.3701%" y="3871.50"></text></g><g><title>`0x7FFABE9890A5 (1 samples, 0.03%)</title><rect x="80.1534%" y="3989" width="0.0334%" height="15" fill="rgb(250,18,15)" fg:x="2403" fg:w="1"/><text x="80.4034%" y="3999.50"></text></g><g><title>`0x7FFAC12B5A66 (1 samples, 0.03%)</title><rect x="80.1534%" y="3973" width="0.0334%" height="15" fill="rgb(212,153,51)" fg:x="2403" fg:w="1"/><text x="80.4034%" y="3983.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch (13 samples, 0.43%)</title><rect x="80.1868%" y="3989" width="0.4336%" height="15" fill="rgb(219,194,12)" fg:x="2404" fg:w="13"/><text x="80.4368%" y="3999.50"></text></g><g><title>boggle.exe`std::io::default_read_to_end&lt;std::fs::File&gt; (13 samples, 0.43%)</title><rect x="80.1868%" y="3973" width="0.4336%" height="15" fill="rgb(212,58,17)" fg:x="2404" fg:w="13"/><text x="80.4368%" y="3983.50"></text></g><g><title>boggle.exe`std::fs::impl$8::read_buf (13 samples, 0.43%)</title><rect x="80.1868%" y="3957" width="0.4336%" height="15" fill="rgb(254,5,10)" fg:x="2404" fg:w="13"/><text x="80.4368%" y="3967.50"></text></g><g><title>boggle.exe`std::fs::impl$5::read_buf (13 samples, 0.43%)</title><rect x="80.1868%" y="3941" width="0.4336%" height="15" fill="rgb(246,91,7)" fg:x="2404" fg:w="13"/><text x="80.4368%" y="3951.50"></text></g><g><title>boggle.exe`std::sys::pal::windows::fs::File::read_buf (13 samples, 0.43%)</title><rect x="80.1868%" y="3925" width="0.4336%" height="15" fill="rgb(218,108,49)" fg:x="2404" fg:w="13"/><text x="80.4368%" y="3935.50"></text></g><g><title>boggle.exe`std::sys::pal::windows::handle::Handle::read_buf (13 samples, 0.43%)</title><rect x="80.1868%" y="3909" width="0.4336%" height="15" fill="rgb(238,123,20)" fg:x="2404" fg:w="13"/><text x="80.4368%" y="3919.50"></text></g><g><title>boggle.exe`std::sys::pal::windows::handle::Handle::synchronous_read (13 samples, 0.43%)</title><rect x="80.1868%" y="3893" width="0.4336%" height="15" fill="rgb(231,69,23)" fg:x="2404" fg:w="13"/><text x="80.4368%" y="3903.50"></text></g><g><title>`0x7FFAC13FF7E4 (13 samples, 0.43%)</title><rect x="80.1868%" y="3877" width="0.4336%" height="15" fill="rgb(230,209,3)" fg:x="2404" fg:w="13"/><text x="80.4368%" y="3887.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;alloc::vec::Vec (15 samples, 0.50%)</title><rect x="80.1534%" y="4021" width="0.5003%" height="15" fill="rgb(231,19,0)" fg:x="2403" fg:w="15"/><text x="80.4034%" y="4031.50"></text></g><g><title>boggle.exe`std::fs::read::inner (15 samples, 0.50%)</title><rect x="80.1534%" y="4005" width="0.5003%" height="15" fill="rgb(226,192,25)" fg:x="2403" fg:w="15"/><text x="80.4034%" y="4015.50"></text></g><g><title>boggle.exe`std::fs::File::open (1 samples, 0.03%)</title><rect x="80.6204%" y="3989" width="0.0334%" height="15" fill="rgb(223,175,53)" fg:x="2417" fg:w="1"/><text x="80.8704%" y="3999.50"></text></g><g><title>boggle.exe`std::fs::OpenOptions::open (1 samples, 0.03%)</title><rect x="80.6204%" y="3973" width="0.0334%" height="15" fill="rgb(248,35,51)" fg:x="2417" fg:w="1"/><text x="80.8704%" y="3983.50"></text></g><g><title>boggle.exe`std::fs::OpenOptions::_open (1 samples, 0.03%)</title><rect x="80.6204%" y="3957" width="0.0334%" height="15" fill="rgb(230,37,26)" fg:x="2417" fg:w="1"/><text x="80.8704%" y="3967.50"></text></g><g><title>boggle.exe`core::result::Result::map (1 samples, 0.03%)</title><rect x="80.6204%" y="3941" width="0.0334%" height="15" fill="rgb(206,120,22)" fg:x="2417" fg:w="1"/><text x="80.8704%" y="3951.50"></text></g><g><title>boggle.exe`std::sys::pal::windows::fs::File::open (1 samples, 0.03%)</title><rect x="80.6204%" y="3925" width="0.0334%" height="15" fill="rgb(207,165,28)" fg:x="2417" fg:w="1"/><text x="80.8704%" y="3935.50"></text></g><g><title>boggle.exe`std::os::windows::io::handle::impl$13::try_from (1 samples, 0.03%)</title><rect x="80.6204%" y="3909" width="0.0334%" height="15" fill="rgb(226,23,46)" fg:x="2417" fg:w="1"/><text x="80.8704%" y="3919.50"></text></g><g><title>boggle.exe`std::os::windows::io::handle::HandleOrInvalid::is_valid (1 samples, 0.03%)</title><rect x="80.6204%" y="3893" width="0.0334%" height="15" fill="rgb(208,130,44)" fg:x="2417" fg:w="1"/><text x="80.8704%" y="3903.50"></text></g><g><title>`0x7FFABE9887AB (1 samples, 0.03%)</title><rect x="80.6204%" y="3877" width="0.0334%" height="15" fill="rgb(231,67,8)" fg:x="2417" fg:w="1"/><text x="80.8704%" y="3887.50"></text></g><g><title>`0x7FFABE988B0B (1 samples, 0.03%)</title><rect x="80.6204%" y="3861" width="0.0334%" height="15" fill="rgb(205,183,22)" fg:x="2417" fg:w="1"/><text x="80.8704%" y="3871.50"></text></g><g><title>`0x7FFAC14001C4 (1 samples, 0.03%)</title><rect x="80.6204%" y="3845" width="0.0334%" height="15" fill="rgb(224,47,9)" fg:x="2417" fg:w="1"/><text x="80.8704%" y="3855.50"></text></g><g><title>`0x7FFABE9890B9 (1 samples, 0.03%)</title><rect x="80.6538%" y="3941" width="0.0334%" height="15" fill="rgb(250,183,49)" fg:x="2418" fg:w="1"/><text x="80.9038%" y="3951.50"></text></g><g><title>`0x7FFAC13FF904 (1 samples, 0.03%)</title><rect x="80.6538%" y="3925" width="0.0334%" height="15" fill="rgb(220,151,39)" fg:x="2418" fg:w="1"/><text x="80.9038%" y="3935.50"></text></g><g><title>boggle.exe`enum2$&lt;core::result::Result&lt;boggle::utils::dict_trie::DictTrie,std::io::error::Error&gt; &gt;::unwrap_or_else(enum2$&lt;core::result::Result (654 samples, 21.81%)</title><rect x="58.9059%" y="4053" width="21.8145%" height="15" fill="rgb(220,118,20)" fg:x="1766" fg:w="654"/><text x="59.1559%" y="4063.50">boggle.exe`enum2$&lt;core::result::Re..</text></g><g><title>boggle.exe`boggle::utils::trie_manager::load_trie (654 samples, 21.81%)</title><rect x="58.9059%" y="4037" width="21.8145%" height="15" fill="rgb(231,65,51)" fg:x="1766" fg:w="654"/><text x="59.1559%" y="4047.50">boggle.exe`boggle::utils::trie_man..</text></g><g><title>boggle.exe`std::path::Path::exists(ref$ (2 samples, 0.07%)</title><rect x="80.6538%" y="4021" width="0.0667%" height="15" fill="rgb(253,125,37)" fg:x="2418" fg:w="2"/><text x="80.9038%" y="4031.50"></text></g><g><title>boggle.exe`std::fs::metadata(ref$ (2 samples, 0.07%)</title><rect x="80.6538%" y="4005" width="0.0667%" height="15" fill="rgb(232,102,6)" fg:x="2418" fg:w="2"/><text x="80.9038%" y="4015.50"></text></g><g><title>boggle.exe`enum2$&lt;core::result::Result&lt;std::sys::pal::windows::fs::FileAttr,std::io::error::Error&gt; &gt;::map(enum2$&lt;core::result::Result&lt;std::sys::pal::windows::fs::FileAttr,std::io::error::Error&gt; &gt;, std::fs::Metadata (*) (2 samples, 0.07%)</title><rect x="80.6538%" y="3989" width="0.0667%" height="15" fill="rgb(251,105,13)" fg:x="2418" fg:w="2"/><text x="80.9038%" y="3999.50"></text></g><g><title>boggle.exe`std::sys::pal::windows::fs::stat (2 samples, 0.07%)</title><rect x="80.6538%" y="3973" width="0.0667%" height="15" fill="rgb(222,179,29)" fg:x="2418" fg:w="2"/><text x="80.9038%" y="3983.50"></text></g><g><title>boggle.exe`std::sys::pal::windows::fs::metadata (2 samples, 0.07%)</title><rect x="80.6538%" y="3957" width="0.0667%" height="15" fill="rgb(229,180,53)" fg:x="2418" fg:w="2"/><text x="80.9038%" y="3967.50"></text></g><g><title>boggle.exe`std::sys::pal::windows::fs::File::open (1 samples, 0.03%)</title><rect x="80.6871%" y="3941" width="0.0334%" height="15" fill="rgb(238,104,13)" fg:x="2419" fg:w="1"/><text x="80.9371%" y="3951.50"></text></g><g><title>boggle.exe`std::os::windows::io::handle::impl$13::try_from (1 samples, 0.03%)</title><rect x="80.6871%" y="3925" width="0.0334%" height="15" fill="rgb(210,130,5)" fg:x="2419" fg:w="1"/><text x="80.9371%" y="3935.50"></text></g><g><title>boggle.exe`std::os::windows::io::handle::HandleOrInvalid::is_valid (1 samples, 0.03%)</title><rect x="80.6871%" y="3909" width="0.0334%" height="15" fill="rgb(233,87,49)" fg:x="2419" fg:w="1"/><text x="80.9371%" y="3919.50"></text></g><g><title>`0x7FFABE9887AB (1 samples, 0.03%)</title><rect x="80.6871%" y="3893" width="0.0334%" height="15" fill="rgb(243,34,9)" fg:x="2419" fg:w="1"/><text x="80.9371%" y="3903.50"></text></g><g><title>`0x7FFABE988B0B (1 samples, 0.03%)</title><rect x="80.6871%" y="3877" width="0.0334%" height="15" fill="rgb(235,225,10)" fg:x="2419" fg:w="1"/><text x="80.9371%" y="3887.50"></text></g><g><title>`0x7FFAC14001C4 (1 samples, 0.03%)</title><rect x="80.6871%" y="3861" width="0.0334%" height="15" fill="rgb(212,0,30)" fg:x="2419" fg:w="1"/><text x="80.9371%" y="3871.50"></text></g><g><title>boggle.exe`boggle::BoggleGame::new (2,404 samples, 80.19%)</title><rect x="0.5670%" y="4213" width="80.1868%" height="15" fill="rgb(211,177,0)" fg:x="17" fg:w="2404"/><text x="0.8170%" y="4223.50">boggle.exe`boggle::BoggleGame::new</text></g><g><title>boggle.exe`std::collections::hash::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;::new (2,404 samples, 80.19%)</title><rect x="0.5670%" y="4197" width="80.1868%" height="15" fill="rgb(225,220,11)" fg:x="17" fg:w="2404"/><text x="0.8170%" y="4207.50">boggle.exe`std::collections::hash::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;::new</text></g><g><title>boggle.exe`std::collections::hash::set::impl$11::default (2,404 samples, 80.19%)</title><rect x="0.5670%" y="4181" width="80.1868%" height="15" fill="rgb(215,10,13)" fg:x="17" fg:w="2404"/><text x="0.8170%" y="4191.50">boggle.exe`std::collections::hash::set::impl$11::default</text></g><g><title>boggle.exe`hashbrown::set::impl$13::default (2,404 samples, 80.19%)</title><rect x="0.5670%" y="4165" width="80.1868%" height="15" fill="rgb(240,177,14)" fg:x="17" fg:w="2404"/><text x="0.8170%" y="4175.50">boggle.exe`hashbrown::set::impl$13::default</text></g><g><title>boggle.exe`hashbrown::map::impl$8::default (2,404 samples, 80.19%)</title><rect x="0.5670%" y="4149" width="80.1868%" height="15" fill="rgb(243,7,39)" fg:x="17" fg:w="2404"/><text x="0.8170%" y="4159.50">boggle.exe`hashbrown::map::impl$8::default</text></g><g><title>boggle.exe`std::hash::random::impl$5::default (2,404 samples, 80.19%)</title><rect x="0.5670%" y="4133" width="80.1868%" height="15" fill="rgb(212,99,0)" fg:x="17" fg:w="2404"/><text x="0.8170%" y="4143.50">boggle.exe`std::hash::random::impl$5::default</text></g><g><title>boggle.exe`std::hash::random::RandomState::new (2,404 samples, 80.19%)</title><rect x="0.5670%" y="4117" width="80.1868%" height="15" fill="rgb(225,162,48)" fg:x="17" fg:w="2404"/><text x="0.8170%" y="4127.50">boggle.exe`std::hash::random::RandomState::new</text></g><g><title>boggle.exe`std::thread::local::LocalKey&lt;core::cell::Cell&lt;tuple$&lt;u64,u64&gt; &gt; &gt;::with (2,404 samples, 80.19%)</title><rect x="0.5670%" y="4101" width="80.1868%" height="15" fill="rgb(246,16,25)" fg:x="17" fg:w="2404"/><text x="0.8170%" y="4111.50">boggle.exe`std::thread::local::LocalKey&lt;core::cell::Cell&lt;tuple$&lt;u64,u64&gt; &gt; &gt;::with</text></g><g><title>boggle.exe`std::thread::local::LocalKey&lt;core::cell::Cell&lt;tuple$&lt;u64,u64&gt; &gt; &gt;::try_with (2,404 samples, 80.19%)</title><rect x="0.5670%" y="4085" width="80.1868%" height="15" fill="rgb(220,150,2)" fg:x="17" fg:w="2404"/><text x="0.8170%" y="4095.50">boggle.exe`std::thread::local::LocalKey&lt;core::cell::Cell&lt;tuple$&lt;u64,u64&gt; &gt; &gt;::try_with</text></g><g><title>boggle.exe`boggle::BoggleSolver::new (2,404 samples, 80.19%)</title><rect x="0.5670%" y="4069" width="80.1868%" height="15" fill="rgb(237,113,11)" fg:x="17" fg:w="2404"/><text x="0.8170%" y="4079.50">boggle.exe`boggle::BoggleSolver::new</text></g><g><title>boggle.exe`std::collections::hash::set::HashSet&lt;alloc::string::String,std::hash::random::RandomState&gt;::new (1 samples, 0.03%)</title><rect x="80.7205%" y="4053" width="0.0334%" height="15" fill="rgb(236,70,20)" fg:x="2420" fg:w="1"/><text x="80.9705%" y="4063.50"></text></g><g><title>boggle.exe`std::collections::hash::set::impl$11::default (1 samples, 0.03%)</title><rect x="80.7205%" y="4037" width="0.0334%" height="15" fill="rgb(234,94,7)" fg:x="2420" fg:w="1"/><text x="80.9705%" y="4047.50"></text></g><g><title>boggle.exe`hashbrown::set::impl$13::default (1 samples, 0.03%)</title><rect x="80.7205%" y="4021" width="0.0334%" height="15" fill="rgb(250,221,0)" fg:x="2420" fg:w="1"/><text x="80.9705%" y="4031.50"></text></g><g><title>boggle.exe`hashbrown::map::impl$8::default (1 samples, 0.03%)</title><rect x="80.7205%" y="4005" width="0.0334%" height="15" fill="rgb(245,149,46)" fg:x="2420" fg:w="1"/><text x="80.9705%" y="4015.50"></text></g><g><title>boggle.exe`std::hash::random::impl$5::default (1 samples, 0.03%)</title><rect x="80.7205%" y="3989" width="0.0334%" height="15" fill="rgb(215,37,27)" fg:x="2420" fg:w="1"/><text x="80.9705%" y="3999.50"></text></g><g><title>boggle.exe`std::hash::random::RandomState::new (1 samples, 0.03%)</title><rect x="80.7205%" y="3973" width="0.0334%" height="15" fill="rgb(232,65,3)" fg:x="2420" fg:w="1"/><text x="80.9705%" y="3983.50"></text></g><g><title>boggle.exe`std::thread::local::LocalKey&lt;core::cell::Cell&lt;tuple$&lt;u64,u64&gt; &gt; &gt;::with (1 samples, 0.03%)</title><rect x="80.7205%" y="3957" width="0.0334%" height="15" fill="rgb(214,2,16)" fg:x="2420" fg:w="1"/><text x="80.9705%" y="3967.50"></text></g><g><title>boggle.exe`std::thread::local::LocalKey&lt;core::cell::Cell&lt;tuple$&lt;u64,u64&gt; &gt; &gt;::try_with (1 samples, 0.03%)</title><rect x="80.7205%" y="3941" width="0.0334%" height="15" fill="rgb(227,131,50)" fg:x="2420" fg:w="1"/><text x="80.9705%" y="3951.50"></text></g><g><title>boggle.exe`boggle::boggle_utils::boggle_board::BoggleBoard::new (1 samples, 0.03%)</title><rect x="80.7205%" y="3925" width="0.0334%" height="15" fill="rgb(247,131,45)" fg:x="2420" fg:w="1"/><text x="80.9705%" y="3935.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;boggle::boggle_utils::boggle_char::BoggleChar,alloc::alloc::Global&gt;::push (1 samples, 0.03%)</title><rect x="80.7205%" y="3909" width="0.0334%" height="15" fill="rgb(215,97,47)" fg:x="2420" fg:w="1"/><text x="80.9705%" y="3919.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::grow_one&lt;u8,alloc::alloc::Global&gt; (1 samples, 0.03%)</title><rect x="80.7205%" y="3893" width="0.0334%" height="15" fill="rgb(233,143,12)" fg:x="2420" fg:w="1"/><text x="80.9705%" y="3903.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_one (1 samples, 0.03%)</title><rect x="80.7205%" y="3877" width="0.0334%" height="15" fill="rgb(222,57,17)" fg:x="2420" fg:w="1"/><text x="80.9705%" y="3887.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (1 samples, 0.03%)</title><rect x="80.7205%" y="3861" width="0.0334%" height="15" fill="rgb(214,119,38)" fg:x="2420" fg:w="1"/><text x="80.9705%" y="3871.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (1 samples, 0.03%)</title><rect x="80.7205%" y="3845" width="0.0334%" height="15" fill="rgb(217,28,47)" fg:x="2420" fg:w="1"/><text x="80.9705%" y="3855.50"></text></g><g><title>boggle.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="80.7205%" y="3829" width="0.0334%" height="15" fill="rgb(231,14,52)" fg:x="2420" fg:w="1"/><text x="80.9705%" y="3839.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="80.7205%" y="3813" width="0.0334%" height="15" fill="rgb(220,158,18)" fg:x="2420" fg:w="1"/><text x="80.9705%" y="3823.50"></text></g><g><title>boggle.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="80.7205%" y="3797" width="0.0334%" height="15" fill="rgb(222,143,46)" fg:x="2420" fg:w="1"/><text x="80.9705%" y="3807.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="80.7205%" y="3781" width="0.0334%" height="15" fill="rgb(227,165,5)" fg:x="2420" fg:w="1"/><text x="80.9705%" y="3791.50"></text></g><g><title>`0x7FFAC12C7776 (1 samples, 0.03%)</title><rect x="80.7205%" y="3765" width="0.0334%" height="15" fill="rgb(216,222,49)" fg:x="2420" fg:w="1"/><text x="80.9705%" y="3775.50"></text></g><g><title>`0x7FFAC12C78B4 (1 samples, 0.03%)</title><rect x="80.7205%" y="3749" width="0.0334%" height="15" fill="rgb(238,73,39)" fg:x="2420" fg:w="1"/><text x="80.9705%" y="3759.50"></text></g><g><title>`0x7FFAC12C8E6D (1 samples, 0.03%)</title><rect x="80.7205%" y="3733" width="0.0334%" height="15" fill="rgb(252,115,9)" fg:x="2420" fg:w="1"/><text x="80.9705%" y="3743.50"></text></g><g><title>`0x7FFAC139099C (1 samples, 0.03%)</title><rect x="80.7205%" y="3717" width="0.0334%" height="15" fill="rgb(238,202,4)" fg:x="2420" fg:w="1"/><text x="80.9705%" y="3727.50"></text></g><g><title>boggle.exe`core::fmt::Arguments::new_const(ref$ (1 samples, 0.03%)</title><rect x="80.7538%" y="4165" width="0.0334%" height="15" fill="rgb(252,153,44)" fg:x="2421" fg:w="1"/><text x="81.0038%" y="4175.50"></text></g><g><title>boggle.exe`core::slice::sort::stable::driftsort_main&lt;ref$&lt;alloc::string::String&gt;,alloc::slice::impl$0::sort_by::closure_env$0&lt;ref$&lt;alloc::string::String&gt;,boggle::impl$1::print_found_words::closure_env$0&gt;,alloc::vec::Vec&lt;ref$&lt;alloc::string::String&gt;,alloc::alloc::Global&gt; &gt;(ref_mut$&lt;slice2$&lt;ref$&lt;alloc::string::String&gt; &gt; &gt;, alloc::slice::impl$0::sort_by::closure_env$0&lt;ref$ (1 samples, 0.03%)</title><rect x="80.7538%" y="4149" width="0.0334%" height="15" fill="rgb(235,128,27)" fg:x="2421" fg:w="1"/><text x="81.0038%" y="4159.50"></text></g><g><title>boggle.exe`core::slice::sort::stable::drift::sort&lt;ref$&lt;alloc::string::String&gt;,alloc::slice::impl$0::sort_by::closure_env$0&lt;ref$&lt;alloc::string::String&gt;,boggle::impl$1::print_possible_words::closure_env$0&gt; &gt;(ref_mut$&lt;slice2$&lt;ref$&lt;alloc::string::String&gt; &gt; &gt;, ref_mut$&lt;slice2$&lt;core::mem::maybe_uninit::MaybeUninit&lt;ref$&lt;alloc::string::String&gt; &gt; &gt; &gt;, bool, alloc::slice::impl$0::sort_by::closure_env$0&lt;ref$ (1 samples, 0.03%)</title><rect x="80.7538%" y="4133" width="0.0334%" height="15" fill="rgb(221,121,47)" fg:x="2421" fg:w="1"/><text x="81.0038%" y="4143.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(alloc::vec::Vec&lt;ref$ (1 samples, 0.03%)</title><rect x="80.7872%" y="4165" width="0.0334%" height="15" fill="rgb(247,211,47)" fg:x="2422" fg:w="1"/><text x="81.0372%" y="4175.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec&lt;ref$ (1 samples, 0.03%)</title><rect x="80.7872%" y="4149" width="0.0334%" height="15" fill="rgb(252,47,49)" fg:x="2422" fg:w="1"/><text x="81.0372%" y="4159.50"></text></g><g><title>boggle.exe`alloc::raw_vec::impl$4::drop(alloc::raw_vec::RawVec&lt;ref$ (1 samples, 0.03%)</title><rect x="80.7872%" y="4133" width="0.0334%" height="15" fill="rgb(219,119,53)" fg:x="2422" fg:w="1"/><text x="81.0372%" y="4143.50"></text></g><g><title>boggle.exe`std::io::stdio::_print (1 samples, 0.03%)</title><rect x="80.7872%" y="4117" width="0.0334%" height="15" fill="rgb(243,165,53)" fg:x="2422" fg:w="1"/><text x="81.0372%" y="4127.50"></text></g><g><title>boggle.exe`std::io::stdio::print_to (1 samples, 0.03%)</title><rect x="80.7872%" y="4101" width="0.0334%" height="15" fill="rgb(230,12,35)" fg:x="2422" fg:w="1"/><text x="81.0372%" y="4111.50"></text></g><g><title>boggle.exe`std::io::stdio::impl$16::write_fmt (1 samples, 0.03%)</title><rect x="80.7872%" y="4085" width="0.0334%" height="15" fill="rgb(239,57,49)" fg:x="2422" fg:w="1"/><text x="81.0372%" y="4095.50"></text></g><g><title>boggle.exe`std::io::Write::write_fmt (1 samples, 0.03%)</title><rect x="80.7872%" y="4069" width="0.0334%" height="15" fill="rgb(231,154,7)" fg:x="2422" fg:w="1"/><text x="81.0372%" y="4079.50"></text></g><g><title>boggle.exe`core::fmt::write (1 samples, 0.03%)</title><rect x="80.7872%" y="4053" width="0.0334%" height="15" fill="rgb(248,81,34)" fg:x="2422" fg:w="1"/><text x="81.0372%" y="4063.50"></text></g><g><title>boggle.exe`std::io::Write::write_fmt::impl$0::write_str&lt;std::io::stdio::StdoutLock&gt; (1 samples, 0.03%)</title><rect x="80.7872%" y="4037" width="0.0334%" height="15" fill="rgb(247,9,5)" fg:x="2422" fg:w="1"/><text x="81.0372%" y="4047.50"></text></g><g><title>boggle.exe`std::io::stdio::impl$19::write_all (1 samples, 0.03%)</title><rect x="80.7872%" y="4021" width="0.0334%" height="15" fill="rgb(228,172,27)" fg:x="2422" fg:w="1"/><text x="81.0372%" y="4031.50"></text></g><g><title>boggle.exe`std::sync::reentrant_lock::impl$11::deref (1 samples, 0.03%)</title><rect x="80.7872%" y="4005" width="0.0334%" height="15" fill="rgb(230,57,44)" fg:x="2422" fg:w="1"/><text x="81.0372%" y="4015.50"></text></g><g><title>boggle.exe`std::io::buffered::linewritershim::impl$1::write_all (1 samples, 0.03%)</title><rect x="80.7872%" y="3989" width="0.0334%" height="15" fill="rgb(249,35,22)" fg:x="2422" fg:w="1"/><text x="81.0372%" y="3999.50"></text></g><g><title>boggle.exe`std::io::stdio::impl$1::write_all (1 samples, 0.03%)</title><rect x="80.7872%" y="3973" width="0.0334%" height="15" fill="rgb(250,137,27)" fg:x="2422" fg:w="1"/><text x="81.0372%" y="3983.50"></text></g><g><title>boggle.exe`std::io::stdio::handle_ebadf (1 samples, 0.03%)</title><rect x="80.7872%" y="3957" width="0.0334%" height="15" fill="rgb(251,57,31)" fg:x="2422" fg:w="1"/><text x="81.0372%" y="3967.50"></text></g><g><title>boggle.exe`std::io::Write::write_all&lt;std::sys::pal::windows::stdio::Stdout&gt; (1 samples, 0.03%)</title><rect x="80.7872%" y="3941" width="0.0334%" height="15" fill="rgb(238,60,0)" fg:x="2422" fg:w="1"/><text x="81.0372%" y="3951.50"></text></g><g><title>boggle.exe`std::sys::pal::windows::stdio::write (1 samples, 0.03%)</title><rect x="80.7872%" y="3925" width="0.0334%" height="15" fill="rgb(242,185,39)" fg:x="2422" fg:w="1"/><text x="81.0372%" y="3935.50"></text></g><g><title>boggle.exe`std::sys::pal::windows::stdio::is_console (1 samples, 0.03%)</title><rect x="80.7872%" y="3909" width="0.0334%" height="15" fill="rgb(240,63,43)" fg:x="2422" fg:w="1"/><text x="81.0372%" y="3919.50"></text></g><g><title>`0x7FFABEA0A622 (1 samples, 0.03%)</title><rect x="80.7872%" y="3893" width="0.0334%" height="15" fill="rgb(236,155,6)" fg:x="2422" fg:w="1"/><text x="81.0372%" y="3903.50"></text></g><g><title>`0x7FFAC13FF804 (1 samples, 0.03%)</title><rect x="80.7872%" y="3877" width="0.0334%" height="15" fill="rgb(215,11,29)" fg:x="2422" fg:w="1"/><text x="81.0372%" y="3887.50"></text></g><g><title>boggle.exe`core::fmt::num::imp::impl$7::fmt (1 samples, 0.03%)</title><rect x="80.8205%" y="4085" width="0.0334%" height="15" fill="rgb(228,180,48)" fg:x="2423" fg:w="1"/><text x="81.0705%" y="4095.50"></text></g><g><title>boggle.exe`core::fmt::num::imp::fmt_u64 (1 samples, 0.03%)</title><rect x="80.8205%" y="4069" width="0.0334%" height="15" fill="rgb(241,102,12)" fg:x="2423" fg:w="1"/><text x="81.0705%" y="4079.50"></text></g><g><title>boggle.exe`std::sys::pal::windows::stdio::get_handle (1 samples, 0.03%)</title><rect x="80.8539%" y="3941" width="0.0334%" height="15" fill="rgb(246,213,4)" fg:x="2424" fg:w="1"/><text x="81.1039%" y="3951.50"></text></g><g><title>`0x7FFABEA03C80 (1 samples, 0.03%)</title><rect x="80.8539%" y="3925" width="0.0334%" height="15" fill="rgb(218,134,35)" fg:x="2424" fg:w="1"/><text x="81.1039%" y="3935.50"></text></g><g><title>boggle.exe`boggle::BoggleGame::print_possible_words (6 samples, 0.20%)</title><rect x="80.7538%" y="4181" width="0.2001%" height="15" fill="rgb(251,117,35)" fg:x="2421" fg:w="6"/><text x="81.0038%" y="4191.50"></text></g><g><title>boggle.exe`std::io::stdio::_print (4 samples, 0.13%)</title><rect x="80.8205%" y="4165" width="0.1334%" height="15" fill="rgb(206,156,45)" fg:x="2423" fg:w="4"/><text x="81.0705%" y="4175.50"></text></g><g><title>boggle.exe`std::io::stdio::print_to (4 samples, 0.13%)</title><rect x="80.8205%" y="4149" width="0.1334%" height="15" fill="rgb(218,52,27)" fg:x="2423" fg:w="4"/><text x="81.0705%" y="4159.50"></text></g><g><title>boggle.exe`std::io::stdio::impl$16::write_fmt (4 samples, 0.13%)</title><rect x="80.8205%" y="4133" width="0.1334%" height="15" fill="rgb(238,83,36)" fg:x="2423" fg:w="4"/><text x="81.0705%" y="4143.50"></text></g><g><title>boggle.exe`std::io::Write::write_fmt (4 samples, 0.13%)</title><rect x="80.8205%" y="4117" width="0.1334%" height="15" fill="rgb(218,53,43)" fg:x="2423" fg:w="4"/><text x="81.0705%" y="4127.50"></text></g><g><title>boggle.exe`core::fmt::write (4 samples, 0.13%)</title><rect x="80.8205%" y="4101" width="0.1334%" height="15" fill="rgb(239,54,39)" fg:x="2423" fg:w="4"/><text x="81.0705%" y="4111.50"></text></g><g><title>boggle.exe`std::io::Write::write_fmt::impl$0::write_str&lt;std::io::stdio::StdoutLock&gt; (3 samples, 0.10%)</title><rect x="80.8539%" y="4085" width="0.1001%" height="15" fill="rgb(212,198,13)" fg:x="2424" fg:w="3"/><text x="81.1039%" y="4095.50"></text></g><g><title>boggle.exe`std::io::stdio::impl$19::write_all (3 samples, 0.10%)</title><rect x="80.8539%" y="4069" width="0.1001%" height="15" fill="rgb(234,54,46)" fg:x="2424" fg:w="3"/><text x="81.1039%" y="4079.50"></text></g><g><title>boggle.exe`std::sync::reentrant_lock::impl$11::deref (3 samples, 0.10%)</title><rect x="80.8539%" y="4053" width="0.1001%" height="15" fill="rgb(217,120,7)" fg:x="2424" fg:w="3"/><text x="81.1039%" y="4063.50"></text></g><g><title>boggle.exe`std::io::buffered::linewritershim::impl$1::write_all (3 samples, 0.10%)</title><rect x="80.8539%" y="4037" width="0.1001%" height="15" fill="rgb(246,39,15)" fg:x="2424" fg:w="3"/><text x="81.1039%" y="4047.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch (3 samples, 0.10%)</title><rect x="80.8539%" y="4021" width="0.1001%" height="15" fill="rgb(242,143,31)" fg:x="2424" fg:w="3"/><text x="81.1039%" y="4031.50"></text></g><g><title>boggle.exe`std::io::buffered::bufwriter::BufWriter::flush_buf&lt;std::io::stdio::StdoutRaw&gt; (3 samples, 0.10%)</title><rect x="80.8539%" y="4005" width="0.1001%" height="15" fill="rgb(252,60,24)" fg:x="2424" fg:w="3"/><text x="81.1039%" y="4015.50"></text></g><g><title>boggle.exe`std::io::stdio::impl$1::write (3 samples, 0.10%)</title><rect x="80.8539%" y="3989" width="0.1001%" height="15" fill="rgb(249,220,7)" fg:x="2424" fg:w="3"/><text x="81.1039%" y="3999.50"></text></g><g><title>boggle.exe`std::io::stdio::handle_ebadf (3 samples, 0.10%)</title><rect x="80.8539%" y="3973" width="0.1001%" height="15" fill="rgb(236,67,13)" fg:x="2424" fg:w="3"/><text x="81.1039%" y="3983.50"></text></g><g><title>boggle.exe`std::sys::pal::windows::stdio::write (3 samples, 0.10%)</title><rect x="80.8539%" y="3957" width="0.1001%" height="15" fill="rgb(210,62,39)" fg:x="2424" fg:w="3"/><text x="81.1039%" y="3967.50"></text></g><g><title>boggle.exe`std::sys::pal::windows::stdio::write_valid_utf8_to_console (2 samples, 0.07%)</title><rect x="80.8873%" y="3941" width="0.0667%" height="15" fill="rgb(219,122,53)" fg:x="2425" fg:w="2"/><text x="81.1373%" y="3951.50"></text></g><g><title>boggle.exe`std::sys::pal::windows::stdio::write_u16s (1 samples, 0.03%)</title><rect x="80.9206%" y="3925" width="0.0334%" height="15" fill="rgb(218,87,25)" fg:x="2426" fg:w="1"/><text x="81.1706%" y="3935.50"></text></g><g><title>boggle.exe`std::sys::pal::windows::cvt (1 samples, 0.03%)</title><rect x="80.9206%" y="3909" width="0.0334%" height="15" fill="rgb(234,179,48)" fg:x="2426" fg:w="1"/><text x="81.1706%" y="3919.50"></text></g><g><title>boggle.exe`std::sys::pal::windows::impl$3::is_zero (1 samples, 0.03%)</title><rect x="80.9206%" y="3893" width="0.0334%" height="15" fill="rgb(248,90,0)" fg:x="2426" fg:w="1"/><text x="81.1706%" y="3903.50"></text></g><g><title>`0x7FFAC0037710 (1 samples, 0.03%)</title><rect x="80.9206%" y="3877" width="0.0334%" height="15" fill="rgb(207,228,37)" fg:x="2426" fg:w="1"/><text x="81.1706%" y="3887.50"></text></g><g><title>boggle.exe`boggle::BoggleGame::print_final_scores (7 samples, 0.23%)</title><rect x="80.7538%" y="4197" width="0.2335%" height="15" fill="rgb(235,214,15)" fg:x="2421" fg:w="7"/><text x="81.0038%" y="4207.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(std::collections::hash::set::HashSet (1 samples, 0.03%)</title><rect x="80.9540%" y="4181" width="0.0334%" height="15" fill="rgb(210,144,39)" fg:x="2427" fg:w="1"/><text x="81.2040%" y="4191.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(hashbrown::set::HashSet (1 samples, 0.03%)</title><rect x="80.9540%" y="4165" width="0.0334%" height="15" fill="rgb(222,67,41)" fg:x="2427" fg:w="1"/><text x="81.2040%" y="4175.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(hashbrown::map::HashMap&lt;alloc::string::String,tuple$ (1 samples, 0.03%)</title><rect x="80.9540%" y="4149" width="0.0334%" height="15" fill="rgb(205,35,37)" fg:x="2427" fg:w="1"/><text x="81.2040%" y="4159.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(hashbrown::raw::RawTable&lt;tuple$&lt;alloc::string::String,tuple$ (1 samples, 0.03%)</title><rect x="80.9540%" y="4133" width="0.0334%" height="15" fill="rgb(216,125,40)" fg:x="2427" fg:w="1"/><text x="81.2040%" y="4143.50"></text></g><g><title>boggle.exe`hashbrown::raw::impl$18::drop(hashbrown::raw::RawTable&lt;tuple$&lt;alloc::string::String,tuple$ (1 samples, 0.03%)</title><rect x="80.9540%" y="4117" width="0.0334%" height="15" fill="rgb(228,227,20)" fg:x="2427" fg:w="1"/><text x="81.2040%" y="4127.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::drop_inner_table (1 samples, 0.03%)</title><rect x="80.9540%" y="4101" width="0.0334%" height="15" fill="rgb(242,173,45)" fg:x="2427" fg:w="1"/><text x="81.2040%" y="4111.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::drop_elements (1 samples, 0.03%)</title><rect x="80.9540%" y="4085" width="0.0334%" height="15" fill="rgb(215,79,24)" fg:x="2427" fg:w="1"/><text x="81.2040%" y="4095.50"></text></g><g><title>boggle.exe`hashbrown::raw::Bucket&lt;tuple$&lt;alloc::string::String,tuple$&lt;&gt; &gt; &gt;::drop (1 samples, 0.03%)</title><rect x="80.9540%" y="4069" width="0.0334%" height="15" fill="rgb(238,164,38)" fg:x="2427" fg:w="1"/><text x="81.2040%" y="4079.50"></text></g><g><title>boggle.exe`core::ptr::mut_ptr::impl$0::drop_in_place(tuple$&lt;alloc::string::String,tuple$ (1 samples, 0.03%)</title><rect x="80.9540%" y="4053" width="0.0334%" height="15" fill="rgb(245,196,38)" fg:x="2427" fg:w="1"/><text x="81.2040%" y="4063.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(tuple$&lt;alloc::string::String,tuple$ (1 samples, 0.03%)</title><rect x="80.9540%" y="4037" width="0.0334%" height="15" fill="rgb(231,217,29)" fg:x="2427" fg:w="1"/><text x="81.2040%" y="4047.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place (1 samples, 0.03%)</title><rect x="80.9540%" y="4021" width="0.0334%" height="15" fill="rgb(245,6,4)" fg:x="2427" fg:w="1"/><text x="81.2040%" y="4031.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(alloc::vec::Vec (1 samples, 0.03%)</title><rect x="80.9540%" y="4005" width="0.0334%" height="15" fill="rgb(214,76,49)" fg:x="2427" fg:w="1"/><text x="81.2040%" y="4015.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (1 samples, 0.03%)</title><rect x="80.9540%" y="3989" width="0.0334%" height="15" fill="rgb(205,96,12)" fg:x="2427" fg:w="1"/><text x="81.2040%" y="3999.50"></text></g><g><title>boggle.exe`alloc::raw_vec::impl$4::drop(alloc::raw_vec::RawVec (1 samples, 0.03%)</title><rect x="80.9540%" y="3973" width="0.0334%" height="15" fill="rgb(243,131,4)" fg:x="2427" fg:w="1"/><text x="81.2040%" y="3983.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::deallocate (1 samples, 0.03%)</title><rect x="80.9540%" y="3957" width="0.0334%" height="15" fill="rgb(214,114,4)" fg:x="2427" fg:w="1"/><text x="81.2040%" y="3967.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="80.9540%" y="3941" width="0.0334%" height="15" fill="rgb(234,215,15)" fg:x="2427" fg:w="1"/><text x="81.2040%" y="3951.50"></text></g><g><title>boggle.exe`alloc::alloc::dealloc (1 samples, 0.03%)</title><rect x="80.9540%" y="3925" width="0.0334%" height="15" fill="rgb(250,216,45)" fg:x="2427" fg:w="1"/><text x="81.2040%" y="3935.50"></text></g><g><title>`0x7FFAC12D233B (1 samples, 0.03%)</title><rect x="80.9540%" y="3909" width="0.0334%" height="15" fill="rgb(236,128,4)" fg:x="2427" fg:w="1"/><text x="81.2040%" y="3919.50"></text></g><g><title>boggle.exe`__chkstk() (1 samples, 0.03%)</title><rect x="80.9873%" y="3893" width="0.0334%" height="15" fill="rgb(234,50,33)" fg:x="2428" fg:w="1"/><text x="81.2373%" y="3903.50"></text></g><g><title>`0x7FFAC13FF800 (1 samples, 0.03%)</title><rect x="81.0207%" y="3813" width="0.0334%" height="15" fill="rgb(253,131,37)" fg:x="2429" fg:w="1"/><text x="81.2707%" y="3823.50"></text></g><g><title>boggle.exe`std::io::stdio::impl$16::write_fmt (4 samples, 0.13%)</title><rect x="80.9873%" y="4149" width="0.1334%" height="15" fill="rgb(218,55,27)" fg:x="2428" fg:w="4"/><text x="81.2373%" y="4159.50"></text></g><g><title>boggle.exe`std::io::Write::write_fmt (4 samples, 0.13%)</title><rect x="80.9873%" y="4133" width="0.1334%" height="15" fill="rgb(241,220,28)" fg:x="2428" fg:w="4"/><text x="81.2373%" y="4143.50"></text></g><g><title>boggle.exe`core::fmt::write (4 samples, 0.13%)</title><rect x="80.9873%" y="4117" width="0.1334%" height="15" fill="rgb(241,90,48)" fg:x="2428" fg:w="4"/><text x="81.2373%" y="4127.50"></text></g><g><title>boggle.exe`boggle::boggle_utils::boggle_board::impl$1::fmt (4 samples, 0.13%)</title><rect x="80.9873%" y="4101" width="0.1334%" height="15" fill="rgb(216,43,37)" fg:x="2428" fg:w="4"/><text x="81.2373%" y="4111.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;tuple$ (4 samples, 0.13%)</title><rect x="80.9873%" y="4085" width="0.1334%" height="15" fill="rgb(207,173,9)" fg:x="2428" fg:w="4"/><text x="81.2373%" y="4095.50"></text></g><g><title>boggle.exe`core::fmt::write (4 samples, 0.13%)</title><rect x="80.9873%" y="4069" width="0.1334%" height="15" fill="rgb(240,126,30)" fg:x="2428" fg:w="4"/><text x="81.2373%" y="4079.50"></text></g><g><title>boggle.exe`std::io::Write::write_fmt::impl$0::write_str&lt;std::io::stdio::StdoutLock&gt; (4 samples, 0.13%)</title><rect x="80.9873%" y="4053" width="0.1334%" height="15" fill="rgb(228,178,53)" fg:x="2428" fg:w="4"/><text x="81.2373%" y="4063.50"></text></g><g><title>boggle.exe`std::io::stdio::impl$19::write_all (4 samples, 0.13%)</title><rect x="80.9873%" y="4037" width="0.1334%" height="15" fill="rgb(217,33,4)" fg:x="2428" fg:w="4"/><text x="81.2373%" y="4047.50"></text></g><g><title>boggle.exe`std::sync::reentrant_lock::impl$11::deref (4 samples, 0.13%)</title><rect x="80.9873%" y="4021" width="0.1334%" height="15" fill="rgb(206,124,34)" fg:x="2428" fg:w="4"/><text x="81.2373%" y="4031.50"></text></g><g><title>boggle.exe`std::io::buffered::linewritershim::impl$1::write_all (4 samples, 0.13%)</title><rect x="80.9873%" y="4005" width="0.1334%" height="15" fill="rgb(208,122,53)" fg:x="2428" fg:w="4"/><text x="81.2373%" y="4015.50"></text></g><g><title>boggle.exe`core::result::impl$26::branch (4 samples, 0.13%)</title><rect x="80.9873%" y="3989" width="0.1334%" height="15" fill="rgb(215,202,26)" fg:x="2428" fg:w="4"/><text x="81.2373%" y="3999.50"></text></g><g><title>boggle.exe`std::io::buffered::bufwriter::BufWriter::flush_buf&lt;std::io::stdio::StdoutRaw&gt; (4 samples, 0.13%)</title><rect x="80.9873%" y="3973" width="0.1334%" height="15" fill="rgb(232,198,31)" fg:x="2428" fg:w="4"/><text x="81.2373%" y="3983.50"></text></g><g><title>boggle.exe`std::io::stdio::impl$1::write (4 samples, 0.13%)</title><rect x="80.9873%" y="3957" width="0.1334%" height="15" fill="rgb(222,23,35)" fg:x="2428" fg:w="4"/><text x="81.2373%" y="3967.50"></text></g><g><title>boggle.exe`std::io::stdio::handle_ebadf (4 samples, 0.13%)</title><rect x="80.9873%" y="3941" width="0.1334%" height="15" fill="rgb(242,27,53)" fg:x="2428" fg:w="4"/><text x="81.2373%" y="3951.50"></text></g><g><title>boggle.exe`std::sys::pal::windows::stdio::write (4 samples, 0.13%)</title><rect x="80.9873%" y="3925" width="0.1334%" height="15" fill="rgb(210,216,42)" fg:x="2428" fg:w="4"/><text x="81.2373%" y="3935.50"></text></g><g><title>boggle.exe`std::sys::pal::windows::stdio::write_valid_utf8_to_console (4 samples, 0.13%)</title><rect x="80.9873%" y="3909" width="0.1334%" height="15" fill="rgb(234,39,38)" fg:x="2428" fg:w="4"/><text x="81.2373%" y="3919.50"></text></g><g><title>boggle.exe`std::sys::pal::windows::stdio::write_u16s (3 samples, 0.10%)</title><rect x="81.0207%" y="3893" width="0.1001%" height="15" fill="rgb(235,126,54)" fg:x="2429" fg:w="3"/><text x="81.2707%" y="3903.50"></text></g><g><title>boggle.exe`std::sys::pal::windows::cvt (3 samples, 0.10%)</title><rect x="81.0207%" y="3877" width="0.1001%" height="15" fill="rgb(235,150,33)" fg:x="2429" fg:w="3"/><text x="81.2707%" y="3887.50"></text></g><g><title>boggle.exe`std::sys::pal::windows::impl$3::is_zero (3 samples, 0.10%)</title><rect x="81.0207%" y="3861" width="0.1001%" height="15" fill="rgb(249,49,53)" fg:x="2429" fg:w="3"/><text x="81.2707%" y="3871.50"></text></g><g><title>`0x7FFABEA1712E (3 samples, 0.10%)</title><rect x="81.0207%" y="3845" width="0.1001%" height="15" fill="rgb(238,60,50)" fg:x="2429" fg:w="3"/><text x="81.2707%" y="3855.50"></text></g><g><title>`0x7FFABEA1726C (3 samples, 0.10%)</title><rect x="81.0207%" y="3829" width="0.1001%" height="15" fill="rgb(210,5,2)" fg:x="2429" fg:w="3"/><text x="81.2707%" y="3839.50"></text></g><g><title>`0x7FFAC13FF804 (2 samples, 0.07%)</title><rect x="81.0540%" y="3813" width="0.0667%" height="15" fill="rgb(214,207,24)" fg:x="2430" fg:w="2"/><text x="81.3040%" y="3823.50"></text></g><g><title>boggle.exe`boggle::BoggleGame::print_welcome_message (5 samples, 0.17%)</title><rect x="80.9873%" y="4197" width="0.1668%" height="15" fill="rgb(228,173,2)" fg:x="2428" fg:w="5"/><text x="81.2373%" y="4207.50"></text></g><g><title>boggle.exe`std::io::stdio::_print (5 samples, 0.17%)</title><rect x="80.9873%" y="4181" width="0.1668%" height="15" fill="rgb(244,26,8)" fg:x="2428" fg:w="5"/><text x="81.2373%" y="4191.50"></text></g><g><title>boggle.exe`std::io::stdio::print_to (5 samples, 0.17%)</title><rect x="80.9873%" y="4165" width="0.1668%" height="15" fill="rgb(249,153,35)" fg:x="2428" fg:w="5"/><text x="81.2373%" y="4175.50"></text></g><g><title>boggle.exe`std::io::stdio::stdout (1 samples, 0.03%)</title><rect x="81.1207%" y="4149" width="0.0334%" height="15" fill="rgb(221,215,40)" fg:x="2432" fg:w="1"/><text x="81.3707%" y="4159.50"></text></g><g><title>boggle.exe`std::sync::once_lock::OnceLock::get_or_init (1 samples, 0.03%)</title><rect x="81.1207%" y="4133" width="0.0334%" height="15" fill="rgb(238,106,35)" fg:x="2432" fg:w="1"/><text x="81.3707%" y="4143.50"></text></g><g><title>boggle.exe`std::sync::once_lock::OnceLock::get_or_try_init (1 samples, 0.03%)</title><rect x="81.1207%" y="4117" width="0.0334%" height="15" fill="rgb(207,195,21)" fg:x="2432" fg:w="1"/><text x="81.3707%" y="4127.50"></text></g><g><title>boggle.exe`std::sync::once_lock::OnceLock::initialize&lt;std::sync::reentrant_lock::ReentrantLock&lt;core::cell::RefCell&lt;std::io::buffered::linewriter::LineWriter&lt;std::io::stdio::StdoutRaw&gt; &gt; &gt;,std::sync::once_lock::impl$0::get_or_init::closure_env$0&lt;std::sync::reentrant_lock::ReentrantLock&lt;core::cell::RefCell&lt;std::io::buffered::linewriter::LineWriter&lt;std::io::stdio::StdoutRaw&gt; &gt; &gt;,std::io::stdio::stdout::closure_env$0&gt;,never$&gt; (1 samples, 0.03%)</title><rect x="81.1207%" y="4101" width="0.0334%" height="15" fill="rgb(205,43,29)" fg:x="2432" fg:w="1"/><text x="81.3707%" y="4111.50"></text></g><g><title>boggle.exe`std::sys::sync::once::futex::Once::call (1 samples, 0.03%)</title><rect x="81.1207%" y="4085" width="0.0334%" height="15" fill="rgb(236,35,21)" fg:x="2432" fg:w="1"/><text x="81.3707%" y="4095.50"></text></g><g><title>boggle.exe`core::cell::Cell::get (1 samples, 0.03%)</title><rect x="81.1207%" y="4069" width="0.0334%" height="15" fill="rgb(244,74,8)" fg:x="2432" fg:w="1"/><text x="81.3707%" y="4079.50"></text></g><g><title>boggle.exe`core::ops::function::FnOnce::call_once&lt;std::sync::once::impl$2::call_once_force::closure_env$0&lt;std::sync::once_lock::impl$0::initialize::closure_env$0&lt;std::sync::reentrant_lock::ReentrantLock&lt;core::cell::RefCell&lt;std::io::buffered::linewriter::LineWriter&lt;std::io::stdio::StdoutRaw&gt; &gt; &gt;,std::sync::once_lock::impl$0::get_or_init::closure_env$0&lt;std::sync::reentrant_lock::ReentrantLock&lt;core::cell::RefCell&lt;std::io::buffered::linewriter::LineWriter&lt;std::io::stdio::StdoutRaw&gt; &gt; &gt;,std::io::stdio::stdout::closure_env$0&gt;,never$&gt; &gt;,tuple$&lt;ref$&lt;std::sync::once::OnceState&gt; &gt; &gt; (1 samples, 0.03%)</title><rect x="81.1207%" y="4053" width="0.0334%" height="15" fill="rgb(241,229,7)" fg:x="2432" fg:w="1"/><text x="81.3707%" y="4063.50"></text></g><g><title>boggle.exe`core::ops::function::FnOnce::call_once (1 samples, 0.03%)</title><rect x="81.1207%" y="4037" width="0.0334%" height="15" fill="rgb(212,223,25)" fg:x="2432" fg:w="1"/><text x="81.3707%" y="4047.50"></text></g><g><title>boggle.exe`std::sync::once::impl$2::call_once_force::closure$0 (1 samples, 0.03%)</title><rect x="81.1207%" y="4021" width="0.0334%" height="15" fill="rgb(234,58,53)" fg:x="2432" fg:w="1"/><text x="81.3707%" y="4031.50"></text></g><g><title>boggle.exe`std::sync::once_lock::impl$0::initialize::closure$0 (1 samples, 0.03%)</title><rect x="81.1207%" y="4005" width="0.0334%" height="15" fill="rgb(244,36,1)" fg:x="2432" fg:w="1"/><text x="81.3707%" y="4015.50"></text></g><g><title>boggle.exe`core::mem::maybe_uninit::MaybeUninit::write (1 samples, 0.03%)</title><rect x="81.1207%" y="3989" width="0.0334%" height="15" fill="rgb(222,40,54)" fg:x="2432" fg:w="1"/><text x="81.3707%" y="3999.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place (1 samples, 0.03%)</title><rect x="81.1541%" y="4197" width="0.0334%" height="15" fill="rgb(210,207,39)" fg:x="2433" fg:w="1"/><text x="81.4041%" y="4207.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(alloc::vec::Vec (1 samples, 0.03%)</title><rect x="81.1541%" y="4181" width="0.0334%" height="15" fill="rgb(234,52,14)" fg:x="2433" fg:w="1"/><text x="81.4041%" y="4191.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (1 samples, 0.03%)</title><rect x="81.1541%" y="4165" width="0.0334%" height="15" fill="rgb(239,108,46)" fg:x="2433" fg:w="1"/><text x="81.4041%" y="4175.50"></text></g><g><title>boggle.exe`alloc::raw_vec::impl$4::drop(alloc::raw_vec::RawVec (1 samples, 0.03%)</title><rect x="81.1541%" y="4149" width="0.0334%" height="15" fill="rgb(252,223,5)" fg:x="2433" fg:w="1"/><text x="81.4041%" y="4159.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::deallocate (1 samples, 0.03%)</title><rect x="81.1541%" y="4133" width="0.0334%" height="15" fill="rgb(227,181,11)" fg:x="2433" fg:w="1"/><text x="81.4041%" y="4143.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::current_memory (1 samples, 0.03%)</title><rect x="81.1541%" y="4117" width="0.0334%" height="15" fill="rgb(248,126,40)" fg:x="2433" fg:w="1"/><text x="81.4041%" y="4127.50"></text></g><g><title>boggle.exe`std::io::stdio::_print (1 samples, 0.03%)</title><rect x="81.1541%" y="4101" width="0.0334%" height="15" fill="rgb(243,1,18)" fg:x="2433" fg:w="1"/><text x="81.4041%" y="4111.50"></text></g><g><title>boggle.exe`std::io::stdio::print_to (1 samples, 0.03%)</title><rect x="81.1541%" y="4085" width="0.0334%" height="15" fill="rgb(214,145,23)" fg:x="2433" fg:w="1"/><text x="81.4041%" y="4095.50"></text></g><g><title>boggle.exe`std::io::stdio::print_to_buffer_if_capture_used (1 samples, 0.03%)</title><rect x="81.1541%" y="4069" width="0.0334%" height="15" fill="rgb(241,218,11)" fg:x="2433" fg:w="1"/><text x="81.4041%" y="4079.50"></text></g><g><title>boggle.exe`std::thread::Builder::spawn_unchecked&lt;boggle::impl$1::start::closure_env$0,tuple$&lt;&gt; &gt; (1 samples, 0.03%)</title><rect x="81.1875%" y="4165" width="0.0334%" height="15" fill="rgb(214,219,24)" fg:x="2434" fg:w="1"/><text x="81.4375%" y="4175.50"></text></g><g><title>boggle.exe`std::thread::Builder::spawn_unchecked_(std::thread::Builder, boggle::impl$1::start::closure_env$0, enum2$&lt;core::option::Option&lt;alloc::sync::Arc (1 samples, 0.03%)</title><rect x="81.1875%" y="4149" width="0.0334%" height="15" fill="rgb(235,32,7)" fg:x="2434" fg:w="1"/><text x="81.4375%" y="4159.50"></text></g><g><title>boggle.exe`std::sys::pal::windows::thread::Thread::new (1 samples, 0.03%)</title><rect x="81.1875%" y="4133" width="0.0334%" height="15" fill="rgb(227,121,28)" fg:x="2434" fg:w="1"/><text x="81.4375%" y="4143.50"></text></g><g><title>`0x7FFAC001313D (1 samples, 0.03%)</title><rect x="81.1875%" y="4117" width="0.0334%" height="15" fill="rgb(216,129,49)" fg:x="2434" fg:w="1"/><text x="81.4375%" y="4127.50"></text></g><g><title>`0x7FFABE9DFFF9 (1 samples, 0.03%)</title><rect x="81.1875%" y="4101" width="0.0334%" height="15" fill="rgb(207,194,50)" fg:x="2434" fg:w="1"/><text x="81.4375%" y="4111.50"></text></g><g><title>`0x7FFAC1401034 (1 samples, 0.03%)</title><rect x="81.1875%" y="4085" width="0.0334%" height="15" fill="rgb(207,4,18)" fg:x="2434" fg:w="1"/><text x="81.4375%" y="4095.50"></text></g><g><title>boggle.exe`boggle::BoggleGame::start (15 samples, 0.50%)</title><rect x="80.7538%" y="4213" width="0.5003%" height="15" fill="rgb(213,50,30)" fg:x="2421" fg:w="15"/><text x="81.0038%" y="4223.50"></text></g><g><title>boggle.exe`std::thread::spawn (2 samples, 0.07%)</title><rect x="81.1875%" y="4197" width="0.0667%" height="15" fill="rgb(208,77,22)" fg:x="2434" fg:w="2"/><text x="81.4375%" y="4207.50"></text></g><g><title>boggle.exe`enum2$&lt;core::result::Result&lt;std::thread::JoinHandle&lt;tuple$&lt;&gt; &gt;,std::io::error::Error&gt; &gt;::expect(enum2$&lt;core::result::Result&lt;std::thread::JoinHandle&lt;tuple$&lt;&gt; &gt;,std::io::error::Error&gt; &gt;, ref$ (2 samples, 0.07%)</title><rect x="81.1875%" y="4181" width="0.0667%" height="15" fill="rgb(244,204,34)" fg:x="2434" fg:w="2"/><text x="81.4375%" y="4191.50"></text></g><g><title>boggle.exe`std::thread::Builder::spawn_unchecked&lt;boggle::impl$1::start::closure_env$1,tuple$&lt;&gt; &gt; (1 samples, 0.03%)</title><rect x="81.2208%" y="4165" width="0.0334%" height="15" fill="rgb(230,20,17)" fg:x="2435" fg:w="1"/><text x="81.4708%" y="4175.50"></text></g><g><title>boggle.exe`std::thread::Builder::spawn_unchecked_(std::thread::Builder, boggle::impl$1::start::closure_env$1, enum2$&lt;core::option::Option&lt;alloc::sync::Arc (1 samples, 0.03%)</title><rect x="81.2208%" y="4149" width="0.0334%" height="15" fill="rgb(237,83,15)" fg:x="2435" fg:w="1"/><text x="81.4708%" y="4159.50"></text></g><g><title>boggle.exe`std::sys::pal::windows::thread::Thread::new (1 samples, 0.03%)</title><rect x="81.2208%" y="4133" width="0.0334%" height="15" fill="rgb(221,109,25)" fg:x="2435" fg:w="1"/><text x="81.4708%" y="4143.50"></text></g><g><title>`0x7FFAC001313D (1 samples, 0.03%)</title><rect x="81.2208%" y="4117" width="0.0334%" height="15" fill="rgb(205,194,52)" fg:x="2435" fg:w="1"/><text x="81.4708%" y="4127.50"></text></g><g><title>`0x7FFABE9DFFF9 (1 samples, 0.03%)</title><rect x="81.2208%" y="4101" width="0.0334%" height="15" fill="rgb(244,173,54)" fg:x="2435" fg:w="1"/><text x="81.4708%" y="4111.50"></text></g><g><title>`0x7FFAC1401034 (1 samples, 0.03%)</title><rect x="81.2208%" y="4085" width="0.0334%" height="15" fill="rgb(227,181,18)" fg:x="2435" fg:w="1"/><text x="81.4708%" y="4095.50"></text></g><g><title>boggle.exe`boggle::impl$1::command (1 samples, 0.03%)</title><rect x="81.2542%" y="4197" width="0.0334%" height="15" fill="rgb(238,36,30)" fg:x="2436" fg:w="1"/><text x="81.5042%" y="4207.50"></text></g><g><title>boggle.exe`boggle::impl$3::augment_args (1 samples, 0.03%)</title><rect x="81.2542%" y="4181" width="0.0334%" height="15" fill="rgb(254,85,0)" fg:x="2436" fg:w="1"/><text x="81.5042%" y="4191.50"></text></g><g><title>boggle.exe`alloc::string::impl$28::deref (1 samples, 0.03%)</title><rect x="81.2542%" y="4165" width="0.0334%" height="15" fill="rgb(247,63,33)" fg:x="2436" fg:w="1"/><text x="81.5042%" y="4175.50"></text></g><g><title>boggle.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (1 samples, 0.03%)</title><rect x="81.2542%" y="4149" width="0.0334%" height="15" fill="rgb(220,7,54)" fg:x="2436" fg:w="1"/><text x="81.5042%" y="4159.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_ptr (1 samples, 0.03%)</title><rect x="81.2542%" y="4133" width="0.0334%" height="15" fill="rgb(238,227,21)" fg:x="2436" fg:w="1"/><text x="81.5042%" y="4143.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::ptr (1 samples, 0.03%)</title><rect x="81.2542%" y="4117" width="0.0334%" height="15" fill="rgb(237,29,31)" fg:x="2436" fg:w="1"/><text x="81.5042%" y="4127.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (1 samples, 0.03%)</title><rect x="81.2542%" y="4101" width="0.0334%" height="15" fill="rgb(211,21,50)" fg:x="2436" fg:w="1"/><text x="81.5042%" y="4111.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (1 samples, 0.03%)</title><rect x="81.2542%" y="4085" width="0.0334%" height="15" fill="rgb(239,119,2)" fg:x="2436" fg:w="1"/><text x="81.5042%" y="4095.50"></text></g><g><title>boggle.exe`std::sync::once_lock::OnceLock&lt;alloc::string::String&gt;::initialize&lt;alloc::string::String,std::sync::once_lock::impl$0::get_or_init::closure_env$0&lt;alloc::string::String,boggle::impl$3::augment_args::closure_env$0&gt;,never$&gt;(std::sync::once_lock::impl$0::get_or_init::closure_env$0 (1 samples, 0.03%)</title><rect x="81.2542%" y="4069" width="0.0334%" height="15" fill="rgb(250,2,39)" fg:x="2436" fg:w="1"/><text x="81.5042%" y="4079.50"></text></g><g><title>boggle.exe`std::sys::sync::once::futex::Once::call (1 samples, 0.03%)</title><rect x="81.2542%" y="4053" width="0.0334%" height="15" fill="rgb(244,46,53)" fg:x="2436" fg:w="1"/><text x="81.5042%" y="4063.50"></text></g><g><title>boggle.exe`core::cell::Cell::get (1 samples, 0.03%)</title><rect x="81.2542%" y="4037" width="0.0334%" height="15" fill="rgb(209,21,19)" fg:x="2436" fg:w="1"/><text x="81.5042%" y="4047.50"></text></g><g><title>boggle.exe`std::sync::once::impl$2::call_once_force::closure$0&lt;std::sync::once_lock::impl$0::initialize::closure_env$0&lt;alloc::string::String,std::sync::once_lock::impl$0::get_or_init::closure_env$0&lt;alloc::string::String,boggle::impl$3::augment_args::closure_env$0&gt;,never$&gt; &gt;(std::sync::once::impl$2::call_once_force::closure_env$0&lt;std::sync::once_lock::impl$0::initialize::closure_env$0&lt;alloc::string::String,std::sync::once_lock::impl$0::get_or_init::closure_env$0 (1 samples, 0.03%)</title><rect x="81.2542%" y="4021" width="0.0334%" height="15" fill="rgb(236,145,4)" fg:x="2436" fg:w="1"/><text x="81.5042%" y="4031.50"></text></g><g><title>boggle.exe`std::sync::once_lock::impl$0::initialize::closure$0(std::sync::once_lock::impl$0::initialize::closure_env$0&lt;alloc::string::String,std::sync::once_lock::impl$0::get_or_init::closure_env$0 (1 samples, 0.03%)</title><rect x="81.2542%" y="4005" width="0.0334%" height="15" fill="rgb(220,133,36)" fg:x="2436" fg:w="1"/><text x="81.5042%" y="4015.50"></text></g><g><title>boggle.exe`std::sync::once_lock::impl$0::get_or_init::closure$0(std::sync::once_lock::impl$0::get_or_init::closure_env$0 (1 samples, 0.03%)</title><rect x="81.2542%" y="3989" width="0.0334%" height="15" fill="rgb(244,18,3)" fg:x="2436" fg:w="1"/><text x="81.5042%" y="3999.50"></text></g><g><title>boggle.exe`boggle::impl$3::augment_args::closure$0 (1 samples, 0.03%)</title><rect x="81.2542%" y="3973" width="0.0334%" height="15" fill="rgb(232,171,48)" fg:x="2436" fg:w="1"/><text x="81.5042%" y="3983.50"></text></g><g><title>boggle.exe`alloc::string::impl$32::to_string (1 samples, 0.03%)</title><rect x="81.2542%" y="3957" width="0.0334%" height="15" fill="rgb(223,223,53)" fg:x="2436" fg:w="1"/><text x="81.5042%" y="3967.50"></text></g><g><title>boggle.exe`enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,core::fmt::Error&gt; &gt;::expect(enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,core::fmt::Error&gt; &gt;, ref$ (1 samples, 0.03%)</title><rect x="81.2542%" y="3941" width="0.0334%" height="15" fill="rgb(246,92,13)" fg:x="2436" fg:w="1"/><text x="81.5042%" y="3951.50"></text></g><g><title>boggle.exe`core::fmt::num::imp::impl$4::fmt (1 samples, 0.03%)</title><rect x="81.2542%" y="3925" width="0.0334%" height="15" fill="rgb(229,171,10)" fg:x="2436" fg:w="1"/><text x="81.5042%" y="3935.50"></text></g><g><title>boggle.exe`core::fmt::num::imp::fmt_u64 (1 samples, 0.03%)</title><rect x="81.2542%" y="3909" width="0.0334%" height="15" fill="rgb(213,131,26)" fg:x="2436" fg:w="1"/><text x="81.5042%" y="3919.50"></text></g><g><title>boggle.exe`core::intrinsics::copy_nonoverlapping (1 samples, 0.03%)</title><rect x="81.2542%" y="3893" width="0.0334%" height="15" fill="rgb(242,87,54)" fg:x="2436" fg:w="1"/><text x="81.5042%" y="3903.50"></text></g><g><title>boggle.exe`clap_builder::parser::arg_matcher::ArgMatcher::new (1 samples, 0.03%)</title><rect x="81.2875%" y="4069" width="0.0334%" height="15" fill="rgb(237,21,35)" fg:x="2437" fg:w="1"/><text x="81.5375%" y="4079.50"></text></g><g><title>boggle.exe`clap_builder::builder::command::Command::_build_self (1 samples, 0.03%)</title><rect x="81.2875%" y="4053" width="0.0334%" height="15" fill="rgb(253,13,47)" fg:x="2437" fg:w="1"/><text x="81.5375%" y="4063.50"></text></g><g><title>boggle.exe`clap_builder::builder::command::Command::_check_help_and_version (1 samples, 0.03%)</title><rect x="81.2875%" y="4037" width="0.0334%" height="15" fill="rgb(215,122,49)" fg:x="2437" fg:w="1"/><text x="81.5375%" y="4047.50"></text></g><g><title>boggle.exe`clap_builder::derive::Parser::parse (3 samples, 0.10%)</title><rect x="81.2542%" y="4213" width="0.1001%" height="15" fill="rgb(209,179,30)" fg:x="2436" fg:w="3"/><text x="81.5042%" y="4223.50"></text></g><g><title>boggle.exe`boggle::impl$2::from_arg_matches_mut (2 samples, 0.07%)</title><rect x="81.2875%" y="4197" width="0.0667%" height="15" fill="rgb(235,100,24)" fg:x="2437" fg:w="2"/><text x="81.5375%" y="4207.50"></text></g><g><title>boggle.exe`clap_builder::parser::matches::arg_matches::ArgMatches::remove_one(ref$ (2 samples, 0.07%)</title><rect x="81.2875%" y="4181" width="0.0667%" height="15" fill="rgb(209,67,24)" fg:x="2437" fg:w="2"/><text x="81.5375%" y="4191.50"></text></g><g><title>boggle.exe`clap_builder::builder::command::Command::get_matches_from&lt;std::env::ArgsOs,std::ffi::os_str::OsString&gt; (2 samples, 0.07%)</title><rect x="81.2875%" y="4165" width="0.0667%" height="15" fill="rgb(206,74,32)" fg:x="2437" fg:w="2"/><text x="81.5375%" y="4175.50"></text></g><g><title>boggle.exe`clap_builder::builder::command::Command::try_get_matches_from_mut (2 samples, 0.07%)</title><rect x="81.2875%" y="4149" width="0.0667%" height="15" fill="rgb(212,45,25)" fg:x="2437" fg:w="2"/><text x="81.5375%" y="4159.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place (2 samples, 0.07%)</title><rect x="81.2875%" y="4133" width="0.0667%" height="15" fill="rgb(239,26,3)" fg:x="2437" fg:w="2"/><text x="81.5375%" y="4143.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(alloc::vec::Vec (2 samples, 0.07%)</title><rect x="81.2875%" y="4117" width="0.0667%" height="15" fill="rgb(218,36,15)" fg:x="2437" fg:w="2"/><text x="81.5375%" y="4127.50"></text></g><g><title>boggle.exe`alloc::vec::impl$25::drop(alloc::vec::Vec (2 samples, 0.07%)</title><rect x="81.2875%" y="4101" width="0.0667%" height="15" fill="rgb(206,108,24)" fg:x="2437" fg:w="2"/><text x="81.5375%" y="4111.50"></text></g><g><title>boggle.exe`clap_builder::builder::command::Command::_do_parse (2 samples, 0.07%)</title><rect x="81.2875%" y="4085" width="0.0667%" height="15" fill="rgb(234,204,42)" fg:x="2437" fg:w="2"/><text x="81.5375%" y="4095.50"></text></g><g><title>boggle.exe`clap_builder::parser::parser::Parser::get_matches_with (1 samples, 0.03%)</title><rect x="81.3209%" y="4069" width="0.0334%" height="15" fill="rgb(229,2,11)" fg:x="2438" fg:w="1"/><text x="81.5709%" y="4079.50"></text></g><g><title>boggle.exe`clap_builder::parser::parser::Parser::add_defaults (1 samples, 0.03%)</title><rect x="81.3209%" y="4053" width="0.0334%" height="15" fill="rgb(221,20,48)" fg:x="2438" fg:w="1"/><text x="81.5709%" y="4063.50"></text></g><g><title>boggle.exe`clap_builder::parser::parser::Parser::add_default_value (1 samples, 0.03%)</title><rect x="81.3209%" y="4037" width="0.0334%" height="15" fill="rgb(244,164,10)" fg:x="2438" fg:w="1"/><text x="81.5709%" y="4047.50"></text></g><g><title>boggle.exe`clap_builder::parser::parser::Parser::react(enum2$&lt;core::option::Option&lt;clap_builder::parser::parser::Identifier&gt; &gt;, clap_builder::parser::matches::value_source::ValueSource, clap_builder::builder::arg::Arg*, alloc::vec::Vec&lt;std::ffi::os_str::OsString,alloc::alloc::Global&gt;, enum2$&lt;core::option::Option (1 samples, 0.03%)</title><rect x="81.3209%" y="4021" width="0.0334%" height="15" fill="rgb(243,229,2)" fg:x="2438" fg:w="1"/><text x="81.5709%" y="4031.50"></text></g><g><title>boggle.exe`clap_builder::parser::parser::Parser::start_custom_arg (1 samples, 0.03%)</title><rect x="81.3209%" y="4005" width="0.0334%" height="15" fill="rgb(232,131,37)" fg:x="2438" fg:w="1"/><text x="81.5709%" y="4015.50"></text></g><g><title>boggle.exe`clap_builder::parser::matches::value_source::ValueSource::is_explicit (1 samples, 0.03%)</title><rect x="81.3209%" y="3989" width="0.0334%" height="15" fill="rgb(217,156,11)" fg:x="2438" fg:w="1"/><text x="81.5709%" y="3999.50"></text></g><g><title>boggle.exe`core::cmp::PartialEq::ne (1 samples, 0.03%)</title><rect x="81.3209%" y="3973" width="0.0334%" height="15" fill="rgb(239,99,48)" fg:x="2438" fg:w="1"/><text x="81.5709%" y="3983.50"></text></g><g><title>boggle.exe`clap_builder::parser::matches::value_source::impl$5::eq (1 samples, 0.03%)</title><rect x="81.3209%" y="3957" width="0.0334%" height="15" fill="rgb(231,209,9)" fg:x="2438" fg:w="1"/><text x="81.5709%" y="3967.50"></text></g><g><title>boggle.exe`clap_builder::parser::arg_matcher::ArgMatcher::start_custom_arg (1 samples, 0.03%)</title><rect x="81.3209%" y="3941" width="0.0334%" height="15" fill="rgb(254,97,27)" fg:x="2438" fg:w="1"/><text x="81.5709%" y="3951.50"></text></g><g><title>boggle.exe`clap_builder::parser::arg_matcher::ArgMatcher::entry (1 samples, 0.03%)</title><rect x="81.3209%" y="3925" width="0.0334%" height="15" fill="rgb(223,151,38)" fg:x="2438" fg:w="1"/><text x="81.5709%" y="3935.50"></text></g><g><title>boggle.exe`clap_builder::util::flat_map::FlatMap&lt;clap_builder::util::id::Id,clap_builder::parser::matches::matched_arg::MatchedArg&gt;::entry (1 samples, 0.03%)</title><rect x="81.3209%" y="3909" width="0.0334%" height="15" fill="rgb(219,206,35)" fg:x="2438" fg:w="1"/><text x="81.5709%" y="3919.50"></text></g><g><title>boggle.exe`core::iter::adapters::enumerate::impl$1::next(core::iter::adapters::enumerate::Enumerate&lt;core::slice::iter::Iter (1 samples, 0.03%)</title><rect x="81.3209%" y="3893" width="0.0334%" height="15" fill="rgb(216,130,31)" fg:x="2438" fg:w="1"/><text x="81.5709%" y="3903.50"></text></g><g><title>boggle.exe`core::slice::iter::impl$182::next(core::slice::iter::Iter (1 samples, 0.03%)</title><rect x="81.3209%" y="3877" width="0.0334%" height="15" fill="rgb(251,97,34)" fg:x="2438" fg:w="1"/><text x="81.5709%" y="3887.50"></text></g><g><title>boggle.exe`core::ptr::non_null::impl$13::eq(core::ptr::non_null::NonNull&lt;clap_builder::util::id::Id&gt;*, core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="81.3209%" y="3861" width="0.0334%" height="15" fill="rgb(246,159,47)" fg:x="2438" fg:w="1"/><text x="81.5709%" y="3871.50"></text></g><g><title>`0x7FFAC1319A44 (1 samples, 0.03%)</title><rect x="81.3542%" y="4021" width="0.0334%" height="15" fill="rgb(232,87,10)" fg:x="2439" fg:w="1"/><text x="81.6042%" y="4031.50"></text></g><g><title>`0x7FFAC12D2871 (1 samples, 0.03%)</title><rect x="81.3542%" y="4005" width="0.0334%" height="15" fill="rgb(249,1,37)" fg:x="2439" fg:w="1"/><text x="81.6042%" y="4015.50"></text></g><g><title>`0x7FFAC12CA83A (1 samples, 0.03%)</title><rect x="81.3542%" y="3989" width="0.0334%" height="15" fill="rgb(239,135,14)" fg:x="2439" fg:w="1"/><text x="81.6042%" y="3999.50"></text></g><g><title>`0x7FFAC135D717 (1 samples, 0.03%)</title><rect x="81.3542%" y="3973" width="0.0334%" height="15" fill="rgb(253,116,46)" fg:x="2439" fg:w="1"/><text x="81.6042%" y="3983.50"></text></g><g><title>`0x7FFAC130E5EF (1 samples, 0.03%)</title><rect x="81.3542%" y="3957" width="0.0334%" height="15" fill="rgb(222,217,37)" fg:x="2439" fg:w="1"/><text x="81.6042%" y="3967.50"></text></g><g><title>`0x7FFAC13FFAE4 (1 samples, 0.03%)</title><rect x="81.3542%" y="3941" width="0.0334%" height="15" fill="rgb(252,96,8)" fg:x="2439" fg:w="1"/><text x="81.6042%" y="3951.50"></text></g><g><title>`0x7FFAC135D58A (2 samples, 0.07%)</title><rect x="81.3876%" y="3957" width="0.0667%" height="15" fill="rgb(254,103,41)" fg:x="2440" fg:w="2"/><text x="81.6376%" y="3967.50"></text></g><g><title>`0x7FFAC12CDEEE (2 samples, 0.07%)</title><rect x="81.3876%" y="3941" width="0.0667%" height="15" fill="rgb(218,213,19)" fg:x="2440" fg:w="2"/><text x="81.6376%" y="3951.50"></text></g><g><title>`0x7FFAC138A8F9 (2 samples, 0.07%)</title><rect x="81.3876%" y="3925" width="0.0667%" height="15" fill="rgb(253,95,21)" fg:x="2440" fg:w="2"/><text x="81.6376%" y="3935.50"></text></g><g><title>`0x7FFAC13FFAE4 (2 samples, 0.07%)</title><rect x="81.3876%" y="3909" width="0.0667%" height="15" fill="rgb(229,26,28)" fg:x="2440" fg:w="2"/><text x="81.6376%" y="3919.50"></text></g><g><title>`0x7FFAC12CA83A (3 samples, 0.10%)</title><rect x="81.3876%" y="3973" width="0.1001%" height="15" fill="rgb(230,129,16)" fg:x="2440" fg:w="3"/><text x="81.6376%" y="3983.50"></text></g><g><title>`0x7FFAC135D717 (1 samples, 0.03%)</title><rect x="81.4543%" y="3957" width="0.0334%" height="15" fill="rgb(236,126,17)" fg:x="2442" fg:w="1"/><text x="81.7043%" y="3967.50"></text></g><g><title>`0x7FFAC130E5EF (1 samples, 0.03%)</title><rect x="81.4543%" y="3941" width="0.0334%" height="15" fill="rgb(209,33,33)" fg:x="2442" fg:w="1"/><text x="81.7043%" y="3951.50"></text></g><g><title>`0x7FFAC13FFAE4 (1 samples, 0.03%)</title><rect x="81.4543%" y="3925" width="0.0334%" height="15" fill="rgb(227,85,29)" fg:x="2442" fg:w="1"/><text x="81.7043%" y="3935.50"></text></g><g><title>`0x7FFAC12D29E7 (5 samples, 0.17%)</title><rect x="81.3542%" y="4037" width="0.1668%" height="15" fill="rgb(241,53,46)" fg:x="2439" fg:w="5"/><text x="81.6042%" y="4047.50"></text></g><g><title>`0x7FFAC1319ABB (4 samples, 0.13%)</title><rect x="81.3876%" y="4021" width="0.1334%" height="15" fill="rgb(228,167,53)" fg:x="2440" fg:w="4"/><text x="81.6376%" y="4031.50"></text></g><g><title>`0x7FFAC1319D42 (4 samples, 0.13%)</title><rect x="81.3876%" y="4005" width="0.1334%" height="15" fill="rgb(238,195,45)" fg:x="2440" fg:w="4"/><text x="81.6376%" y="4015.50"></text></g><g><title>`0x7FFAC12D2871 (4 samples, 0.13%)</title><rect x="81.3876%" y="3989" width="0.1334%" height="15" fill="rgb(252,124,45)" fg:x="2440" fg:w="4"/><text x="81.6376%" y="3999.50"></text></g><g><title>`0x7FFAC12CA842 (1 samples, 0.03%)</title><rect x="81.4877%" y="3973" width="0.0334%" height="15" fill="rgb(251,38,35)" fg:x="2443" fg:w="1"/><text x="81.7377%" y="3983.50"></text></g><g><title>`0x7FFAC12CDE88 (1 samples, 0.03%)</title><rect x="81.5210%" y="3797" width="0.0334%" height="15" fill="rgb(227,33,2)" fg:x="2444" fg:w="1"/><text x="81.7710%" y="3807.50"></text></g><g><title>`0x7FFAC135D58A (2 samples, 0.07%)</title><rect x="81.5210%" y="3813" width="0.0667%" height="15" fill="rgb(223,157,46)" fg:x="2444" fg:w="2"/><text x="81.7710%" y="3823.50"></text></g><g><title>`0x7FFAC12CDEEE (1 samples, 0.03%)</title><rect x="81.5544%" y="3797" width="0.0334%" height="15" fill="rgb(222,78,41)" fg:x="2445" fg:w="1"/><text x="81.8044%" y="3807.50"></text></g><g><title>`0x7FFAC138A8F9 (1 samples, 0.03%)</title><rect x="81.5544%" y="3781" width="0.0334%" height="15" fill="rgb(248,176,11)" fg:x="2445" fg:w="1"/><text x="81.8044%" y="3791.50"></text></g><g><title>`0x7FFAC13FFAE4 (1 samples, 0.03%)</title><rect x="81.5544%" y="3765" width="0.0334%" height="15" fill="rgb(241,221,18)" fg:x="2445" fg:w="1"/><text x="81.8044%" y="3775.50"></text></g><g><title>`0x7FFAC135D717 (2 samples, 0.07%)</title><rect x="81.5877%" y="3813" width="0.0667%" height="15" fill="rgb(218,85,22)" fg:x="2446" fg:w="2"/><text x="81.8377%" y="3823.50"></text></g><g><title>`0x7FFAC130E5EF (2 samples, 0.07%)</title><rect x="81.5877%" y="3797" width="0.0667%" height="15" fill="rgb(222,223,7)" fg:x="2446" fg:w="2"/><text x="81.8377%" y="3807.50"></text></g><g><title>`0x7FFAC13FFAE4 (2 samples, 0.07%)</title><rect x="81.5877%" y="3781" width="0.0667%" height="15" fill="rgb(254,59,39)" fg:x="2446" fg:w="2"/><text x="81.8377%" y="3791.50"></text></g><g><title>`0x7FFAC1319A44 (5 samples, 0.17%)</title><rect x="81.5210%" y="3861" width="0.1668%" height="15" fill="rgb(247,100,27)" fg:x="2444" fg:w="5"/><text x="81.7710%" y="3871.50"></text></g><g><title>`0x7FFAC12D2871 (5 samples, 0.17%)</title><rect x="81.5210%" y="3845" width="0.1668%" height="15" fill="rgb(237,207,10)" fg:x="2444" fg:w="5"/><text x="81.7710%" y="3855.50"></text></g><g><title>`0x7FFAC12CA83A (5 samples, 0.17%)</title><rect x="81.5210%" y="3829" width="0.1668%" height="15" fill="rgb(220,121,28)" fg:x="2444" fg:w="5"/><text x="81.7710%" y="3839.50"></text></g><g><title>`0x7FFAC135D96F (1 samples, 0.03%)</title><rect x="81.6544%" y="3813" width="0.0334%" height="15" fill="rgb(213,223,20)" fg:x="2448" fg:w="1"/><text x="81.9044%" y="3823.50"></text></g><g><title>`0x7FFAC130E5EF (1 samples, 0.03%)</title><rect x="81.6544%" y="3797" width="0.0334%" height="15" fill="rgb(205,121,27)" fg:x="2448" fg:w="1"/><text x="81.9044%" y="3807.50"></text></g><g><title>`0x7FFAC13FFAE4 (1 samples, 0.03%)</title><rect x="81.6544%" y="3781" width="0.0334%" height="15" fill="rgb(253,24,53)" fg:x="2448" fg:w="1"/><text x="81.9044%" y="3791.50"></text></g><g><title>`0x7FFAC135D58A (1 samples, 0.03%)</title><rect x="81.6878%" y="3797" width="0.0334%" height="15" fill="rgb(224,224,47)" fg:x="2449" fg:w="1"/><text x="81.9378%" y="3807.50"></text></g><g><title>`0x7FFAC12CDEEE (1 samples, 0.03%)</title><rect x="81.6878%" y="3781" width="0.0334%" height="15" fill="rgb(250,125,36)" fg:x="2449" fg:w="1"/><text x="81.9378%" y="3791.50"></text></g><g><title>`0x7FFAC138A8F9 (1 samples, 0.03%)</title><rect x="81.6878%" y="3765" width="0.0334%" height="15" fill="rgb(240,144,38)" fg:x="2449" fg:w="1"/><text x="81.9378%" y="3775.50"></text></g><g><title>`0x7FFAC13FFAE4 (1 samples, 0.03%)</title><rect x="81.6878%" y="3749" width="0.0334%" height="15" fill="rgb(250,15,50)" fg:x="2449" fg:w="1"/><text x="81.9378%" y="3759.50"></text></g><g><title>`0x7FFAC135D717 (2 samples, 0.07%)</title><rect x="81.7211%" y="3797" width="0.0667%" height="15" fill="rgb(210,24,26)" fg:x="2450" fg:w="2"/><text x="81.9711%" y="3807.50"></text></g><g><title>`0x7FFAC130E5EF (2 samples, 0.07%)</title><rect x="81.7211%" y="3781" width="0.0667%" height="15" fill="rgb(234,53,53)" fg:x="2450" fg:w="2"/><text x="81.9711%" y="3791.50"></text></g><g><title>`0x7FFAC13FFAE4 (2 samples, 0.07%)</title><rect x="81.7211%" y="3765" width="0.0667%" height="15" fill="rgb(208,108,28)" fg:x="2450" fg:w="2"/><text x="81.9711%" y="3775.50"></text></g><g><title>`0x7FFAC12D29E7 (9 samples, 0.30%)</title><rect x="81.5210%" y="3877" width="0.3002%" height="15" fill="rgb(227,143,7)" fg:x="2444" fg:w="9"/><text x="81.7710%" y="3887.50"></text></g><g><title>`0x7FFAC1319ABB (4 samples, 0.13%)</title><rect x="81.6878%" y="3861" width="0.1334%" height="15" fill="rgb(238,189,38)" fg:x="2449" fg:w="4"/><text x="81.9378%" y="3871.50"></text></g><g><title>`0x7FFAC1319D42 (4 samples, 0.13%)</title><rect x="81.6878%" y="3845" width="0.1334%" height="15" fill="rgb(222,69,15)" fg:x="2449" fg:w="4"/><text x="81.9378%" y="3855.50"></text></g><g><title>`0x7FFAC12D2871 (4 samples, 0.13%)</title><rect x="81.6878%" y="3829" width="0.1334%" height="15" fill="rgb(213,169,7)" fg:x="2449" fg:w="4"/><text x="81.9378%" y="3839.50"></text></g><g><title>`0x7FFAC12CA83A (4 samples, 0.13%)</title><rect x="81.6878%" y="3813" width="0.1334%" height="15" fill="rgb(251,219,4)" fg:x="2449" fg:w="4"/><text x="81.9378%" y="3823.50"></text></g><g><title>`0x7FFAC135D96F (1 samples, 0.03%)</title><rect x="81.7879%" y="3797" width="0.0334%" height="15" fill="rgb(241,55,40)" fg:x="2452" fg:w="1"/><text x="82.0379%" y="3807.50"></text></g><g><title>`0x7FFAC130E5EF (1 samples, 0.03%)</title><rect x="81.7879%" y="3781" width="0.0334%" height="15" fill="rgb(243,57,30)" fg:x="2452" fg:w="1"/><text x="82.0379%" y="3791.50"></text></g><g><title>`0x7FFAC13FFAE4 (1 samples, 0.03%)</title><rect x="81.7879%" y="3765" width="0.0334%" height="15" fill="rgb(234,50,30)" fg:x="2452" fg:w="1"/><text x="82.0379%" y="3775.50"></text></g><g><title>`0x7FFAC1319A2C (1 samples, 0.03%)</title><rect x="81.8212%" y="3701" width="0.0334%" height="15" fill="rgb(239,23,42)" fg:x="2453" fg:w="1"/><text x="82.0712%" y="3711.50"></text></g><g><title>`0x7FFAC1400120 (1 samples, 0.03%)</title><rect x="81.8212%" y="3685" width="0.0334%" height="15" fill="rgb(217,38,19)" fg:x="2453" fg:w="1"/><text x="82.0712%" y="3695.50"></text></g><g><title>`0x7FFAC135D27F (1 samples, 0.03%)</title><rect x="81.8546%" y="3653" width="0.0334%" height="15" fill="rgb(215,179,16)" fg:x="2454" fg:w="1"/><text x="82.1046%" y="3663.50"></text></g><g><title>`0x7FFAC12CE95E (1 samples, 0.03%)</title><rect x="81.8546%" y="3637" width="0.0334%" height="15" fill="rgb(254,21,37)" fg:x="2454" fg:w="1"/><text x="82.1046%" y="3647.50"></text></g><g><title>`0x7FFAC12CDEDC (1 samples, 0.03%)</title><rect x="81.8879%" y="3637" width="0.0334%" height="15" fill="rgb(219,207,48)" fg:x="2455" fg:w="1"/><text x="82.1379%" y="3647.50"></text></g><g><title>`0x7FFAC135D58A (17 samples, 0.57%)</title><rect x="81.8879%" y="3653" width="0.5670%" height="15" fill="rgb(227,225,41)" fg:x="2455" fg:w="17"/><text x="82.1379%" y="3663.50"></text></g><g><title>`0x7FFAC12CDEEE (16 samples, 0.53%)</title><rect x="81.9213%" y="3637" width="0.5337%" height="15" fill="rgb(223,130,1)" fg:x="2456" fg:w="16"/><text x="82.1713%" y="3647.50"></text></g><g><title>`0x7FFAC138A8F9 (16 samples, 0.53%)</title><rect x="81.9213%" y="3621" width="0.5337%" height="15" fill="rgb(249,54,42)" fg:x="2456" fg:w="16"/><text x="82.1713%" y="3631.50"></text></g><g><title>`0x7FFAC13FFAE4 (16 samples, 0.53%)</title><rect x="81.9213%" y="3605" width="0.5337%" height="15" fill="rgb(248,69,25)" fg:x="2456" fg:w="16"/><text x="82.1713%" y="3615.50"></text></g><g><title>`0x7FFAC135D717 (2 samples, 0.07%)</title><rect x="82.4550%" y="3653" width="0.0667%" height="15" fill="rgb(234,21,32)" fg:x="2472" fg:w="2"/><text x="82.7050%" y="3663.50"></text></g><g><title>`0x7FFAC130E5EF (2 samples, 0.07%)</title><rect x="82.4550%" y="3637" width="0.0667%" height="15" fill="rgb(252,136,6)" fg:x="2472" fg:w="2"/><text x="82.7050%" y="3647.50"></text></g><g><title>`0x7FFAC13FFAE4 (2 samples, 0.07%)</title><rect x="82.4550%" y="3621" width="0.0667%" height="15" fill="rgb(245,87,12)" fg:x="2472" fg:w="2"/><text x="82.7050%" y="3631.50"></text></g><g><title>`0x7FFAC1319A44 (23 samples, 0.77%)</title><rect x="81.8546%" y="3701" width="0.7672%" height="15" fill="rgb(208,12,15)" fg:x="2454" fg:w="23"/><text x="82.1046%" y="3711.50"></text></g><g><title>`0x7FFAC12D2871 (23 samples, 0.77%)</title><rect x="81.8546%" y="3685" width="0.7672%" height="15" fill="rgb(250,98,2)" fg:x="2454" fg:w="23"/><text x="82.1046%" y="3695.50"></text></g><g><title>`0x7FFAC12CA83A (23 samples, 0.77%)</title><rect x="81.8546%" y="3669" width="0.7672%" height="15" fill="rgb(205,213,15)" fg:x="2454" fg:w="23"/><text x="82.1046%" y="3679.50"></text></g><g><title>`0x7FFAC135D96F (3 samples, 0.10%)</title><rect x="82.5217%" y="3653" width="0.1001%" height="15" fill="rgb(248,192,44)" fg:x="2474" fg:w="3"/><text x="82.7717%" y="3663.50"></text></g><g><title>`0x7FFAC130E5EF (3 samples, 0.10%)</title><rect x="82.5217%" y="3637" width="0.1001%" height="15" fill="rgb(221,89,17)" fg:x="2474" fg:w="3"/><text x="82.7717%" y="3647.50"></text></g><g><title>`0x7FFAC13FFAE4 (3 samples, 0.10%)</title><rect x="82.5217%" y="3621" width="0.1001%" height="15" fill="rgb(209,55,3)" fg:x="2474" fg:w="3"/><text x="82.7717%" y="3631.50"></text></g><g><title>`0x7FFAC135D58A (10 samples, 0.33%)</title><rect x="82.6217%" y="3637" width="0.3336%" height="15" fill="rgb(247,23,45)" fg:x="2477" fg:w="10"/><text x="82.8717%" y="3647.50"></text></g><g><title>`0x7FFAC12CDEEE (10 samples, 0.33%)</title><rect x="82.6217%" y="3621" width="0.3336%" height="15" fill="rgb(235,152,23)" fg:x="2477" fg:w="10"/><text x="82.8717%" y="3631.50"></text></g><g><title>`0x7FFAC138A8F9 (10 samples, 0.33%)</title><rect x="82.6217%" y="3605" width="0.3336%" height="15" fill="rgb(244,63,13)" fg:x="2477" fg:w="10"/><text x="82.8717%" y="3615.50"></text></g><g><title>`0x7FFAC13FFAE4 (10 samples, 0.33%)</title><rect x="82.6217%" y="3589" width="0.3336%" height="15" fill="rgb(227,30,37)" fg:x="2477" fg:w="10"/><text x="82.8717%" y="3599.50"></text></g><g><title>`0x7FFAC135D717 (2 samples, 0.07%)</title><rect x="82.9553%" y="3637" width="0.0667%" height="15" fill="rgb(224,49,42)" fg:x="2487" fg:w="2"/><text x="83.2053%" y="3647.50"></text></g><g><title>`0x7FFAC130E5EF (2 samples, 0.07%)</title><rect x="82.9553%" y="3621" width="0.0667%" height="15" fill="rgb(218,129,5)" fg:x="2487" fg:w="2"/><text x="83.2053%" y="3631.50"></text></g><g><title>`0x7FFAC13FFAE4 (2 samples, 0.07%)</title><rect x="82.9553%" y="3605" width="0.0667%" height="15" fill="rgb(240,199,54)" fg:x="2487" fg:w="2"/><text x="83.2053%" y="3615.50"></text></g><g><title>`0x7FFAC135D96F (6 samples, 0.20%)</title><rect x="83.0220%" y="3637" width="0.2001%" height="15" fill="rgb(234,31,13)" fg:x="2489" fg:w="6"/><text x="83.2720%" y="3647.50"></text></g><g><title>`0x7FFAC130E5EF (6 samples, 0.20%)</title><rect x="83.0220%" y="3621" width="0.2001%" height="15" fill="rgb(219,73,54)" fg:x="2489" fg:w="6"/><text x="83.2720%" y="3631.50"></text></g><g><title>`0x7FFAC13FFAE4 (6 samples, 0.20%)</title><rect x="83.0220%" y="3605" width="0.2001%" height="15" fill="rgb(251,162,10)" fg:x="2489" fg:w="6"/><text x="83.2720%" y="3615.50"></text></g><g><title>`0x7FFAC12D29E7 (43 samples, 1.43%)</title><rect x="81.8212%" y="3717" width="1.4343%" height="15" fill="rgb(240,138,47)" fg:x="2453" fg:w="43"/><text x="82.0712%" y="3727.50"></text></g><g><title>`0x7FFAC1319ABB (19 samples, 0.63%)</title><rect x="82.6217%" y="3701" width="0.6338%" height="15" fill="rgb(216,138,26)" fg:x="2477" fg:w="19"/><text x="82.8717%" y="3711.50"></text></g><g><title>`0x7FFAC1319D42 (19 samples, 0.63%)</title><rect x="82.6217%" y="3685" width="0.6338%" height="15" fill="rgb(243,17,35)" fg:x="2477" fg:w="19"/><text x="82.8717%" y="3695.50"></text></g><g><title>`0x7FFAC12D2871 (19 samples, 0.63%)</title><rect x="82.6217%" y="3669" width="0.6338%" height="15" fill="rgb(241,60,18)" fg:x="2477" fg:w="19"/><text x="82.8717%" y="3679.50"></text></g><g><title>`0x7FFAC12CA83A (19 samples, 0.63%)</title><rect x="82.6217%" y="3653" width="0.6338%" height="15" fill="rgb(234,2,44)" fg:x="2477" fg:w="19"/><text x="82.8717%" y="3663.50"></text></g><g><title>`0x7FFAC135D9ED (1 samples, 0.03%)</title><rect x="83.2221%" y="3637" width="0.0334%" height="15" fill="rgb(225,225,33)" fg:x="2495" fg:w="1"/><text x="83.4721%" y="3647.50"></text></g><g><title>`0x7FFAC12D229D (1 samples, 0.03%)</title><rect x="83.2889%" y="3557" width="0.0334%" height="15" fill="rgb(234,50,31)" fg:x="2497" fg:w="1"/><text x="83.5389%" y="3567.50"></text></g><g><title>`0x7FFAC12D230F (1 samples, 0.03%)</title><rect x="83.3222%" y="3557" width="0.0334%" height="15" fill="rgb(249,6,25)" fg:x="2498" fg:w="1"/><text x="83.5722%" y="3567.50"></text></g><g><title>`0x7FFAC12D23A7 (1 samples, 0.03%)</title><rect x="83.3556%" y="3557" width="0.0334%" height="15" fill="rgb(241,5,17)" fg:x="2499" fg:w="1"/><text x="83.6056%" y="3567.50"></text></g><g><title>`0x7FFAC1319A2C (1 samples, 0.03%)</title><rect x="83.3889%" y="3541" width="0.0334%" height="15" fill="rgb(207,116,10)" fg:x="2500" fg:w="1"/><text x="83.6389%" y="3551.50"></text></g><g><title>`0x7FFAC1400124 (1 samples, 0.03%)</title><rect x="83.3889%" y="3525" width="0.0334%" height="15" fill="rgb(222,128,18)" fg:x="2500" fg:w="1"/><text x="83.6389%" y="3535.50"></text></g><g><title>`0x7FFAC135D58A (25 samples, 0.83%)</title><rect x="83.4223%" y="3493" width="0.8339%" height="15" fill="rgb(229,109,25)" fg:x="2501" fg:w="25"/><text x="83.6723%" y="3503.50"></text></g><g><title>`0x7FFAC12CDEEE (25 samples, 0.83%)</title><rect x="83.4223%" y="3477" width="0.8339%" height="15" fill="rgb(222,102,25)" fg:x="2501" fg:w="25"/><text x="83.6723%" y="3487.50"></text></g><g><title>`0x7FFAC138A8F9 (25 samples, 0.83%)</title><rect x="83.4223%" y="3461" width="0.8339%" height="15" fill="rgb(239,211,5)" fg:x="2501" fg:w="25"/><text x="83.6723%" y="3471.50"></text></g><g><title>`0x7FFAC13FFAE4 (25 samples, 0.83%)</title><rect x="83.4223%" y="3445" width="0.8339%" height="15" fill="rgb(223,136,26)" fg:x="2501" fg:w="25"/><text x="83.6723%" y="3455.50"></text></g><g><title>`0x7FFAC1319A44 (27 samples, 0.90%)</title><rect x="83.4223%" y="3541" width="0.9006%" height="15" fill="rgb(227,30,15)" fg:x="2501" fg:w="27"/><text x="83.6723%" y="3551.50"></text></g><g><title>`0x7FFAC12D2871 (27 samples, 0.90%)</title><rect x="83.4223%" y="3525" width="0.9006%" height="15" fill="rgb(247,76,4)" fg:x="2501" fg:w="27"/><text x="83.6723%" y="3535.50"></text></g><g><title>`0x7FFAC12CA83A (27 samples, 0.90%)</title><rect x="83.4223%" y="3509" width="0.9006%" height="15" fill="rgb(245,38,48)" fg:x="2501" fg:w="27"/><text x="83.6723%" y="3519.50"></text></g><g><title>`0x7FFAC135D96F (2 samples, 0.07%)</title><rect x="84.2562%" y="3493" width="0.0667%" height="15" fill="rgb(210,220,14)" fg:x="2526" fg:w="2"/><text x="84.5062%" y="3503.50"></text></g><g><title>`0x7FFAC130E5EF (2 samples, 0.07%)</title><rect x="84.2562%" y="3477" width="0.0667%" height="15" fill="rgb(224,60,51)" fg:x="2526" fg:w="2"/><text x="84.5062%" y="3487.50"></text></g><g><title>`0x7FFAC13FFAE4 (2 samples, 0.07%)</title><rect x="84.2562%" y="3461" width="0.0667%" height="15" fill="rgb(212,133,49)" fg:x="2526" fg:w="2"/><text x="84.5062%" y="3471.50"></text></g><g><title>`0x7FFAC12CA5A3 (1 samples, 0.03%)</title><rect x="84.3229%" y="3493" width="0.0334%" height="15" fill="rgb(231,39,22)" fg:x="2528" fg:w="1"/><text x="84.5729%" y="3503.50"></text></g><g><title>`0x7FFAC135D58A (15 samples, 0.50%)</title><rect x="84.3562%" y="3477" width="0.5003%" height="15" fill="rgb(236,173,22)" fg:x="2529" fg:w="15"/><text x="84.6062%" y="3487.50"></text></g><g><title>`0x7FFAC12CDEEE (15 samples, 0.50%)</title><rect x="84.3562%" y="3461" width="0.5003%" height="15" fill="rgb(210,70,0)" fg:x="2529" fg:w="15"/><text x="84.6062%" y="3471.50"></text></g><g><title>`0x7FFAC138A8F9 (15 samples, 0.50%)</title><rect x="84.3562%" y="3445" width="0.5003%" height="15" fill="rgb(215,170,11)" fg:x="2529" fg:w="15"/><text x="84.6062%" y="3455.50"></text></g><g><title>`0x7FFAC13FFAE4 (15 samples, 0.50%)</title><rect x="84.3562%" y="3429" width="0.5003%" height="15" fill="rgb(220,154,28)" fg:x="2529" fg:w="15"/><text x="84.6062%" y="3439.50"></text></g><g><title>`0x7FFAC135D717 (3 samples, 0.10%)</title><rect x="84.8566%" y="3477" width="0.1001%" height="15" fill="rgb(240,160,41)" fg:x="2544" fg:w="3"/><text x="85.1066%" y="3487.50"></text></g><g><title>`0x7FFAC130E5EF (3 samples, 0.10%)</title><rect x="84.8566%" y="3461" width="0.1001%" height="15" fill="rgb(243,215,41)" fg:x="2544" fg:w="3"/><text x="85.1066%" y="3471.50"></text></g><g><title>`0x7FFAC13FFAE4 (3 samples, 0.10%)</title><rect x="84.8566%" y="3445" width="0.1001%" height="15" fill="rgb(214,208,31)" fg:x="2544" fg:w="3"/><text x="85.1066%" y="3455.50"></text></g><g><title>`0x7FFAC12D29E7 (56 samples, 1.87%)</title><rect x="83.3889%" y="3557" width="1.8679%" height="15" fill="rgb(247,57,22)" fg:x="2500" fg:w="56"/><text x="83.6389%" y="3567.50">`..</text></g><g><title>`0x7FFAC1319ABB (28 samples, 0.93%)</title><rect x="84.3229%" y="3541" width="0.9340%" height="15" fill="rgb(228,73,52)" fg:x="2528" fg:w="28"/><text x="84.5729%" y="3551.50"></text></g><g><title>`0x7FFAC1319D42 (28 samples, 0.93%)</title><rect x="84.3229%" y="3525" width="0.9340%" height="15" fill="rgb(252,60,9)" fg:x="2528" fg:w="28"/><text x="84.5729%" y="3535.50"></text></g><g><title>`0x7FFAC12D2871 (28 samples, 0.93%)</title><rect x="84.3229%" y="3509" width="0.9340%" height="15" fill="rgb(233,9,51)" fg:x="2528" fg:w="28"/><text x="84.5729%" y="3519.50"></text></g><g><title>`0x7FFAC12CA83A (27 samples, 0.90%)</title><rect x="84.3562%" y="3493" width="0.9006%" height="15" fill="rgb(223,67,14)" fg:x="2529" fg:w="27"/><text x="84.6062%" y="3503.50"></text></g><g><title>`0x7FFAC135D96F (9 samples, 0.30%)</title><rect x="84.9566%" y="3477" width="0.3002%" height="15" fill="rgb(222,86,2)" fg:x="2547" fg:w="9"/><text x="85.2066%" y="3487.50"></text></g><g><title>`0x7FFAC130E5EF (9 samples, 0.30%)</title><rect x="84.9566%" y="3461" width="0.3002%" height="15" fill="rgb(243,58,54)" fg:x="2547" fg:w="9"/><text x="85.2066%" y="3471.50"></text></g><g><title>`0x7FFAC13FFAE4 (9 samples, 0.30%)</title><rect x="84.9566%" y="3445" width="0.3002%" height="15" fill="rgb(210,200,39)" fg:x="2547" fg:w="9"/><text x="85.2066%" y="3455.50"></text></g><g><title>`0x7FFAC12D2230 (1 samples, 0.03%)</title><rect x="85.2902%" y="3397" width="0.0334%" height="15" fill="rgb(238,135,9)" fg:x="2557" fg:w="1"/><text x="85.5402%" y="3407.50"></text></g><g><title>`0x7FFAC12D22F8 (1 samples, 0.03%)</title><rect x="85.3235%" y="3397" width="0.0334%" height="15" fill="rgb(232,179,7)" fg:x="2558" fg:w="1"/><text x="85.5735%" y="3407.50"></text></g><g><title>`0x7FFAC12D230C (1 samples, 0.03%)</title><rect x="85.3569%" y="3397" width="0.0334%" height="15" fill="rgb(245,65,41)" fg:x="2559" fg:w="1"/><text x="85.6069%" y="3407.50"></text></g><g><title>`0x7FFAC12D2313 (1 samples, 0.03%)</title><rect x="85.3903%" y="3397" width="0.0334%" height="15" fill="rgb(227,43,8)" fg:x="2560" fg:w="1"/><text x="85.6403%" y="3407.50"></text></g><g><title>`0x7FFAC12D2329 (1 samples, 0.03%)</title><rect x="85.4236%" y="3397" width="0.0334%" height="15" fill="rgb(235,91,14)" fg:x="2561" fg:w="1"/><text x="85.6736%" y="3407.50"></text></g><g><title>`0x7FFAC12D2379 (1 samples, 0.03%)</title><rect x="85.4570%" y="3397" width="0.0334%" height="15" fill="rgb(235,219,31)" fg:x="2562" fg:w="1"/><text x="85.7070%" y="3407.50"></text></g><g><title>`0x7FFAC12D23A7 (1 samples, 0.03%)</title><rect x="85.4903%" y="3397" width="0.0334%" height="15" fill="rgb(227,121,25)" fg:x="2563" fg:w="1"/><text x="85.7403%" y="3407.50"></text></g><g><title>`0x7FFAC12D23C2 (1 samples, 0.03%)</title><rect x="85.5237%" y="3397" width="0.0334%" height="15" fill="rgb(254,129,24)" fg:x="2564" fg:w="1"/><text x="85.7737%" y="3407.50"></text></g><g><title>`0x7FFAC12D23DD (1 samples, 0.03%)</title><rect x="85.5570%" y="3397" width="0.0334%" height="15" fill="rgb(226,144,49)" fg:x="2565" fg:w="1"/><text x="85.8070%" y="3407.50"></text></g><g><title>`0x7FFAC12D2451 (1 samples, 0.03%)</title><rect x="85.5904%" y="3397" width="0.0334%" height="15" fill="rgb(214,187,32)" fg:x="2566" fg:w="1"/><text x="85.8404%" y="3407.50"></text></g><g><title>`0x7FFAC1319A2C (1 samples, 0.03%)</title><rect x="85.6237%" y="3381" width="0.0334%" height="15" fill="rgb(243,129,46)" fg:x="2567" fg:w="1"/><text x="85.8737%" y="3391.50"></text></g><g><title>`0x7FFAC1400124 (1 samples, 0.03%)</title><rect x="85.6237%" y="3365" width="0.0334%" height="15" fill="rgb(221,185,35)" fg:x="2567" fg:w="1"/><text x="85.8737%" y="3375.50"></text></g><g><title>`0x7FFAC135D27F (1 samples, 0.03%)</title><rect x="85.6571%" y="3333" width="0.0334%" height="15" fill="rgb(205,0,32)" fg:x="2568" fg:w="1"/><text x="85.9071%" y="3343.50"></text></g><g><title>`0x7FFAC12CE95E (1 samples, 0.03%)</title><rect x="85.6571%" y="3317" width="0.0334%" height="15" fill="rgb(229,179,12)" fg:x="2568" fg:w="1"/><text x="85.9071%" y="3327.50"></text></g><g><title>`0x7FFAC135D58A (12 samples, 0.40%)</title><rect x="85.6905%" y="3333" width="0.4003%" height="15" fill="rgb(252,107,19)" fg:x="2569" fg:w="12"/><text x="85.9405%" y="3343.50"></text></g><g><title>`0x7FFAC12CDEEE (12 samples, 0.40%)</title><rect x="85.6905%" y="3317" width="0.4003%" height="15" fill="rgb(220,95,27)" fg:x="2569" fg:w="12"/><text x="85.9405%" y="3327.50"></text></g><g><title>`0x7FFAC138A8F9 (12 samples, 0.40%)</title><rect x="85.6905%" y="3301" width="0.4003%" height="15" fill="rgb(240,113,40)" fg:x="2569" fg:w="12"/><text x="85.9405%" y="3311.50"></text></g><g><title>`0x7FFAC13FFAE4 (12 samples, 0.40%)</title><rect x="85.6905%" y="3285" width="0.4003%" height="15" fill="rgb(208,4,43)" fg:x="2569" fg:w="12"/><text x="85.9405%" y="3295.50"></text></g><g><title>`0x7FFAC135D717 (1 samples, 0.03%)</title><rect x="86.0907%" y="3333" width="0.0334%" height="15" fill="rgb(247,189,30)" fg:x="2581" fg:w="1"/><text x="86.3407%" y="3343.50"></text></g><g><title>`0x7FFAC130E5EF (1 samples, 0.03%)</title><rect x="86.0907%" y="3317" width="0.0334%" height="15" fill="rgb(231,157,17)" fg:x="2581" fg:w="1"/><text x="86.3407%" y="3327.50"></text></g><g><title>`0x7FFAC13FFAE4 (1 samples, 0.03%)</title><rect x="86.0907%" y="3301" width="0.0334%" height="15" fill="rgb(224,139,6)" fg:x="2581" fg:w="1"/><text x="86.3407%" y="3311.50"></text></g><g><title>`0x7FFAC1319A44 (17 samples, 0.57%)</title><rect x="85.6571%" y="3381" width="0.5670%" height="15" fill="rgb(223,83,16)" fg:x="2568" fg:w="17"/><text x="85.9071%" y="3391.50"></text></g><g><title>`0x7FFAC12D2871 (17 samples, 0.57%)</title><rect x="85.6571%" y="3365" width="0.5670%" height="15" fill="rgb(232,211,20)" fg:x="2568" fg:w="17"/><text x="85.9071%" y="3375.50"></text></g><g><title>`0x7FFAC12CA83A (17 samples, 0.57%)</title><rect x="85.6571%" y="3349" width="0.5670%" height="15" fill="rgb(225,203,35)" fg:x="2568" fg:w="17"/><text x="85.9071%" y="3359.50"></text></g><g><title>`0x7FFAC135D96F (3 samples, 0.10%)</title><rect x="86.1241%" y="3333" width="0.1001%" height="15" fill="rgb(215,211,44)" fg:x="2582" fg:w="3"/><text x="86.3741%" y="3343.50"></text></g><g><title>`0x7FFAC130E5EF (3 samples, 0.10%)</title><rect x="86.1241%" y="3317" width="0.1001%" height="15" fill="rgb(248,213,26)" fg:x="2582" fg:w="3"/><text x="86.3741%" y="3327.50"></text></g><g><title>`0x7FFAC13FFAE4 (3 samples, 0.10%)</title><rect x="86.1241%" y="3301" width="0.1001%" height="15" fill="rgb(214,23,52)" fg:x="2582" fg:w="3"/><text x="86.3741%" y="3311.50"></text></g><g><title>`0x7FFAC135D58A (6 samples, 0.20%)</title><rect x="86.2241%" y="3317" width="0.2001%" height="15" fill="rgb(225,173,50)" fg:x="2585" fg:w="6"/><text x="86.4741%" y="3327.50"></text></g><g><title>`0x7FFAC12CDEEE (6 samples, 0.20%)</title><rect x="86.2241%" y="3301" width="0.2001%" height="15" fill="rgb(206,150,22)" fg:x="2585" fg:w="6"/><text x="86.4741%" y="3311.50"></text></g><g><title>`0x7FFAC138A8F9 (6 samples, 0.20%)</title><rect x="86.2241%" y="3285" width="0.2001%" height="15" fill="rgb(239,64,23)" fg:x="2585" fg:w="6"/><text x="86.4741%" y="3295.50"></text></g><g><title>`0x7FFAC13FFAE4 (6 samples, 0.20%)</title><rect x="86.2241%" y="3269" width="0.2001%" height="15" fill="rgb(242,50,38)" fg:x="2585" fg:w="6"/><text x="86.4741%" y="3279.50"></text></g><g><title>`0x7FFAC12D29E7 (26 samples, 0.87%)</title><rect x="85.6237%" y="3397" width="0.8672%" height="15" fill="rgb(217,91,15)" fg:x="2567" fg:w="26"/><text x="85.8737%" y="3407.50"></text></g><g><title>`0x7FFAC1319ABB (8 samples, 0.27%)</title><rect x="86.2241%" y="3381" width="0.2668%" height="15" fill="rgb(230,172,6)" fg:x="2585" fg:w="8"/><text x="86.4741%" y="3391.50"></text></g><g><title>`0x7FFAC1319D42 (8 samples, 0.27%)</title><rect x="86.2241%" y="3365" width="0.2668%" height="15" fill="rgb(221,98,26)" fg:x="2585" fg:w="8"/><text x="86.4741%" y="3375.50"></text></g><g><title>`0x7FFAC12D2871 (8 samples, 0.27%)</title><rect x="86.2241%" y="3349" width="0.2668%" height="15" fill="rgb(227,210,45)" fg:x="2585" fg:w="8"/><text x="86.4741%" y="3359.50"></text></g><g><title>`0x7FFAC12CA83A (8 samples, 0.27%)</title><rect x="86.2241%" y="3333" width="0.2668%" height="15" fill="rgb(206,8,30)" fg:x="2585" fg:w="8"/><text x="86.4741%" y="3343.50"></text></g><g><title>`0x7FFAC135D96F (2 samples, 0.07%)</title><rect x="86.4243%" y="3317" width="0.0667%" height="15" fill="rgb(241,219,17)" fg:x="2591" fg:w="2"/><text x="86.6743%" y="3327.50"></text></g><g><title>`0x7FFAC130E5EF (2 samples, 0.07%)</title><rect x="86.4243%" y="3301" width="0.0667%" height="15" fill="rgb(247,121,29)" fg:x="2591" fg:w="2"/><text x="86.6743%" y="3311.50"></text></g><g><title>`0x7FFAC13FFAE4 (2 samples, 0.07%)</title><rect x="86.4243%" y="3285" width="0.0667%" height="15" fill="rgb(219,169,49)" fg:x="2591" fg:w="2"/><text x="86.6743%" y="3295.50"></text></g><g><title>`0x7FFAC12D229D (1 samples, 0.03%)</title><rect x="86.5911%" y="3237" width="0.0334%" height="15" fill="rgb(253,49,49)" fg:x="2596" fg:w="1"/><text x="86.8411%" y="3247.50"></text></g><g><title>`0x7FFAC12D22F8 (1 samples, 0.03%)</title><rect x="86.6244%" y="3237" width="0.0334%" height="15" fill="rgb(217,178,3)" fg:x="2597" fg:w="1"/><text x="86.8744%" y="3247.50"></text></g><g><title>`0x7FFAC12D2313 (1 samples, 0.03%)</title><rect x="86.6578%" y="3237" width="0.0334%" height="15" fill="rgb(234,73,37)" fg:x="2598" fg:w="1"/><text x="86.9078%" y="3247.50"></text></g><g><title>`0x7FFAC12D23A7 (7 samples, 0.23%)</title><rect x="86.6911%" y="3237" width="0.2335%" height="15" fill="rgb(250,98,22)" fg:x="2599" fg:w="7"/><text x="86.9411%" y="3247.50"></text></g><g><title>`0x7FFAC12D26A2 (1 samples, 0.03%)</title><rect x="86.9246%" y="3237" width="0.0334%" height="15" fill="rgb(220,108,37)" fg:x="2606" fg:w="1"/><text x="87.1746%" y="3247.50"></text></g><g><title>`0x7FFAC1319A44 (2 samples, 0.07%)</title><rect x="86.9580%" y="3221" width="0.0667%" height="15" fill="rgb(225,168,10)" fg:x="2607" fg:w="2"/><text x="87.2080%" y="3231.50"></text></g><g><title>`0x7FFAC12D2871 (2 samples, 0.07%)</title><rect x="86.9580%" y="3205" width="0.0667%" height="15" fill="rgb(247,215,21)" fg:x="2607" fg:w="2"/><text x="87.2080%" y="3215.50"></text></g><g><title>`0x7FFAC12CA83A (2 samples, 0.07%)</title><rect x="86.9580%" y="3189" width="0.0667%" height="15" fill="rgb(253,189,31)" fg:x="2607" fg:w="2"/><text x="87.2080%" y="3199.50"></text></g><g><title>`0x7FFAC135D58A (2 samples, 0.07%)</title><rect x="86.9580%" y="3173" width="0.0667%" height="15" fill="rgb(241,54,22)" fg:x="2607" fg:w="2"/><text x="87.2080%" y="3183.50"></text></g><g><title>`0x7FFAC12CDEEE (2 samples, 0.07%)</title><rect x="86.9580%" y="3157" width="0.0667%" height="15" fill="rgb(211,87,4)" fg:x="2607" fg:w="2"/><text x="87.2080%" y="3167.50"></text></g><g><title>`0x7FFAC138A8F9 (2 samples, 0.07%)</title><rect x="86.9580%" y="3141" width="0.0667%" height="15" fill="rgb(245,112,24)" fg:x="2607" fg:w="2"/><text x="87.2080%" y="3151.50"></text></g><g><title>`0x7FFAC13FFAE4 (2 samples, 0.07%)</title><rect x="86.9580%" y="3125" width="0.0667%" height="15" fill="rgb(235,190,41)" fg:x="2607" fg:w="2"/><text x="87.2080%" y="3135.50"></text></g><g><title>`0x7FFAC12D29E7 (4 samples, 0.13%)</title><rect x="86.9580%" y="3237" width="0.1334%" height="15" fill="rgb(214,89,8)" fg:x="2607" fg:w="4"/><text x="87.2080%" y="3247.50"></text></g><g><title>`0x7FFAC1319ABB (2 samples, 0.07%)</title><rect x="87.0247%" y="3221" width="0.0667%" height="15" fill="rgb(249,155,35)" fg:x="2609" fg:w="2"/><text x="87.2747%" y="3231.50"></text></g><g><title>`0x7FFAC1319D42 (2 samples, 0.07%)</title><rect x="87.0247%" y="3205" width="0.0667%" height="15" fill="rgb(249,88,26)" fg:x="2609" fg:w="2"/><text x="87.2747%" y="3215.50"></text></g><g><title>`0x7FFAC12D2871 (2 samples, 0.07%)</title><rect x="87.0247%" y="3189" width="0.0667%" height="15" fill="rgb(232,56,8)" fg:x="2609" fg:w="2"/><text x="87.2747%" y="3199.50"></text></g><g><title>`0x7FFAC12CA83A (2 samples, 0.07%)</title><rect x="87.0247%" y="3173" width="0.0667%" height="15" fill="rgb(240,95,3)" fg:x="2609" fg:w="2"/><text x="87.2747%" y="3183.50"></text></g><g><title>`0x7FFAC135D58A (2 samples, 0.07%)</title><rect x="87.0247%" y="3157" width="0.0667%" height="15" fill="rgb(222,44,28)" fg:x="2609" fg:w="2"/><text x="87.2747%" y="3167.50"></text></g><g><title>`0x7FFAC12CDEEE (2 samples, 0.07%)</title><rect x="87.0247%" y="3141" width="0.0667%" height="15" fill="rgb(234,16,30)" fg:x="2609" fg:w="2"/><text x="87.2747%" y="3151.50"></text></g><g><title>`0x7FFAC138A8F9 (2 samples, 0.07%)</title><rect x="87.0247%" y="3125" width="0.0667%" height="15" fill="rgb(223,26,17)" fg:x="2609" fg:w="2"/><text x="87.2747%" y="3135.50"></text></g><g><title>`0x7FFAC13FFAE4 (2 samples, 0.07%)</title><rect x="87.0247%" y="3109" width="0.0667%" height="15" fill="rgb(239,187,47)" fg:x="2609" fg:w="2"/><text x="87.2747%" y="3119.50"></text></g><g><title>`0x7FFAC0004980 (1 samples, 0.03%)</title><rect x="87.3249%" y="3077" width="0.0334%" height="15" fill="rgb(247,102,50)" fg:x="2618" fg:w="1"/><text x="87.5749%" y="3087.50"></text></g><g><title>`0x7FFAC12D2230 (1 samples, 0.03%)</title><rect x="87.3582%" y="3077" width="0.0334%" height="15" fill="rgb(231,216,22)" fg:x="2619" fg:w="1"/><text x="87.6082%" y="3087.50"></text></g><g><title>`0x7FFAC12D226F (1 samples, 0.03%)</title><rect x="87.3916%" y="3077" width="0.0334%" height="15" fill="rgb(216,201,26)" fg:x="2620" fg:w="1"/><text x="87.6416%" y="3087.50"></text></g><g><title>`0x7FFAC12D229D (4 samples, 0.13%)</title><rect x="87.4249%" y="3077" width="0.1334%" height="15" fill="rgb(214,186,23)" fg:x="2621" fg:w="4"/><text x="87.6749%" y="3087.50"></text></g><g><title>`0x7FFAC12D22AD (1 samples, 0.03%)</title><rect x="87.5584%" y="3077" width="0.0334%" height="15" fill="rgb(235,184,4)" fg:x="2625" fg:w="1"/><text x="87.8084%" y="3087.50"></text></g><g><title>`0x7FFAC12D22F8 (1 samples, 0.03%)</title><rect x="87.5917%" y="3077" width="0.0334%" height="15" fill="rgb(244,46,17)" fg:x="2626" fg:w="1"/><text x="87.8417%" y="3087.50"></text></g><g><title>`0x7FFAC12D2302 (2 samples, 0.07%)</title><rect x="87.6251%" y="3077" width="0.0667%" height="15" fill="rgb(248,74,46)" fg:x="2627" fg:w="2"/><text x="87.8751%" y="3087.50"></text></g><g><title>`0x7FFAC12D2396 (1 samples, 0.03%)</title><rect x="87.6918%" y="3077" width="0.0334%" height="15" fill="rgb(243,79,5)" fg:x="2629" fg:w="1"/><text x="87.9418%" y="3087.50"></text></g><g><title>`0x7FFAC12D23A7 (4 samples, 0.13%)</title><rect x="87.7252%" y="3077" width="0.1334%" height="15" fill="rgb(213,148,1)" fg:x="2630" fg:w="4"/><text x="87.9752%" y="3087.50"></text></g><g><title>`0x7FFAC12D23DD (1 samples, 0.03%)</title><rect x="87.8586%" y="3077" width="0.0334%" height="15" fill="rgb(221,30,0)" fg:x="2634" fg:w="1"/><text x="88.1086%" y="3087.50"></text></g><g><title>`0x7FFAC12D2451 (1 samples, 0.03%)</title><rect x="87.8919%" y="3077" width="0.0334%" height="15" fill="rgb(207,85,29)" fg:x="2635" fg:w="1"/><text x="88.1419%" y="3087.50"></text></g><g><title>`0x7FFAC12D26A2 (1 samples, 0.03%)</title><rect x="87.9253%" y="3077" width="0.0334%" height="15" fill="rgb(239,31,46)" fg:x="2636" fg:w="1"/><text x="88.1753%" y="3087.50"></text></g><g><title>`0x7FFAC12D26AB (1 samples, 0.03%)</title><rect x="87.9586%" y="3077" width="0.0334%" height="15" fill="rgb(219,6,1)" fg:x="2637" fg:w="1"/><text x="88.2086%" y="3087.50"></text></g><g><title>`0x7FFAC12D229D (3 samples, 0.10%)</title><rect x="88.3256%" y="2917" width="0.1001%" height="15" fill="rgb(229,90,29)" fg:x="2648" fg:w="3"/><text x="88.5756%" y="2927.50"></text></g><g><title>`0x7FFAC12D22A3 (1 samples, 0.03%)</title><rect x="88.4256%" y="2917" width="0.0334%" height="15" fill="rgb(242,201,42)" fg:x="2651" fg:w="1"/><text x="88.6756%" y="2927.50"></text></g><g><title>`0x7FFAC12D22CA (1 samples, 0.03%)</title><rect x="88.4590%" y="2917" width="0.0334%" height="15" fill="rgb(243,80,54)" fg:x="2652" fg:w="1"/><text x="88.7090%" y="2927.50"></text></g><g><title>`0x7FFAC12D230F (1 samples, 0.03%)</title><rect x="88.4923%" y="2917" width="0.0334%" height="15" fill="rgb(223,166,15)" fg:x="2653" fg:w="1"/><text x="88.7423%" y="2927.50"></text></g><g><title>`0x7FFAC12D2396 (1 samples, 0.03%)</title><rect x="88.5257%" y="2917" width="0.0334%" height="15" fill="rgb(238,78,27)" fg:x="2654" fg:w="1"/><text x="88.7757%" y="2927.50"></text></g><g><title>`0x7FFAC12D23A7 (2 samples, 0.07%)</title><rect x="88.5590%" y="2917" width="0.0667%" height="15" fill="rgb(235,28,43)" fg:x="2655" fg:w="2"/><text x="88.8090%" y="2927.50"></text></g><g><title>`0x7FFAC12D2451 (1 samples, 0.03%)</title><rect x="88.6258%" y="2917" width="0.0334%" height="15" fill="rgb(240,210,28)" fg:x="2657" fg:w="1"/><text x="88.8758%" y="2927.50"></text></g><g><title>`0x7FFAC0004980 (1 samples, 0.03%)</title><rect x="89.0594%" y="2757" width="0.0334%" height="15" fill="rgb(253,6,46)" fg:x="2670" fg:w="1"/><text x="89.3094%" y="2767.50"></text></g><g><title>`0x7FFAC12D229D (3 samples, 0.10%)</title><rect x="89.0927%" y="2757" width="0.1001%" height="15" fill="rgb(250,159,47)" fg:x="2671" fg:w="3"/><text x="89.3427%" y="2767.50"></text></g><g><title>`0x7FFAC12D22A7 (1 samples, 0.03%)</title><rect x="89.1928%" y="2757" width="0.0334%" height="15" fill="rgb(216,139,2)" fg:x="2674" fg:w="1"/><text x="89.4428%" y="2767.50"></text></g><g><title>`0x7FFAC12D22AD (1 samples, 0.03%)</title><rect x="89.2262%" y="2757" width="0.0334%" height="15" fill="rgb(221,124,44)" fg:x="2675" fg:w="1"/><text x="89.4762%" y="2767.50"></text></g><g><title>`0x7FFAC12D231D (1 samples, 0.03%)</title><rect x="89.2595%" y="2757" width="0.0334%" height="15" fill="rgb(205,37,22)" fg:x="2676" fg:w="1"/><text x="89.5095%" y="2767.50"></text></g><g><title>`0x7FFAC12D2329 (1 samples, 0.03%)</title><rect x="89.2929%" y="2757" width="0.0334%" height="15" fill="rgb(250,55,8)" fg:x="2677" fg:w="1"/><text x="89.5429%" y="2767.50"></text></g><g><title>`0x7FFAC12D23A7 (2 samples, 0.07%)</title><rect x="89.3262%" y="2757" width="0.0667%" height="15" fill="rgb(215,83,48)" fg:x="2678" fg:w="2"/><text x="89.5762%" y="2767.50"></text></g><g><title>`0x7FFAC12D243D (2 samples, 0.07%)</title><rect x="89.3929%" y="2757" width="0.0667%" height="15" fill="rgb(253,2,32)" fg:x="2680" fg:w="2"/><text x="89.6429%" y="2767.50"></text></g><g><title>`0x7FFAC12D29E7 (1 samples, 0.03%)</title><rect x="89.4596%" y="2757" width="0.0334%" height="15" fill="rgb(236,67,28)" fg:x="2682" fg:w="1"/><text x="89.7096%" y="2767.50"></text></g><g><title>`0x7FFAC1319ABB (1 samples, 0.03%)</title><rect x="89.4596%" y="2741" width="0.0334%" height="15" fill="rgb(252,55,15)" fg:x="2682" fg:w="1"/><text x="89.7096%" y="2751.50"></text></g><g><title>`0x7FFAC1319D42 (1 samples, 0.03%)</title><rect x="89.4596%" y="2725" width="0.0334%" height="15" fill="rgb(243,173,17)" fg:x="2682" fg:w="1"/><text x="89.7096%" y="2735.50"></text></g><g><title>`0x7FFAC12D2871 (1 samples, 0.03%)</title><rect x="89.4596%" y="2709" width="0.0334%" height="15" fill="rgb(215,212,13)" fg:x="2682" fg:w="1"/><text x="89.7096%" y="2719.50"></text></g><g><title>`0x7FFAC12CA83A (1 samples, 0.03%)</title><rect x="89.4596%" y="2693" width="0.0334%" height="15" fill="rgb(253,176,6)" fg:x="2682" fg:w="1"/><text x="89.7096%" y="2703.50"></text></g><g><title>`0x7FFAC135D717 (1 samples, 0.03%)</title><rect x="89.4596%" y="2677" width="0.0334%" height="15" fill="rgb(236,105,26)" fg:x="2682" fg:w="1"/><text x="89.7096%" y="2687.50"></text></g><g><title>`0x7FFAC130E5EF (1 samples, 0.03%)</title><rect x="89.4596%" y="2661" width="0.0334%" height="15" fill="rgb(239,226,32)" fg:x="2682" fg:w="1"/><text x="89.7096%" y="2671.50"></text></g><g><title>`0x7FFAC13FFAE4 (1 samples, 0.03%)</title><rect x="89.4596%" y="2645" width="0.0334%" height="15" fill="rgb(236,104,51)" fg:x="2682" fg:w="1"/><text x="89.7096%" y="2655.50"></text></g><g><title>`0x7FFAC12D2288 (1 samples, 0.03%)</title><rect x="90.0267%" y="2597" width="0.0334%" height="15" fill="rgb(220,172,33)" fg:x="2699" fg:w="1"/><text x="90.2767%" y="2607.50"></text></g><g><title>`0x7FFAC12D229D (1 samples, 0.03%)</title><rect x="90.0600%" y="2597" width="0.0334%" height="15" fill="rgb(224,182,25)" fg:x="2700" fg:w="1"/><text x="90.3100%" y="2607.50"></text></g><g><title>`0x7FFAC12D2313 (1 samples, 0.03%)</title><rect x="90.0934%" y="2597" width="0.0334%" height="15" fill="rgb(236,184,24)" fg:x="2701" fg:w="1"/><text x="90.3434%" y="2607.50"></text></g><g><title>`0x7FFAC12D2325 (1 samples, 0.03%)</title><rect x="90.1268%" y="2597" width="0.0334%" height="15" fill="rgb(241,221,14)" fg:x="2702" fg:w="1"/><text x="90.3768%" y="2607.50"></text></g><g><title>`0x7FFAC12D238C (1 samples, 0.03%)</title><rect x="90.1601%" y="2597" width="0.0334%" height="15" fill="rgb(227,146,5)" fg:x="2703" fg:w="1"/><text x="90.4101%" y="2607.50"></text></g><g><title>`0x7FFAC12D23A7 (3 samples, 0.10%)</title><rect x="90.1935%" y="2597" width="0.1001%" height="15" fill="rgb(214,15,23)" fg:x="2704" fg:w="3"/><text x="90.4435%" y="2607.50"></text></g><g><title>`0x7FFAC12D26AB (1 samples, 0.03%)</title><rect x="90.2935%" y="2597" width="0.0334%" height="15" fill="rgb(233,157,31)" fg:x="2707" fg:w="1"/><text x="90.5435%" y="2607.50"></text></g><g><title>`0x7FFAC12D2231 (1 samples, 0.03%)</title><rect x="90.6271%" y="2437" width="0.0334%" height="15" fill="rgb(211,27,52)" fg:x="2717" fg:w="1"/><text x="90.8771%" y="2447.50"></text></g><g><title>`0x7FFAC12D229D (2 samples, 0.07%)</title><rect x="90.6604%" y="2437" width="0.0667%" height="15" fill="rgb(212,223,15)" fg:x="2718" fg:w="2"/><text x="90.9104%" y="2447.50"></text></g><g><title>`0x7FFAC12D230F (1 samples, 0.03%)</title><rect x="90.7272%" y="2437" width="0.0334%" height="15" fill="rgb(254,211,0)" fg:x="2720" fg:w="1"/><text x="90.9772%" y="2447.50"></text></g><g><title>`0x7FFAC12D233B (1 samples, 0.03%)</title><rect x="90.7605%" y="2437" width="0.0334%" height="15" fill="rgb(205,43,38)" fg:x="2721" fg:w="1"/><text x="91.0105%" y="2447.50"></text></g><g><title>`0x7FFAC12D23A7 (2 samples, 0.07%)</title><rect x="90.7939%" y="2437" width="0.0667%" height="15" fill="rgb(242,206,46)" fg:x="2722" fg:w="2"/><text x="91.0439%" y="2447.50"></text></g><g><title>`0x7FFAC12D26AB (1 samples, 0.03%)</title><rect x="90.8606%" y="2437" width="0.0334%" height="15" fill="rgb(220,221,12)" fg:x="2724" fg:w="1"/><text x="91.1106%" y="2447.50"></text></g><g><title>`0x7FFAC12D29E7 (1 samples, 0.03%)</title><rect x="90.8939%" y="2437" width="0.0334%" height="15" fill="rgb(217,156,35)" fg:x="2725" fg:w="1"/><text x="91.1439%" y="2447.50"></text></g><g><title>`0x7FFAC1319ABB (1 samples, 0.03%)</title><rect x="90.8939%" y="2421" width="0.0334%" height="15" fill="rgb(207,181,49)" fg:x="2725" fg:w="1"/><text x="91.1439%" y="2431.50"></text></g><g><title>`0x7FFAC1319D42 (1 samples, 0.03%)</title><rect x="90.8939%" y="2405" width="0.0334%" height="15" fill="rgb(235,103,47)" fg:x="2725" fg:w="1"/><text x="91.1439%" y="2415.50"></text></g><g><title>`0x7FFAC12D2871 (1 samples, 0.03%)</title><rect x="90.8939%" y="2389" width="0.0334%" height="15" fill="rgb(222,63,28)" fg:x="2725" fg:w="1"/><text x="91.1439%" y="2399.50"></text></g><g><title>`0x7FFAC12CA83A (1 samples, 0.03%)</title><rect x="90.8939%" y="2373" width="0.0334%" height="15" fill="rgb(244,137,21)" fg:x="2725" fg:w="1"/><text x="91.1439%" y="2383.50"></text></g><g><title>`0x7FFAC135D96F (1 samples, 0.03%)</title><rect x="90.8939%" y="2357" width="0.0334%" height="15" fill="rgb(228,35,27)" fg:x="2725" fg:w="1"/><text x="91.1439%" y="2367.50"></text></g><g><title>`0x7FFAC130E5EF (1 samples, 0.03%)</title><rect x="90.8939%" y="2341" width="0.0334%" height="15" fill="rgb(226,191,41)" fg:x="2725" fg:w="1"/><text x="91.1439%" y="2351.50"></text></g><g><title>`0x7FFAC13FFAE4 (1 samples, 0.03%)</title><rect x="90.8939%" y="2325" width="0.0334%" height="15" fill="rgb(210,154,3)" fg:x="2725" fg:w="1"/><text x="91.1439%" y="2335.50"></text></g><g><title>`0x7FFAC12D2230 (1 samples, 0.03%)</title><rect x="91.1941%" y="2277" width="0.0334%" height="15" fill="rgb(216,60,49)" fg:x="2734" fg:w="1"/><text x="91.4441%" y="2287.50"></text></g><g><title>`0x7FFAC12D230F (1 samples, 0.03%)</title><rect x="91.2275%" y="2277" width="0.0334%" height="15" fill="rgb(226,17,20)" fg:x="2735" fg:w="1"/><text x="91.4775%" y="2287.50"></text></g><g><title>`0x7FFAC12D2313 (1 samples, 0.03%)</title><rect x="91.2608%" y="2277" width="0.0334%" height="15" fill="rgb(206,115,35)" fg:x="2736" fg:w="1"/><text x="91.5108%" y="2287.50"></text></g><g><title>`0x7FFAC12D269C (1 samples, 0.03%)</title><rect x="91.4943%" y="2117" width="0.0334%" height="15" fill="rgb(227,88,1)" fg:x="2743" fg:w="1"/><text x="91.7443%" y="2127.50"></text></g><g><title>`0x7FFAC12D22A3 (1 samples, 0.03%)</title><rect x="91.6945%" y="1957" width="0.0334%" height="15" fill="rgb(230,222,24)" fg:x="2749" fg:w="1"/><text x="91.9445%" y="1967.50"></text></g><g><title>`0x7FFAC12D23A7 (1 samples, 0.03%)</title><rect x="91.8279%" y="1637" width="0.0334%" height="15" fill="rgb(214,124,32)" fg:x="2753" fg:w="1"/><text x="92.0779%" y="1647.50"></text></g><g><title>boggle.exe`hashbrown::raw::Bucket&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::drop (6 samples, 0.20%)</title><rect x="91.7612%" y="1909" width="0.2001%" height="15" fill="rgb(240,41,36)" fg:x="2751" fg:w="6"/><text x="92.0112%" y="1919.50"></text></g><g><title>boggle.exe`core::ptr::mut_ptr::impl$0::drop_in_place(tuple$ (6 samples, 0.20%)</title><rect x="91.7612%" y="1893" width="0.2001%" height="15" fill="rgb(221,17,52)" fg:x="2751" fg:w="6"/><text x="92.0112%" y="1903.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(tuple$ (6 samples, 0.20%)</title><rect x="91.7612%" y="1877" width="0.2001%" height="15" fill="rgb(252,70,16)" fg:x="2751" fg:w="6"/><text x="92.0112%" y="1887.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place (6 samples, 0.20%)</title><rect x="91.7612%" y="1861" width="0.2001%" height="15" fill="rgb(250,177,4)" fg:x="2751" fg:w="6"/><text x="92.0112%" y="1871.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(std::collections::hash::map::HashMap (6 samples, 0.20%)</title><rect x="91.7612%" y="1845" width="0.2001%" height="15" fill="rgb(240,188,47)" fg:x="2751" fg:w="6"/><text x="92.0112%" y="1855.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(hashbrown::map::HashMap (6 samples, 0.20%)</title><rect x="91.7612%" y="1829" width="0.2001%" height="15" fill="rgb(215,92,12)" fg:x="2751" fg:w="6"/><text x="92.0112%" y="1839.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(hashbrown::raw::RawTable&lt;tuple$ (6 samples, 0.20%)</title><rect x="91.7612%" y="1813" width="0.2001%" height="15" fill="rgb(242,110,29)" fg:x="2751" fg:w="6"/><text x="92.0112%" y="1823.50"></text></g><g><title>boggle.exe`hashbrown::raw::impl$18::drop&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;(hashbrown::raw::RawTable&lt;tuple$ (5 samples, 0.17%)</title><rect x="91.7945%" y="1797" width="0.1668%" height="15" fill="rgb(208,211,26)" fg:x="2752" fg:w="5"/><text x="92.0445%" y="1807.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::drop_inner_table (5 samples, 0.17%)</title><rect x="91.7945%" y="1781" width="0.1668%" height="15" fill="rgb(244,147,6)" fg:x="2752" fg:w="5"/><text x="92.0445%" y="1791.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::drop_elements (4 samples, 0.13%)</title><rect x="91.8279%" y="1765" width="0.1334%" height="15" fill="rgb(211,130,42)" fg:x="2753" fg:w="4"/><text x="92.0779%" y="1775.50"></text></g><g><title>boggle.exe`hashbrown::raw::Bucket&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::drop (4 samples, 0.13%)</title><rect x="91.8279%" y="1749" width="0.1334%" height="15" fill="rgb(220,63,1)" fg:x="2753" fg:w="4"/><text x="92.0779%" y="1759.50"></text></g><g><title>boggle.exe`core::ptr::mut_ptr::impl$0::drop_in_place(tuple$ (4 samples, 0.13%)</title><rect x="91.8279%" y="1733" width="0.1334%" height="15" fill="rgb(241,212,30)" fg:x="2753" fg:w="4"/><text x="92.0779%" y="1743.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(tuple$ (4 samples, 0.13%)</title><rect x="91.8279%" y="1717" width="0.1334%" height="15" fill="rgb(233,153,17)" fg:x="2753" fg:w="4"/><text x="92.0779%" y="1727.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place (4 samples, 0.13%)</title><rect x="91.8279%" y="1701" width="0.1334%" height="15" fill="rgb(236,3,10)" fg:x="2753" fg:w="4"/><text x="92.0779%" y="1711.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(std::collections::hash::map::HashMap (4 samples, 0.13%)</title><rect x="91.8279%" y="1685" width="0.1334%" height="15" fill="rgb(232,41,21)" fg:x="2753" fg:w="4"/><text x="92.0779%" y="1695.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(hashbrown::map::HashMap (4 samples, 0.13%)</title><rect x="91.8279%" y="1669" width="0.1334%" height="15" fill="rgb(206,63,51)" fg:x="2753" fg:w="4"/><text x="92.0779%" y="1679.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(hashbrown::raw::RawTable&lt;tuple$ (4 samples, 0.13%)</title><rect x="91.8279%" y="1653" width="0.1334%" height="15" fill="rgb(250,214,3)" fg:x="2753" fg:w="4"/><text x="92.0779%" y="1663.50"></text></g><g><title>boggle.exe`hashbrown::raw::impl$18::drop&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;(hashbrown::raw::RawTable&lt;tuple$ (3 samples, 0.10%)</title><rect x="91.8612%" y="1637" width="0.1001%" height="15" fill="rgb(254,89,27)" fg:x="2754" fg:w="3"/><text x="92.1112%" y="1647.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::drop_inner_table (3 samples, 0.10%)</title><rect x="91.8612%" y="1621" width="0.1001%" height="15" fill="rgb(249,41,14)" fg:x="2754" fg:w="3"/><text x="92.1112%" y="1631.50"></text></g><g><title>boggle.exe`hashbrown::raw::Bucket&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::drop (10 samples, 0.33%)</title><rect x="91.6945%" y="2069" width="0.3336%" height="15" fill="rgb(221,196,51)" fg:x="2749" fg:w="10"/><text x="91.9445%" y="2079.50"></text></g><g><title>boggle.exe`core::ptr::mut_ptr::impl$0::drop_in_place(tuple$ (10 samples, 0.33%)</title><rect x="91.6945%" y="2053" width="0.3336%" height="15" fill="rgb(214,116,26)" fg:x="2749" fg:w="10"/><text x="91.9445%" y="2063.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(tuple$ (10 samples, 0.33%)</title><rect x="91.6945%" y="2037" width="0.3336%" height="15" fill="rgb(236,67,7)" fg:x="2749" fg:w="10"/><text x="91.9445%" y="2047.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place (10 samples, 0.33%)</title><rect x="91.6945%" y="2021" width="0.3336%" height="15" fill="rgb(253,179,32)" fg:x="2749" fg:w="10"/><text x="91.9445%" y="2031.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(std::collections::hash::map::HashMap (10 samples, 0.33%)</title><rect x="91.6945%" y="2005" width="0.3336%" height="15" fill="rgb(218,33,15)" fg:x="2749" fg:w="10"/><text x="91.9445%" y="2015.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(hashbrown::map::HashMap (10 samples, 0.33%)</title><rect x="91.6945%" y="1989" width="0.3336%" height="15" fill="rgb(217,202,41)" fg:x="2749" fg:w="10"/><text x="91.9445%" y="1999.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(hashbrown::raw::RawTable&lt;tuple$ (10 samples, 0.33%)</title><rect x="91.6945%" y="1973" width="0.3336%" height="15" fill="rgb(234,133,5)" fg:x="2749" fg:w="10"/><text x="91.9445%" y="1983.50"></text></g><g><title>boggle.exe`hashbrown::raw::impl$18::drop&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;(hashbrown::raw::RawTable&lt;tuple$ (9 samples, 0.30%)</title><rect x="91.7278%" y="1957" width="0.3002%" height="15" fill="rgb(240,47,40)" fg:x="2750" fg:w="9"/><text x="91.9778%" y="1967.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::drop_inner_table (8 samples, 0.27%)</title><rect x="91.7612%" y="1941" width="0.2668%" height="15" fill="rgb(234,166,26)" fg:x="2751" fg:w="8"/><text x="92.0112%" y="1951.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::drop_elements (8 samples, 0.27%)</title><rect x="91.7612%" y="1925" width="0.2668%" height="15" fill="rgb(244,125,51)" fg:x="2751" fg:w="8"/><text x="92.0112%" y="1935.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::iter (2 samples, 0.07%)</title><rect x="91.9613%" y="1909" width="0.0667%" height="15" fill="rgb(229,171,11)" fg:x="2757" fg:w="2"/><text x="92.2113%" y="1919.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawIterRange&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::new(unsigned char*, hashbrown::raw::Bucket&lt;tuple$ (2 samples, 0.07%)</title><rect x="91.9613%" y="1893" width="0.0667%" height="15" fill="rgb(224,38,45)" fg:x="2757" fg:w="2"/><text x="92.2113%" y="1903.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::load_aligned (2 samples, 0.07%)</title><rect x="91.9613%" y="1877" width="0.0667%" height="15" fill="rgb(237,27,7)" fg:x="2757" fg:w="2"/><text x="92.2113%" y="1887.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::match_empty_or_deleted (2 samples, 0.07%)</title><rect x="91.9613%" y="1861" width="0.0667%" height="15" fill="rgb(216,52,7)" fg:x="2757" fg:w="2"/><text x="92.2113%" y="1871.50"></text></g><g><title>boggle.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (2 samples, 0.07%)</title><rect x="91.9613%" y="1845" width="0.0667%" height="15" fill="rgb(243,11,11)" fg:x="2757" fg:w="2"/><text x="92.2113%" y="1855.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::iter (3 samples, 0.10%)</title><rect x="92.0280%" y="2069" width="0.1001%" height="15" fill="rgb(253,167,20)" fg:x="2759" fg:w="3"/><text x="92.2780%" y="2079.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawIterRange&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::new(unsigned char*, hashbrown::raw::Bucket&lt;tuple$ (3 samples, 0.10%)</title><rect x="92.0280%" y="2053" width="0.1001%" height="15" fill="rgb(215,207,5)" fg:x="2759" fg:w="3"/><text x="92.2780%" y="2063.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::load_aligned (3 samples, 0.10%)</title><rect x="92.0280%" y="2037" width="0.1001%" height="15" fill="rgb(252,127,31)" fg:x="2759" fg:w="3"/><text x="92.2780%" y="2047.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::match_empty_or_deleted (3 samples, 0.10%)</title><rect x="92.0280%" y="2021" width="0.1001%" height="15" fill="rgb(209,106,27)" fg:x="2759" fg:w="3"/><text x="92.2780%" y="2031.50"></text></g><g><title>boggle.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (3 samples, 0.10%)</title><rect x="92.0280%" y="2005" width="0.1001%" height="15" fill="rgb(214,220,18)" fg:x="2759" fg:w="3"/><text x="92.2780%" y="2015.50"></text></g><g><title>boggle.exe`hashbrown::raw::Bucket&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::drop (20 samples, 0.67%)</title><rect x="91.4943%" y="2229" width="0.6671%" height="15" fill="rgb(237,89,12)" fg:x="2743" fg:w="20"/><text x="91.7443%" y="2239.50"></text></g><g><title>boggle.exe`core::ptr::mut_ptr::impl$0::drop_in_place(tuple$ (20 samples, 0.67%)</title><rect x="91.4943%" y="2213" width="0.6671%" height="15" fill="rgb(209,167,36)" fg:x="2743" fg:w="20"/><text x="91.7443%" y="2223.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(tuple$ (20 samples, 0.67%)</title><rect x="91.4943%" y="2197" width="0.6671%" height="15" fill="rgb(243,45,22)" fg:x="2743" fg:w="20"/><text x="91.7443%" y="2207.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place (20 samples, 0.67%)</title><rect x="91.4943%" y="2181" width="0.6671%" height="15" fill="rgb(239,2,46)" fg:x="2743" fg:w="20"/><text x="91.7443%" y="2191.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(std::collections::hash::map::HashMap (20 samples, 0.67%)</title><rect x="91.4943%" y="2165" width="0.6671%" height="15" fill="rgb(241,101,0)" fg:x="2743" fg:w="20"/><text x="91.7443%" y="2175.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(hashbrown::map::HashMap (20 samples, 0.67%)</title><rect x="91.4943%" y="2149" width="0.6671%" height="15" fill="rgb(244,34,31)" fg:x="2743" fg:w="20"/><text x="91.7443%" y="2159.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(hashbrown::raw::RawTable&lt;tuple$ (20 samples, 0.67%)</title><rect x="91.4943%" y="2133" width="0.6671%" height="15" fill="rgb(248,23,22)" fg:x="2743" fg:w="20"/><text x="91.7443%" y="2143.50"></text></g><g><title>boggle.exe`hashbrown::raw::impl$18::drop&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;(hashbrown::raw::RawTable&lt;tuple$ (19 samples, 0.63%)</title><rect x="91.5277%" y="2117" width="0.6338%" height="15" fill="rgb(218,27,48)" fg:x="2744" fg:w="19"/><text x="91.7777%" y="2127.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::drop_inner_table (17 samples, 0.57%)</title><rect x="91.5944%" y="2101" width="0.5670%" height="15" fill="rgb(232,78,1)" fg:x="2746" fg:w="17"/><text x="91.8444%" y="2111.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::drop_elements (14 samples, 0.47%)</title><rect x="91.6945%" y="2085" width="0.4670%" height="15" fill="rgb(233,169,12)" fg:x="2749" fg:w="14"/><text x="91.9445%" y="2095.50"></text></g><g><title>boggle.exe`hashbrown::raw::impl$28::next(hashbrown::raw::RawIter&lt;tuple$ (1 samples, 0.03%)</title><rect x="92.1281%" y="2069" width="0.0334%" height="15" fill="rgb(225,222,54)" fg:x="2762" fg:w="1"/><text x="92.3781%" y="2079.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawIterRange&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::next_impl (1 samples, 0.03%)</title><rect x="92.1281%" y="2053" width="0.0334%" height="15" fill="rgb(245,126,29)" fg:x="2762" fg:w="1"/><text x="92.3781%" y="2063.50"></text></g><g><title>boggle.exe`hashbrown::raw::bitmask::impl$3::next (1 samples, 0.03%)</title><rect x="92.1281%" y="2037" width="0.0334%" height="15" fill="rgb(241,63,48)" fg:x="2762" fg:w="1"/><text x="92.3781%" y="2047.50"></text></g><g><title>boggle.exe`hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.03%)</title><rect x="92.1281%" y="2021" width="0.0334%" height="15" fill="rgb(235,126,38)" fg:x="2762" fg:w="1"/><text x="92.3781%" y="2031.50"></text></g><g><title>boggle.exe`hashbrown::raw::bitmask::BitMask::nonzero_trailing_zeros(core::num::nonzero::NonZero (1 samples, 0.03%)</title><rect x="92.1281%" y="2005" width="0.0334%" height="15" fill="rgb(232,96,49)" fg:x="2762" fg:w="1"/><text x="92.3781%" y="2015.50"></text></g><g><title>boggle.exe`core::num::nonzero::NonZero&lt;u16&gt;::trailing_zeros(core::num::nonzero::NonZero (1 samples, 0.03%)</title><rect x="92.1281%" y="1989" width="0.0334%" height="15" fill="rgb(211,146,40)" fg:x="2762" fg:w="1"/><text x="92.3781%" y="1999.50"></text></g><g><title>boggle.exe`core::core_arch::x86::sse2::_mm_load_si128 (2 samples, 0.07%)</title><rect x="92.1614%" y="2181" width="0.0667%" height="15" fill="rgb(247,93,44)" fg:x="2763" fg:w="2"/><text x="92.4114%" y="2191.50"></text></g><g><title>boggle.exe`hashbrown::raw::Bucket&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::drop (36 samples, 1.20%)</title><rect x="91.1941%" y="2389" width="1.2008%" height="15" fill="rgb(251,41,49)" fg:x="2734" fg:w="36"/><text x="91.4441%" y="2399.50"></text></g><g><title>boggle.exe`core::ptr::mut_ptr::impl$0::drop_in_place(tuple$ (36 samples, 1.20%)</title><rect x="91.1941%" y="2373" width="1.2008%" height="15" fill="rgb(218,155,12)" fg:x="2734" fg:w="36"/><text x="91.4441%" y="2383.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(tuple$ (36 samples, 1.20%)</title><rect x="91.1941%" y="2357" width="1.2008%" height="15" fill="rgb(221,161,30)" fg:x="2734" fg:w="36"/><text x="91.4441%" y="2367.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place (36 samples, 1.20%)</title><rect x="91.1941%" y="2341" width="1.2008%" height="15" fill="rgb(221,179,11)" fg:x="2734" fg:w="36"/><text x="91.4441%" y="2351.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(std::collections::hash::map::HashMap (36 samples, 1.20%)</title><rect x="91.1941%" y="2325" width="1.2008%" height="15" fill="rgb(224,170,48)" fg:x="2734" fg:w="36"/><text x="91.4441%" y="2335.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(hashbrown::map::HashMap (36 samples, 1.20%)</title><rect x="91.1941%" y="2309" width="1.2008%" height="15" fill="rgb(223,117,5)" fg:x="2734" fg:w="36"/><text x="91.4441%" y="2319.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(hashbrown::raw::RawTable&lt;tuple$ (36 samples, 1.20%)</title><rect x="91.1941%" y="2293" width="1.2008%" height="15" fill="rgb(209,52,20)" fg:x="2734" fg:w="36"/><text x="91.4441%" y="2303.50"></text></g><g><title>boggle.exe`hashbrown::raw::impl$18::drop&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;(hashbrown::raw::RawTable&lt;tuple$ (33 samples, 1.10%)</title><rect x="91.2942%" y="2277" width="1.1007%" height="15" fill="rgb(209,19,41)" fg:x="2737" fg:w="33"/><text x="91.5442%" y="2287.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::drop_inner_table (31 samples, 1.03%)</title><rect x="91.3609%" y="2261" width="1.0340%" height="15" fill="rgb(210,177,12)" fg:x="2739" fg:w="31"/><text x="91.6109%" y="2271.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::drop_elements (27 samples, 0.90%)</title><rect x="91.4943%" y="2245" width="0.9006%" height="15" fill="rgb(211,159,37)" fg:x="2743" fg:w="27"/><text x="91.7443%" y="2255.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::iter (7 samples, 0.23%)</title><rect x="92.1614%" y="2229" width="0.2335%" height="15" fill="rgb(209,20,2)" fg:x="2763" fg:w="7"/><text x="92.4114%" y="2239.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawIterRange&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::new(unsigned char*, hashbrown::raw::Bucket&lt;tuple$ (7 samples, 0.23%)</title><rect x="92.1614%" y="2213" width="0.2335%" height="15" fill="rgb(244,3,46)" fg:x="2763" fg:w="7"/><text x="92.4114%" y="2223.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::load_aligned (7 samples, 0.23%)</title><rect x="92.1614%" y="2197" width="0.2335%" height="15" fill="rgb(220,94,38)" fg:x="2763" fg:w="7"/><text x="92.4114%" y="2207.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::match_empty_or_deleted (5 samples, 0.17%)</title><rect x="92.2282%" y="2181" width="0.1668%" height="15" fill="rgb(253,14,31)" fg:x="2765" fg:w="5"/><text x="92.4782%" y="2191.50"></text></g><g><title>boggle.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (4 samples, 0.13%)</title><rect x="92.2615%" y="2165" width="0.1334%" height="15" fill="rgb(234,176,13)" fg:x="2766" fg:w="4"/><text x="92.5115%" y="2175.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::drop_elements (47 samples, 1.57%)</title><rect x="91.1274%" y="2405" width="1.5677%" height="15" fill="rgb(218,62,25)" fg:x="2732" fg:w="47"/><text x="91.3774%" y="2415.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::iter (9 samples, 0.30%)</title><rect x="92.3949%" y="2389" width="0.3002%" height="15" fill="rgb(216,124,40)" fg:x="2770" fg:w="9"/><text x="92.6449%" y="2399.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawIterRange&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::new(unsigned char*, hashbrown::raw::Bucket&lt;tuple$ (9 samples, 0.30%)</title><rect x="92.3949%" y="2373" width="0.3002%" height="15" fill="rgb(228,170,12)" fg:x="2770" fg:w="9"/><text x="92.6449%" y="2383.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::load_aligned (9 samples, 0.30%)</title><rect x="92.3949%" y="2357" width="0.3002%" height="15" fill="rgb(231,226,5)" fg:x="2770" fg:w="9"/><text x="92.6449%" y="2367.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::match_empty_or_deleted (9 samples, 0.30%)</title><rect x="92.3949%" y="2341" width="0.3002%" height="15" fill="rgb(237,122,22)" fg:x="2770" fg:w="9"/><text x="92.6449%" y="2351.50"></text></g><g><title>boggle.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (9 samples, 0.30%)</title><rect x="92.3949%" y="2325" width="0.3002%" height="15" fill="rgb(209,185,25)" fg:x="2770" fg:w="9"/><text x="92.6449%" y="2335.50"></text></g><g><title>boggle.exe`hashbrown::raw::Bucket&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::drop (63 samples, 2.10%)</title><rect x="90.6271%" y="2549" width="2.1014%" height="15" fill="rgb(228,200,32)" fg:x="2717" fg:w="63"/><text x="90.8771%" y="2559.50">b..</text></g><g><title>boggle.exe`core::ptr::mut_ptr::impl$0::drop_in_place(tuple$ (63 samples, 2.10%)</title><rect x="90.6271%" y="2533" width="2.1014%" height="15" fill="rgb(217,140,10)" fg:x="2717" fg:w="63"/><text x="90.8771%" y="2543.50">b..</text></g><g><title>boggle.exe`core::ptr::drop_in_place(tuple$ (63 samples, 2.10%)</title><rect x="90.6271%" y="2517" width="2.1014%" height="15" fill="rgb(253,17,24)" fg:x="2717" fg:w="63"/><text x="90.8771%" y="2527.50">b..</text></g><g><title>boggle.exe`core::ptr::drop_in_place (63 samples, 2.10%)</title><rect x="90.6271%" y="2501" width="2.1014%" height="15" fill="rgb(212,61,6)" fg:x="2717" fg:w="63"/><text x="90.8771%" y="2511.50">b..</text></g><g><title>boggle.exe`core::ptr::drop_in_place(std::collections::hash::map::HashMap (63 samples, 2.10%)</title><rect x="90.6271%" y="2485" width="2.1014%" height="15" fill="rgb(205,14,25)" fg:x="2717" fg:w="63"/><text x="90.8771%" y="2495.50">b..</text></g><g><title>boggle.exe`core::ptr::drop_in_place(hashbrown::map::HashMap (63 samples, 2.10%)</title><rect x="90.6271%" y="2469" width="2.1014%" height="15" fill="rgb(232,69,41)" fg:x="2717" fg:w="63"/><text x="90.8771%" y="2479.50">b..</text></g><g><title>boggle.exe`core::ptr::drop_in_place(hashbrown::raw::RawTable&lt;tuple$ (63 samples, 2.10%)</title><rect x="90.6271%" y="2453" width="2.1014%" height="15" fill="rgb(241,106,47)" fg:x="2717" fg:w="63"/><text x="90.8771%" y="2463.50">b..</text></g><g><title>boggle.exe`hashbrown::raw::impl$18::drop&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;(hashbrown::raw::RawTable&lt;tuple$ (54 samples, 1.80%)</title><rect x="90.9273%" y="2437" width="1.8012%" height="15" fill="rgb(210,213,53)" fg:x="2726" fg:w="54"/><text x="91.1773%" y="2447.50">b..</text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::drop_inner_table (53 samples, 1.77%)</title><rect x="90.9606%" y="2421" width="1.7678%" height="15" fill="rgb(253,175,27)" fg:x="2727" fg:w="53"/><text x="91.2106%" y="2431.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::free_buckets (1 samples, 0.03%)</title><rect x="92.6951%" y="2405" width="0.0334%" height="15" fill="rgb(211,171,24)" fg:x="2779" fg:w="1"/><text x="92.9451%" y="2415.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="92.6951%" y="2389" width="0.0334%" height="15" fill="rgb(229,80,7)" fg:x="2779" fg:w="1"/><text x="92.9451%" y="2399.50"></text></g><g><title>boggle.exe`alloc::alloc::dealloc (1 samples, 0.03%)</title><rect x="92.6951%" y="2373" width="0.0334%" height="15" fill="rgb(212,46,39)" fg:x="2779" fg:w="1"/><text x="92.9451%" y="2383.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::iter (9 samples, 0.30%)</title><rect x="92.7285%" y="2549" width="0.3002%" height="15" fill="rgb(240,80,45)" fg:x="2780" fg:w="9"/><text x="92.9785%" y="2559.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawIterRange&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::new(unsigned char*, hashbrown::raw::Bucket&lt;tuple$ (9 samples, 0.30%)</title><rect x="92.7285%" y="2533" width="0.3002%" height="15" fill="rgb(253,177,40)" fg:x="2780" fg:w="9"/><text x="92.9785%" y="2543.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::load_aligned (9 samples, 0.30%)</title><rect x="92.7285%" y="2517" width="0.3002%" height="15" fill="rgb(249,200,15)" fg:x="2780" fg:w="9"/><text x="92.9785%" y="2527.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::match_empty_or_deleted (9 samples, 0.30%)</title><rect x="92.7285%" y="2501" width="0.3002%" height="15" fill="rgb(217,78,26)" fg:x="2780" fg:w="9"/><text x="92.9785%" y="2511.50"></text></g><g><title>boggle.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (9 samples, 0.30%)</title><rect x="92.7285%" y="2485" width="0.3002%" height="15" fill="rgb(254,151,32)" fg:x="2780" fg:w="9"/><text x="92.9785%" y="2495.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::drop_elements (74 samples, 2.47%)</title><rect x="90.5937%" y="2565" width="2.4683%" height="15" fill="rgb(226,165,27)" fg:x="2716" fg:w="74"/><text x="90.8437%" y="2575.50">bo..</text></g><g><title>boggle.exe`hashbrown::raw::impl$28::next(hashbrown::raw::RawIter&lt;tuple$ (1 samples, 0.03%)</title><rect x="93.0287%" y="2549" width="0.0334%" height="15" fill="rgb(250,206,4)" fg:x="2789" fg:w="1"/><text x="93.2787%" y="2559.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawIterRange&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::next_impl (1 samples, 0.03%)</title><rect x="93.0287%" y="2533" width="0.0334%" height="15" fill="rgb(231,229,27)" fg:x="2789" fg:w="1"/><text x="93.2787%" y="2543.50"></text></g><g><title>boggle.exe`hashbrown::raw::Bucket&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::next_n (1 samples, 0.03%)</title><rect x="93.0287%" y="2517" width="0.0334%" height="15" fill="rgb(239,217,8)" fg:x="2789" fg:w="1"/><text x="93.2787%" y="2527.50"></text></g><g><title>boggle.exe`core::ptr::mut_ptr::impl$0::sub(tuple$ (1 samples, 0.03%)</title><rect x="93.0287%" y="2501" width="0.0334%" height="15" fill="rgb(225,204,27)" fg:x="2789" fg:w="1"/><text x="93.2787%" y="2511.50"></text></g><g><title>boggle.exe`core::ptr::mut_ptr::impl$0::offset(tuple$ (1 samples, 0.03%)</title><rect x="93.0287%" y="2485" width="0.0334%" height="15" fill="rgb(230,56,32)" fg:x="2789" fg:w="1"/><text x="93.2787%" y="2495.50"></text></g><g><title>boggle.exe`hashbrown::raw::Bucket&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::drop (92 samples, 3.07%)</title><rect x="90.0267%" y="2709" width="3.0687%" height="15" fill="rgb(222,56,27)" fg:x="2699" fg:w="92"/><text x="90.2767%" y="2719.50">bog..</text></g><g><title>boggle.exe`core::ptr::mut_ptr::impl$0::drop_in_place(tuple$ (92 samples, 3.07%)</title><rect x="90.0267%" y="2693" width="3.0687%" height="15" fill="rgb(253,108,27)" fg:x="2699" fg:w="92"/><text x="90.2767%" y="2703.50">bog..</text></g><g><title>boggle.exe`core::ptr::drop_in_place(tuple$ (92 samples, 3.07%)</title><rect x="90.0267%" y="2677" width="3.0687%" height="15" fill="rgb(212,87,36)" fg:x="2699" fg:w="92"/><text x="90.2767%" y="2687.50">bog..</text></g><g><title>boggle.exe`core::ptr::drop_in_place (92 samples, 3.07%)</title><rect x="90.0267%" y="2661" width="3.0687%" height="15" fill="rgb(247,82,36)" fg:x="2699" fg:w="92"/><text x="90.2767%" y="2671.50">bog..</text></g><g><title>boggle.exe`core::ptr::drop_in_place(std::collections::hash::map::HashMap (92 samples, 3.07%)</title><rect x="90.0267%" y="2645" width="3.0687%" height="15" fill="rgb(222,143,9)" fg:x="2699" fg:w="92"/><text x="90.2767%" y="2655.50">bog..</text></g><g><title>boggle.exe`core::ptr::drop_in_place(hashbrown::map::HashMap (92 samples, 3.07%)</title><rect x="90.0267%" y="2629" width="3.0687%" height="15" fill="rgb(238,162,48)" fg:x="2699" fg:w="92"/><text x="90.2767%" y="2639.50">bog..</text></g><g><title>boggle.exe`core::ptr::drop_in_place(hashbrown::raw::RawTable&lt;tuple$ (92 samples, 3.07%)</title><rect x="90.0267%" y="2613" width="3.0687%" height="15" fill="rgb(221,59,43)" fg:x="2699" fg:w="92"/><text x="90.2767%" y="2623.50">bog..</text></g><g><title>boggle.exe`hashbrown::raw::impl$18::drop&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;(hashbrown::raw::RawTable&lt;tuple$ (83 samples, 2.77%)</title><rect x="90.3269%" y="2597" width="2.7685%" height="15" fill="rgb(205,166,41)" fg:x="2708" fg:w="83"/><text x="90.5769%" y="2607.50">bo..</text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::drop_inner_table (82 samples, 2.74%)</title><rect x="90.3602%" y="2581" width="2.7352%" height="15" fill="rgb(241,186,40)" fg:x="2709" fg:w="82"/><text x="90.6102%" y="2591.50">bo..</text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::free_buckets (1 samples, 0.03%)</title><rect x="93.0620%" y="2565" width="0.0334%" height="15" fill="rgb(216,119,35)" fg:x="2790" fg:w="1"/><text x="93.3120%" y="2575.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::allocation_info (1 samples, 0.03%)</title><rect x="93.0620%" y="2549" width="0.0334%" height="15" fill="rgb(208,68,38)" fg:x="2790" fg:w="1"/><text x="93.3120%" y="2559.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::iter (22 samples, 0.73%)</title><rect x="93.0954%" y="2709" width="0.7338%" height="15" fill="rgb(217,113,1)" fg:x="2791" fg:w="22"/><text x="93.3454%" y="2719.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawIterRange&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::new(unsigned char*, hashbrown::raw::Bucket&lt;tuple$ (22 samples, 0.73%)</title><rect x="93.0954%" y="2693" width="0.7338%" height="15" fill="rgb(242,153,3)" fg:x="2791" fg:w="22"/><text x="93.3454%" y="2703.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::load_aligned (22 samples, 0.73%)</title><rect x="93.0954%" y="2677" width="0.7338%" height="15" fill="rgb(229,76,35)" fg:x="2791" fg:w="22"/><text x="93.3454%" y="2687.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::match_empty_or_deleted (22 samples, 0.73%)</title><rect x="93.0954%" y="2661" width="0.7338%" height="15" fill="rgb(229,125,34)" fg:x="2791" fg:w="22"/><text x="93.3454%" y="2671.50"></text></g><g><title>boggle.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (20 samples, 0.67%)</title><rect x="93.1621%" y="2645" width="0.6671%" height="15" fill="rgb(238,179,36)" fg:x="2793" fg:w="20"/><text x="93.4121%" y="2655.50"></text></g><g><title>boggle.exe`hashbrown::raw::impl$18::drop&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;(hashbrown::raw::RawTable&lt;tuple$ (131 samples, 4.37%)</title><rect x="89.4930%" y="2757" width="4.3696%" height="15" fill="rgb(244,183,19)" fg:x="2683" fg:w="131"/><text x="89.7430%" y="2767.50">boggl..</text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::drop_inner_table (129 samples, 4.30%)</title><rect x="89.5597%" y="2741" width="4.3029%" height="15" fill="rgb(216,85,49)" fg:x="2685" fg:w="129"/><text x="89.8097%" y="2751.50">boggl..</text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::drop_elements (116 samples, 3.87%)</title><rect x="89.9933%" y="2725" width="3.8692%" height="15" fill="rgb(208,161,47)" fg:x="2698" fg:w="116"/><text x="90.2433%" y="2735.50">bogg..</text></g><g><title>boggle.exe`hashbrown::raw::impl$28::next(hashbrown::raw::RawIter&lt;tuple$ (1 samples, 0.03%)</title><rect x="93.8292%" y="2709" width="0.0334%" height="15" fill="rgb(233,210,18)" fg:x="2813" fg:w="1"/><text x="94.0792%" y="2719.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawIterRange&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::next_impl (1 samples, 0.03%)</title><rect x="93.8292%" y="2693" width="0.0334%" height="15" fill="rgb(205,104,42)" fg:x="2813" fg:w="1"/><text x="94.0792%" y="2703.50"></text></g><g><title>boggle.exe`hashbrown::raw::Bucket&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::next_n (1 samples, 0.03%)</title><rect x="93.8292%" y="2677" width="0.0334%" height="15" fill="rgb(248,90,43)" fg:x="2813" fg:w="1"/><text x="94.0792%" y="2687.50"></text></g><g><title>boggle.exe`core::ptr::mut_ptr::impl$0::sub(tuple$ (1 samples, 0.03%)</title><rect x="93.8292%" y="2661" width="0.0334%" height="15" fill="rgb(206,198,11)" fg:x="2813" fg:w="1"/><text x="94.0792%" y="2671.50"></text></g><g><title>boggle.exe`core::ptr::mut_ptr::impl$0::offset(tuple$ (1 samples, 0.03%)</title><rect x="93.8292%" y="2645" width="0.0334%" height="15" fill="rgb(239,165,27)" fg:x="2813" fg:w="1"/><text x="94.0792%" y="2655.50"></text></g><g><title>boggle.exe`hashbrown::raw::Bucket&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::drop (146 samples, 4.87%)</title><rect x="89.0260%" y="2869" width="4.8699%" height="15" fill="rgb(246,44,32)" fg:x="2669" fg:w="146"/><text x="89.2760%" y="2879.50">boggle..</text></g><g><title>boggle.exe`core::ptr::mut_ptr::impl$0::drop_in_place(tuple$ (146 samples, 4.87%)</title><rect x="89.0260%" y="2853" width="4.8699%" height="15" fill="rgb(252,65,42)" fg:x="2669" fg:w="146"/><text x="89.2760%" y="2863.50">boggle..</text></g><g><title>boggle.exe`core::ptr::drop_in_place(tuple$ (146 samples, 4.87%)</title><rect x="89.0260%" y="2837" width="4.8699%" height="15" fill="rgb(246,197,18)" fg:x="2669" fg:w="146"/><text x="89.2760%" y="2847.50">boggle..</text></g><g><title>boggle.exe`core::ptr::drop_in_place (146 samples, 4.87%)</title><rect x="89.0260%" y="2821" width="4.8699%" height="15" fill="rgb(216,192,4)" fg:x="2669" fg:w="146"/><text x="89.2760%" y="2831.50">boggle..</text></g><g><title>boggle.exe`core::ptr::drop_in_place(std::collections::hash::map::HashMap (146 samples, 4.87%)</title><rect x="89.0260%" y="2805" width="4.8699%" height="15" fill="rgb(208,117,10)" fg:x="2669" fg:w="146"/><text x="89.2760%" y="2815.50">boggle..</text></g><g><title>boggle.exe`core::ptr::drop_in_place(hashbrown::map::HashMap (146 samples, 4.87%)</title><rect x="89.0260%" y="2789" width="4.8699%" height="15" fill="rgb(240,61,47)" fg:x="2669" fg:w="146"/><text x="89.2760%" y="2799.50">boggle..</text></g><g><title>boggle.exe`core::ptr::drop_in_place(hashbrown::raw::RawTable&lt;tuple$ (146 samples, 4.87%)</title><rect x="89.0260%" y="2773" width="4.8699%" height="15" fill="rgb(228,178,21)" fg:x="2669" fg:w="146"/><text x="89.2760%" y="2783.50">boggle..</text></g><g><title>boggle.exe`std::alloc::__default_lib_allocator::__rdl_dealloc (1 samples, 0.03%)</title><rect x="93.8626%" y="2757" width="0.0334%" height="15" fill="rgb(219,96,54)" fg:x="2814" fg:w="1"/><text x="94.1126%" y="2767.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::iter (19 samples, 0.63%)</title><rect x="93.8959%" y="2869" width="0.6338%" height="15" fill="rgb(250,177,24)" fg:x="2815" fg:w="19"/><text x="94.1459%" y="2879.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawIterRange&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::new(unsigned char*, hashbrown::raw::Bucket&lt;tuple$ (19 samples, 0.63%)</title><rect x="93.8959%" y="2853" width="0.6338%" height="15" fill="rgb(242,154,46)" fg:x="2815" fg:w="19"/><text x="94.1459%" y="2863.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::load_aligned (19 samples, 0.63%)</title><rect x="93.8959%" y="2837" width="0.6338%" height="15" fill="rgb(226,176,29)" fg:x="2815" fg:w="19"/><text x="94.1459%" y="2847.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::match_empty_or_deleted (19 samples, 0.63%)</title><rect x="93.8959%" y="2821" width="0.6338%" height="15" fill="rgb(226,29,2)" fg:x="2815" fg:w="19"/><text x="94.1459%" y="2831.50"></text></g><g><title>boggle.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (18 samples, 0.60%)</title><rect x="93.9293%" y="2805" width="0.6004%" height="15" fill="rgb(237,104,14)" fg:x="2816" fg:w="18"/><text x="94.1793%" y="2815.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::drop_elements (166 samples, 5.54%)</title><rect x="89.0260%" y="2885" width="5.5370%" height="15" fill="rgb(245,207,31)" fg:x="2669" fg:w="166"/><text x="89.2760%" y="2895.50">boggle...</text></g><g><title>boggle.exe`hashbrown::raw::impl$28::next(hashbrown::raw::RawIter&lt;tuple$ (1 samples, 0.03%)</title><rect x="94.5297%" y="2869" width="0.0334%" height="15" fill="rgb(229,211,45)" fg:x="2834" fg:w="1"/><text x="94.7797%" y="2879.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawIterRange&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::next_impl (1 samples, 0.03%)</title><rect x="94.5297%" y="2853" width="0.0334%" height="15" fill="rgb(229,113,15)" fg:x="2834" fg:w="1"/><text x="94.7797%" y="2863.50"></text></g><g><title>boggle.exe`hashbrown::raw::bitmask::impl$3::next (1 samples, 0.03%)</title><rect x="94.5297%" y="2837" width="0.0334%" height="15" fill="rgb(237,147,15)" fg:x="2834" fg:w="1"/><text x="94.7797%" y="2847.50"></text></g><g><title>boggle.exe`hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.03%)</title><rect x="94.5297%" y="2821" width="0.0334%" height="15" fill="rgb(244,120,12)" fg:x="2834" fg:w="1"/><text x="94.7797%" y="2831.50"></text></g><g><title>boggle.exe`hashbrown::raw::bitmask::BitMask::nonzero_trailing_zeros(core::num::nonzero::NonZero (1 samples, 0.03%)</title><rect x="94.5297%" y="2805" width="0.0334%" height="15" fill="rgb(205,120,12)" fg:x="2834" fg:w="1"/><text x="94.7797%" y="2815.50"></text></g><g><title>boggle.exe`core::num::nonzero::NonZero&lt;u16&gt;::trailing_zeros(core::num::nonzero::NonZero (1 samples, 0.03%)</title><rect x="94.5297%" y="2789" width="0.0334%" height="15" fill="rgb(231,26,45)" fg:x="2834" fg:w="1"/><text x="94.7797%" y="2799.50"></text></g><g><title>boggle.exe`hashbrown::raw::impl$18::drop&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;(hashbrown::raw::RawTable&lt;tuple$ (178 samples, 5.94%)</title><rect x="88.6591%" y="2917" width="5.9373%" height="15" fill="rgb(246,98,1)" fg:x="2658" fg:w="178"/><text x="88.9091%" y="2927.50">boggle.e..</text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::drop_inner_table (177 samples, 5.90%)</title><rect x="88.6925%" y="2901" width="5.9039%" height="15" fill="rgb(207,68,45)" fg:x="2659" fg:w="177"/><text x="88.9425%" y="2911.50">boggle.e..</text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::free_buckets (1 samples, 0.03%)</title><rect x="94.5630%" y="2885" width="0.0334%" height="15" fill="rgb(231,27,38)" fg:x="2835" fg:w="1"/><text x="94.8130%" y="2895.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="94.5630%" y="2869" width="0.0334%" height="15" fill="rgb(214,223,3)" fg:x="2835" fg:w="1"/><text x="94.8130%" y="2879.50"></text></g><g><title>boggle.exe`alloc::alloc::dealloc (1 samples, 0.03%)</title><rect x="94.5630%" y="2853" width="0.0334%" height="15" fill="rgb(228,195,46)" fg:x="2835" fg:w="1"/><text x="94.8130%" y="2863.50"></text></g><g><title>boggle.exe`hashbrown::raw::Bucket&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::drop (190 samples, 6.34%)</title><rect x="88.3256%" y="3029" width="6.3376%" height="15" fill="rgb(231,100,42)" fg:x="2648" fg:w="190"/><text x="88.5756%" y="3039.50">boggle.e..</text></g><g><title>boggle.exe`core::ptr::mut_ptr::impl$0::drop_in_place(tuple$ (190 samples, 6.34%)</title><rect x="88.3256%" y="3013" width="6.3376%" height="15" fill="rgb(236,53,4)" fg:x="2648" fg:w="190"/><text x="88.5756%" y="3023.50">boggle.e..</text></g><g><title>boggle.exe`core::ptr::drop_in_place(tuple$ (190 samples, 6.34%)</title><rect x="88.3256%" y="2997" width="6.3376%" height="15" fill="rgb(230,152,12)" fg:x="2648" fg:w="190"/><text x="88.5756%" y="3007.50">boggle.e..</text></g><g><title>boggle.exe`core::ptr::drop_in_place (190 samples, 6.34%)</title><rect x="88.3256%" y="2981" width="6.3376%" height="15" fill="rgb(226,101,19)" fg:x="2648" fg:w="190"/><text x="88.5756%" y="2991.50">boggle.e..</text></g><g><title>boggle.exe`core::ptr::drop_in_place(std::collections::hash::map::HashMap (190 samples, 6.34%)</title><rect x="88.3256%" y="2965" width="6.3376%" height="15" fill="rgb(250,149,32)" fg:x="2648" fg:w="190"/><text x="88.5756%" y="2975.50">boggle.e..</text></g><g><title>boggle.exe`core::ptr::drop_in_place(hashbrown::map::HashMap (190 samples, 6.34%)</title><rect x="88.3256%" y="2949" width="6.3376%" height="15" fill="rgb(232,178,12)" fg:x="2648" fg:w="190"/><text x="88.5756%" y="2959.50">boggle.e..</text></g><g><title>boggle.exe`core::ptr::drop_in_place(hashbrown::raw::RawTable&lt;tuple$ (190 samples, 6.34%)</title><rect x="88.3256%" y="2933" width="6.3376%" height="15" fill="rgb(246,151,17)" fg:x="2648" fg:w="190"/><text x="88.5756%" y="2943.50">boggle.e..</text></g><g><title>boggle.exe`std::alloc::__default_lib_allocator::__rdl_dealloc (2 samples, 0.07%)</title><rect x="94.5964%" y="2917" width="0.0667%" height="15" fill="rgb(252,17,51)" fg:x="2836" fg:w="2"/><text x="94.8464%" y="2927.50"></text></g><g><title>boggle.exe`core::core_arch::x86::sse2::_mm_load_si128 (1 samples, 0.03%)</title><rect x="94.6631%" y="2981" width="0.0334%" height="15" fill="rgb(250,207,23)" fg:x="2838" fg:w="1"/><text x="94.9131%" y="2991.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::iter (28 samples, 0.93%)</title><rect x="94.6631%" y="3029" width="0.9340%" height="15" fill="rgb(205,27,5)" fg:x="2838" fg:w="28"/><text x="94.9131%" y="3039.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawIterRange&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::new(unsigned char*, hashbrown::raw::Bucket&lt;tuple$ (28 samples, 0.93%)</title><rect x="94.6631%" y="3013" width="0.9340%" height="15" fill="rgb(224,32,19)" fg:x="2838" fg:w="28"/><text x="94.9131%" y="3023.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::load_aligned (28 samples, 0.93%)</title><rect x="94.6631%" y="2997" width="0.9340%" height="15" fill="rgb(247,214,40)" fg:x="2838" fg:w="28"/><text x="94.9131%" y="3007.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::match_empty_or_deleted (27 samples, 0.90%)</title><rect x="94.6965%" y="2981" width="0.9006%" height="15" fill="rgb(239,199,17)" fg:x="2839" fg:w="27"/><text x="94.9465%" y="2991.50"></text></g><g><title>boggle.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (26 samples, 0.87%)</title><rect x="94.7298%" y="2965" width="0.8672%" height="15" fill="rgb(251,159,9)" fg:x="2840" fg:w="26"/><text x="94.9798%" y="2975.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::drop_elements (220 samples, 7.34%)</title><rect x="88.2922%" y="3045" width="7.3382%" height="15" fill="rgb(225,78,32)" fg:x="2647" fg:w="220"/><text x="88.5422%" y="3055.50">boggle.exe..</text></g><g><title>boggle.exe`hashbrown::raw::impl$28::next(hashbrown::raw::RawIter&lt;tuple$ (1 samples, 0.03%)</title><rect x="95.5971%" y="3029" width="0.0334%" height="15" fill="rgb(206,97,47)" fg:x="2866" fg:w="1"/><text x="95.8471%" y="3039.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawIterRange&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::next_impl (1 samples, 0.03%)</title><rect x="95.5971%" y="3013" width="0.0334%" height="15" fill="rgb(227,107,4)" fg:x="2866" fg:w="1"/><text x="95.8471%" y="3023.50"></text></g><g><title>boggle.exe`hashbrown::raw::Bucket&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::next_n (1 samples, 0.03%)</title><rect x="95.5971%" y="2997" width="0.0334%" height="15" fill="rgb(241,146,50)" fg:x="2866" fg:w="1"/><text x="95.8471%" y="3007.50"></text></g><g><title>boggle.exe`core::ptr::mut_ptr::impl$0::sub(tuple$ (1 samples, 0.03%)</title><rect x="95.5971%" y="2981" width="0.0334%" height="15" fill="rgb(232,92,30)" fg:x="2866" fg:w="1"/><text x="95.8471%" y="2991.50"></text></g><g><title>boggle.exe`core::ptr::mut_ptr::impl$0::offset(tuple$ (1 samples, 0.03%)</title><rect x="95.5971%" y="2965" width="0.0334%" height="15" fill="rgb(222,0,40)" fg:x="2866" fg:w="1"/><text x="95.8471%" y="2975.50"></text></g><g><title>boggle.exe`hashbrown::raw::Bucket&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::drop (250 samples, 8.34%)</title><rect x="87.3249%" y="3189" width="8.3389%" height="15" fill="rgb(219,54,33)" fg:x="2618" fg:w="250"/><text x="87.5749%" y="3199.50">boggle.exe`h..</text></g><g><title>boggle.exe`core::ptr::mut_ptr::impl$0::drop_in_place(tuple$ (250 samples, 8.34%)</title><rect x="87.3249%" y="3173" width="8.3389%" height="15" fill="rgb(226,209,28)" fg:x="2618" fg:w="250"/><text x="87.5749%" y="3183.50">boggle.exe`c..</text></g><g><title>boggle.exe`core::ptr::drop_in_place(tuple$ (250 samples, 8.34%)</title><rect x="87.3249%" y="3157" width="8.3389%" height="15" fill="rgb(254,205,35)" fg:x="2618" fg:w="250"/><text x="87.5749%" y="3167.50">boggle.exe`c..</text></g><g><title>boggle.exe`core::ptr::drop_in_place (250 samples, 8.34%)</title><rect x="87.3249%" y="3141" width="8.3389%" height="15" fill="rgb(230,159,3)" fg:x="2618" fg:w="250"/><text x="87.5749%" y="3151.50">boggle.exe`c..</text></g><g><title>boggle.exe`core::ptr::drop_in_place(std::collections::hash::map::HashMap (250 samples, 8.34%)</title><rect x="87.3249%" y="3125" width="8.3389%" height="15" fill="rgb(232,190,24)" fg:x="2618" fg:w="250"/><text x="87.5749%" y="3135.50">boggle.exe`c..</text></g><g><title>boggle.exe`core::ptr::drop_in_place(hashbrown::map::HashMap (250 samples, 8.34%)</title><rect x="87.3249%" y="3109" width="8.3389%" height="15" fill="rgb(217,227,44)" fg:x="2618" fg:w="250"/><text x="87.5749%" y="3119.50">boggle.exe`c..</text></g><g><title>boggle.exe`core::ptr::drop_in_place(hashbrown::raw::RawTable&lt;tuple$ (250 samples, 8.34%)</title><rect x="87.3249%" y="3093" width="8.3389%" height="15" fill="rgb(236,211,1)" fg:x="2618" fg:w="250"/><text x="87.5749%" y="3103.50">boggle.exe`c..</text></g><g><title>boggle.exe`hashbrown::raw::impl$18::drop&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;(hashbrown::raw::RawTable&lt;tuple$ (230 samples, 7.67%)</title><rect x="87.9920%" y="3077" width="7.6718%" height="15" fill="rgb(250,127,46)" fg:x="2638" fg:w="230"/><text x="88.2420%" y="3087.50">boggle.exe`..</text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::drop_inner_table (230 samples, 7.67%)</title><rect x="87.9920%" y="3061" width="7.6718%" height="15" fill="rgb(229,213,6)" fg:x="2638" fg:w="230"/><text x="88.2420%" y="3071.50">boggle.exe`..</text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::free_buckets (1 samples, 0.03%)</title><rect x="95.6304%" y="3045" width="0.0334%" height="15" fill="rgb(237,15,36)" fg:x="2867" fg:w="1"/><text x="95.8804%" y="3055.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="95.6304%" y="3029" width="0.0334%" height="15" fill="rgb(213,131,41)" fg:x="2867" fg:w="1"/><text x="95.8804%" y="3039.50"></text></g><g><title>boggle.exe`core::core_arch::x86::sse2::_mm_load_si128 (1 samples, 0.03%)</title><rect x="95.6638%" y="3141" width="0.0334%" height="15" fill="rgb(225,82,44)" fg:x="2868" fg:w="1"/><text x="95.9138%" y="3151.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::drop_elements (269 samples, 8.97%)</title><rect x="87.2915%" y="3205" width="8.9726%" height="15" fill="rgb(249,42,11)" fg:x="2617" fg:w="269"/><text x="87.5415%" y="3215.50">boggle.exe`ha..</text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::iter (18 samples, 0.60%)</title><rect x="95.6638%" y="3189" width="0.6004%" height="15" fill="rgb(253,11,29)" fg:x="2868" fg:w="18"/><text x="95.9138%" y="3199.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawIterRange&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::new(unsigned char*, hashbrown::raw::Bucket&lt;tuple$ (18 samples, 0.60%)</title><rect x="95.6638%" y="3173" width="0.6004%" height="15" fill="rgb(206,8,54)" fg:x="2868" fg:w="18"/><text x="95.9138%" y="3183.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::load_aligned (18 samples, 0.60%)</title><rect x="95.6638%" y="3157" width="0.6004%" height="15" fill="rgb(222,186,2)" fg:x="2868" fg:w="18"/><text x="95.9138%" y="3167.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::match_empty_or_deleted (17 samples, 0.57%)</title><rect x="95.6971%" y="3141" width="0.5670%" height="15" fill="rgb(221,206,53)" fg:x="2869" fg:w="17"/><text x="95.9471%" y="3151.50"></text></g><g><title>boggle.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (17 samples, 0.57%)</title><rect x="95.6971%" y="3125" width="0.5670%" height="15" fill="rgb(230,150,21)" fg:x="2869" fg:w="17"/><text x="95.9471%" y="3135.50"></text></g><g><title>boggle.exe`hashbrown::raw::impl$18::drop&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;(hashbrown::raw::RawTable&lt;tuple$ (276 samples, 9.21%)</title><rect x="87.0914%" y="3237" width="9.2061%" height="15" fill="rgb(253,202,10)" fg:x="2611" fg:w="276"/><text x="87.3414%" y="3247.50">boggle.exe`ha..</text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::drop_inner_table (276 samples, 9.21%)</title><rect x="87.0914%" y="3221" width="9.2061%" height="15" fill="rgb(238,109,40)" fg:x="2611" fg:w="276"/><text x="87.3414%" y="3231.50">boggle.exe`ha..</text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::free_buckets (1 samples, 0.03%)</title><rect x="96.2642%" y="3205" width="0.0334%" height="15" fill="rgb(247,120,22)" fg:x="2886" fg:w="1"/><text x="96.5142%" y="3215.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::allocation_info (1 samples, 0.03%)</title><rect x="96.2642%" y="3189" width="0.0334%" height="15" fill="rgb(207,43,30)" fg:x="2886" fg:w="1"/><text x="96.5142%" y="3199.50"></text></g><g><title>boggle.exe`hashbrown::raw::Bucket&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::drop (292 samples, 9.74%)</title><rect x="86.5911%" y="3349" width="9.7398%" height="15" fill="rgb(213,211,24)" fg:x="2596" fg:w="292"/><text x="86.8411%" y="3359.50">boggle.exe`has..</text></g><g><title>boggle.exe`core::ptr::mut_ptr::impl$0::drop_in_place(tuple$ (292 samples, 9.74%)</title><rect x="86.5911%" y="3333" width="9.7398%" height="15" fill="rgb(239,73,39)" fg:x="2596" fg:w="292"/><text x="86.8411%" y="3343.50">boggle.exe`cor..</text></g><g><title>boggle.exe`core::ptr::drop_in_place(tuple$ (292 samples, 9.74%)</title><rect x="86.5911%" y="3317" width="9.7398%" height="15" fill="rgb(245,182,19)" fg:x="2596" fg:w="292"/><text x="86.8411%" y="3327.50">boggle.exe`cor..</text></g><g><title>boggle.exe`core::ptr::drop_in_place (292 samples, 9.74%)</title><rect x="86.5911%" y="3301" width="9.7398%" height="15" fill="rgb(247,143,26)" fg:x="2596" fg:w="292"/><text x="86.8411%" y="3311.50">boggle.exe`cor..</text></g><g><title>boggle.exe`core::ptr::drop_in_place(std::collections::hash::map::HashMap (292 samples, 9.74%)</title><rect x="86.5911%" y="3285" width="9.7398%" height="15" fill="rgb(228,191,23)" fg:x="2596" fg:w="292"/><text x="86.8411%" y="3295.50">boggle.exe`cor..</text></g><g><title>boggle.exe`core::ptr::drop_in_place(hashbrown::map::HashMap (292 samples, 9.74%)</title><rect x="86.5911%" y="3269" width="9.7398%" height="15" fill="rgb(253,165,31)" fg:x="2596" fg:w="292"/><text x="86.8411%" y="3279.50">boggle.exe`cor..</text></g><g><title>boggle.exe`core::ptr::drop_in_place(hashbrown::raw::RawTable&lt;tuple$ (292 samples, 9.74%)</title><rect x="86.5911%" y="3253" width="9.7398%" height="15" fill="rgb(234,138,20)" fg:x="2596" fg:w="292"/><text x="86.8411%" y="3263.50">boggle.exe`cor..</text></g><g><title>boggle.exe`std::alloc::__default_lib_allocator::__rdl_dealloc (1 samples, 0.03%)</title><rect x="96.2975%" y="3237" width="0.0334%" height="15" fill="rgb(218,191,29)" fg:x="2887" fg:w="1"/><text x="96.5475%" y="3247.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::drop_elements (316 samples, 10.54%)</title><rect x="86.5911%" y="3365" width="10.5404%" height="15" fill="rgb(221,157,19)" fg:x="2596" fg:w="316"/><text x="86.8411%" y="3375.50">boggle.exe`hash..</text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::iter (24 samples, 0.80%)</title><rect x="96.3309%" y="3349" width="0.8005%" height="15" fill="rgb(237,26,42)" fg:x="2888" fg:w="24"/><text x="96.5809%" y="3359.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawIterRange&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::new(unsigned char*, hashbrown::raw::Bucket&lt;tuple$ (24 samples, 0.80%)</title><rect x="96.3309%" y="3333" width="0.8005%" height="15" fill="rgb(220,163,24)" fg:x="2888" fg:w="24"/><text x="96.5809%" y="3343.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::load_aligned (24 samples, 0.80%)</title><rect x="96.3309%" y="3317" width="0.8005%" height="15" fill="rgb(242,115,20)" fg:x="2888" fg:w="24"/><text x="96.5809%" y="3327.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::match_empty_or_deleted (24 samples, 0.80%)</title><rect x="96.3309%" y="3301" width="0.8005%" height="15" fill="rgb(210,206,9)" fg:x="2888" fg:w="24"/><text x="96.5809%" y="3311.50"></text></g><g><title>boggle.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (24 samples, 0.80%)</title><rect x="96.3309%" y="3285" width="0.8005%" height="15" fill="rgb(208,71,17)" fg:x="2888" fg:w="24"/><text x="96.5809%" y="3295.50"></text></g><g><title>boggle.exe`hashbrown::raw::impl$18::drop&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;(hashbrown::raw::RawTable&lt;tuple$ (320 samples, 10.67%)</title><rect x="86.4910%" y="3397" width="10.6738%" height="15" fill="rgb(233,7,5)" fg:x="2593" fg:w="320"/><text x="86.7410%" y="3407.50">boggle.exe`hashb..</text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::drop_inner_table (320 samples, 10.67%)</title><rect x="86.4910%" y="3381" width="10.6738%" height="15" fill="rgb(207,92,33)" fg:x="2593" fg:w="320"/><text x="86.7410%" y="3391.50">boggle.exe`hashb..</text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::free_buckets (1 samples, 0.03%)</title><rect x="97.1314%" y="3365" width="0.0334%" height="15" fill="rgb(218,87,9)" fg:x="2912" fg:w="1"/><text x="97.3814%" y="3375.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::allocation_info (1 samples, 0.03%)</title><rect x="97.1314%" y="3349" width="0.0334%" height="15" fill="rgb(219,47,37)" fg:x="2912" fg:w="1"/><text x="97.3814%" y="3359.50"></text></g><g><title>boggle.exe`hashbrown::raw::Bucket&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::drop (357 samples, 11.91%)</title><rect x="85.2902%" y="3509" width="11.9079%" height="15" fill="rgb(221,152,34)" fg:x="2557" fg:w="357"/><text x="85.5402%" y="3519.50">boggle.exe`hashbro..</text></g><g><title>boggle.exe`core::ptr::mut_ptr::impl$0::drop_in_place(tuple$ (357 samples, 11.91%)</title><rect x="85.2902%" y="3493" width="11.9079%" height="15" fill="rgb(235,176,21)" fg:x="2557" fg:w="357"/><text x="85.5402%" y="3503.50">boggle.exe`core::p..</text></g><g><title>boggle.exe`core::ptr::drop_in_place(tuple$ (357 samples, 11.91%)</title><rect x="85.2902%" y="3477" width="11.9079%" height="15" fill="rgb(232,212,21)" fg:x="2557" fg:w="357"/><text x="85.5402%" y="3487.50">boggle.exe`core::p..</text></g><g><title>boggle.exe`core::ptr::drop_in_place (357 samples, 11.91%)</title><rect x="85.2902%" y="3461" width="11.9079%" height="15" fill="rgb(245,82,39)" fg:x="2557" fg:w="357"/><text x="85.5402%" y="3471.50">boggle.exe`core::p..</text></g><g><title>boggle.exe`core::ptr::drop_in_place(std::collections::hash::map::HashMap (357 samples, 11.91%)</title><rect x="85.2902%" y="3445" width="11.9079%" height="15" fill="rgb(241,52,51)" fg:x="2557" fg:w="357"/><text x="85.5402%" y="3455.50">boggle.exe`core::p..</text></g><g><title>boggle.exe`core::ptr::drop_in_place(hashbrown::map::HashMap (357 samples, 11.91%)</title><rect x="85.2902%" y="3429" width="11.9079%" height="15" fill="rgb(219,91,24)" fg:x="2557" fg:w="357"/><text x="85.5402%" y="3439.50">boggle.exe`core::p..</text></g><g><title>boggle.exe`core::ptr::drop_in_place(hashbrown::raw::RawTable&lt;tuple$ (357 samples, 11.91%)</title><rect x="85.2902%" y="3413" width="11.9079%" height="15" fill="rgb(241,142,12)" fg:x="2557" fg:w="357"/><text x="85.5402%" y="3423.50">boggle.exe`core::p..</text></g><g><title>boggle.exe`std::alloc::__default_lib_allocator::__rdl_dealloc (1 samples, 0.03%)</title><rect x="97.1648%" y="3397" width="0.0334%" height="15" fill="rgb(230,27,9)" fg:x="2913" fg:w="1"/><text x="97.4148%" y="3407.50"></text></g><g><title>boggle.exe`core::core_arch::x86::sse2::_mm_load_si128 (1 samples, 0.03%)</title><rect x="97.1981%" y="3461" width="0.0334%" height="15" fill="rgb(249,181,32)" fg:x="2914" fg:w="1"/><text x="97.4481%" y="3471.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::drop_elements (367 samples, 12.24%)</title><rect x="85.2902%" y="3525" width="12.2415%" height="15" fill="rgb(230,107,3)" fg:x="2557" fg:w="367"/><text x="85.5402%" y="3535.50">boggle.exe`hashbro..</text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::iter (10 samples, 0.33%)</title><rect x="97.1981%" y="3509" width="0.3336%" height="15" fill="rgb(246,204,14)" fg:x="2914" fg:w="10"/><text x="97.4481%" y="3519.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawIterRange&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::new(unsigned char*, hashbrown::raw::Bucket&lt;tuple$ (10 samples, 0.33%)</title><rect x="97.1981%" y="3493" width="0.3336%" height="15" fill="rgb(213,192,47)" fg:x="2914" fg:w="10"/><text x="97.4481%" y="3503.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::load_aligned (10 samples, 0.33%)</title><rect x="97.1981%" y="3477" width="0.3336%" height="15" fill="rgb(240,44,36)" fg:x="2914" fg:w="10"/><text x="97.4481%" y="3487.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::match_empty_or_deleted (9 samples, 0.30%)</title><rect x="97.2315%" y="3461" width="0.3002%" height="15" fill="rgb(244,209,38)" fg:x="2915" fg:w="9"/><text x="97.4815%" y="3471.50"></text></g><g><title>boggle.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (9 samples, 0.30%)</title><rect x="97.2315%" y="3445" width="0.3002%" height="15" fill="rgb(219,34,37)" fg:x="2915" fg:w="9"/><text x="97.4815%" y="3455.50"></text></g><g><title>boggle.exe`hashbrown::raw::Bucket&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::drop (428 samples, 14.28%)</title><rect x="83.2889%" y="3669" width="14.2762%" height="15" fill="rgb(210,28,6)" fg:x="2497" fg:w="428"/><text x="83.5389%" y="3679.50">boggle.exe`hashbrown::..</text></g><g><title>boggle.exe`core::ptr::mut_ptr::impl$0::drop_in_place(tuple$ (428 samples, 14.28%)</title><rect x="83.2889%" y="3653" width="14.2762%" height="15" fill="rgb(244,110,52)" fg:x="2497" fg:w="428"/><text x="83.5389%" y="3663.50">boggle.exe`core::ptr::..</text></g><g><title>boggle.exe`core::ptr::drop_in_place(tuple$ (428 samples, 14.28%)</title><rect x="83.2889%" y="3637" width="14.2762%" height="15" fill="rgb(254,124,47)" fg:x="2497" fg:w="428"/><text x="83.5389%" y="3647.50">boggle.exe`core::ptr::..</text></g><g><title>boggle.exe`core::ptr::drop_in_place (428 samples, 14.28%)</title><rect x="83.2889%" y="3621" width="14.2762%" height="15" fill="rgb(254,110,13)" fg:x="2497" fg:w="428"/><text x="83.5389%" y="3631.50">boggle.exe`core::ptr::..</text></g><g><title>boggle.exe`core::ptr::drop_in_place(std::collections::hash::map::HashMap (428 samples, 14.28%)</title><rect x="83.2889%" y="3605" width="14.2762%" height="15" fill="rgb(252,57,21)" fg:x="2497" fg:w="428"/><text x="83.5389%" y="3615.50">boggle.exe`core::ptr::..</text></g><g><title>boggle.exe`core::ptr::drop_in_place(hashbrown::map::HashMap (428 samples, 14.28%)</title><rect x="83.2889%" y="3589" width="14.2762%" height="15" fill="rgb(242,60,45)" fg:x="2497" fg:w="428"/><text x="83.5389%" y="3599.50">boggle.exe`core::ptr::..</text></g><g><title>boggle.exe`core::ptr::drop_in_place(hashbrown::raw::RawTable&lt;tuple$ (428 samples, 14.28%)</title><rect x="83.2889%" y="3573" width="14.2762%" height="15" fill="rgb(234,49,30)" fg:x="2497" fg:w="428"/><text x="83.5389%" y="3583.50">boggle.exe`core::ptr::..</text></g><g><title>boggle.exe`hashbrown::raw::impl$18::drop&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;(hashbrown::raw::RawTable&lt;tuple$ (369 samples, 12.31%)</title><rect x="85.2568%" y="3557" width="12.3082%" height="15" fill="rgb(218,98,6)" fg:x="2556" fg:w="369"/><text x="85.5068%" y="3567.50">boggle.exe`hashbro..</text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::drop_inner_table (369 samples, 12.31%)</title><rect x="85.2568%" y="3541" width="12.3082%" height="15" fill="rgb(220,174,29)" fg:x="2556" fg:w="369"/><text x="85.5068%" y="3551.50">boggle.exe`hashbro..</text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::free_buckets (1 samples, 0.03%)</title><rect x="97.5317%" y="3525" width="0.0334%" height="15" fill="rgb(236,163,23)" fg:x="2924" fg:w="1"/><text x="97.7817%" y="3535.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="97.5317%" y="3509" width="0.0334%" height="15" fill="rgb(242,114,45)" fg:x="2924" fg:w="1"/><text x="97.7817%" y="3519.50"></text></g><g><title>boggle.exe`alloc::alloc::dealloc (1 samples, 0.03%)</title><rect x="97.5317%" y="3493" width="0.0334%" height="15" fill="rgb(232,10,53)" fg:x="2924" fg:w="1"/><text x="97.7817%" y="3503.50"></text></g><g><title>boggle.exe`hashbrown::raw::Bucket&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::drop (475 samples, 15.84%)</title><rect x="81.8212%" y="3829" width="15.8439%" height="15" fill="rgb(245,108,29)" fg:x="2453" fg:w="475"/><text x="82.0712%" y="3839.50">boggle.exe`hashbrown::ra..</text></g><g><title>boggle.exe`core::ptr::mut_ptr::impl$0::drop_in_place(tuple$ (475 samples, 15.84%)</title><rect x="81.8212%" y="3813" width="15.8439%" height="15" fill="rgb(240,89,53)" fg:x="2453" fg:w="475"/><text x="82.0712%" y="3823.50">boggle.exe`core::ptr::mu..</text></g><g><title>boggle.exe`core::ptr::drop_in_place(tuple$ (475 samples, 15.84%)</title><rect x="81.8212%" y="3797" width="15.8439%" height="15" fill="rgb(226,60,45)" fg:x="2453" fg:w="475"/><text x="82.0712%" y="3807.50">boggle.exe`core::ptr::dr..</text></g><g><title>boggle.exe`core::ptr::drop_in_place (475 samples, 15.84%)</title><rect x="81.8212%" y="3781" width="15.8439%" height="15" fill="rgb(230,41,44)" fg:x="2453" fg:w="475"/><text x="82.0712%" y="3791.50">boggle.exe`core::ptr::dr..</text></g><g><title>boggle.exe`core::ptr::drop_in_place(std::collections::hash::map::HashMap (475 samples, 15.84%)</title><rect x="81.8212%" y="3765" width="15.8439%" height="15" fill="rgb(230,26,20)" fg:x="2453" fg:w="475"/><text x="82.0712%" y="3775.50">boggle.exe`core::ptr::dr..</text></g><g><title>boggle.exe`core::ptr::drop_in_place(hashbrown::map::HashMap (475 samples, 15.84%)</title><rect x="81.8212%" y="3749" width="15.8439%" height="15" fill="rgb(237,170,32)" fg:x="2453" fg:w="475"/><text x="82.0712%" y="3759.50">boggle.exe`core::ptr::dr..</text></g><g><title>boggle.exe`core::ptr::drop_in_place(hashbrown::raw::RawTable&lt;tuple$ (475 samples, 15.84%)</title><rect x="81.8212%" y="3733" width="15.8439%" height="15" fill="rgb(212,35,42)" fg:x="2453" fg:w="475"/><text x="82.0712%" y="3743.50">boggle.exe`core::ptr::dr..</text></g><g><title>boggle.exe`hashbrown::raw::impl$18::drop&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;(hashbrown::raw::RawTable&lt;tuple$ (432 samples, 14.41%)</title><rect x="83.2555%" y="3717" width="14.4096%" height="15" fill="rgb(227,31,34)" fg:x="2496" fg:w="432"/><text x="83.5055%" y="3727.50">boggle.exe`hashbrown::..</text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::drop_inner_table (432 samples, 14.41%)</title><rect x="83.2555%" y="3701" width="14.4096%" height="15" fill="rgb(216,19,18)" fg:x="2496" fg:w="432"/><text x="83.5055%" y="3711.50">boggle.exe`hashbrown::..</text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::drop_elements (431 samples, 14.38%)</title><rect x="83.2889%" y="3685" width="14.3763%" height="15" fill="rgb(211,133,42)" fg:x="2497" fg:w="431"/><text x="83.5389%" y="3695.50">boggle.exe`hashbrown::..</text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::iter (3 samples, 0.10%)</title><rect x="97.5650%" y="3669" width="0.1001%" height="15" fill="rgb(244,66,13)" fg:x="2925" fg:w="3"/><text x="97.8150%" y="3679.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawIterRange&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::new(unsigned char*, hashbrown::raw::Bucket&lt;tuple$ (3 samples, 0.10%)</title><rect x="97.5650%" y="3653" width="0.1001%" height="15" fill="rgb(218,185,50)" fg:x="2925" fg:w="3"/><text x="97.8150%" y="3663.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::load_aligned (3 samples, 0.10%)</title><rect x="97.5650%" y="3637" width="0.1001%" height="15" fill="rgb(219,149,13)" fg:x="2925" fg:w="3"/><text x="97.8150%" y="3647.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::match_empty_or_deleted (3 samples, 0.10%)</title><rect x="97.5650%" y="3621" width="0.1001%" height="15" fill="rgb(221,125,0)" fg:x="2925" fg:w="3"/><text x="97.8150%" y="3631.50"></text></g><g><title>boggle.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (3 samples, 0.10%)</title><rect x="97.5650%" y="3605" width="0.1001%" height="15" fill="rgb(247,126,27)" fg:x="2925" fg:w="3"/><text x="97.8150%" y="3615.50"></text></g><g><title>boggle.exe`__scrt_common_main_seh() (2,927 samples, 97.63%)</title><rect x="0.0667%" y="4405" width="97.6318%" height="15" fill="rgb(250,138,30)" fg:x="2" fg:w="2927"/><text x="0.3167%" y="4415.50">boggle.exe`__scrt_common_main_seh()</text></g><g><title>boggle.exe`invoke_main() (2,913 samples, 97.16%)</title><rect x="0.5337%" y="4389" width="97.1648%" height="15" fill="rgb(230,151,9)" fg:x="16" fg:w="2913"/><text x="0.7837%" y="4399.50">boggle.exe`invoke_main()</text></g><g><title>boggle.exe`main (2,913 samples, 97.16%)</title><rect x="0.5337%" y="4373" width="97.1648%" height="15" fill="rgb(233,80,38)" fg:x="16" fg:w="2913"/><text x="0.7837%" y="4383.50">boggle.exe`main</text></g><g><title>boggle.exe`std::rt::lang_start_internal (2,913 samples, 97.16%)</title><rect x="0.5337%" y="4357" width="97.1648%" height="15" fill="rgb(232,68,43)" fg:x="16" fg:w="2913"/><text x="0.7837%" y="4367.50">boggle.exe`std::rt::lang_start_internal</text></g><g><title>boggle.exe`std::panic::catch_unwind (2,913 samples, 97.16%)</title><rect x="0.5337%" y="4341" width="97.1648%" height="15" fill="rgb(254,5,50)" fg:x="16" fg:w="2913"/><text x="0.7837%" y="4351.50">boggle.exe`std::panic::catch_unwind</text></g><g><title>boggle.exe`std::panicking::try (2,913 samples, 97.16%)</title><rect x="0.5337%" y="4325" width="97.1648%" height="15" fill="rgb(225,45,5)" fg:x="16" fg:w="2913"/><text x="0.7837%" y="4335.50">boggle.exe`std::panicking::try</text></g><g><title>boggle.exe`std::panicking::try::do_call (2,913 samples, 97.16%)</title><rect x="0.5337%" y="4309" width="97.1648%" height="15" fill="rgb(239,22,3)" fg:x="16" fg:w="2913"/><text x="0.7837%" y="4319.50">boggle.exe`std::panicking::try::do_call</text></g><g><title>boggle.exe`std::rt::lang_start_internal::closure$2 (2,912 samples, 97.13%)</title><rect x="0.5670%" y="4293" width="97.1314%" height="15" fill="rgb(243,129,0)" fg:x="17" fg:w="2912"/><text x="0.8170%" y="4303.50">boggle.exe`std::rt::lang_start_internal::closure$2</text></g><g><title>boggle.exe`std::panic::catch_unwind (2,912 samples, 97.13%)</title><rect x="0.5670%" y="4277" width="97.1314%" height="15" fill="rgb(223,164,0)" fg:x="17" fg:w="2912"/><text x="0.8170%" y="4287.50">boggle.exe`std::panic::catch_unwind</text></g><g><title>boggle.exe`std::rt::lang_start::closure$0&lt;tuple$&lt;&gt; &gt;(std::rt::lang_start::closure_env$0&lt;tuple$ (2,912 samples, 97.13%)</title><rect x="0.5670%" y="4261" width="97.1314%" height="15" fill="rgb(221,46,29)" fg:x="17" fg:w="2912"/><text x="0.8170%" y="4271.50">boggle.exe`std::rt::lang_start::closure$0&lt;tuple$&lt;&gt; &gt;(std::rt::lang_start::closure_env$0&lt;tuple$</text></g><g><title>boggle.exe`std::sys::backtrace::__rust_begin_short_backtrace&lt;void (*)(),tuple$&lt;&gt; &gt;(void (*) (2,912 samples, 97.13%)</title><rect x="0.5670%" y="4245" width="97.1314%" height="15" fill="rgb(205,97,47)" fg:x="17" fg:w="2912"/><text x="0.8170%" y="4255.50">boggle.exe`std::sys::backtrace::__rust_begin_short_backtrace&lt;void (*)(),tuple$&lt;&gt; &gt;(void (*)</text></g><g><title>boggle.exe`boggle::main (2,912 samples, 97.13%)</title><rect x="0.5670%" y="4229" width="97.1314%" height="15" fill="rgb(249,14,8)" fg:x="17" fg:w="2912"/><text x="0.8170%" y="4239.50">boggle.exe`boggle::main</text></g><g><title>boggle.exe`core::ptr::drop_in_place&lt;boggle::BoggleGame&gt; (490 samples, 16.34%)</title><rect x="81.3542%" y="4213" width="16.3442%" height="15" fill="rgb(216,77,3)" fg:x="2439" fg:w="490"/><text x="81.6042%" y="4223.50">boggle.exe`core::ptr::dro..</text></g><g><title>boggle.exe`hashbrown::raw::impl$18::drop&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;(hashbrown::raw::RawTable&lt;tuple$ (490 samples, 16.34%)</title><rect x="81.3542%" y="4197" width="16.3442%" height="15" fill="rgb(206,168,54)" fg:x="2439" fg:w="490"/><text x="81.6042%" y="4207.50">boggle.exe`hashbrown::raw..</text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::drop_inner_table (490 samples, 16.34%)</title><rect x="81.3542%" y="4181" width="16.3442%" height="15" fill="rgb(236,3,41)" fg:x="2439" fg:w="490"/><text x="81.6042%" y="4191.50">boggle.exe`hashbrown::raw..</text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::drop_elements (490 samples, 16.34%)</title><rect x="81.3542%" y="4165" width="16.3442%" height="15" fill="rgb(231,132,24)" fg:x="2439" fg:w="490"/><text x="81.6042%" y="4175.50">boggle.exe`hashbrown::raw..</text></g><g><title>boggle.exe`hashbrown::raw::Bucket&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::drop (490 samples, 16.34%)</title><rect x="81.3542%" y="4149" width="16.3442%" height="15" fill="rgb(227,221,40)" fg:x="2439" fg:w="490"/><text x="81.6042%" y="4159.50">boggle.exe`hashbrown::raw..</text></g><g><title>boggle.exe`core::ptr::mut_ptr::impl$0::drop_in_place(tuple$ (490 samples, 16.34%)</title><rect x="81.3542%" y="4133" width="16.3442%" height="15" fill="rgb(233,151,11)" fg:x="2439" fg:w="490"/><text x="81.6042%" y="4143.50">boggle.exe`core::ptr::mut..</text></g><g><title>boggle.exe`core::ptr::drop_in_place(tuple$ (490 samples, 16.34%)</title><rect x="81.3542%" y="4117" width="16.3442%" height="15" fill="rgb(247,81,35)" fg:x="2439" fg:w="490"/><text x="81.6042%" y="4127.50">boggle.exe`core::ptr::dro..</text></g><g><title>boggle.exe`core::ptr::drop_in_place (490 samples, 16.34%)</title><rect x="81.3542%" y="4101" width="16.3442%" height="15" fill="rgb(243,128,48)" fg:x="2439" fg:w="490"/><text x="81.6042%" y="4111.50">boggle.exe`core::ptr::dro..</text></g><g><title>boggle.exe`core::ptr::drop_in_place(std::collections::hash::map::HashMap (490 samples, 16.34%)</title><rect x="81.3542%" y="4085" width="16.3442%" height="15" fill="rgb(253,16,10)" fg:x="2439" fg:w="490"/><text x="81.6042%" y="4095.50">boggle.exe`core::ptr::dro..</text></g><g><title>boggle.exe`core::ptr::drop_in_place(hashbrown::map::HashMap (490 samples, 16.34%)</title><rect x="81.3542%" y="4069" width="16.3442%" height="15" fill="rgb(228,67,27)" fg:x="2439" fg:w="490"/><text x="81.6042%" y="4079.50">boggle.exe`core::ptr::dro..</text></g><g><title>boggle.exe`core::ptr::drop_in_place(hashbrown::raw::RawTable&lt;tuple$ (490 samples, 16.34%)</title><rect x="81.3542%" y="4053" width="16.3442%" height="15" fill="rgb(231,105,25)" fg:x="2439" fg:w="490"/><text x="81.6042%" y="4063.50">boggle.exe`core::ptr::dro..</text></g><g><title>boggle.exe`hashbrown::raw::impl$18::drop&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;(hashbrown::raw::RawTable&lt;tuple$ (485 samples, 16.18%)</title><rect x="81.5210%" y="4037" width="16.1775%" height="15" fill="rgb(213,166,47)" fg:x="2444" fg:w="485"/><text x="81.7710%" y="4047.50">boggle.exe`hashbrown::raw..</text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::drop_inner_table (485 samples, 16.18%)</title><rect x="81.5210%" y="4021" width="16.1775%" height="15" fill="rgb(209,27,10)" fg:x="2444" fg:w="485"/><text x="81.7710%" y="4031.50">boggle.exe`hashbrown::raw..</text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::drop_elements (485 samples, 16.18%)</title><rect x="81.5210%" y="4005" width="16.1775%" height="15" fill="rgb(241,44,30)" fg:x="2444" fg:w="485"/><text x="81.7710%" y="4015.50">boggle.exe`hashbrown::raw..</text></g><g><title>boggle.exe`hashbrown::raw::Bucket&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::drop (485 samples, 16.18%)</title><rect x="81.5210%" y="3989" width="16.1775%" height="15" fill="rgb(223,216,15)" fg:x="2444" fg:w="485"/><text x="81.7710%" y="3999.50">boggle.exe`hashbrown::raw..</text></g><g><title>boggle.exe`core::ptr::mut_ptr::impl$0::drop_in_place(tuple$ (485 samples, 16.18%)</title><rect x="81.5210%" y="3973" width="16.1775%" height="15" fill="rgb(227,14,7)" fg:x="2444" fg:w="485"/><text x="81.7710%" y="3983.50">boggle.exe`core::ptr::mut..</text></g><g><title>boggle.exe`core::ptr::drop_in_place(tuple$ (485 samples, 16.18%)</title><rect x="81.5210%" y="3957" width="16.1775%" height="15" fill="rgb(237,14,5)" fg:x="2444" fg:w="485"/><text x="81.7710%" y="3967.50">boggle.exe`core::ptr::dro..</text></g><g><title>boggle.exe`core::ptr::drop_in_place (485 samples, 16.18%)</title><rect x="81.5210%" y="3941" width="16.1775%" height="15" fill="rgb(232,14,36)" fg:x="2444" fg:w="485"/><text x="81.7710%" y="3951.50">boggle.exe`core::ptr::dro..</text></g><g><title>boggle.exe`core::ptr::drop_in_place(std::collections::hash::map::HashMap (485 samples, 16.18%)</title><rect x="81.5210%" y="3925" width="16.1775%" height="15" fill="rgb(234,0,38)" fg:x="2444" fg:w="485"/><text x="81.7710%" y="3935.50">boggle.exe`core::ptr::dro..</text></g><g><title>boggle.exe`core::ptr::drop_in_place(hashbrown::map::HashMap (485 samples, 16.18%)</title><rect x="81.5210%" y="3909" width="16.1775%" height="15" fill="rgb(207,170,14)" fg:x="2444" fg:w="485"/><text x="81.7710%" y="3919.50">boggle.exe`core::ptr::dro..</text></g><g><title>boggle.exe`core::ptr::drop_in_place(hashbrown::raw::RawTable&lt;tuple$ (485 samples, 16.18%)</title><rect x="81.5210%" y="3893" width="16.1775%" height="15" fill="rgb(252,45,13)" fg:x="2444" fg:w="485"/><text x="81.7710%" y="3903.50">boggle.exe`core::ptr::dro..</text></g><g><title>boggle.exe`hashbrown::raw::impl$18::drop&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt;,alloc::alloc::Global&gt;(hashbrown::raw::RawTable&lt;tuple$ (476 samples, 15.88%)</title><rect x="81.8212%" y="3877" width="15.8773%" height="15" fill="rgb(213,142,7)" fg:x="2453" fg:w="476"/><text x="82.0712%" y="3887.50">boggle.exe`hashbrown::ra..</text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::drop_inner_table (476 samples, 15.88%)</title><rect x="81.8212%" y="3861" width="15.8773%" height="15" fill="rgb(216,157,23)" fg:x="2453" fg:w="476"/><text x="82.0712%" y="3871.50">boggle.exe`hashbrown::ra..</text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::drop_elements (476 samples, 15.88%)</title><rect x="81.8212%" y="3845" width="15.8773%" height="15" fill="rgb(212,145,33)" fg:x="2453" fg:w="476"/><text x="82.0712%" y="3855.50">boggle.exe`hashbrown::ra..</text></g><g><title>boggle.exe`hashbrown::raw::RawTableInner::iter (1 samples, 0.03%)</title><rect x="97.6651%" y="3829" width="0.0334%" height="15" fill="rgb(233,26,13)" fg:x="2928" fg:w="1"/><text x="97.9151%" y="3839.50"></text></g><g><title>boggle.exe`hashbrown::raw::RawIterRange&lt;tuple$&lt;char,boggle::utils::dict_trie::DictTrieNode&gt; &gt;::new(unsigned char*, hashbrown::raw::Bucket&lt;tuple$ (1 samples, 0.03%)</title><rect x="97.6651%" y="3813" width="0.0334%" height="15" fill="rgb(219,196,19)" fg:x="2928" fg:w="1"/><text x="97.9151%" y="3823.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::load_aligned (1 samples, 0.03%)</title><rect x="97.6651%" y="3797" width="0.0334%" height="15" fill="rgb(246,56,21)" fg:x="2928" fg:w="1"/><text x="97.9151%" y="3807.50"></text></g><g><title>boggle.exe`hashbrown::raw::sse2::Group::match_empty_or_deleted (1 samples, 0.03%)</title><rect x="97.6651%" y="3781" width="0.0334%" height="15" fill="rgb(222,28,53)" fg:x="2928" fg:w="1"/><text x="97.9151%" y="3791.50"></text></g><g><title>boggle.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.03%)</title><rect x="97.6651%" y="3765" width="0.0334%" height="15" fill="rgb(224,5,27)" fg:x="2928" fg:w="1"/><text x="97.9151%" y="3775.50"></text></g><g><title>`0x7FFABEA09FD2 (1 samples, 0.03%)</title><rect x="97.6985%" y="4373" width="0.0334%" height="15" fill="rgb(220,153,33)" fg:x="2929" fg:w="1"/><text x="97.9485%" y="4383.50"></text></g><g><title>`0x7FFAC13FFA24 (1 samples, 0.03%)</title><rect x="97.6985%" y="4357" width="0.0334%" height="15" fill="rgb(226,58,19)" fg:x="2929" fg:w="1"/><text x="97.9485%" y="4367.50"></text></g><g><title>boggle.exe`alloc::sync::Arc&lt;std::thread::Packet&lt;tuple$&lt;&gt; &gt;,alloc::alloc::Global&gt;::drop_slow&lt;std::thread::Packet&lt;tuple$&lt;&gt; &gt;,alloc::alloc::Global&gt; (1 samples, 0.03%)</title><rect x="97.7318%" y="4293" width="0.0334%" height="15" fill="rgb(239,112,23)" fg:x="2930" fg:w="1"/><text x="97.9818%" y="4303.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(std::thread::Packet&lt;tuple$ (1 samples, 0.03%)</title><rect x="97.7318%" y="4277" width="0.0334%" height="15" fill="rgb(251,213,20)" fg:x="2930" fg:w="1"/><text x="97.9818%" y="4287.50"></text></g><g><title>boggle.exe`core::ptr::drop_in_place(enum2$&lt;core::option::Option&lt;alloc::sync::Arc (1 samples, 0.03%)</title><rect x="97.7318%" y="4261" width="0.0334%" height="15" fill="rgb(215,181,21)" fg:x="2930" fg:w="1"/><text x="97.9818%" y="4271.50"></text></g><g><title>boggle.exe`std::thread::impl$7::drop&lt;tuple$&lt;&gt; &gt;(std::thread::Packet&lt;tuple$ (1 samples, 0.03%)</title><rect x="97.7318%" y="4245" width="0.0334%" height="15" fill="rgb(240,8,35)" fg:x="2930" fg:w="1"/><text x="97.9818%" y="4255.50"></text></g><g><title>`0x7FFAC000E8D7 (2,931 samples, 97.77%)</title><rect x="0.0334%" y="4421" width="97.7652%" height="15" fill="rgb(232,203,3)" fg:x="1" fg:w="2931"/><text x="0.2834%" y="4431.50">`0x7FFAC000E8D7</text></g><g><title>boggle.exe`std::sys::pal::windows::thread::impl$0::new::thread_start (3 samples, 0.10%)</title><rect x="97.6985%" y="4405" width="0.1001%" height="15" fill="rgb(214,202,43)" fg:x="2929" fg:w="3"/><text x="97.9485%" y="4415.50"></text></g><g><title>boggle.exe`alloc::boxed::impl$48::call_once (3 samples, 0.10%)</title><rect x="97.6985%" y="4389" width="0.1001%" height="15" fill="rgb(254,35,11)" fg:x="2929" fg:w="3"/><text x="97.9485%" y="4399.50"></text></g><g><title>boggle.exe`alloc::boxed::impl$48::call_once (2 samples, 0.07%)</title><rect x="97.7318%" y="4373" width="0.0667%" height="15" fill="rgb(239,173,13)" fg:x="2930" fg:w="2"/><text x="97.9818%" y="4383.50"></text></g><g><title>boggle.exe`alloc::boxed::impl$8::drop (2 samples, 0.07%)</title><rect x="97.7318%" y="4357" width="0.0667%" height="15" fill="rgb(220,141,0)" fg:x="2930" fg:w="2"/><text x="97.9818%" y="4367.50"></text></g><g><title>boggle.exe`core::alloc::layout::Layout::for_value_raw (2 samples, 0.07%)</title><rect x="97.7318%" y="4341" width="0.0667%" height="15" fill="rgb(210,98,12)" fg:x="2930" fg:w="2"/><text x="97.9818%" y="4351.50"></text></g><g><title>boggle.exe`core::mem::size_of_val_raw (2 samples, 0.07%)</title><rect x="97.7318%" y="4325" width="0.0667%" height="15" fill="rgb(254,153,22)" fg:x="2930" fg:w="2"/><text x="97.9818%" y="4335.50"></text></g><g><title>boggle.exe`core::ops::function::FnOnce::call_once&lt;std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;boggle::impl$1::start::closure_env$0,tuple$&lt;&gt; &gt;,tuple$&lt;&gt; &gt;(std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;boggle::impl$1::start::closure_env$0,tuple$ (2 samples, 0.07%)</title><rect x="97.7318%" y="4309" width="0.0667%" height="15" fill="rgb(247,223,17)" fg:x="2930" fg:w="2"/><text x="97.9818%" y="4319.50"></text></g><g><title>boggle.exe`std::thread::impl$0::spawn_unchecked_::closure$1(std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;boggle::impl$1::start::closure_env$0,tuple$ (1 samples, 0.03%)</title><rect x="97.7652%" y="4293" width="0.0334%" height="15" fill="rgb(246,56,7)" fg:x="2931" fg:w="1"/><text x="98.0152%" y="4303.50"></text></g><g><title>boggle.exe`alloc::sync::impl$29::deref(alloc::sync::Arc&lt;std::thread::Packet&lt;tuple$ (1 samples, 0.03%)</title><rect x="97.7652%" y="4277" width="0.0334%" height="15" fill="rgb(240,226,12)" fg:x="2931" fg:w="1"/><text x="98.0152%" y="4287.50"></text></g><g><title>boggle.exe`alloc::sync::Arc&lt;std::thread::Packet&lt;tuple$&lt;&gt; &gt;,alloc::alloc::Global&gt;::inner (1 samples, 0.03%)</title><rect x="97.7652%" y="4261" width="0.0334%" height="15" fill="rgb(205,87,46)" fg:x="2931" fg:w="1"/><text x="98.0152%" y="4271.50"></text></g><g><title>boggle.exe`core::ptr::non_null::NonNull&lt;alloc::sync::ArcInner&lt;std::thread::Packet&lt;tuple$&lt;&gt; &gt; &gt; &gt;::as_ref (1 samples, 0.03%)</title><rect x="97.7652%" y="4245" width="0.0334%" height="15" fill="rgb(245,214,51)" fg:x="2931" fg:w="1"/><text x="98.0152%" y="4255.50"></text></g><g><title>boggle.exe`std::sys::backtrace::__rust_begin_short_backtrace&lt;boggle::impl$1::start::closure_env$0,tuple$&lt;&gt; &gt; (1 samples, 0.03%)</title><rect x="97.7652%" y="4229" width="0.0334%" height="15" fill="rgb(223,172,33)" fg:x="2931" fg:w="1"/><text x="98.0152%" y="4239.50"></text></g><g><title>boggle.exe`boggle::impl$1::start::closure$0 (1 samples, 0.03%)</title><rect x="97.7652%" y="4213" width="0.0334%" height="15" fill="rgb(227,203,34)" fg:x="2931" fg:w="1"/><text x="98.0152%" y="4223.50"></text></g><g><title>boggle.exe`alloc::string::impl$44::from(ref$ (1 samples, 0.03%)</title><rect x="97.7652%" y="4197" width="0.0334%" height="15" fill="rgb(248,143,44)" fg:x="2931" fg:w="1"/><text x="98.0152%" y="4207.50"></text></g><g><title>boggle.exe`alloc::str::impl$4::to_owned(ref$ (1 samples, 0.03%)</title><rect x="97.7652%" y="4181" width="0.0334%" height="15" fill="rgb(226,162,5)" fg:x="2931" fg:w="1"/><text x="98.0152%" y="4191.50"></text></g><g><title>boggle.exe`alloc::slice::impl$9::to_owned(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="97.7652%" y="4165" width="0.0334%" height="15" fill="rgb(211,143,1)" fg:x="2931" fg:w="1"/><text x="98.0152%" y="4175.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="97.7652%" y="4149" width="0.0334%" height="15" fill="rgb(224,96,15)" fg:x="2931" fg:w="1"/><text x="98.0152%" y="4159.50"></text></g><g><title>boggle.exe`alloc::slice::impl$0::to_vec_in(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="97.7652%" y="4133" width="0.0334%" height="15" fill="rgb(222,4,38)" fg:x="2931" fg:w="1"/><text x="98.0152%" y="4143.50"></text></g><g><title>boggle.exe`alloc::slice::hack::to_vec(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="97.7652%" y="4117" width="0.0334%" height="15" fill="rgb(253,228,15)" fg:x="2931" fg:w="1"/><text x="98.0152%" y="4127.50"></text></g><g><title>boggle.exe`alloc::slice::hack::impl$1::to_vec(ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="97.7652%" y="4101" width="0.0334%" height="15" fill="rgb(242,194,12)" fg:x="2931" fg:w="1"/><text x="98.0152%" y="4111.50"></text></g><g><title>boggle.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="97.7652%" y="4085" width="0.0334%" height="15" fill="rgb(214,177,31)" fg:x="2931" fg:w="1"/><text x="98.0152%" y="4095.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="97.7652%" y="4069" width="0.0334%" height="15" fill="rgb(226,58,51)" fg:x="2931" fg:w="1"/><text x="98.0152%" y="4079.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.03%)</title><rect x="97.7652%" y="4053" width="0.0334%" height="15" fill="rgb(250,119,16)" fg:x="2931" fg:w="1"/><text x="98.0152%" y="4063.50"></text></g><g><title>boggle.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (1 samples, 0.03%)</title><rect x="97.7652%" y="4037" width="0.0334%" height="15" fill="rgb(223,128,53)" fg:x="2931" fg:w="1"/><text x="98.0152%" y="4047.50"></text></g><g><title>boggle.exe`alloc::alloc::impl$1::allocate (1 samples, 0.03%)</title><rect x="97.7652%" y="4021" width="0.0334%" height="15" fill="rgb(251,199,15)" fg:x="2931" fg:w="1"/><text x="98.0152%" y="4031.50"></text></g><g><title>boggle.exe`alloc::alloc::Global::alloc_impl (1 samples, 0.03%)</title><rect x="97.7652%" y="4005" width="0.0334%" height="15" fill="rgb(235,168,42)" fg:x="2931" fg:w="1"/><text x="98.0152%" y="4015.50"></text></g><g><title>boggle.exe`alloc::alloc::alloc (1 samples, 0.03%)</title><rect x="97.7652%" y="3989" width="0.0334%" height="15" fill="rgb(250,210,17)" fg:x="2931" fg:w="1"/><text x="98.0152%" y="3999.50"></text></g><g><title>boggle.exe`core::ptr::read_volatile (1 samples, 0.03%)</title><rect x="97.7652%" y="3973" width="0.0334%" height="15" fill="rgb(226,36,41)" fg:x="2931" fg:w="1"/><text x="98.0152%" y="3983.50"></text></g><g><title>boggle.exe`std::thread::sleep (1 samples, 0.03%)</title><rect x="97.7652%" y="3957" width="0.0334%" height="15" fill="rgb(225,87,10)" fg:x="2931" fg:w="1"/><text x="98.0152%" y="3967.50"></text></g><g><title>boggle.exe`std::sys::pal::windows::thread::Thread::sleep (1 samples, 0.03%)</title><rect x="97.7652%" y="3941" width="0.0334%" height="15" fill="rgb(228,83,9)" fg:x="2931" fg:w="1"/><text x="98.0152%" y="3951.50"></text></g><g><title>boggle.exe`std::sys::pal::windows::thread::impl$0::sleep::high_precision_sleep (1 samples, 0.03%)</title><rect x="97.7652%" y="3925" width="0.0334%" height="15" fill="rgb(225,16,36)" fg:x="2931" fg:w="1"/><text x="98.0152%" y="3935.50"></text></g><g><title>boggle.exe`std::sys::pal::windows::time::WaitableTimer::wait (1 samples, 0.03%)</title><rect x="97.7652%" y="3909" width="0.0334%" height="15" fill="rgb(242,198,13)" fg:x="2931" fg:w="1"/><text x="98.0152%" y="3919.50"></text></g><g><title>`0x7FFABE9890B9 (1 samples, 0.03%)</title><rect x="97.7652%" y="3893" width="0.0334%" height="15" fill="rgb(239,25,51)" fg:x="2931" fg:w="1"/><text x="98.0152%" y="3903.50"></text></g><g><title>`0x7FFAC13FF904 (1 samples, 0.03%)</title><rect x="97.7652%" y="3877" width="0.0334%" height="15" fill="rgb(239,28,37)" fg:x="2931" fg:w="1"/><text x="98.0152%" y="3887.50"></text></g><g><title>`0x7FFAC137FBCC (2,932 samples, 97.80%)</title><rect x="0.0334%" y="4437" width="97.7985%" height="15" fill="rgb(234,70,17)" fg:x="1" fg:w="2932"/><text x="0.2834%" y="4447.50">`0x7FFAC137FBCC</text></g><g><title>`0x7FFAC000E8E0 (1 samples, 0.03%)</title><rect x="97.7985%" y="4421" width="0.0334%" height="15" fill="rgb(231,215,53)" fg:x="2932" fg:w="1"/><text x="98.0485%" y="4431.50"></text></g><g><title>`0x7FFAC137FC56 (1 samples, 0.03%)</title><rect x="97.7985%" y="4405" width="0.0334%" height="15" fill="rgb(218,140,42)" fg:x="2932" fg:w="1"/><text x="98.0485%" y="4415.50"></text></g><g><title>`0x7FFAC1380425 (1 samples, 0.03%)</title><rect x="97.7985%" y="4389" width="0.0334%" height="15" fill="rgb(233,227,45)" fg:x="2932" fg:w="1"/><text x="98.0485%" y="4399.50"></text></g><g><title>`0x7FFAC12C3810 (1 samples, 0.03%)</title><rect x="97.7985%" y="4373" width="0.0334%" height="15" fill="rgb(225,189,21)" fg:x="2932" fg:w="1"/><text x="98.0485%" y="4383.50"></text></g><g><title>`0x7FFAC12BD853 (1 samples, 0.03%)</title><rect x="97.7985%" y="4357" width="0.0334%" height="15" fill="rgb(237,176,54)" fg:x="2932" fg:w="1"/><text x="98.0485%" y="4367.50"></text></g><g><title>boggle.exe`std::sys::thread_local::guard::windows::tls_callback (1 samples, 0.03%)</title><rect x="97.7985%" y="4341" width="0.0334%" height="15" fill="rgb(215,131,46)" fg:x="2932" fg:w="1"/><text x="98.0485%" y="4351.50"></text></g><g><title>boggle.exe`std::sys::thread_local::destructors::list::run (1 samples, 0.03%)</title><rect x="97.7985%" y="4325" width="0.0334%" height="15" fill="rgb(218,95,20)" fg:x="2932" fg:w="1"/><text x="98.0485%" y="4335.50"></text></g><g><title>boggle.exe`core::cell::RefCell::borrow_mut (1 samples, 0.03%)</title><rect x="97.7985%" y="4309" width="0.0334%" height="15" fill="rgb(208,198,12)" fg:x="2932" fg:w="1"/><text x="98.0485%" y="4319.50"></text></g><g><title>boggle.exe`core::cell::RefCell::try_borrow_mut (1 samples, 0.03%)</title><rect x="97.7985%" y="4293" width="0.0334%" height="15" fill="rgb(239,107,50)" fg:x="2932" fg:w="1"/><text x="98.0485%" y="4303.50"></text></g><g><title>boggle.exe`core::cell::BorrowRefMut::new (1 samples, 0.03%)</title><rect x="97.7985%" y="4277" width="0.0334%" height="15" fill="rgb(240,217,37)" fg:x="2932" fg:w="1"/><text x="98.0485%" y="4287.50"></text></g><g><title>`0x7FFAC12D230F (1 samples, 0.03%)</title><rect x="97.7985%" y="4261" width="0.0334%" height="15" fill="rgb(242,197,49)" fg:x="2932" fg:w="1"/><text x="98.0485%" y="4271.50"></text></g><g><title>`0x7FFAC1392330 (1 samples, 0.03%)</title><rect x="97.8319%" y="4437" width="0.0334%" height="15" fill="rgb(219,171,17)" fg:x="2933" fg:w="1"/><text x="98.0819%" y="4447.50"></text></g><g><title>`0x7FFAC139239E (1 samples, 0.03%)</title><rect x="97.8652%" y="4421" width="0.0334%" height="15" fill="rgb(209,81,40)" fg:x="2934" fg:w="1"/><text x="98.1152%" y="4431.50"></text></g><g><title>`0x7FFAC1392475 (1 samples, 0.03%)</title><rect x="97.8652%" y="4405" width="0.0334%" height="15" fill="rgb(237,156,30)" fg:x="2934" fg:w="1"/><text x="98.1152%" y="4415.50"></text></g><g><title>`0x7FFAC12AA950 (1 samples, 0.03%)</title><rect x="97.8652%" y="4389" width="0.0334%" height="15" fill="rgb(212,127,16)" fg:x="2934" fg:w="1"/><text x="98.1152%" y="4399.50"></text></g><g><title>`0x7FFAC12BD3BB (1 samples, 0.03%)</title><rect x="97.8986%" y="4389" width="0.0334%" height="15" fill="rgb(226,66,32)" fg:x="2935" fg:w="1"/><text x="98.1486%" y="4399.50"></text></g><g><title>`0x7FFAC1311FDF (1 samples, 0.03%)</title><rect x="97.8986%" y="4373" width="0.0334%" height="15" fill="rgb(245,22,46)" fg:x="2935" fg:w="1"/><text x="98.1486%" y="4383.50"></text></g><g><title>`0x7FFAC12C7776 (1 samples, 0.03%)</title><rect x="97.8986%" y="4357" width="0.0334%" height="15" fill="rgb(210,112,21)" fg:x="2935" fg:w="1"/><text x="98.1486%" y="4367.50"></text></g><g><title>`0x7FFAC12C7AFE (1 samples, 0.03%)</title><rect x="97.8986%" y="4341" width="0.0334%" height="15" fill="rgb(207,118,39)" fg:x="2935" fg:w="1"/><text x="98.1486%" y="4351.50"></text></g><g><title>`0x7FFAC12AF7F1 (1 samples, 0.03%)</title><rect x="97.8986%" y="4325" width="0.0334%" height="15" fill="rgb(205,206,35)" fg:x="2935" fg:w="1"/><text x="98.1486%" y="4335.50"></text></g><g><title>`0x7FFAC134BCFB (2 samples, 0.07%)</title><rect x="97.8986%" y="4405" width="0.0667%" height="15" fill="rgb(222,120,2)" fg:x="2935" fg:w="2"/><text x="98.1486%" y="4415.50"></text></g><g><title>`0x7FFAC12BD5C7 (1 samples, 0.03%)</title><rect x="97.9320%" y="4389" width="0.0334%" height="15" fill="rgb(205,38,18)" fg:x="2936" fg:w="1"/><text x="98.1820%" y="4399.50"></text></g><g><title>`0x7FFAC12BD860 (1 samples, 0.03%)</title><rect x="97.9320%" y="4373" width="0.0334%" height="15" fill="rgb(226,61,2)" fg:x="2936" fg:w="1"/><text x="98.1820%" y="4383.50"></text></g><g><title>`0x7FFABEA36DAD (1 samples, 0.03%)</title><rect x="97.9320%" y="4357" width="0.0334%" height="15" fill="rgb(242,161,23)" fg:x="2936" fg:w="1"/><text x="98.1820%" y="4367.50"></text></g><g><title>`0x7FFABE9584FB (1 samples, 0.03%)</title><rect x="97.9320%" y="4341" width="0.0334%" height="15" fill="rgb(213,13,52)" fg:x="2936" fg:w="1"/><text x="98.1820%" y="4351.50"></text></g><g><title>`0x7FFABE958C6C (1 samples, 0.03%)</title><rect x="97.9320%" y="4325" width="0.0334%" height="15" fill="rgb(246,209,47)" fg:x="2936" fg:w="1"/><text x="98.1820%" y="4335.50"></text></g><g><title>`0x7FFAC13FF804 (1 samples, 0.03%)</title><rect x="97.9320%" y="4309" width="0.0334%" height="15" fill="rgb(214,41,3)" fg:x="2936" fg:w="1"/><text x="98.1820%" y="4319.50"></text></g><g><title>`0x7FFAC134BD76 (1 samples, 0.03%)</title><rect x="97.9653%" y="4405" width="0.0334%" height="15" fill="rgb(236,119,38)" fg:x="2937" fg:w="1"/><text x="98.2153%" y="4415.50"></text></g><g><title>`0x7FFAC12B80BA (1 samples, 0.03%)</title><rect x="97.9987%" y="4373" width="0.0334%" height="15" fill="rgb(218,50,11)" fg:x="2938" fg:w="1"/><text x="98.2487%" y="4383.50"></text></g><g><title>`0x7FFAC12B876C (1 samples, 0.03%)</title><rect x="97.9987%" y="4357" width="0.0334%" height="15" fill="rgb(228,38,11)" fg:x="2938" fg:w="1"/><text x="98.2487%" y="4367.50"></text></g><g><title>`0x7FFAC13FF964 (1 samples, 0.03%)</title><rect x="97.9987%" y="4341" width="0.0334%" height="15" fill="rgb(212,13,9)" fg:x="2938" fg:w="1"/><text x="98.2487%" y="4351.50"></text></g><g><title>`0x7FFAC134C28A (2 samples, 0.07%)</title><rect x="97.9987%" y="4389" width="0.0667%" height="15" fill="rgb(208,211,9)" fg:x="2938" fg:w="2"/><text x="98.2487%" y="4399.50"></text></g><g><title>`0x7FFAC12B80D9 (1 samples, 0.03%)</title><rect x="98.0320%" y="4373" width="0.0334%" height="15" fill="rgb(239,39,32)" fg:x="2939" fg:w="1"/><text x="98.2820%" y="4383.50"></text></g><g><title>`0x7FFAC12B81F8 (1 samples, 0.03%)</title><rect x="98.0320%" y="4357" width="0.0334%" height="15" fill="rgb(254,179,26)" fg:x="2939" fg:w="1"/><text x="98.2820%" y="4367.50"></text></g><g><title>`0x7FFAC134C59A (1 samples, 0.03%)</title><rect x="98.0654%" y="4389" width="0.0334%" height="15" fill="rgb(249,165,28)" fg:x="2940" fg:w="1"/><text x="98.3154%" y="4399.50"></text></g><g><title>`0x7FFAC1344AAD (1 samples, 0.03%)</title><rect x="98.0654%" y="4373" width="0.0334%" height="15" fill="rgb(225,59,50)" fg:x="2940" fg:w="1"/><text x="98.3154%" y="4383.50"></text></g><g><title>`0x7FFAC1345726 (1 samples, 0.03%)</title><rect x="98.0654%" y="4357" width="0.0334%" height="15" fill="rgb(209,122,5)" fg:x="2940" fg:w="1"/><text x="98.3154%" y="4367.50"></text></g><g><title>`0x7FFAC13FFA04 (1 samples, 0.03%)</title><rect x="98.0654%" y="4341" width="0.0334%" height="15" fill="rgb(214,65,34)" fg:x="2940" fg:w="1"/><text x="98.3154%" y="4351.50"></text></g><g><title>`0x7FFAC134CA46 (1 samples, 0.03%)</title><rect x="98.0987%" y="4389" width="0.0334%" height="15" fill="rgb(249,183,32)" fg:x="2941" fg:w="1"/><text x="98.3487%" y="4399.50"></text></g><g><title>`0x7FFAC12B8EE6 (1 samples, 0.03%)</title><rect x="98.0987%" y="4373" width="0.0334%" height="15" fill="rgb(218,122,24)" fg:x="2941" fg:w="1"/><text x="98.3487%" y="4383.50"></text></g><g><title>`0x7FFAC139F251 (1 samples, 0.03%)</title><rect x="98.0987%" y="4357" width="0.0334%" height="15" fill="rgb(224,109,18)" fg:x="2941" fg:w="1"/><text x="98.3487%" y="4367.50"></text></g><g><title>`0x7FFAC13FF964 (1 samples, 0.03%)</title><rect x="98.0987%" y="4341" width="0.0334%" height="15" fill="rgb(210,68,50)" fg:x="2941" fg:w="1"/><text x="98.3487%" y="4351.50"></text></g><g><title>`0x7FFAC134CA83 (1 samples, 0.03%)</title><rect x="98.1321%" y="4389" width="0.0334%" height="15" fill="rgb(212,184,34)" fg:x="2942" fg:w="1"/><text x="98.3821%" y="4399.50"></text></g><g><title>`0x7FFAC1311A8A (1 samples, 0.03%)</title><rect x="98.1321%" y="4373" width="0.0334%" height="15" fill="rgb(238,105,48)" fg:x="2942" fg:w="1"/><text x="98.3821%" y="4383.50"></text></g><g><title>`0x7FFAC12B425A (1 samples, 0.03%)</title><rect x="98.1321%" y="4357" width="0.0334%" height="15" fill="rgb(222,134,54)" fg:x="2942" fg:w="1"/><text x="98.3821%" y="4367.50"></text></g><g><title>`0x7FFAC130E5EF (1 samples, 0.03%)</title><rect x="98.1321%" y="4341" width="0.0334%" height="15" fill="rgb(246,24,43)" fg:x="2942" fg:w="1"/><text x="98.3821%" y="4351.50"></text></g><g><title>`0x7FFAC13FFAE4 (1 samples, 0.03%)</title><rect x="98.1321%" y="4325" width="0.0334%" height="15" fill="rgb(227,169,22)" fg:x="2942" fg:w="1"/><text x="98.3821%" y="4335.50"></text></g><g><title>`0x7FFAC134CAE2 (1 samples, 0.03%)</title><rect x="98.1654%" y="4389" width="0.0334%" height="15" fill="rgb(253,152,4)" fg:x="2943" fg:w="1"/><text x="98.4154%" y="4399.50"></text></g><g><title>`0x7FFAC139633F (1 samples, 0.03%)</title><rect x="98.1654%" y="4373" width="0.0334%" height="15" fill="rgb(219,158,36)" fg:x="2943" fg:w="1"/><text x="98.4154%" y="4383.50"></text></g><g><title>`0x7FFAC13963E5 (1 samples, 0.03%)</title><rect x="98.1654%" y="4357" width="0.0334%" height="15" fill="rgb(251,128,40)" fg:x="2943" fg:w="1"/><text x="98.4154%" y="4367.50"></text></g><g><title>`0x7FFAC1396509 (1 samples, 0.03%)</title><rect x="98.1654%" y="4341" width="0.0334%" height="15" fill="rgb(254,101,39)" fg:x="2943" fg:w="1"/><text x="98.4154%" y="4351.50"></text></g><g><title>`0x7FFAC139664F (1 samples, 0.03%)</title><rect x="98.1654%" y="4325" width="0.0334%" height="15" fill="rgb(221,168,40)" fg:x="2943" fg:w="1"/><text x="98.4154%" y="4335.50"></text></g><g><title>`0x7FFAC1396718 (1 samples, 0.03%)</title><rect x="98.1654%" y="4309" width="0.0334%" height="15" fill="rgb(221,14,27)" fg:x="2943" fg:w="1"/><text x="98.4154%" y="4319.50"></text></g><g><title>`0x7FFAC132197B (1 samples, 0.03%)</title><rect x="98.1654%" y="4293" width="0.0334%" height="15" fill="rgb(207,36,43)" fg:x="2943" fg:w="1"/><text x="98.4154%" y="4303.50"></text></g><g><title>`0x7FFAC1321C6D (1 samples, 0.03%)</title><rect x="98.1654%" y="4277" width="0.0334%" height="15" fill="rgb(240,172,53)" fg:x="2943" fg:w="1"/><text x="98.4154%" y="4287.50"></text></g><g><title>`0x7FFAC13FF904 (1 samples, 0.03%)</title><rect x="98.1654%" y="4261" width="0.0334%" height="15" fill="rgb(241,138,43)" fg:x="2943" fg:w="1"/><text x="98.4154%" y="4271.50"></text></g><g><title>`0x7FFAC1326ED2 (1 samples, 0.03%)</title><rect x="98.1988%" y="4357" width="0.0334%" height="15" fill="rgb(227,78,19)" fg:x="2944" fg:w="1"/><text x="98.4488%" y="4367.50"></text></g><g><title>`0x7FFAC131CEB5 (1 samples, 0.03%)</title><rect x="98.1988%" y="4341" width="0.0334%" height="15" fill="rgb(215,127,44)" fg:x="2944" fg:w="1"/><text x="98.4488%" y="4351.50"></text></g><g><title>`0x7FFAC139D709 (1 samples, 0.03%)</title><rect x="98.1988%" y="4325" width="0.0334%" height="15" fill="rgb(227,13,10)" fg:x="2944" fg:w="1"/><text x="98.4488%" y="4335.50"></text></g><g><title>`0x7FFAC12DD292 (1 samples, 0.03%)</title><rect x="98.1988%" y="4309" width="0.0334%" height="15" fill="rgb(249,177,6)" fg:x="2944" fg:w="1"/><text x="98.4488%" y="4319.50"></text></g><g><title>`0x7FFAC12DD5F1 (1 samples, 0.03%)</title><rect x="98.1988%" y="4293" width="0.0334%" height="15" fill="rgb(215,154,26)" fg:x="2944" fg:w="1"/><text x="98.4488%" y="4303.50"></text></g><g><title>`0x7FFAC12DD89F (1 samples, 0.03%)</title><rect x="98.1988%" y="4277" width="0.0334%" height="15" fill="rgb(250,168,20)" fg:x="2944" fg:w="1"/><text x="98.4488%" y="4287.50"></text></g><g><title>`0x7FFAC12DE337 (1 samples, 0.03%)</title><rect x="98.1988%" y="4261" width="0.0334%" height="15" fill="rgb(222,53,38)" fg:x="2944" fg:w="1"/><text x="98.4488%" y="4271.50"></text></g><g><title>`0x7FFAC12E2978 (1 samples, 0.03%)</title><rect x="98.1988%" y="4245" width="0.0334%" height="15" fill="rgb(245,154,5)" fg:x="2944" fg:w="1"/><text x="98.4488%" y="4255.50"></text></g><g><title>`0x7FFAC14011B4 (1 samples, 0.03%)</title><rect x="98.1988%" y="4229" width="0.0334%" height="15" fill="rgb(214,89,50)" fg:x="2944" fg:w="1"/><text x="98.4488%" y="4239.50"></text></g><g><title>`0x7FFAC134CC1B (2 samples, 0.07%)</title><rect x="98.1988%" y="4389" width="0.0667%" height="15" fill="rgb(232,73,14)" fg:x="2944" fg:w="2"/><text x="98.4488%" y="4399.50"></text></g><g><title>`0x7FFAC132636B (2 samples, 0.07%)</title><rect x="98.1988%" y="4373" width="0.0667%" height="15" fill="rgb(230,101,20)" fg:x="2944" fg:w="2"/><text x="98.4488%" y="4383.50"></text></g><g><title>`0x7FFAC1326F5B (1 samples, 0.03%)</title><rect x="98.2322%" y="4357" width="0.0334%" height="15" fill="rgb(208,56,28)" fg:x="2945" fg:w="1"/><text x="98.4822%" y="4367.50"></text></g><g><title>`0x7FFAC13273AE (1 samples, 0.03%)</title><rect x="98.2322%" y="4341" width="0.0334%" height="15" fill="rgb(247,205,22)" fg:x="2945" fg:w="1"/><text x="98.4822%" y="4351.50"></text></g><g><title>`0x7FFAC14030B4 (1 samples, 0.03%)</title><rect x="98.2322%" y="4325" width="0.0334%" height="15" fill="rgb(252,109,51)" fg:x="2945" fg:w="1"/><text x="98.4822%" y="4335.50"></text></g><g><title>`0x7FFAC134CC27 (1 samples, 0.03%)</title><rect x="98.2655%" y="4389" width="0.0334%" height="15" fill="rgb(220,40,24)" fg:x="2946" fg:w="1"/><text x="98.5155%" y="4399.50"></text></g><g><title>`0x7FFAC140F39B (1 samples, 0.03%)</title><rect x="98.2655%" y="4373" width="0.0334%" height="15" fill="rgb(251,108,7)" fg:x="2946" fg:w="1"/><text x="98.5155%" y="4383.50"></text></g><g><title>`0x7FFAC138E3CC (1 samples, 0.03%)</title><rect x="98.2655%" y="4357" width="0.0334%" height="15" fill="rgb(238,102,51)" fg:x="2946" fg:w="1"/><text x="98.5155%" y="4367.50"></text></g><g><title>`0x7FFAC138E502 (1 samples, 0.03%)</title><rect x="98.2655%" y="4341" width="0.0334%" height="15" fill="rgb(219,149,34)" fg:x="2946" fg:w="1"/><text x="98.5155%" y="4351.50"></text></g><g><title>`0x7FFAC14031D4 (1 samples, 0.03%)</title><rect x="98.2655%" y="4325" width="0.0334%" height="15" fill="rgb(239,70,0)" fg:x="2946" fg:w="1"/><text x="98.5155%" y="4335.50"></text></g><g><title>`0x7FFAC134CC66 (1 samples, 0.03%)</title><rect x="98.2989%" y="4389" width="0.0334%" height="15" fill="rgb(246,214,23)" fg:x="2947" fg:w="1"/><text x="98.5489%" y="4399.50"></text></g><g><title>`0x7FFAC133EBC3 (1 samples, 0.03%)</title><rect x="98.2989%" y="4373" width="0.0334%" height="15" fill="rgb(239,221,51)" fg:x="2947" fg:w="1"/><text x="98.5489%" y="4383.50"></text></g><g><title>`0x7FFAC133F9A6 (1 samples, 0.03%)</title><rect x="98.2989%" y="4357" width="0.0334%" height="15" fill="rgb(254,62,14)" fg:x="2947" fg:w="1"/><text x="98.5489%" y="4367.50"></text></g><g><title>`0x7FFAC1341794 (1 samples, 0.03%)</title><rect x="98.2989%" y="4341" width="0.0334%" height="15" fill="rgb(253,57,33)" fg:x="2947" fg:w="1"/><text x="98.5489%" y="4351.50"></text></g><g><title>`0x7FFAC1342343 (1 samples, 0.03%)</title><rect x="98.2989%" y="4325" width="0.0334%" height="15" fill="rgb(229,34,6)" fg:x="2947" fg:w="1"/><text x="98.5489%" y="4335.50"></text></g><g><title>`0x7FFAC12C7776 (1 samples, 0.03%)</title><rect x="98.2989%" y="4309" width="0.0334%" height="15" fill="rgb(235,191,23)" fg:x="2947" fg:w="1"/><text x="98.5489%" y="4319.50"></text></g><g><title>`0x7FFAC12C7AFE (1 samples, 0.03%)</title><rect x="98.2989%" y="4293" width="0.0334%" height="15" fill="rgb(217,207,27)" fg:x="2947" fg:w="1"/><text x="98.5489%" y="4303.50"></text></g><g><title>`0x7FFAC12AF6C7 (1 samples, 0.03%)</title><rect x="98.2989%" y="4277" width="0.0334%" height="15" fill="rgb(232,41,44)" fg:x="2947" fg:w="1"/><text x="98.5489%" y="4287.50"></text></g><g><title>`0x7FFAC12B1B6F (1 samples, 0.03%)</title><rect x="98.2989%" y="4261" width="0.0334%" height="15" fill="rgb(221,188,19)" fg:x="2947" fg:w="1"/><text x="98.5489%" y="4271.50"></text></g><g><title>`0x7FFAC12B3563 (1 samples, 0.03%)</title><rect x="98.2989%" y="4245" width="0.0334%" height="15" fill="rgb(245,180,45)" fg:x="2947" fg:w="1"/><text x="98.5489%" y="4255.50"></text></g><g><title>`0x7FFAC12B3A9D (1 samples, 0.03%)</title><rect x="98.2989%" y="4229" width="0.0334%" height="15" fill="rgb(250,220,42)" fg:x="2947" fg:w="1"/><text x="98.5489%" y="4239.50"></text></g><g><title>`0x7FFAC131CE15 (1 samples, 0.03%)</title><rect x="98.2989%" y="4213" width="0.0334%" height="15" fill="rgb(234,16,34)" fg:x="2947" fg:w="1"/><text x="98.5489%" y="4223.50"></text></g><g><title>`0x7FFAC13269AE (1 samples, 0.03%)</title><rect x="98.2989%" y="4197" width="0.0334%" height="15" fill="rgb(233,217,23)" fg:x="2947" fg:w="1"/><text x="98.5489%" y="4207.50"></text></g><g><title>`0x7FFAC13FFA04 (1 samples, 0.03%)</title><rect x="98.2989%" y="4181" width="0.0334%" height="15" fill="rgb(209,22,46)" fg:x="2947" fg:w="1"/><text x="98.5489%" y="4191.50"></text></g><g><title>`0x7FFAC134CC73 (1 samples, 0.03%)</title><rect x="98.3322%" y="4389" width="0.0334%" height="15" fill="rgb(213,101,18)" fg:x="2948" fg:w="1"/><text x="98.5822%" y="4399.50"></text></g><g><title>`0x7FFAC139CD54 (1 samples, 0.03%)</title><rect x="98.3322%" y="4373" width="0.0334%" height="15" fill="rgb(215,179,52)" fg:x="2948" fg:w="1"/><text x="98.5822%" y="4383.50"></text></g><g><title>`0x7FFAC13FFAE4 (1 samples, 0.03%)</title><rect x="98.3322%" y="4357" width="0.0334%" height="15" fill="rgb(223,50,25)" fg:x="2948" fg:w="1"/><text x="98.5822%" y="4367.50"></text></g><g><title>`0x7FFAC134D523 (1 samples, 0.03%)</title><rect x="98.3656%" y="4389" width="0.0334%" height="15" fill="rgb(224,51,44)" fg:x="2949" fg:w="1"/><text x="98.6156%" y="4399.50"></text></g><g><title>`0x7FFAC12A9437 (1 samples, 0.03%)</title><rect x="98.3656%" y="4373" width="0.0334%" height="15" fill="rgb(224,13,54)" fg:x="2949" fg:w="1"/><text x="98.6156%" y="4383.50"></text></g><g><title>`0x7FFAC12ABE1B (1 samples, 0.03%)</title><rect x="98.3656%" y="4357" width="0.0334%" height="15" fill="rgb(219,58,47)" fg:x="2949" fg:w="1"/><text x="98.6156%" y="4367.50"></text></g><g><title>`0x7FFAC134D551 (1 samples, 0.03%)</title><rect x="98.3989%" y="4389" width="0.0334%" height="15" fill="rgb(246,124,34)" fg:x="2950" fg:w="1"/><text x="98.6489%" y="4399.50"></text></g><g><title>`0x7FFAC12A20BF (1 samples, 0.03%)</title><rect x="98.3989%" y="4373" width="0.0334%" height="15" fill="rgb(245,109,25)" fg:x="2950" fg:w="1"/><text x="98.6489%" y="4383.50"></text></g><g><title>`0x7FFAC12A1F30 (1 samples, 0.03%)</title><rect x="98.3989%" y="4357" width="0.0334%" height="15" fill="rgb(235,48,23)" fg:x="2950" fg:w="1"/><text x="98.6489%" y="4367.50"></text></g><g><title>`0x7FFAC13FFD84 (1 samples, 0.03%)</title><rect x="98.3989%" y="4341" width="0.0334%" height="15" fill="rgb(229,203,36)" fg:x="2950" fg:w="1"/><text x="98.6489%" y="4351.50"></text></g><g><title>`0x7FFAC136F664 (1 samples, 0.03%)</title><rect x="98.4323%" y="4373" width="0.0334%" height="15" fill="rgb(234,180,9)" fg:x="2951" fg:w="1"/><text x="98.6823%" y="4383.50"></text></g><g><title>`0x7FFAC136FAA9 (1 samples, 0.03%)</title><rect x="98.4323%" y="4357" width="0.0334%" height="15" fill="rgb(228,98,45)" fg:x="2951" fg:w="1"/><text x="98.6823%" y="4367.50"></text></g><g><title>`0x7FFAC12C4A86 (1 samples, 0.03%)</title><rect x="98.4323%" y="4341" width="0.0334%" height="15" fill="rgb(240,24,36)" fg:x="2951" fg:w="1"/><text x="98.6823%" y="4351.50"></text></g><g><title>`0x7FFAC12C4EE9 (1 samples, 0.03%)</title><rect x="98.4323%" y="4325" width="0.0334%" height="15" fill="rgb(227,154,19)" fg:x="2951" fg:w="1"/><text x="98.6823%" y="4335.50"></text></g><g><title>`0x7FFAC13C51D1 (1 samples, 0.03%)</title><rect x="98.4323%" y="4309" width="0.0334%" height="15" fill="rgb(231,2,48)" fg:x="2951" fg:w="1"/><text x="98.6823%" y="4319.50"></text></g><g><title>`0x7FFAC13C5258 (1 samples, 0.03%)</title><rect x="98.4323%" y="4293" width="0.0334%" height="15" fill="rgb(219,216,0)" fg:x="2951" fg:w="1"/><text x="98.6823%" y="4303.50"></text></g><g><title>`0x7FFAC13CBC8F (1 samples, 0.03%)</title><rect x="98.4323%" y="4277" width="0.0334%" height="15" fill="rgb(251,88,0)" fg:x="2951" fg:w="1"/><text x="98.6823%" y="4287.50"></text></g><g><title>`0x7FFAC13CEA99 (1 samples, 0.03%)</title><rect x="98.4323%" y="4261" width="0.0334%" height="15" fill="rgb(242,45,45)" fg:x="2951" fg:w="1"/><text x="98.6823%" y="4271.50"></text></g><g><title>`0x7FFAC136EEE6 (1 samples, 0.03%)</title><rect x="98.4323%" y="4245" width="0.0334%" height="15" fill="rgb(218,149,45)" fg:x="2951" fg:w="1"/><text x="98.6823%" y="4255.50"></text></g><g><title>`0x7FFAC12A884E (1 samples, 0.03%)</title><rect x="98.4656%" y="4277" width="0.0334%" height="15" fill="rgb(247,194,10)" fg:x="2952" fg:w="1"/><text x="98.7156%" y="4287.50"></text></g><g><title>`0x7FFAC12A8D1A (1 samples, 0.03%)</title><rect x="98.4656%" y="4261" width="0.0334%" height="15" fill="rgb(234,33,37)" fg:x="2952" fg:w="1"/><text x="98.7156%" y="4271.50"></text></g><g><title>`0x7FFAC13FFC24 (1 samples, 0.03%)</title><rect x="98.4656%" y="4245" width="0.0334%" height="15" fill="rgb(218,61,13)" fg:x="2952" fg:w="1"/><text x="98.7156%" y="4255.50"></text></g><g><title>`0x7FFAC12EC34E (1 samples, 0.03%)</title><rect x="98.4990%" y="4261" width="0.0334%" height="15" fill="rgb(210,80,52)" fg:x="2953" fg:w="1"/><text x="98.7490%" y="4271.50"></text></g><g><title>`0x7FFAC12AB45E (1 samples, 0.03%)</title><rect x="98.4990%" y="4245" width="0.0334%" height="15" fill="rgb(218,203,27)" fg:x="2953" fg:w="1"/><text x="98.7490%" y="4255.50"></text></g><g><title>`0x7FFAC12EC564 (1 samples, 0.03%)</title><rect x="98.5324%" y="4261" width="0.0334%" height="15" fill="rgb(209,126,33)" fg:x="2954" fg:w="1"/><text x="98.7824%" y="4271.50"></text></g><g><title>`0x7FFAC12ED66C (1 samples, 0.03%)</title><rect x="98.5657%" y="4245" width="0.0334%" height="15" fill="rgb(234,173,41)" fg:x="2955" fg:w="1"/><text x="98.8157%" y="4255.50"></text></g><g><title>`0x7FFAC12A884E (1 samples, 0.03%)</title><rect x="98.5991%" y="4213" width="0.0334%" height="15" fill="rgb(228,166,9)" fg:x="2956" fg:w="1"/><text x="98.8491%" y="4223.50"></text></g><g><title>`0x7FFAC12A8D1A (1 samples, 0.03%)</title><rect x="98.5991%" y="4197" width="0.0334%" height="15" fill="rgb(208,124,43)" fg:x="2956" fg:w="1"/><text x="98.8491%" y="4207.50"></text></g><g><title>`0x7FFAC13FFC24 (1 samples, 0.03%)</title><rect x="98.5991%" y="4181" width="0.0334%" height="15" fill="rgb(212,154,38)" fg:x="2956" fg:w="1"/><text x="98.8491%" y="4191.50"></text></g><g><title>`0x7FFAC12EC5FE (3 samples, 0.10%)</title><rect x="98.5657%" y="4261" width="0.1001%" height="15" fill="rgb(246,179,35)" fg:x="2955" fg:w="3"/><text x="98.8157%" y="4271.50"></text></g><g><title>`0x7FFAC12EE3BC (2 samples, 0.07%)</title><rect x="98.5991%" y="4245" width="0.0667%" height="15" fill="rgb(251,3,50)" fg:x="2956" fg:w="2"/><text x="98.8491%" y="4255.50"></text></g><g><title>`0x7FFAC12A70E1 (2 samples, 0.07%)</title><rect x="98.5991%" y="4229" width="0.0667%" height="15" fill="rgb(219,96,8)" fg:x="2956" fg:w="2"/><text x="98.8491%" y="4239.50"></text></g><g><title>`0x7FFAC12A892C (1 samples, 0.03%)</title><rect x="98.6324%" y="4213" width="0.0334%" height="15" fill="rgb(251,216,33)" fg:x="2957" fg:w="1"/><text x="98.8824%" y="4223.50"></text></g><g><title>`0x7FFAC12A94D7 (1 samples, 0.03%)</title><rect x="98.6324%" y="4197" width="0.0334%" height="15" fill="rgb(243,145,29)" fg:x="2957" fg:w="1"/><text x="98.8824%" y="4207.50"></text></g><g><title>`0x7FFAC12A7CA9 (1 samples, 0.03%)</title><rect x="98.6324%" y="4181" width="0.0334%" height="15" fill="rgb(210,75,20)" fg:x="2957" fg:w="1"/><text x="98.8824%" y="4191.50"></text></g><g><title>`0x7FFAC12ADF85 (1 samples, 0.03%)</title><rect x="98.6324%" y="4165" width="0.0334%" height="15" fill="rgb(235,56,8)" fg:x="2957" fg:w="1"/><text x="98.8824%" y="4175.50"></text></g><g><title>`0x7FFAC12AE2E9 (1 samples, 0.03%)</title><rect x="98.6324%" y="4149" width="0.0334%" height="15" fill="rgb(226,175,49)" fg:x="2957" fg:w="1"/><text x="98.8824%" y="4159.50"></text></g><g><title>`0x7FFAC12AE356 (1 samples, 0.03%)</title><rect x="98.6324%" y="4133" width="0.0334%" height="15" fill="rgb(242,204,23)" fg:x="2957" fg:w="1"/><text x="98.8824%" y="4143.50"></text></g><g><title>`0x7FFAC1400124 (1 samples, 0.03%)</title><rect x="98.6324%" y="4117" width="0.0334%" height="15" fill="rgb(225,104,24)" fg:x="2957" fg:w="1"/><text x="98.8824%" y="4127.50"></text></g><g><title>`0x7FFAC12F4580 (1 samples, 0.03%)</title><rect x="98.6658%" y="4245" width="0.0334%" height="15" fill="rgb(253,34,1)" fg:x="2958" fg:w="1"/><text x="98.9158%" y="4255.50"></text></g><g><title>`0x7FFAC12F4583 (1 samples, 0.03%)</title><rect x="98.6991%" y="4245" width="0.0334%" height="15" fill="rgb(233,199,23)" fg:x="2959" fg:w="1"/><text x="98.9491%" y="4255.50"></text></g><g><title>`0x7FFAC12F458F (1 samples, 0.03%)</title><rect x="98.7325%" y="4245" width="0.0334%" height="15" fill="rgb(247,7,51)" fg:x="2960" fg:w="1"/><text x="98.9825%" y="4255.50"></text></g><g><title>`0x7FFAC12EB032 (10 samples, 0.33%)</title><rect x="98.4656%" y="4325" width="0.3336%" height="15" fill="rgb(214,146,12)" fg:x="2952" fg:w="10"/><text x="98.7156%" y="4335.50"></text></g><g><title>`0x7FFAC12C69A4 (10 samples, 0.33%)</title><rect x="98.4656%" y="4309" width="0.3336%" height="15" fill="rgb(234,181,43)" fg:x="2952" fg:w="10"/><text x="98.7156%" y="4319.50"></text></g><g><title>`0x7FFAC12A70E1 (10 samples, 0.33%)</title><rect x="98.4656%" y="4293" width="0.3336%" height="15" fill="rgb(239,148,6)" fg:x="2952" fg:w="10"/><text x="98.7156%" y="4303.50"></text></g><g><title>`0x7FFAC12A8999 (9 samples, 0.30%)</title><rect x="98.4990%" y="4277" width="0.3002%" height="15" fill="rgb(206,151,17)" fg:x="2953" fg:w="9"/><text x="98.7490%" y="4287.50"></text></g><g><title>`0x7FFAC12EC772 (4 samples, 0.13%)</title><rect x="98.6658%" y="4261" width="0.1334%" height="15" fill="rgb(213,215,10)" fg:x="2958" fg:w="4"/><text x="98.9158%" y="4271.50"></text></g><g><title>`0x7FFAC12F46AA (1 samples, 0.03%)</title><rect x="98.7658%" y="4245" width="0.0334%" height="15" fill="rgb(215,220,44)" fg:x="2961" fg:w="1"/><text x="99.0158%" y="4255.50"></text></g><g><title>`0x7FFAC12EB05A (1 samples, 0.03%)</title><rect x="98.7992%" y="4325" width="0.0334%" height="15" fill="rgb(245,205,37)" fg:x="2962" fg:w="1"/><text x="99.0492%" y="4335.50"></text></g><g><title>`0x7FFAC12A41D7 (1 samples, 0.03%)</title><rect x="98.7992%" y="4309" width="0.0334%" height="15" fill="rgb(245,130,43)" fg:x="2962" fg:w="1"/><text x="99.0492%" y="4319.50"></text></g><g><title>`0x7FFAC12A4351 (1 samples, 0.03%)</title><rect x="98.7992%" y="4293" width="0.0334%" height="15" fill="rgb(231,227,38)" fg:x="2962" fg:w="1"/><text x="99.0492%" y="4303.50"></text></g><g><title>`0x7FFAC12F45D1 (1 samples, 0.03%)</title><rect x="98.7992%" y="4277" width="0.0334%" height="15" fill="rgb(233,185,4)" fg:x="2962" fg:w="1"/><text x="99.0492%" y="4287.50"></text></g><g><title>`0x7FFABE9585BD (1 samples, 0.03%)</title><rect x="98.8326%" y="4213" width="0.0334%" height="15" fill="rgb(224,154,43)" fg:x="2963" fg:w="1"/><text x="99.0826%" y="4223.50"></text></g><g><title>`0x7FFABEA16B4F (1 samples, 0.03%)</title><rect x="98.8326%" y="4197" width="0.0334%" height="15" fill="rgb(235,156,15)" fg:x="2963" fg:w="1"/><text x="99.0826%" y="4207.50"></text></g><g><title>`0x7FFAC138E3CC (1 samples, 0.03%)</title><rect x="98.8326%" y="4181" width="0.0334%" height="15" fill="rgb(211,55,43)" fg:x="2963" fg:w="1"/><text x="99.0826%" y="4191.50"></text></g><g><title>`0x7FFAC138E502 (1 samples, 0.03%)</title><rect x="98.8326%" y="4165" width="0.0334%" height="15" fill="rgb(247,149,40)" fg:x="2963" fg:w="1"/><text x="99.0826%" y="4175.50"></text></g><g><title>`0x7FFAC14031D4 (1 samples, 0.03%)</title><rect x="98.8326%" y="4149" width="0.0334%" height="15" fill="rgb(232,171,16)" fg:x="2963" fg:w="1"/><text x="99.0826%" y="4159.50"></text></g><g><title>`0x7FFABE9585E1 (1 samples, 0.03%)</title><rect x="98.8659%" y="4213" width="0.0334%" height="15" fill="rgb(215,117,49)" fg:x="2964" fg:w="1"/><text x="99.1159%" y="4223.50"></text></g><g><title>`0x7FFABE9577A1 (1 samples, 0.03%)</title><rect x="98.8659%" y="4197" width="0.0334%" height="15" fill="rgb(246,194,11)" fg:x="2964" fg:w="1"/><text x="99.1159%" y="4207.50"></text></g><g><title>`0x7FFAC131D23D (1 samples, 0.03%)</title><rect x="98.8659%" y="4181" width="0.0334%" height="15" fill="rgb(242,101,44)" fg:x="2964" fg:w="1"/><text x="99.1159%" y="4191.50"></text></g><g><title>`0x7FFAC1385BFF (1 samples, 0.03%)</title><rect x="98.8993%" y="4181" width="0.0334%" height="15" fill="rgb(226,174,6)" fg:x="2965" fg:w="1"/><text x="99.1493%" y="4191.50"></text></g><g><title>`0x7FFAC13FFE04 (1 samples, 0.03%)</title><rect x="98.8993%" y="4165" width="0.0334%" height="15" fill="rgb(213,150,20)" fg:x="2965" fg:w="1"/><text x="99.1493%" y="4175.50"></text></g><g><title>`0x7FFAC1385D28 (1 samples, 0.03%)</title><rect x="98.9326%" y="4181" width="0.0334%" height="15" fill="rgb(222,124,42)" fg:x="2966" fg:w="1"/><text x="99.1826%" y="4191.50"></text></g><g><title>`0x7FFAC1400B94 (1 samples, 0.03%)</title><rect x="98.9326%" y="4165" width="0.0334%" height="15" fill="rgb(250,19,47)" fg:x="2966" fg:w="1"/><text x="99.1826%" y="4175.50"></text></g><g><title>`0x7FFABE958731 (3 samples, 0.10%)</title><rect x="98.8993%" y="4213" width="0.1001%" height="15" fill="rgb(241,217,19)" fg:x="2965" fg:w="3"/><text x="99.1493%" y="4223.50"></text></g><g><title>`0x7FFAC1385318 (3 samples, 0.10%)</title><rect x="98.8993%" y="4197" width="0.1001%" height="15" fill="rgb(207,210,34)" fg:x="2965" fg:w="3"/><text x="99.1493%" y="4207.50"></text></g><g><title>`0x7FFAC1385E3C (1 samples, 0.03%)</title><rect x="98.9660%" y="4181" width="0.0334%" height="15" fill="rgb(244,45,4)" fg:x="2967" fg:w="1"/><text x="99.2160%" y="4191.50"></text></g><g><title>`0x7FFAC12B4839 (1 samples, 0.03%)</title><rect x="98.9660%" y="4165" width="0.0334%" height="15" fill="rgb(252,134,50)" fg:x="2967" fg:w="1"/><text x="99.2160%" y="4175.50"></text></g><g><title>`0x7FFAC1405E07 (1 samples, 0.03%)</title><rect x="98.9660%" y="4149" width="0.0334%" height="15" fill="rgb(238,74,2)" fg:x="2967" fg:w="1"/><text x="99.2160%" y="4159.50"></text></g><g><title>`0x7FFABE956841 (1 samples, 0.03%)</title><rect x="98.9993%" y="4181" width="0.0334%" height="15" fill="rgb(226,58,46)" fg:x="2968" fg:w="1"/><text x="99.2493%" y="4191.50"></text></g><g><title>`0x7FFABE9564BE (1 samples, 0.03%)</title><rect x="98.9993%" y="4165" width="0.0334%" height="15" fill="rgb(232,83,35)" fg:x="2968" fg:w="1"/><text x="99.2493%" y="4175.50"></text></g><g><title>`0x7FFAC1401754 (1 samples, 0.03%)</title><rect x="98.9993%" y="4149" width="0.0334%" height="15" fill="rgb(212,148,47)" fg:x="2968" fg:w="1"/><text x="99.2493%" y="4159.50"></text></g><g><title>`0x7FFABE95893E (2 samples, 0.07%)</title><rect x="98.9993%" y="4213" width="0.0667%" height="15" fill="rgb(235,29,1)" fg:x="2968" fg:w="2"/><text x="99.2493%" y="4223.50"></text></g><g><title>`0x7FFABE9570C8 (2 samples, 0.07%)</title><rect x="98.9993%" y="4197" width="0.0667%" height="15" fill="rgb(247,55,37)" fg:x="2968" fg:w="2"/><text x="99.2493%" y="4207.50"></text></g><g><title>`0x7FFABE95684C (1 samples, 0.03%)</title><rect x="99.0327%" y="4181" width="0.0334%" height="15" fill="rgb(222,48,3)" fg:x="2969" fg:w="1"/><text x="99.2827%" y="4191.50"></text></g><g><title>`0x7FFABE9563EE (1 samples, 0.03%)</title><rect x="99.0327%" y="4165" width="0.0334%" height="15" fill="rgb(234,21,33)" fg:x="2969" fg:w="1"/><text x="99.2827%" y="4175.50"></text></g><g><title>`0x7FFABE9213DA (1 samples, 0.03%)</title><rect x="99.0327%" y="4149" width="0.0334%" height="15" fill="rgb(247,178,53)" fg:x="2969" fg:w="1"/><text x="99.2827%" y="4159.50"></text></g><g><title>`0x7FFAC1401754 (1 samples, 0.03%)</title><rect x="99.0327%" y="4133" width="0.0334%" height="15" fill="rgb(225,75,7)" fg:x="2969" fg:w="1"/><text x="99.2827%" y="4143.50"></text></g><g><title>`0x7FFABEA36DAD (8 samples, 0.27%)</title><rect x="98.8326%" y="4229" width="0.2668%" height="15" fill="rgb(219,199,7)" fg:x="2963" fg:w="8"/><text x="99.0826%" y="4239.50"></text></g><g><title>`0x7FFABE95897E (1 samples, 0.03%)</title><rect x="99.0660%" y="4213" width="0.0334%" height="15" fill="rgb(209,93,42)" fg:x="2970" fg:w="1"/><text x="99.3160%" y="4223.50"></text></g><g><title>`0x7FFABE955E40 (1 samples, 0.03%)</title><rect x="99.0660%" y="4197" width="0.0334%" height="15" fill="rgb(240,175,17)" fg:x="2970" fg:w="1"/><text x="99.3160%" y="4207.50"></text></g><g><title>`0x7FFABEA12CD0 (1 samples, 0.03%)</title><rect x="99.0660%" y="4181" width="0.0334%" height="15" fill="rgb(232,106,7)" fg:x="2970" fg:w="1"/><text x="99.3160%" y="4191.50"></text></g><g><title>`0x7FFAC14001C4 (1 samples, 0.03%)</title><rect x="99.0660%" y="4165" width="0.0334%" height="15" fill="rgb(242,106,43)" fg:x="2970" fg:w="1"/><text x="99.3160%" y="4175.50"></text></g><g><title>`0x7FFABE9F2168 (1 samples, 0.03%)</title><rect x="99.0994%" y="4197" width="0.0334%" height="15" fill="rgb(242,61,37)" fg:x="2971" fg:w="1"/><text x="99.3494%" y="4207.50"></text></g><g><title>`0x7FFABEA1B915 (1 samples, 0.03%)</title><rect x="99.0994%" y="4181" width="0.0334%" height="15" fill="rgb(205,72,10)" fg:x="2971" fg:w="1"/><text x="99.3494%" y="4191.50"></text></g><g><title>`0x7FFAC132640E (1 samples, 0.03%)</title><rect x="99.0994%" y="4165" width="0.0334%" height="15" fill="rgb(214,184,36)" fg:x="2971" fg:w="1"/><text x="99.3494%" y="4175.50"></text></g><g><title>`0x7FFAC13264A7 (1 samples, 0.03%)</title><rect x="99.0994%" y="4149" width="0.0334%" height="15" fill="rgb(206,107,18)" fg:x="2971" fg:w="1"/><text x="99.3494%" y="4159.50"></text></g><g><title>`0x7FFAC1326707 (1 samples, 0.03%)</title><rect x="99.0994%" y="4133" width="0.0334%" height="15" fill="rgb(210,75,5)" fg:x="2971" fg:w="1"/><text x="99.3494%" y="4143.50"></text></g><g><title>`0x7FFAC1326CF6 (1 samples, 0.03%)</title><rect x="99.0994%" y="4117" width="0.0334%" height="15" fill="rgb(205,3,19)" fg:x="2971" fg:w="1"/><text x="99.3494%" y="4127.50"></text></g><g><title>`0x7FFAC1402514 (1 samples, 0.03%)</title><rect x="99.0994%" y="4101" width="0.0334%" height="15" fill="rgb(207,181,42)" fg:x="2971" fg:w="1"/><text x="99.3494%" y="4111.50"></text></g><g><title>`0x7FFABE990F3A (1 samples, 0.03%)</title><rect x="99.1328%" y="4133" width="0.0334%" height="15" fill="rgb(229,179,43)" fg:x="2972" fg:w="1"/><text x="99.3828%" y="4143.50"></text></g><g><title>`0x7FFAC1400E54 (1 samples, 0.03%)</title><rect x="99.1328%" y="4117" width="0.0334%" height="15" fill="rgb(246,95,30)" fg:x="2972" fg:w="1"/><text x="99.3828%" y="4127.50"></text></g><g><title>`0x7FFABE9F18BE (3 samples, 0.10%)</title><rect x="99.0994%" y="4213" width="0.1001%" height="15" fill="rgb(234,144,45)" fg:x="2971" fg:w="3"/><text x="99.3494%" y="4223.50"></text></g><g><title>`0x7FFABE9F21AF (2 samples, 0.07%)</title><rect x="99.1328%" y="4197" width="0.0667%" height="15" fill="rgb(250,54,25)" fg:x="2972" fg:w="2"/><text x="99.3828%" y="4207.50"></text></g><g><title>`0x7FFABEA24F22 (2 samples, 0.07%)</title><rect x="99.1328%" y="4181" width="0.0667%" height="15" fill="rgb(215,195,40)" fg:x="2972" fg:w="2"/><text x="99.3828%" y="4191.50"></text></g><g><title>`0x7FFABE98F96B (2 samples, 0.07%)</title><rect x="99.1328%" y="4165" width="0.0667%" height="15" fill="rgb(233,188,42)" fg:x="2972" fg:w="2"/><text x="99.3828%" y="4175.50"></text></g><g><title>`0x7FFABE98FA3B (2 samples, 0.07%)</title><rect x="99.1328%" y="4149" width="0.0667%" height="15" fill="rgb(247,227,35)" fg:x="2972" fg:w="2"/><text x="99.3828%" y="4159.50"></text></g><g><title>`0x7FFABE990FAD (1 samples, 0.03%)</title><rect x="99.1661%" y="4133" width="0.0334%" height="15" fill="rgb(249,124,27)" fg:x="2973" fg:w="1"/><text x="99.4161%" y="4143.50"></text></g><g><title>`0x7FFABE992E19 (1 samples, 0.03%)</title><rect x="99.1661%" y="4117" width="0.0334%" height="15" fill="rgb(219,207,25)" fg:x="2973" fg:w="1"/><text x="99.4161%" y="4127.50"></text></g><g><title>`0x7FFAC1401DD4 (1 samples, 0.03%)</title><rect x="99.1661%" y="4101" width="0.0334%" height="15" fill="rgb(241,216,47)" fg:x="2973" fg:w="1"/><text x="99.4161%" y="4111.50"></text></g><g><title>`0x7FFABEA36E11 (4 samples, 0.13%)</title><rect x="99.0994%" y="4229" width="0.1334%" height="15" fill="rgb(233,82,50)" fg:x="2971" fg:w="4"/><text x="99.3494%" y="4239.50"></text></g><g><title>`0x7FFABE9F18CA (1 samples, 0.03%)</title><rect x="99.1995%" y="4213" width="0.0334%" height="15" fill="rgb(232,63,2)" fg:x="2974" fg:w="1"/><text x="99.4495%" y="4223.50"></text></g><g><title>`0x7FFABE9F209C (1 samples, 0.03%)</title><rect x="99.1995%" y="4197" width="0.0334%" height="15" fill="rgb(236,184,28)" fg:x="2974" fg:w="1"/><text x="99.4495%" y="4207.50"></text></g><g><title>`0x7FFAC138E3CC (1 samples, 0.03%)</title><rect x="99.1995%" y="4181" width="0.0334%" height="15" fill="rgb(254,63,27)" fg:x="2974" fg:w="1"/><text x="99.4495%" y="4191.50"></text></g><g><title>`0x7FFAC138E502 (1 samples, 0.03%)</title><rect x="99.1995%" y="4165" width="0.0334%" height="15" fill="rgb(253,106,28)" fg:x="2974" fg:w="1"/><text x="99.4495%" y="4175.50"></text></g><g><title>`0x7FFAC14031D4 (1 samples, 0.03%)</title><rect x="99.1995%" y="4149" width="0.0334%" height="15" fill="rgb(225,141,39)" fg:x="2974" fg:w="1"/><text x="99.4495%" y="4159.50"></text></g><g><title>`0x7FFABEA36E18 (1 samples, 0.03%)</title><rect x="99.2328%" y="4229" width="0.0334%" height="15" fill="rgb(222,157,20)" fg:x="2975" fg:w="1"/><text x="99.4828%" y="4239.50"></text></g><g><title>`0x7FFABE9F7A30 (1 samples, 0.03%)</title><rect x="99.2328%" y="4213" width="0.0334%" height="15" fill="rgb(210,190,9)" fg:x="2975" fg:w="1"/><text x="99.4828%" y="4223.50"></text></g><g><title>`0x7FFABE9F7B24 (1 samples, 0.03%)</title><rect x="99.2328%" y="4197" width="0.0334%" height="15" fill="rgb(242,167,7)" fg:x="2975" fg:w="1"/><text x="99.4828%" y="4207.50"></text></g><g><title>`0x7FFABEA38BFF (1 samples, 0.03%)</title><rect x="99.2328%" y="4181" width="0.0334%" height="15" fill="rgb(227,82,41)" fg:x="2975" fg:w="1"/><text x="99.4828%" y="4191.50"></text></g><g><title>`0x7FFABEA38C43 (1 samples, 0.03%)</title><rect x="99.2328%" y="4165" width="0.0334%" height="15" fill="rgb(222,131,13)" fg:x="2975" fg:w="1"/><text x="99.4828%" y="4175.50"></text></g><g><title>`0x7FFABEA38D23 (1 samples, 0.03%)</title><rect x="99.2328%" y="4149" width="0.0334%" height="15" fill="rgb(221,98,26)" fg:x="2975" fg:w="1"/><text x="99.4828%" y="4159.50"></text></g><g><title>`0x7FFABE9FCDD0 (1 samples, 0.03%)</title><rect x="99.2328%" y="4133" width="0.0334%" height="15" fill="rgb(251,63,52)" fg:x="2975" fg:w="1"/><text x="99.4828%" y="4143.50"></text></g><g><title>`0x7FFAC12EB0C4 (14 samples, 0.47%)</title><rect x="98.8326%" y="4325" width="0.4670%" height="15" fill="rgb(246,25,43)" fg:x="2963" fg:w="14"/><text x="99.0826%" y="4335.50"></text></g><g><title>`0x7FFAC134AD83 (14 samples, 0.47%)</title><rect x="98.8326%" y="4309" width="0.4670%" height="15" fill="rgb(247,167,15)" fg:x="2963" fg:w="14"/><text x="99.0826%" y="4319.50"></text></g><g><title>`0x7FFAC134B0C6 (14 samples, 0.47%)</title><rect x="98.8326%" y="4293" width="0.4670%" height="15" fill="rgb(240,104,42)" fg:x="2963" fg:w="14"/><text x="99.0826%" y="4303.50"></text></g><g><title>`0x7FFAC134B09A (14 samples, 0.47%)</title><rect x="98.8326%" y="4277" width="0.4670%" height="15" fill="rgb(224,54,6)" fg:x="2963" fg:w="14"/><text x="99.0826%" y="4287.50"></text></g><g><title>`0x7FFAC12BCC0C (14 samples, 0.47%)</title><rect x="98.8326%" y="4261" width="0.4670%" height="15" fill="rgb(244,108,35)" fg:x="2963" fg:w="14"/><text x="99.0826%" y="4271.50"></text></g><g><title>`0x7FFAC12BD860 (14 samples, 0.47%)</title><rect x="98.8326%" y="4245" width="0.4670%" height="15" fill="rgb(216,154,2)" fg:x="2963" fg:w="14"/><text x="99.0826%" y="4255.50"></text></g><g><title>`0x7FFABEA36E36 (1 samples, 0.03%)</title><rect x="99.2662%" y="4229" width="0.0334%" height="15" fill="rgb(222,8,47)" fg:x="2976" fg:w="1"/><text x="99.5162%" y="4239.50"></text></g><g><title>`0x7FFABE9F1FEA (1 samples, 0.03%)</title><rect x="99.2662%" y="4213" width="0.0334%" height="15" fill="rgb(252,93,1)" fg:x="2976" fg:w="1"/><text x="99.5162%" y="4223.50"></text></g><g><title>`0x7FFABE9F207C (1 samples, 0.03%)</title><rect x="99.2662%" y="4197" width="0.0334%" height="15" fill="rgb(223,226,51)" fg:x="2976" fg:w="1"/><text x="99.5162%" y="4207.50"></text></g><g><title>`0x7FFAC12DB893 (1 samples, 0.03%)</title><rect x="99.2662%" y="4181" width="0.0334%" height="15" fill="rgb(206,147,9)" fg:x="2976" fg:w="1"/><text x="99.5162%" y="4191.50"></text></g><g><title>`0x7FFAC12DB979 (1 samples, 0.03%)</title><rect x="99.2662%" y="4165" width="0.0334%" height="15" fill="rgb(248,180,41)" fg:x="2976" fg:w="1"/><text x="99.5162%" y="4175.50"></text></g><g><title>`0x7FFAC12C7776 (1 samples, 0.03%)</title><rect x="99.2662%" y="4149" width="0.0334%" height="15" fill="rgb(209,47,50)" fg:x="2976" fg:w="1"/><text x="99.5162%" y="4159.50"></text></g><g><title>`0x7FFAC12C7AFE (1 samples, 0.03%)</title><rect x="99.2662%" y="4133" width="0.0334%" height="15" fill="rgb(243,65,31)" fg:x="2976" fg:w="1"/><text x="99.5162%" y="4143.50"></text></g><g><title>`0x7FFAC12B09B0 (1 samples, 0.03%)</title><rect x="99.2662%" y="4117" width="0.0334%" height="15" fill="rgb(228,128,1)" fg:x="2976" fg:w="1"/><text x="99.5162%" y="4127.50"></text></g><g><title>`0x7FFAC12B1EDF (1 samples, 0.03%)</title><rect x="99.2662%" y="4101" width="0.0334%" height="15" fill="rgb(231,192,16)" fg:x="2976" fg:w="1"/><text x="99.5162%" y="4111.50"></text></g><g><title>`0x7FFAC12B2854 (1 samples, 0.03%)</title><rect x="99.2662%" y="4085" width="0.0334%" height="15" fill="rgb(224,26,40)" fg:x="2976" fg:w="1"/><text x="99.5162%" y="4095.50"></text></g><g><title>`0x7FFAC12B238A (1 samples, 0.03%)</title><rect x="99.2662%" y="4069" width="0.0334%" height="15" fill="rgb(214,192,17)" fg:x="2976" fg:w="1"/><text x="99.5162%" y="4079.50"></text></g><g><title>`0x7FFAC136F680 (26 samples, 0.87%)</title><rect x="98.4656%" y="4373" width="0.8672%" height="15" fill="rgb(225,147,18)" fg:x="2952" fg:w="26"/><text x="98.7156%" y="4383.50"></text></g><g><title>`0x7FFAC12F66A0 (26 samples, 0.87%)</title><rect x="98.4656%" y="4357" width="0.8672%" height="15" fill="rgb(205,35,11)" fg:x="2952" fg:w="26"/><text x="98.7156%" y="4367.50"></text></g><g><title>`0x7FFAC12EACD0 (26 samples, 0.87%)</title><rect x="98.4656%" y="4341" width="0.8672%" height="15" fill="rgb(242,40,42)" fg:x="2952" fg:w="26"/><text x="98.7156%" y="4351.50"></text></g><g><title>`0x7FFAC12EB160 (1 samples, 0.03%)</title><rect x="99.2995%" y="4325" width="0.0334%" height="15" fill="rgb(250,170,13)" fg:x="2977" fg:w="1"/><text x="99.5495%" y="4335.50"></text></g><g><title>`0x7FFAC12E89E9 (1 samples, 0.03%)</title><rect x="99.2995%" y="4309" width="0.0334%" height="15" fill="rgb(240,161,28)" fg:x="2977" fg:w="1"/><text x="99.5495%" y="4319.50"></text></g><g><title>`0x7FFAC12EAF4E (1 samples, 0.03%)</title><rect x="99.3329%" y="4277" width="0.0334%" height="15" fill="rgb(245,179,12)" fg:x="2978" fg:w="1"/><text x="99.5829%" y="4287.50"></text></g><g><title>`0x7FFAC136F6F5 (2 samples, 0.07%)</title><rect x="99.3329%" y="4373" width="0.0667%" height="15" fill="rgb(250,92,32)" fg:x="2978" fg:w="2"/><text x="99.5829%" y="4383.50"></text></g><g><title>`0x7FFAC12AA118 (2 samples, 0.07%)</title><rect x="99.3329%" y="4357" width="0.0667%" height="15" fill="rgb(233,10,40)" fg:x="2978" fg:w="2"/><text x="99.5829%" y="4367.50"></text></g><g><title>`0x7FFAC12AAA7B (2 samples, 0.07%)</title><rect x="99.3329%" y="4341" width="0.0667%" height="15" fill="rgb(217,98,1)" fg:x="2978" fg:w="2"/><text x="99.5829%" y="4351.50"></text></g><g><title>`0x7FFAC12AAB90 (2 samples, 0.07%)</title><rect x="99.3329%" y="4325" width="0.0667%" height="15" fill="rgb(238,202,7)" fg:x="2978" fg:w="2"/><text x="99.5829%" y="4335.50"></text></g><g><title>`0x7FFAC12ACB03 (2 samples, 0.07%)</title><rect x="99.3329%" y="4309" width="0.0667%" height="15" fill="rgb(222,91,3)" fg:x="2978" fg:w="2"/><text x="99.5829%" y="4319.50"></text></g><g><title>`0x7FFAC12EB646 (2 samples, 0.07%)</title><rect x="99.3329%" y="4293" width="0.0667%" height="15" fill="rgb(211,170,49)" fg:x="2978" fg:w="2"/><text x="99.5829%" y="4303.50"></text></g><g><title>`0x7FFAC12EAF83 (1 samples, 0.03%)</title><rect x="99.3662%" y="4277" width="0.0334%" height="15" fill="rgb(253,139,18)" fg:x="2979" fg:w="1"/><text x="99.6162%" y="4287.50"></text></g><g><title>`0x7FFAC12C4A86 (1 samples, 0.03%)</title><rect x="99.3662%" y="4261" width="0.0334%" height="15" fill="rgb(222,4,43)" fg:x="2979" fg:w="1"/><text x="99.6162%" y="4271.50"></text></g><g><title>`0x7FFAC12C4EE9 (1 samples, 0.03%)</title><rect x="99.3662%" y="4245" width="0.0334%" height="15" fill="rgb(207,205,12)" fg:x="2979" fg:w="1"/><text x="99.6162%" y="4255.50"></text></g><g><title>`0x7FFAC13C51D1 (1 samples, 0.03%)</title><rect x="99.3662%" y="4229" width="0.0334%" height="15" fill="rgb(216,159,46)" fg:x="2979" fg:w="1"/><text x="99.6162%" y="4239.50"></text></g><g><title>`0x7FFAC13C5258 (1 samples, 0.03%)</title><rect x="99.3662%" y="4213" width="0.0334%" height="15" fill="rgb(236,115,1)" fg:x="2979" fg:w="1"/><text x="99.6162%" y="4223.50"></text></g><g><title>`0x7FFAC13CBC8F (1 samples, 0.03%)</title><rect x="99.3662%" y="4197" width="0.0334%" height="15" fill="rgb(251,35,33)" fg:x="2979" fg:w="1"/><text x="99.6162%" y="4207.50"></text></g><g><title>`0x7FFAC13CEA99 (1 samples, 0.03%)</title><rect x="99.3662%" y="4181" width="0.0334%" height="15" fill="rgb(248,62,51)" fg:x="2979" fg:w="1"/><text x="99.6162%" y="4191.50"></text></g><g><title>`0x7FFAC136EE66 (1 samples, 0.03%)</title><rect x="99.3662%" y="4165" width="0.0334%" height="15" fill="rgb(254,180,19)" fg:x="2979" fg:w="1"/><text x="99.6162%" y="4175.50"></text></g><g><title>`0x7FFAC134D9C5 (30 samples, 1.00%)</title><rect x="98.4323%" y="4389" width="1.0007%" height="15" fill="rgb(217,100,32)" fg:x="2951" fg:w="30"/><text x="98.6823%" y="4399.50"></text></g><g><title>`0x7FFAC136F725 (1 samples, 0.03%)</title><rect x="99.3996%" y="4373" width="0.0334%" height="15" fill="rgb(224,71,22)" fg:x="2980" fg:w="1"/><text x="99.6496%" y="4383.50"></text></g><g><title>`0x7FFAC12F5A47 (1 samples, 0.03%)</title><rect x="99.3996%" y="4357" width="0.0334%" height="15" fill="rgb(251,185,33)" fg:x="2980" fg:w="1"/><text x="99.6496%" y="4367.50"></text></g><g><title>`0x7FFAC13FF964 (1 samples, 0.03%)</title><rect x="99.3996%" y="4341" width="0.0334%" height="15" fill="rgb(209,75,48)" fg:x="2980" fg:w="1"/><text x="99.6496%" y="4351.50"></text></g><g><title>`0x7FFAC12EC313 (1 samples, 0.03%)</title><rect x="99.4330%" y="4373" width="0.0334%" height="15" fill="rgb(253,190,16)" fg:x="2981" fg:w="1"/><text x="99.6830%" y="4383.50"></text></g><g><title>`0x7FFAC138FDD3 (1 samples, 0.03%)</title><rect x="99.4330%" y="4357" width="0.0334%" height="15" fill="rgb(226,140,1)" fg:x="2981" fg:w="1"/><text x="99.6830%" y="4367.50"></text></g><g><title>`0x7FFAC0005B2F (1 samples, 0.03%)</title><rect x="99.4330%" y="4341" width="0.0334%" height="15" fill="rgb(206,75,30)" fg:x="2981" fg:w="1"/><text x="99.6830%" y="4351.50"></text></g><g><title>`0x7FFAC0005C1B (1 samples, 0.03%)</title><rect x="99.4330%" y="4325" width="0.0334%" height="15" fill="rgb(231,208,37)" fg:x="2981" fg:w="1"/><text x="99.6830%" y="4335.50"></text></g><g><title>`0x7FFABE9B1C70 (1 samples, 0.03%)</title><rect x="99.4330%" y="4309" width="0.0334%" height="15" fill="rgb(238,136,40)" fg:x="2981" fg:w="1"/><text x="99.6830%" y="4319.50"></text></g><g><title>`0x7FFAC12A7053 (1 samples, 0.03%)</title><rect x="99.4663%" y="4341" width="0.0334%" height="15" fill="rgb(247,137,17)" fg:x="2982" fg:w="1"/><text x="99.7163%" y="4351.50"></text></g><g><title>`0x7FFAC12A743B (1 samples, 0.03%)</title><rect x="99.4663%" y="4325" width="0.0334%" height="15" fill="rgb(240,60,40)" fg:x="2982" fg:w="1"/><text x="99.7163%" y="4335.50"></text></g><g><title>`0x7FFAC12C4A86 (1 samples, 0.03%)</title><rect x="99.4663%" y="4309" width="0.0334%" height="15" fill="rgb(236,68,50)" fg:x="2982" fg:w="1"/><text x="99.7163%" y="4319.50"></text></g><g><title>`0x7FFAC12C4EE9 (1 samples, 0.03%)</title><rect x="99.4663%" y="4293" width="0.0334%" height="15" fill="rgb(230,42,12)" fg:x="2982" fg:w="1"/><text x="99.7163%" y="4303.50"></text></g><g><title>`0x7FFAC13C51D1 (1 samples, 0.03%)</title><rect x="99.4663%" y="4277" width="0.0334%" height="15" fill="rgb(219,16,16)" fg:x="2982" fg:w="1"/><text x="99.7163%" y="4287.50"></text></g><g><title>`0x7FFAC13C5258 (1 samples, 0.03%)</title><rect x="99.4663%" y="4261" width="0.0334%" height="15" fill="rgb(220,38,35)" fg:x="2982" fg:w="1"/><text x="99.7163%" y="4271.50"></text></g><g><title>`0x7FFAC13CBC8F (1 samples, 0.03%)</title><rect x="99.4663%" y="4245" width="0.0334%" height="15" fill="rgb(228,33,1)" fg:x="2982" fg:w="1"/><text x="99.7163%" y="4255.50"></text></g><g><title>`0x7FFAC13CEA99 (1 samples, 0.03%)</title><rect x="99.4663%" y="4229" width="0.0334%" height="15" fill="rgb(241,46,31)" fg:x="2982" fg:w="1"/><text x="99.7163%" y="4239.50"></text></g><g><title>`0x7FFAC136EF46 (1 samples, 0.03%)</title><rect x="99.4663%" y="4213" width="0.0334%" height="15" fill="rgb(232,58,20)" fg:x="2982" fg:w="1"/><text x="99.7163%" y="4223.50"></text></g><g><title>`0x7FFAC12A884E (1 samples, 0.03%)</title><rect x="99.4997%" y="4325" width="0.0334%" height="15" fill="rgb(206,228,53)" fg:x="2983" fg:w="1"/><text x="99.7497%" y="4335.50"></text></g><g><title>`0x7FFAC12A8D1A (1 samples, 0.03%)</title><rect x="99.4997%" y="4309" width="0.0334%" height="15" fill="rgb(206,88,33)" fg:x="2983" fg:w="1"/><text x="99.7497%" y="4319.50"></text></g><g><title>`0x7FFAC13FFC24 (1 samples, 0.03%)</title><rect x="99.4997%" y="4293" width="0.0334%" height="15" fill="rgb(238,69,7)" fg:x="2983" fg:w="1"/><text x="99.7497%" y="4303.50"></text></g><g><title>`0x7FFAC12EC4A6 (1 samples, 0.03%)</title><rect x="99.5330%" y="4309" width="0.0334%" height="15" fill="rgb(250,21,46)" fg:x="2984" fg:w="1"/><text x="99.7830%" y="4319.50"></text></g><g><title>`0x7FFAC134DAB9 (5 samples, 0.17%)</title><rect x="99.4330%" y="4389" width="0.1668%" height="15" fill="rgb(215,212,21)" fg:x="2981" fg:w="5"/><text x="99.6830%" y="4399.50"></text></g><g><title>`0x7FFAC12EC5FE (4 samples, 0.13%)</title><rect x="99.4663%" y="4373" width="0.1334%" height="15" fill="rgb(211,35,12)" fg:x="2982" fg:w="4"/><text x="99.7163%" y="4383.50"></text></g><g><title>`0x7FFAC12EE3BC (4 samples, 0.13%)</title><rect x="99.4663%" y="4357" width="0.1334%" height="15" fill="rgb(231,184,16)" fg:x="2982" fg:w="4"/><text x="99.7163%" y="4367.50"></text></g><g><title>`0x7FFAC12A70E1 (3 samples, 0.10%)</title><rect x="99.4997%" y="4341" width="0.1001%" height="15" fill="rgb(242,140,15)" fg:x="2983" fg:w="3"/><text x="99.7497%" y="4351.50"></text></g><g><title>`0x7FFAC12A8999 (2 samples, 0.07%)</title><rect x="99.5330%" y="4325" width="0.0667%" height="15" fill="rgb(220,37,14)" fg:x="2984" fg:w="2"/><text x="99.7830%" y="4335.50"></text></g><g><title>`0x7FFAC12EC4C3 (1 samples, 0.03%)</title><rect x="99.5664%" y="4309" width="0.0334%" height="15" fill="rgb(223,146,22)" fg:x="2985" fg:w="1"/><text x="99.8164%" y="4319.50"></text></g><g><title>`0x7FFAC14057F5 (1 samples, 0.03%)</title><rect x="99.5664%" y="4293" width="0.0334%" height="15" fill="rgb(216,132,15)" fg:x="2985" fg:w="1"/><text x="99.8164%" y="4303.50"></text></g><g><title>`0x7FFAC12A41BC (1 samples, 0.03%)</title><rect x="99.5997%" y="4373" width="0.0334%" height="15" fill="rgb(248,83,5)" fg:x="2986" fg:w="1"/><text x="99.8497%" y="4383.50"></text></g><g><title>`0x7FFAC12C5558 (1 samples, 0.03%)</title><rect x="99.5997%" y="4357" width="0.0334%" height="15" fill="rgb(231,206,48)" fg:x="2986" fg:w="1"/><text x="99.8497%" y="4367.50"></text></g><g><title>`0x7FFAC12A50B2 (1 samples, 0.03%)</title><rect x="99.6331%" y="4309" width="0.0334%" height="15" fill="rgb(253,185,37)" fg:x="2987" fg:w="1"/><text x="99.8831%" y="4319.50"></text></g><g><title>`0x7FFAC12C4AB7 (1 samples, 0.03%)</title><rect x="99.6331%" y="4293" width="0.0334%" height="15" fill="rgb(208,21,44)" fg:x="2987" fg:w="1"/><text x="99.8831%" y="4303.50"></text></g><g><title>`0x7FFAC13C50F1 (1 samples, 0.03%)</title><rect x="99.6331%" y="4277" width="0.0334%" height="15" fill="rgb(236,125,4)" fg:x="2987" fg:w="1"/><text x="99.8831%" y="4287.50"></text></g><g><title>`0x7FFAC13C5168 (1 samples, 0.03%)</title><rect x="99.6331%" y="4261" width="0.0334%" height="15" fill="rgb(226,134,25)" fg:x="2987" fg:w="1"/><text x="99.8831%" y="4271.50"></text></g><g><title>`0x7FFAC13CB2B1 (1 samples, 0.03%)</title><rect x="99.6331%" y="4245" width="0.0334%" height="15" fill="rgb(250,201,12)" fg:x="2987" fg:w="1"/><text x="99.8831%" y="4255.50"></text></g><g><title>`0x7FFAC13CEA03 (1 samples, 0.03%)</title><rect x="99.6331%" y="4229" width="0.0334%" height="15" fill="rgb(225,92,18)" fg:x="2987" fg:w="1"/><text x="99.8831%" y="4239.50"></text></g><g><title>`0x7FFAC13CE9C7 (1 samples, 0.03%)</title><rect x="99.6331%" y="4213" width="0.0334%" height="15" fill="rgb(227,35,22)" fg:x="2987" fg:w="1"/><text x="99.8831%" y="4223.50"></text></g><g><title>`0x7FFAC12AA2A4 (1 samples, 0.03%)</title><rect x="99.6331%" y="4197" width="0.0334%" height="15" fill="rgb(214,180,52)" fg:x="2987" fg:w="1"/><text x="99.8831%" y="4207.50"></text></g><g><title>`0x7FFAC12A4531 (2 samples, 0.07%)</title><rect x="99.6331%" y="4341" width="0.0667%" height="15" fill="rgb(233,55,38)" fg:x="2987" fg:w="2"/><text x="99.8831%" y="4351.50"></text></g><g><title>`0x7FFAC12A4C09 (2 samples, 0.07%)</title><rect x="99.6331%" y="4325" width="0.0667%" height="15" fill="rgb(249,171,43)" fg:x="2987" fg:w="2"/><text x="99.8831%" y="4335.50"></text></g><g><title>`0x7FFAC12A5160 (1 samples, 0.03%)</title><rect x="99.6664%" y="4309" width="0.0334%" height="15" fill="rgb(239,87,2)" fg:x="2988" fg:w="1"/><text x="99.9164%" y="4319.50"></text></g><g><title>`0x7FFAC12A5493 (1 samples, 0.03%)</title><rect x="99.6664%" y="4293" width="0.0334%" height="15" fill="rgb(248,141,5)" fg:x="2988" fg:w="1"/><text x="99.9164%" y="4303.50"></text></g><g><title>`0x7FFAC13FFEC4 (1 samples, 0.03%)</title><rect x="99.6664%" y="4277" width="0.0334%" height="15" fill="rgb(238,33,42)" fg:x="2988" fg:w="1"/><text x="99.9164%" y="4287.50"></text></g><g><title>`0x7FFAC12A428A (3 samples, 0.10%)</title><rect x="99.6331%" y="4357" width="0.1001%" height="15" fill="rgb(231,57,19)" fg:x="2987" fg:w="3"/><text x="99.8831%" y="4367.50"></text></g><g><title>`0x7FFAC12A465C (1 samples, 0.03%)</title><rect x="99.6998%" y="4341" width="0.0334%" height="15" fill="rgb(214,78,53)" fg:x="2989" fg:w="1"/><text x="99.9498%" y="4351.50"></text></g><g><title>`0x7FFAC12A5A9C (1 samples, 0.03%)</title><rect x="99.6998%" y="4325" width="0.0334%" height="15" fill="rgb(206,132,29)" fg:x="2989" fg:w="1"/><text x="99.9498%" y="4335.50"></text></g><g><title>`0x7FFAC12A884E (1 samples, 0.03%)</title><rect x="99.6998%" y="4309" width="0.0334%" height="15" fill="rgb(248,174,31)" fg:x="2989" fg:w="1"/><text x="99.9498%" y="4319.50"></text></g><g><title>`0x7FFAC12A8D1A (1 samples, 0.03%)</title><rect x="99.6998%" y="4293" width="0.0334%" height="15" fill="rgb(221,87,13)" fg:x="2989" fg:w="1"/><text x="99.9498%" y="4303.50"></text></g><g><title>`0x7FFAC13FFC24 (1 samples, 0.03%)</title><rect x="99.6998%" y="4277" width="0.0334%" height="15" fill="rgb(223,197,17)" fg:x="2989" fg:w="1"/><text x="99.9498%" y="4287.50"></text></g><g><title>`0x7FFAC134DAC0 (5 samples, 0.17%)</title><rect x="99.5997%" y="4389" width="0.1668%" height="15" fill="rgb(220,144,50)" fg:x="2986" fg:w="5"/><text x="99.8497%" y="4399.50"></text></g><g><title>`0x7FFAC12A41D7 (4 samples, 0.13%)</title><rect x="99.6331%" y="4373" width="0.1334%" height="15" fill="rgb(244,201,11)" fg:x="2987" fg:w="4"/><text x="99.8831%" y="4383.50"></text></g><g><title>`0x7FFAC12A4351 (1 samples, 0.03%)</title><rect x="99.7332%" y="4357" width="0.0334%" height="15" fill="rgb(249,81,34)" fg:x="2990" fg:w="1"/><text x="99.9832%" y="4367.50"></text></g><g><title>`0x7FFAC12F45D1 (1 samples, 0.03%)</title><rect x="99.7332%" y="4341" width="0.0334%" height="15" fill="rgb(205,161,12)" fg:x="2990" fg:w="1"/><text x="99.9832%" y="4351.50"></text></g><g><title>`0x7FFAB890F459 (1 samples, 0.03%)</title><rect x="99.7665%" y="4309" width="0.0334%" height="15" fill="rgb(252,139,50)" fg:x="2991" fg:w="1"/><text x="100.0165%" y="4319.50"></text></g><g><title>`0x7FFAB890538B (1 samples, 0.03%)</title><rect x="99.7665%" y="4293" width="0.0334%" height="15" fill="rgb(205,169,14)" fg:x="2991" fg:w="1"/><text x="100.0165%" y="4303.50"></text></g><g><title>`0x7FFAB8905648 (1 samples, 0.03%)</title><rect x="99.7665%" y="4277" width="0.0334%" height="15" fill="rgb(248,198,33)" fg:x="2991" fg:w="1"/><text x="100.0165%" y="4287.50"></text></g><g><title>`0x7FFAB8905819 (1 samples, 0.03%)</title><rect x="99.7665%" y="4261" width="0.0334%" height="15" fill="rgb(236,23,21)" fg:x="2991" fg:w="1"/><text x="100.0165%" y="4271.50"></text></g><g><title>`0x7FFAB890572F (1 samples, 0.03%)</title><rect x="99.7665%" y="4245" width="0.0334%" height="15" fill="rgb(231,13,38)" fg:x="2991" fg:w="1"/><text x="100.0165%" y="4255.50"></text></g><g><title>`0x7FFABE921D46 (1 samples, 0.03%)</title><rect x="99.7665%" y="4229" width="0.0334%" height="15" fill="rgb(239,139,21)" fg:x="2991" fg:w="1"/><text x="100.0165%" y="4239.50"></text></g><g><title>`0x7FFAC12F6636 (1 samples, 0.03%)</title><rect x="99.7665%" y="4213" width="0.0334%" height="15" fill="rgb(222,164,45)" fg:x="2991" fg:w="1"/><text x="100.0165%" y="4223.50"></text></g><g><title>`0x7FFAC12C4AB7 (1 samples, 0.03%)</title><rect x="99.7665%" y="4197" width="0.0334%" height="15" fill="rgb(230,52,27)" fg:x="2991" fg:w="1"/><text x="100.0165%" y="4207.50"></text></g><g><title>`0x7FFAC13C50F1 (1 samples, 0.03%)</title><rect x="99.7665%" y="4181" width="0.0334%" height="15" fill="rgb(227,143,42)" fg:x="2991" fg:w="1"/><text x="100.0165%" y="4191.50"></text></g><g><title>`0x7FFAC13C5168 (1 samples, 0.03%)</title><rect x="99.7665%" y="4165" width="0.0334%" height="15" fill="rgb(249,127,1)" fg:x="2991" fg:w="1"/><text x="100.0165%" y="4175.50"></text></g><g><title>`0x7FFAC13CB2B1 (1 samples, 0.03%)</title><rect x="99.7665%" y="4149" width="0.0334%" height="15" fill="rgb(243,107,26)" fg:x="2991" fg:w="1"/><text x="100.0165%" y="4159.50"></text></g><g><title>`0x7FFAC13CEA03 (1 samples, 0.03%)</title><rect x="99.7665%" y="4133" width="0.0334%" height="15" fill="rgb(225,7,45)" fg:x="2991" fg:w="1"/><text x="100.0165%" y="4143.50"></text></g><g><title>`0x7FFAC13CE9C7 (1 samples, 0.03%)</title><rect x="99.7665%" y="4117" width="0.0334%" height="15" fill="rgb(241,88,38)" fg:x="2991" fg:w="1"/><text x="100.0165%" y="4127.50"></text></g><g><title>`0x7FFAC12AA273 (1 samples, 0.03%)</title><rect x="99.7665%" y="4101" width="0.0334%" height="15" fill="rgb(226,121,9)" fg:x="2991" fg:w="1"/><text x="100.0165%" y="4111.50"></text></g><g><title>`0x7FFABED187FD (1 samples, 0.03%)</title><rect x="99.7999%" y="4293" width="0.0334%" height="15" fill="rgb(253,60,29)" fg:x="2992" fg:w="1"/><text x="100.0499%" y="4303.50"></text></g><g><title>`0x7FFABED1D4EB (1 samples, 0.03%)</title><rect x="99.7999%" y="4277" width="0.0334%" height="15" fill="rgb(244,181,39)" fg:x="2992" fg:w="1"/><text x="100.0499%" y="4287.50"></text></g><g><title>`0x7FFAC138E3CC (1 samples, 0.03%)</title><rect x="99.7999%" y="4261" width="0.0334%" height="15" fill="rgb(252,203,31)" fg:x="2992" fg:w="1"/><text x="100.0499%" y="4271.50"></text></g><g><title>`0x7FFAC138E502 (1 samples, 0.03%)</title><rect x="99.7999%" y="4245" width="0.0334%" height="15" fill="rgb(224,120,8)" fg:x="2992" fg:w="1"/><text x="100.0499%" y="4255.50"></text></g><g><title>`0x7FFAC14031D4 (1 samples, 0.03%)</title><rect x="99.7999%" y="4229" width="0.0334%" height="15" fill="rgb(205,171,54)" fg:x="2992" fg:w="1"/><text x="100.0499%" y="4239.50"></text></g><g><title>`0x7FFAC134B09A (3 samples, 0.10%)</title><rect x="99.7665%" y="4357" width="0.1001%" height="15" fill="rgb(235,89,11)" fg:x="2991" fg:w="3"/><text x="100.0165%" y="4367.50"></text></g><g><title>`0x7FFAC12BCC0C (3 samples, 0.10%)</title><rect x="99.7665%" y="4341" width="0.1001%" height="15" fill="rgb(212,180,28)" fg:x="2991" fg:w="3"/><text x="100.0165%" y="4351.50"></text></g><g><title>`0x7FFAC12BD860 (3 samples, 0.10%)</title><rect x="99.7665%" y="4325" width="0.1001%" height="15" fill="rgb(247,84,49)" fg:x="2991" fg:w="3"/><text x="100.0165%" y="4335.50"></text></g><g><title>`0x7FFABED18562 (2 samples, 0.07%)</title><rect x="99.7999%" y="4309" width="0.0667%" height="15" fill="rgb(236,187,52)" fg:x="2992" fg:w="2"/><text x="100.0499%" y="4319.50"></text></g><g><title>`0x7FFABED188D4 (1 samples, 0.03%)</title><rect x="99.8332%" y="4293" width="0.0334%" height="15" fill="rgb(227,24,15)" fg:x="2993" fg:w="1"/><text x="100.0832%" y="4303.50"></text></g><g><title>`0x7FFABED07AB7 (1 samples, 0.03%)</title><rect x="99.8332%" y="4277" width="0.0334%" height="15" fill="rgb(227,211,13)" fg:x="2993" fg:w="1"/><text x="100.0832%" y="4287.50"></text></g><g><title>`0x7FFABED1C153 (1 samples, 0.03%)</title><rect x="99.8332%" y="4261" width="0.0334%" height="15" fill="rgb(245,52,14)" fg:x="2993" fg:w="1"/><text x="100.0832%" y="4271.50"></text></g><g><title>`0x7FFABED1C273 (1 samples, 0.03%)</title><rect x="99.8332%" y="4245" width="0.0334%" height="15" fill="rgb(225,185,13)" fg:x="2993" fg:w="1"/><text x="100.0832%" y="4255.50"></text></g><g><title>`0x7FFABE69503D (1 samples, 0.03%)</title><rect x="99.8666%" y="4293" width="0.0334%" height="15" fill="rgb(217,160,29)" fg:x="2994" fg:w="1"/><text x="100.1166%" y="4303.50"></text></g><g><title>`0x7FFABE722EE6 (1 samples, 0.03%)</title><rect x="99.8666%" y="4277" width="0.0334%" height="15" fill="rgb(216,115,53)" fg:x="2994" fg:w="1"/><text x="100.1166%" y="4287.50"></text></g><g><title>`0x7FFABE72351C (1 samples, 0.03%)</title><rect x="99.8666%" y="4261" width="0.0334%" height="15" fill="rgb(236,99,5)" fg:x="2994" fg:w="1"/><text x="100.1166%" y="4271.50"></text></g><g><title>`0x7FFABE723892 (1 samples, 0.03%)</title><rect x="99.8666%" y="4245" width="0.0334%" height="15" fill="rgb(222,60,38)" fg:x="2994" fg:w="1"/><text x="100.1166%" y="4255.50"></text></g><g><title>`0x7FFABE72363A (1 samples, 0.03%)</title><rect x="99.8666%" y="4229" width="0.0334%" height="15" fill="rgb(212,82,22)" fg:x="2994" fg:w="1"/><text x="100.1166%" y="4239.50"></text></g><g><title>`0x7FFABE6B4C66 (1 samples, 0.03%)</title><rect x="99.8999%" y="4245" width="0.0334%" height="15" fill="rgb(214,48,28)" fg:x="2995" fg:w="1"/><text x="100.1499%" y="4255.50"></text></g><g><title>`0x7FFABE6B51AA (1 samples, 0.03%)</title><rect x="99.8999%" y="4229" width="0.0334%" height="15" fill="rgb(245,196,50)" fg:x="2995" fg:w="1"/><text x="100.1499%" y="4239.50"></text></g><g><title>`0x7FFABE6B52E9 (1 samples, 0.03%)</title><rect x="99.8999%" y="4213" width="0.0334%" height="15" fill="rgb(225,159,46)" fg:x="2995" fg:w="1"/><text x="100.1499%" y="4223.50"></text></g><g><title>`0x7FFABE6B567C (1 samples, 0.03%)</title><rect x="99.8999%" y="4197" width="0.0334%" height="15" fill="rgb(207,195,48)" fg:x="2995" fg:w="1"/><text x="100.1499%" y="4207.50"></text></g><g><title>`0x7FFABE75CBA4 (1 samples, 0.03%)</title><rect x="99.8999%" y="4181" width="0.0334%" height="15" fill="rgb(240,73,3)" fg:x="2995" fg:w="1"/><text x="100.1499%" y="4191.50"></text></g><g><title>`0x7FFABE6B4AD6 (2 samples, 0.07%)</title><rect x="99.8999%" y="4261" width="0.0667%" height="15" fill="rgb(245,57,23)" fg:x="2995" fg:w="2"/><text x="100.1499%" y="4271.50"></text></g><g><title>`0x7FFABE6B4D38 (1 samples, 0.03%)</title><rect x="99.9333%" y="4245" width="0.0334%" height="15" fill="rgb(240,75,18)" fg:x="2996" fg:w="1"/><text x="100.1833%" y="4255.50"></text></g><g><title>`0x7FFABE6B37D8 (1 samples, 0.03%)</title><rect x="99.9333%" y="4229" width="0.0334%" height="15" fill="rgb(238,168,12)" fg:x="2996" fg:w="1"/><text x="100.1833%" y="4239.50"></text></g><g><title>all (2,998 samples, 100%)</title><rect x="0.0000%" y="4453" width="100.0000%" height="15" fill="rgb(226,20,40)" fg:x="0" fg:w="2998"/><text x="0.2500%" y="4463.50"></text></g><g><title>`0x7FFAC139233E (64 samples, 2.13%)</title><rect x="97.8652%" y="4437" width="2.1348%" height="15" fill="rgb(224,130,35)" fg:x="2934" fg:w="64"/><text x="98.1152%" y="4447.50">`..</text></g><g><title>`0x7FFAC13BEB13 (63 samples, 2.10%)</title><rect x="97.8986%" y="4421" width="2.1014%" height="15" fill="rgb(225,63,41)" fg:x="2935" fg:w="63"/><text x="98.1486%" y="4431.50">`..</text></g><g><title>`0x7FFAC134BDC0 (60 samples, 2.00%)</title><rect x="97.9987%" y="4405" width="2.0013%" height="15" fill="rgb(219,3,3)" fg:x="2938" fg:w="60"/><text x="98.2487%" y="4415.50">`..</text></g><g><title>`0x7FFAC134DBC9 (7 samples, 0.23%)</title><rect x="99.7665%" y="4389" width="0.2335%" height="15" fill="rgb(218,157,4)" fg:x="2991" fg:w="7"/><text x="100.0165%" y="4399.50"></text></g><g><title>`0x7FFAC134B0C6 (7 samples, 0.23%)</title><rect x="99.7665%" y="4373" width="0.2335%" height="15" fill="rgb(232,76,36)" fg:x="2991" fg:w="7"/><text x="100.0165%" y="4383.50"></text></g><g><title>`0x7FFAC134B0C6 (4 samples, 0.13%)</title><rect x="99.8666%" y="4357" width="0.1334%" height="15" fill="rgb(247,36,0)" fg:x="2994" fg:w="4"/><text x="100.1166%" y="4367.50"></text></g><g><title>`0x7FFAC134B09A (4 samples, 0.13%)</title><rect x="99.8666%" y="4341" width="0.1334%" height="15" fill="rgb(205,2,34)" fg:x="2994" fg:w="4"/><text x="100.1166%" y="4351.50"></text></g><g><title>`0x7FFAC12BCC0C (4 samples, 0.13%)</title><rect x="99.8666%" y="4325" width="0.1334%" height="15" fill="rgb(239,136,13)" fg:x="2994" fg:w="4"/><text x="100.1166%" y="4335.50"></text></g><g><title>`0x7FFAC12BD860 (4 samples, 0.13%)</title><rect x="99.8666%" y="4309" width="0.1334%" height="15" fill="rgb(253,122,12)" fg:x="2994" fg:w="4"/><text x="100.1166%" y="4319.50"></text></g><g><title>`0x7FFABE695056 (3 samples, 0.10%)</title><rect x="99.8999%" y="4293" width="0.1001%" height="15" fill="rgb(222,174,7)" fg:x="2995" fg:w="3"/><text x="100.1499%" y="4303.50"></text></g><g><title>`0x7FFABE6EC576 (3 samples, 0.10%)</title><rect x="99.8999%" y="4277" width="0.1001%" height="15" fill="rgb(208,191,42)" fg:x="2995" fg:w="3"/><text x="100.1499%" y="4287.50"></text></g><g><title>`0x7FFABE7076D7 (1 samples, 0.03%)</title><rect x="99.9666%" y="4261" width="0.0334%" height="15" fill="rgb(237,212,15)" fg:x="2997" fg:w="1"/><text x="100.2166%" y="4271.50"></text></g><g><title>`0x7FFABE69710B (1 samples, 0.03%)</title><rect x="99.9666%" y="4245" width="0.0334%" height="15" fill="rgb(215,65,20)" fg:x="2997" fg:w="1"/><text x="100.2166%" y="4255.50"></text></g><g><title>`0x7FFABE6E7BF9 (1 samples, 0.03%)</title><rect x="99.9666%" y="4229" width="0.0334%" height="15" fill="rgb(232,103,11)" fg:x="2997" fg:w="1"/><text x="100.2166%" y="4239.50"></text></g><g><title>`0x7FFABE921D46 (1 samples, 0.03%)</title><rect x="99.9666%" y="4213" width="0.0334%" height="15" fill="rgb(235,148,18)" fg:x="2997" fg:w="1"/><text x="100.2166%" y="4223.50"></text></g><g><title>`0x7FFAC12F6636 (1 samples, 0.03%)</title><rect x="99.9666%" y="4197" width="0.0334%" height="15" fill="rgb(240,173,7)" fg:x="2997" fg:w="1"/><text x="100.2166%" y="4207.50"></text></g><g><title>`0x7FFAC12C4A86 (1 samples, 0.03%)</title><rect x="99.9666%" y="4181" width="0.0334%" height="15" fill="rgb(228,182,25)" fg:x="2997" fg:w="1"/><text x="100.2166%" y="4191.50"></text></g><g><title>`0x7FFAC12C4EE9 (1 samples, 0.03%)</title><rect x="99.9666%" y="4165" width="0.0334%" height="15" fill="rgb(247,3,52)" fg:x="2997" fg:w="1"/><text x="100.2166%" y="4175.50"></text></g><g><title>`0x7FFAC13C51D1 (1 samples, 0.03%)</title><rect x="99.9666%" y="4149" width="0.0334%" height="15" fill="rgb(226,155,8)" fg:x="2997" fg:w="1"/><text x="100.2166%" y="4159.50"></text></g><g><title>`0x7FFAC13C5258 (1 samples, 0.03%)</title><rect x="99.9666%" y="4133" width="0.0334%" height="15" fill="rgb(243,195,38)" fg:x="2997" fg:w="1"/><text x="100.2166%" y="4143.50"></text></g><g><title>`0x7FFAC13CBC8F (1 samples, 0.03%)</title><rect x="99.9666%" y="4117" width="0.0334%" height="15" fill="rgb(254,181,33)" fg:x="2997" fg:w="1"/><text x="100.2166%" y="4127.50"></text></g><g><title>`0x7FFAC13CEA99 (1 samples, 0.03%)</title><rect x="99.9666%" y="4101" width="0.0334%" height="15" fill="rgb(232,98,23)" fg:x="2997" fg:w="1"/><text x="100.2166%" y="4111.50"></text></g><g><title>`0x7FFAC136EE1E (1 samples, 0.03%)</title><rect x="99.9666%" y="4085" width="0.0334%" height="15" fill="rgb(205,23,10)" fg:x="2997" fg:w="1"/><text x="100.2166%" y="4095.50"></text></g></svg></svg>